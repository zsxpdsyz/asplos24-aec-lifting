
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_su_equiv.v
Parsing formal SystemVerilog input from `cva6_su_equiv.v' to AST representation.
Storing AST representation for module `$abstract\store_unit_model_tb'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: store_unit.v
Parsing formal SystemVerilog input from `store_unit.v' to AST representation.
Storing AST representation for module `$abstract\store_unit'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: store_buffer.v
Parsing formal SystemVerilog input from `store_buffer.v' to AST representation.
Storing AST representation for module `$abstract\store_buffer'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: amo_buffer.v
Parsing formal SystemVerilog input from `amo_buffer.v' to AST representation.
Storing AST representation for module `$abstract\amo_buffer'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: cva6_su_model.v
Parsing formal SystemVerilog input from `cva6_su_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_su_model'.
Successfully finished Verilog frontend.

6. Executing PREP pass.

6.1. Executing HIERARCHY pass (managing design hierarchy).

6.2. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit_model_tb'.
Generating RTLIL representation for module `\store_unit_model_tb'.

6.2.1. Analyzing design hierarchy..
Top module:  \store_unit_model_tb

6.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_su_model'.
Generating RTLIL representation for module `\cva6_su_model'.
cva6_su_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_su_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_su_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_su_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_su_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_su_model.v:92
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_su_model.v:88
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_su_model.v:84

6.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit'.
Generating RTLIL representation for module `\store_unit'.

6.2.4. Analyzing design hierarchy..
Top module:  \store_unit_model_tb
Used module:     \cva6_su_model
Used module:     \store_unit

6.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\amo_buffer'.
Generating RTLIL representation for module `\amo_buffer'.

6.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\store_buffer'.
Generating RTLIL representation for module `\store_buffer'.

6.2.7. Analyzing design hierarchy..
Top module:  \store_unit_model_tb
Used module:     \cva6_su_model
Used module:     \store_unit
Used module:         \amo_buffer
Used module:         \store_buffer

6.2.8. Analyzing design hierarchy..
Top module:  \store_unit_model_tb
Used module:     \cva6_su_model
Used module:     \store_unit
Used module:         \amo_buffer
Used module:         \store_buffer
Removing unused module `$abstract\cva6_su_model'.
Removing unused module `$abstract\amo_buffer'.
Removing unused module `$abstract\store_buffer'.
Removing unused module `$abstract\store_unit'.
Removing unused module `$abstract\store_unit_model_tb'.
Removed 5 unused modules.
Module store_unit_model_tb directly or indirectly contains formal properties -> setting "keep" attribute.

6.3. Executing PROC pass (convert processes to netlists).

6.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$store_buffer.v:234$490 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_buffer.v:220$488 in module store_buffer.
Marked 23 switch rules as full_case in process $proc$store_buffer.v:166$453 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:142$408 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:85$270 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_unit.v:0$234 in module store_unit.
Marked 1 switch rules as full_case in process $proc$store_unit.v:271$232 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:196$216 in module store_unit.
Marked 3 switch rules as full_case in process $proc$store_unit.v:196$216 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:99$205 in module store_unit.
Marked 12 switch rules as full_case in process $proc$store_unit.v:99$205 in module store_unit.
Removed 1 dead cases from process $proc$cva6_su_model.v:0$198 in module cva6_su_model.
Marked 1 switch rules as full_case in process $proc$cva6_su_model.v:0$198 in module cva6_su_model.
Removed 5 dead cases from process $proc$cva6_su_model.v:79$95 in module cva6_su_model.
Marked 19 switch rules as full_case in process $proc$cva6_su_model.v:79$95 in module cva6_su_model.
Marked 5 switch rules as full_case in process $proc$cva6_su_equiv.v:244$29 in module store_unit_model_tb.
Removed a total of 8 dead cases.

6.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 18 redundant assignments.
Promoted 117 assignments to connections.

6.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\store_unit_model_tb.$proc$cva6_su_equiv.v:0$59'.
  Set init value: $formal$cva6_su_equiv.v:288$14_EN = 1'0
Found init rule in `\store_unit_model_tb.$proc$cva6_su_equiv.v:0$58'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

6.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:234$490'.
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:220$488'.
Found async reset \rst_ni in `\store_unit.$proc$store_unit.v:271$232'.
Found async reset \rst_ni in `\cva6_su_model.$proc$cva6_su_model.v:79$95'.

6.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_buffer.$proc$store_buffer.v:234$490'.
     1/4: $0\commit_status_cnt_q[2:0]
     2/4: $0\commit_write_pointer_q[1:0]
     3/4: $0\commit_read_pointer_q[1:0]
     4/4: $0\commit_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:220$488'.
     1/4: $0\speculative_status_cnt_q[2:0]
     2/4: $0\speculative_write_pointer_q[1:0]
     3/4: $0\speculative_read_pointer_q[1:0]
     4/4: $0\speculative_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:166$453'.
     1/50: $19\page_offset_matches_o[0:0]
     2/50: $18\page_offset_matches_o[0:0]
     3/50: $19\sv2v_autoblock_2._sv2v_jump[1:0]
     4/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
     5/50: $18\sv2v_autoblock_2._sv2v_jump[1:0]
     6/50: $17\page_offset_matches_o[0:0]
     7/50: $5\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
     8/50: $17\sv2v_autoblock_2._sv2v_jump[1:0]
     9/50: $16\page_offset_matches_o[0:0]
    10/50: $16\sv2v_autoblock_2._sv2v_jump[1:0]
    11/50: $15\page_offset_matches_o[0:0]
    12/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    13/50: $15\sv2v_autoblock_2._sv2v_jump[1:0]
    14/50: $14\page_offset_matches_o[0:0]
    15/50: $14\sv2v_autoblock_2._sv2v_jump[1:0]
    16/50: $13\page_offset_matches_o[0:0]
    17/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    18/50: $13\sv2v_autoblock_2._sv2v_jump[1:0]
    19/50: $12\page_offset_matches_o[0:0]
    20/50: $12\sv2v_autoblock_2._sv2v_jump[1:0]
    21/50: $11\page_offset_matches_o[0:0]
    22/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    23/50: $11\sv2v_autoblock_2._sv2v_jump[1:0]
    24/50: $10\page_offset_matches_o[0:0]
    25/50: $9\page_offset_matches_o[0:0]
    26/50: $10\sv2v_autoblock_2._sv2v_jump[1:0]
    27/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
    28/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    29/50: $9\sv2v_autoblock_2._sv2v_jump[1:0]
    30/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i[31:0]
    31/50: $8\sv2v_autoblock_2._sv2v_jump[1:0]
    32/50: $8\page_offset_matches_o[0:0]
    33/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    34/50: $7\sv2v_autoblock_2._sv2v_jump[1:0]
    35/50: $7\page_offset_matches_o[0:0]
    36/50: $6\sv2v_autoblock_2._sv2v_jump[1:0]
    37/50: $6\page_offset_matches_o[0:0]
    38/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    39/50: $5\sv2v_autoblock_2._sv2v_jump[1:0]
    40/50: $5\page_offset_matches_o[0:0]
    41/50: $4\sv2v_autoblock_2._sv2v_jump[1:0]
    42/50: $4\page_offset_matches_o[0:0]
    43/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    44/50: $3\sv2v_autoblock_2._sv2v_jump[1:0]
    45/50: $3\page_offset_matches_o[0:0]
    46/50: $2\sv2v_autoblock_2._sv2v_jump[1:0]
    47/50: $2\page_offset_matches_o[0:0]
    48/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    49/50: $1\sv2v_autoblock_2._sv2v_jump[1:0]
    50/50: $1\page_offset_matches_o[0:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:142$408'.
     1/16: $3\store_if.commit_status_cnt[4:0]
     2/16: $1\commit_write_pointer_n[1:0]
     3/16: $3\commit_queue_n[291:0]
     4/16: $1$bitselwrite$data$store_buffer.v:160$261[291:0]$434
     5/16: $1$bitselwrite$mask$store_buffer.v:160$260[291:0]$433
     6/16: $2\store_if.commit_status_cnt[4:0]
     7/16: $2\commit_read_pointer_n[1:0]
     8/16: $2\commit_queue_n[291:0]
     9/16: $2$bitselwrite$data$store_buffer.v:154$259[291:0]$421
    10/16: $2$bitselwrite$mask$store_buffer.v:154$258[291:0]$420
    11/16: $1$bitselwrite$data$store_buffer.v:154$259[291:0]$419
    12/16: $1$bitselwrite$mask$store_buffer.v:154$258[291:0]$418
    13/16: $1\store_if.commit_status_cnt[4:0]
    14/16: $1\commit_read_pointer_n[1:0]
    15/16: $1\commit_queue_n[291:0]
    16/16: $1\req_port_o[9:9]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:141$407'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:138$401'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:135$395'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:132$389'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:129$383'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:126$377'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:123$376'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:120$375'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:85$270'.
     1/25: $1\speculative_status_cnt_n[2:0]
     2/25: $2\speculative_write_pointer_n[1:0]
     3/25: $1\core_if.sv2v_autoblock_1.i[31:0]
     4/25: $6\speculative_queue_n[219:219]
     5/25: $5\speculative_queue_n[146:146]
     6/25: $4\speculative_queue_n[73:73]
     7/25: $3\speculative_queue_n[0:0]
     8/25: $2\core_if.speculative_status_cnt[4:0]
     9/25: $1\speculative_read_pointer_n[1:0]
    10/25: $2\speculative_queue_n[291:0]
    11/25: $1$bitselwrite$data$store_buffer.v:103$257[291:0]$363
    12/25: $1$bitselwrite$mask$store_buffer.v:103$256[291:0]$362
    13/25: $1\core_if.speculative_status_cnt[4:0]
    14/25: $1\speculative_write_pointer_n[1:0]
    15/25: $1\speculative_queue_n[291:0]
    16/25: $1$bitselwrite$data$store_buffer.v:98$255[291:0]$294
    17/25: $1$bitselwrite$mask$store_buffer.v:98$254[291:0]$293
    18/25: $1$bitselwrite$data$store_buffer.v:97$253[291:0]$292
    19/25: $1$bitselwrite$mask$store_buffer.v:97$252[291:0]$291
    20/25: $1$bitselwrite$data$store_buffer.v:96$251[291:0]$290
    21/25: $1$bitselwrite$mask$store_buffer.v:96$250[291:0]$289
    22/25: $1$bitselwrite$data$store_buffer.v:95$249[291:0]$288
    23/25: $1$bitselwrite$mask$store_buffer.v:95$248[291:0]$287
    24/25: $1$bitselwrite$data$store_buffer.v:94$247[291:0]$286
    25/25: $1$bitselwrite$mask$store_buffer.v:94$246[291:0]$285
Creating decoders for process `\store_unit.$proc$store_unit.v:0$234'.
     1/1: $1\ariane_pkg_is_amo$func$store_unit.v:86$204.$result[0:0]$241
Creating decoders for process `\store_unit.$proc$store_unit.v:271$232'.
     1/6: $0\amo_op_q[3:0]
     2/6: $0\st_data_size_q[1:0]
     3/6: $0\trans_id_q[2:0]
     4/6: $0\st_data_q[31:0]
     5/6: $0\st_be_q[3:0]
     6/6: $0\state_q[1:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:196$216'.
     1/4: $1\amo_op_d[3:0]
     2/4: $1\ariane_pkg_extract_transfer_size$func$store_unit.v:199$203.$result[1:0]$227
     3/4: $1\ariane_pkg_data_align$func$store_unit.v:198$202.data_tmp[63:0]$225 [63:32]
     4/4: $1\ariane_pkg_data_align$func$store_unit.v:198$202.data_tmp[63:0]$225 [31:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:99$205'.
     1/28: $11\state_d[1:0]
     2/28: $2\valid_o[0:0]
     3/28: $10\state_d[1:0]
     4/28: $3\st_valid[0:0]
     5/28: $8\pop_st_o[0:0]
     6/28: $9\state_d[1:0]
     7/28: $8\state_d[1:0]
     8/28: $7\pop_st_o[0:0]
     9/28: $7\state_d[1:0]
    10/28: $6\pop_st_o[0:0]
    11/28: $6\state_d[1:0]
    12/28: $5\state_d[1:0]
    13/28: $5\pop_st_o[0:0]
    14/28: $3\translation_req_o[0:0]
    15/28: $2\st_valid[0:0]
    16/28: $4\pop_st_o[0:0]
    17/28: $4\state_d[1:0]
    18/28: $3\pop_st_o[0:0]
    19/28: $3\state_d[1:0]
    20/28: $2\state_d[1:0]
    21/28: $2\pop_st_o[0:0]
    22/28: $2\translation_req_o[0:0]
    23/28: $1\state_d[1:0]
    24/28: $1\translation_req_o[0:0]
    25/28: $1\pop_st_o[0:0]
    26/28: $1\st_valid_without_flush[0:0]
    27/28: $1\st_valid[0:0]
    28/28: $1\valid_o[0:0]
Creating decoders for process `\cva6_su_model.$proc$cva6_su_model.v:0$198'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:68$65_DATA[1:0]$200
Creating decoders for process `\cva6_su_model.$proc$cva6_su_model.v:0$196'.
Creating decoders for process `\cva6_su_model.$proc$cva6_su_model.v:0$194'.
Creating decoders for process `\cva6_su_model.$proc$cva6_su_model.v:0$192'.
Creating decoders for process `\cva6_su_model.$proc$cva6_su_model.v:0$190'.
Creating decoders for process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
     1/97: $4$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_DATA[1:0]$188
     2/97: $4$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_ADDR[1:0]$187
     3/97: $4$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_DATA[1:0]$185
     4/97: $3$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_DATA[1:0]$184
     5/97: $3$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_ADDR[1:0]$183
     6/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_DATA[1:0]$182
     7/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_ADDR[1:0]$181
     8/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_DATA[1:0]$179
     9/97: $2$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_DATA[1:0]$178
    10/97: $2$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_ADDR[1:0]$177
    11/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_DATA[1:0]$176
    12/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_ADDR[1:0]$175
    13/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_DATA[1:0]$174
    14/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_ADDR[1:0]$173
    15/97: $4$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_DATA[1:0]$171
    16/97: $4$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_ADDR[1:0]$170
    17/97: $4$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_DATA[1:0]$168
    18/97: $3$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_DATA[1:0]$167
    19/97: $3$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_ADDR[1:0]$166
    20/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_DATA[1:0]$165
    21/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_ADDR[1:0]$164
    22/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_DATA[1:0]$162
    23/97: $2$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_DATA[1:0]$161
    24/97: $2$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_ADDR[1:0]$160
    25/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_DATA[1:0]$159
    26/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_ADDR[1:0]$158
    27/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_DATA[1:0]$157
    28/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_ADDR[1:0]$156
    29/97: $3$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_DATA[1:0]$153
    30/97: $3$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_ADDR[1:0]$152
    31/97: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_DATA[7:0]$151
    32/97: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_ADDR[1:0]$150
    33/97: $3$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_DATA[31:0]$149
    34/97: $3$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_ADDR[1:0]$148
    35/97: $3\instr_i_pc[7:0]
    36/97: $3$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_DATA[1:0]$146
    37/97: $2$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_DATA[1:0]$145
    38/97: $2$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_ADDR[1:0]$144
    39/97: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_DATA[7:0]$143
    40/97: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_ADDR[1:0]$142
    41/97: $2$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_DATA[31:0]$141
    42/97: $2$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_ADDR[1:0]$140
    43/97: $2\instr_i_pc[7:0]
    44/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_DATA[1:0]$139
    45/97: $2$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_ADDR[1:0]$138
    46/97: $0\inner_store_mem_resp_i[0:0]
    47/97: $0\inner_instr_i[31:0]
    48/97: $0\inner_instr_valid_i[0:0]
    49/97: $1$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_DATA[1:0]$136
    50/97: $1$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_ADDR[1:0]$135
    51/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_DATA[1:0]$134
    52/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_ADDR[1:0]$133
    53/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_DATA[1:0]$132
    54/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_ADDR[1:0]$131
    55/97: $1$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_DATA[1:0]$130
    56/97: $1$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_ADDR[1:0]$129
    57/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_DATA[1:0]$128
    58/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_ADDR[1:0]$127
    59/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_DATA[1:0]$126
    60/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_ADDR[1:0]$125
    61/97: $1$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_DATA[1:0]$124
    62/97: $1$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_ADDR[1:0]$123
    63/97: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_DATA[7:0]$122
    64/97: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_ADDR[1:0]$121
    65/97: $1$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_DATA[31:0]$120
    66/97: $1$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_ADDR[1:0]$119
    67/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_DATA[1:0]$118
    68/97: $1$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_ADDR[1:0]$117
    69/97: $1\instr_i_pc[7:0]
    70/97: $0\CLK_CYCLE[31:0]
    71/97: $0\store_instr_queue_state[3][1:0]
    72/97: $0\store_instr_queue_state[2][1:0]
    73/97: $0\store_instr_queue_state[1][1:0]
    74/97: $0\store_instr_queue_state[0][1:0]
    75/97: $0\store_instr_i_queue_pc[3][7:0]
    76/97: $0\store_instr_i_queue_pc[2][7:0]
    77/97: $0\store_instr_i_queue_pc[1][7:0]
    78/97: $0\store_instr_i_queue_pc[0][7:0]
    79/97: $0\store_instr_i_queue[3][31:0]
    80/97: $0\store_instr_i_queue[2][31:0]
    81/97: $0\store_instr_i_queue[1][31:0]
    82/97: $0\store_instr_i_queue[0][31:0]
    83/97: $0\store_instr_queue_state_flatten_3[1:0]
    84/97: $0\store_instr_queue_state_flatten_2[1:0]
    85/97: $0\store_instr_queue_state_flatten_1[1:0]
    86/97: $0\store_instr_queue_state_flatten_0[1:0]
    87/97: $0\store_instr_i_queue_flatten_3_pc[7:0]
    88/97: $0\store_instr_i_queue_flatten_3[31:0]
    89/97: $0\store_instr_i_queue_flatten_2_pc[7:0]
    90/97: $0\store_instr_i_queue_flatten_2[31:0]
    91/97: $0\store_instr_i_queue_flatten_1_pc[7:0]
    92/97: $0\store_instr_i_queue_flatten_1[31:0]
    93/97: $0\store_instr_i_queue_flatten_0_pc[7:0]
    94/97: $0\store_instr_i_queue_flatten_0[31:0]
    95/97: $0\queue_serve_ptr[1:0]
    96/97: $0\queue_commit_ptr[1:0]
    97/97: $0\queue_store_ptr[1:0]
Creating decoders for process `\store_unit_model_tb.$proc$cva6_su_equiv.v:0$59'.
Creating decoders for process `\store_unit_model_tb.$proc$cva6_su_equiv.v:0$58'.
Creating decoders for process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
     1/35: $2\tb_io_store_mem_resp_i[0:0]
     2/35: $2\tb_io_req_port_i[34:0]
     3/35: $3\tb_io_commit_i[0:0]
     4/35: $3\tb_io_instr_valid_i[0:0]
     5/35: $3\tb_io_instr_i[31:0]
     6/35: $3\store_seen[1:0]
     7/35: $3\tb_io_paddr_i[33:0]
     8/35: $3\tb_io_lsu_ctrl_i[84:0]
     9/35: $3\tb_io_valid_i[0:0]
    10/35: $3\raise_store_request$func$cva6_su_equiv.v:0$10.data[31:0]$45
    11/35: $3\raise_store_request$func$cva6_su_equiv.v:0$10.vaddr[31:0]$44
    12/35: $2\raise_store_request$func$cva6_su_equiv.v:0$10.data[31:0]$42
    13/35: $2\raise_store_request$func$cva6_su_equiv.v:0$10.vaddr[31:0]$41
    14/35: $2\store_seen[1:0]
    15/35: $2\tb_io_instr_valid_i[0:0]
    16/35: $2\tb_io_instr_i[31:0]
    17/35: $2\tb_io_paddr_i[33:0]
    18/35: $2\tb_io_lsu_ctrl_i[84:0]
    19/35: $2\tb_io_valid_i[0:0]
    20/35: $2\tb_io_commit_i[0:0]
    21/35: $1\tb_io_instr_valid_i[0:0]
    22/35: $1\tb_io_store_mem_resp_i[0:0]
    23/35: $1\tb_io_commit_i[0:0]
    24/35: $1\tb_io_req_port_i[34:0]
    25/35: $1\tb_io_valid_i[0:0]
    26/35: $1\tb_io_lsu_ctrl_i[84:0]
    27/35: $1\store_seen[1:0]
    28/35: $1\set_page_offset$func$cva6_su_equiv.v:0$13.page_offset[11:0]$39
    29/35: $1\raise_store_request$func$cva6_su_equiv.v:0$10.data[31:0]$38
    30/35: $1\raise_store_request$func$cva6_su_equiv.v:0$10.vaddr[31:0]$37
    31/35: $1\tb_io_instr_i[31:0]
    32/35: $1\tb_io_page_offset_i[11:0]
    33/35: $1\tb_io_paddr_i[33:0]
    34/35: $0$formal$cva6_su_equiv.v:288$14_EN[0:0]$34
    35/35: $0$formal$cva6_su_equiv.v:288$14_CHECK[0:0]$33
Creating decoders for process `\store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

6.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_buffer.\page_offset_matches_o' from process `\store_buffer.$proc$store_buffer.v:166$453'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2._sv2v_jump' from process `\store_buffer.$proc$store_buffer.v:166$453'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i' from process `\store_buffer.$proc$store_buffer.v:166$453'.
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$453': $auto$proc_dlatch.cc:427:proc_dlatch$1810
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i' from process `\store_buffer.$proc$store_buffer.v:166$453': $auto$proc_dlatch.cc:427:proc_dlatch$1845
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$453': $auto$proc_dlatch.cc:427:proc_dlatch$1856
No latch inferred for signal `\store_buffer.\no_st_pending_o' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\commit_ready_o' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\req_port_o [9]' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\commit_queue_n' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\commit_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\commit_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\commit_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\store_if.commit_status_cnt' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:154$258' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:154$259' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:160$260' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:160$261' from process `\store_buffer.$proc$store_buffer.v:142$408'.
No latch inferred for signal `\store_buffer.\req_port_o [3:2]' from process `\store_buffer.$proc$store_buffer.v:141$407'.
No latch inferred for signal `\store_buffer.\req_port_o [7:4]' from process `\store_buffer.$proc$store_buffer.v:138$401'.
No latch inferred for signal `\store_buffer.\req_port_o [42:11]' from process `\store_buffer.$proc$store_buffer.v:135$395'.
No latch inferred for signal `\store_buffer.\req_port_o [64:43]' from process `\store_buffer.$proc$store_buffer.v:132$389'.
No latch inferred for signal `\store_buffer.\req_port_o [76:65]' from process `\store_buffer.$proc$store_buffer.v:129$383'.
No latch inferred for signal `\store_buffer.\req_port_o [0]' from process `\store_buffer.$proc$store_buffer.v:126$377'.
No latch inferred for signal `\store_buffer.\req_port_o [8]' from process `\store_buffer.$proc$store_buffer.v:123$376'.
No latch inferred for signal `\store_buffer.\req_port_o [1]' from process `\store_buffer.$proc$store_buffer.v:120$375'.
No latch inferred for signal `\store_buffer.\ready_o' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.\speculative_queue_n' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.\speculative_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.\speculative_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.\speculative_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.\core_if.speculative_status_cnt' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:94$246' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:94$247' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:95$248' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:95$249' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:96$250' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:96$251' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:97$252' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:97$253' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:98$254' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:98$255' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:103$256' from process `\store_buffer.$proc$store_buffer.v:85$270'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:103$257' from process `\store_buffer.$proc$store_buffer.v:85$270'.
Latch inferred for signal `\store_buffer.\core_if.sv2v_autoblock_1.i' from process `\store_buffer.$proc$store_buffer.v:85$270': $auto$proc_dlatch.cc:427:proc_dlatch$1921
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$201.$result' from process `\store_unit.$proc$store_unit.v:0$234'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$204.$result' from process `\store_unit.$proc$store_unit.v:0$234'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$204.op' from process `\store_unit.$proc$store_unit.v:0$234'.
No latch inferred for signal `\store_unit.\st_data_n' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\st_be_n' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\st_data_size_n' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\amo_op_d' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$202.$result' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$202.addr' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$202.data' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$202.addr_tmp' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$202.data_tmp' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$203.$result' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$203.op' from process `\store_unit.$proc$store_unit.v:196$216'.
No latch inferred for signal `\store_unit.\pop_st_o' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\valid_o' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\ex_o' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\translation_req_o' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\state_d' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\st_valid' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\st_valid_without_flush' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\store_unit.\trans_id_n' from process `\store_unit.$proc$store_unit.v:99$205'.
No latch inferred for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:68$65_DATA' from process `\cva6_su_model.$proc$cva6_su_model.v:0$198'.
No latch inferred for signal `\cva6_su_model.$mem2bits$\store_instr_i_queue$cva6_su_model.v:67$64' from process `\cva6_su_model.$proc$cva6_su_model.v:0$196'.
No latch inferred for signal `\cva6_su_model.$mem2bits$\store_instr_i_queue$cva6_su_model.v:66$63' from process `\cva6_su_model.$proc$cva6_su_model.v:0$194'.
No latch inferred for signal `\cva6_su_model.$mem2bits$\store_instr_i_queue$cva6_su_model.v:65$62' from process `\cva6_su_model.$proc$cva6_su_model.v:0$192'.
No latch inferred for signal `\cva6_su_model.$mem2bits$\store_instr_i_queue$cva6_su_model.v:64$61' from process `\cva6_su_model.$proc$cva6_su_model.v:0$190'.

6.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\store_buffer.\commit_queue_q' using process `\store_buffer.$proc$store_buffer.v:234$490'.
  created $adff cell `$procdff$1932' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:234$490'.
  created $adff cell `$procdff$1933' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$490'.
  created $adff cell `$procdff$1934' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$490'.
  created $adff cell `$procdff$1935' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_queue_q' using process `\store_buffer.$proc$store_buffer.v:220$488'.
  created $adff cell `$procdff$1936' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:220$488'.
  created $adff cell `$procdff$1937' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$488'.
  created $adff cell `$procdff$1938' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$488'.
  created $adff cell `$procdff$1939' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\state_q' using process `\store_unit.$proc$store_unit.v:271$232'.
  created $adff cell `$procdff$1940' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_q' using process `\store_unit.$proc$store_unit.v:271$232'.
  created $adff cell `$procdff$1941' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_be_q' using process `\store_unit.$proc$store_unit.v:271$232'.
  created $adff cell `$procdff$1942' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_size_q' using process `\store_unit.$proc$store_unit.v:271$232'.
  created $adff cell `$procdff$1943' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\amo_op_q' using process `\store_unit.$proc$store_unit.v:271$232'.
  created $adff cell `$procdff$1944' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\trans_id_q' using process `\store_unit.$proc$store_unit.v:271$232'.
  created $adff cell `$procdff$1945' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\CLK_CYCLE' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1946' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\instr_i_pc' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1947' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\queue_store_ptr' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1948' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\queue_commit_ptr' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1949' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\queue_serve_ptr' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1950' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_0' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1951' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1952' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_1' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1953' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1954' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_2' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1955' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1956' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_3' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1957' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1958' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state_flatten_0' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1959' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state_flatten_1' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1960' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state_flatten_2' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1961' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state_flatten_3' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1962' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\inner_instr_i' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1963' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\inner_instr_valid_i' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1964' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\inner_store_mem_resp_i' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1965' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue[0]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1966' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue[1]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1967' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue[2]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1968' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue[3]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1969' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_pc[0]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1970' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_pc[1]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1971' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_pc[2]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1972' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_i_queue_pc[3]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1973' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state[0]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1974' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state[1]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1975' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state[2]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1976' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.\store_instr_queue_state[3]' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1977' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1978' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:123$66_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1979' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1980' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_i_queue$cva6_su_model.v:126$67_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1981' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1982' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_su_model.v:127$68_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1983' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1984' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:128$69_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1985' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1986' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:136$70_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1987' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1988' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:138$71_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1989' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1990' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:141$72_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1991' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1992' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:147$73_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1993' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1994' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_rd$\store_instr_queue_state$cva6_su_model.v:149$74_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1995' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_ADDR' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1996' with positive edge clock and negative level reset.
Creating register for signal `\cva6_su_model.$mem2reg_wr$\store_instr_queue_state$cva6_su_model.v:152$75_DATA' using process `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
  created $adff cell `$procdff$1997' with positive edge clock and negative level reset.
Creating register for signal `\store_unit_model_tb.\tb_io_valid_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$1998' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_lsu_ctrl_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$1999' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_commit_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2000' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_paddr_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2001' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_page_offset_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2002' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_req_port_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2003' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_instr_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2004' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_instr_valid_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2005' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\tb_io_store_mem_resp_i' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2006' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\store_seen' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2007' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\raise_store_request$func$cva6_su_equiv.v:0$10.vaddr' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2008' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\raise_store_request$func$cva6_su_equiv.v:0$10.data' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2009' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\set_page_offset$func$cva6_su_equiv.v:0$13.page_offset' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2010' with positive edge clock.
Creating register for signal `\store_unit_model_tb.$formal$cva6_su_equiv.v:288$14_CHECK' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2011' with positive edge clock.
Creating register for signal `\store_unit_model_tb.$formal$cva6_su_equiv.v:288$14_EN' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
  created $dff cell `$procdff$2012' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\init' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
  created $dff cell `$procdff$2013' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\reset' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
  created $dff cell `$procdff$2014' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\counter' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
  created $dff cell `$procdff$2015' with positive edge clock.
Creating register for signal `\store_unit_model_tb.\CLK_CYCLE' using process `\store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
  created $dff cell `$procdff$2016' with positive edge clock.

6.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `store_buffer.$proc$store_buffer.v:234$490'.
Removing empty process `store_buffer.$proc$store_buffer.v:220$488'.
Found and cleaned up 23 empty switches in `\store_buffer.$proc$store_buffer.v:166$453'.
Removing empty process `store_buffer.$proc$store_buffer.v:166$453'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:142$408'.
Removing empty process `store_buffer.$proc$store_buffer.v:142$408'.
Removing empty process `store_buffer.$proc$store_buffer.v:141$407'.
Removing empty process `store_buffer.$proc$store_buffer.v:138$401'.
Removing empty process `store_buffer.$proc$store_buffer.v:135$395'.
Removing empty process `store_buffer.$proc$store_buffer.v:132$389'.
Removing empty process `store_buffer.$proc$store_buffer.v:129$383'.
Removing empty process `store_buffer.$proc$store_buffer.v:126$377'.
Removing empty process `store_buffer.$proc$store_buffer.v:123$376'.
Removing empty process `store_buffer.$proc$store_buffer.v:120$375'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:85$270'.
Removing empty process `store_buffer.$proc$store_buffer.v:85$270'.
Found and cleaned up 1 empty switch in `\store_unit.$proc$store_unit.v:0$234'.
Removing empty process `store_unit.$proc$store_unit.v:0$234'.
Removing empty process `store_unit.$proc$store_unit.v:271$232'.
Found and cleaned up 3 empty switches in `\store_unit.$proc$store_unit.v:196$216'.
Removing empty process `store_unit.$proc$store_unit.v:196$216'.
Found and cleaned up 12 empty switches in `\store_unit.$proc$store_unit.v:99$205'.
Removing empty process `store_unit.$proc$store_unit.v:99$205'.
Found and cleaned up 1 empty switch in `\cva6_su_model.$proc$cva6_su_model.v:0$198'.
Removing empty process `cva6_su_model.$proc$cva6_su_model.v:0$198'.
Removing empty process `cva6_su_model.$proc$cva6_su_model.v:0$196'.
Removing empty process `cva6_su_model.$proc$cva6_su_model.v:0$194'.
Removing empty process `cva6_su_model.$proc$cva6_su_model.v:0$192'.
Removing empty process `cva6_su_model.$proc$cva6_su_model.v:0$190'.
Found and cleaned up 18 empty switches in `\cva6_su_model.$proc$cva6_su_model.v:79$95'.
Removing empty process `cva6_su_model.$proc$cva6_su_model.v:79$95'.
Removing empty process `store_unit_model_tb.$proc$cva6_su_equiv.v:0$59'.
Removing empty process `store_unit_model_tb.$proc$cva6_su_equiv.v:0$58'.
Found and cleaned up 5 empty switches in `\store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
Removing empty process `store_unit_model_tb.$proc$cva6_su_equiv.v:244$29'.
Found and cleaned up 3 empty switches in `\store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
Removing empty process `store_unit_model_tb.$proc$cva6_su_equiv.v:27$15'.
Cleaned up 72 empty switches.

6.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_buffer.
<suppressed ~81 debug messages>
Optimizing module amo_buffer.
Optimizing module store_unit.
<suppressed ~28 debug messages>
Optimizing module cva6_su_model.
<suppressed ~19 debug messages>
Optimizing module store_unit_model_tb.
<suppressed ~2 debug messages>

6.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_unit_model_tb..
Removed 215 unused cells and 1113 unused wires.
<suppressed ~256 debug messages>

6.6. Executing CHECK pass (checking for obvious problems).
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_su_model...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Checking module store_unit_model_tb...
Found and reported 75 problems.

6.7. Executing OPT pass (performing simple optimizations).

6.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module amo_buffer.
Optimizing module cva6_su_model.
Optimizing module store_buffer.
Optimizing module store_unit.
<suppressed ~4 debug messages>
Optimizing module store_unit_model_tb.

6.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_su_model'.
<suppressed ~84 debug messages>
Finding identical cells in module `\store_buffer'.
<suppressed ~114 debug messages>
Finding identical cells in module `\store_unit'.
<suppressed ~144 debug messages>
Finding identical cells in module `\store_unit_model_tb'.
Removed a total of 114 cells.

6.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_su_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$497.
    dead port 2/2 on $mux $procmux$499.
    dead port 2/2 on $mux $procmux$505.
    dead port 2/2 on $mux $procmux$533.
    dead port 2/2 on $mux $procmux$535.
    dead port 2/2 on $mux $procmux$553.
    dead port 2/2 on $mux $procmux$569.
    dead port 2/2 on $mux $procmux$571.
    dead port 2/2 on $mux $procmux$589.
    dead port 2/2 on $mux $procmux$605.
    dead port 2/2 on $mux $procmux$607.
    dead port 2/2 on $mux $procmux$625.
    dead port 2/2 on $mux $procmux$641.
    dead port 2/2 on $mux $procmux$643.
    dead port 2/2 on $mux $procmux$691.
    dead port 2/2 on $mux $procmux$712.
    dead port 2/2 on $mux $procmux$733.
    dead port 2/2 on $mux $procmux$784.
    dead port 2/2 on $mux $procmux$790.
    dead port 2/2 on $mux $procmux$796.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1094.
    dead port 2/2 on $mux $procmux$1102.
    dead port 2/2 on $mux $procmux$1004.
    dead port 2/2 on $mux $procmux$1006.
    dead port 2/2 on $mux $procmux$1013.
    dead port 2/2 on $mux $procmux$1020.
    dead port 2/2 on $mux $procmux$1027.
    dead port 2/2 on $mux $procmux$1034.
    dead port 2/2 on $mux $procmux$1043.
    dead port 2/2 on $mux $procmux$1045.
    dead port 2/2 on $mux $procmux$1054.
    dead port 2/2 on $mux $procmux$1056.
    dead port 2/2 on $mux $procmux$1065.
    dead port 2/2 on $mux $procmux$1067.
    dead port 1/9 on $pmux $procmux$933.
    dead port 2/9 on $pmux $procmux$933.
    dead port 3/9 on $pmux $procmux$933.
    dead port 4/9 on $pmux $procmux$933.
    dead port 2/2 on $mux $procmux$960.
    dead port 2/2 on $mux $procmux$1076.
    dead port 2/2 on $mux $procmux$966.
    dead port 2/2 on $mux $procmux$1078.
    dead port 2/2 on $mux $procmux$974.
    dead port 2/2 on $mux $procmux$976.
    dead port 2/2 on $mux $procmux$984.
    dead port 2/2 on $mux $procmux$986.
    dead port 2/2 on $mux $procmux$994.
    dead port 2/2 on $mux $procmux$996.
    dead port 2/2 on $mux $procmux$1086.
Running muxtree optimizer on module \store_unit_model_tb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1616.
    dead port 1/2 on $mux $procmux$1622.
    dead port 1/2 on $mux $procmux$1628.
    dead port 1/2 on $mux $procmux$1631.
    dead port 2/2 on $mux $procmux$1637.
    dead port 1/2 on $mux $procmux$1640.
    dead port 2/2 on $mux $procmux$1646.
    dead port 1/2 on $mux $procmux$1649.
    dead port 2/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1658.
    dead port 2/2 on $mux $procmux$1664.
    dead port 1/2 on $mux $procmux$1667.
    dead port 2/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1676.
    dead port 2/2 on $mux $procmux$1682.
    dead port 1/2 on $mux $procmux$1685.
    dead port 1/2 on $mux $procmux$1721.
    dead port 1/2 on $mux $procmux$1727.
    dead port 1/2 on $mux $procmux$1733.
    dead port 1/2 on $mux $procmux$1739.
    dead port 1/2 on $mux $procmux$1745.
    dead port 1/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1757.
Removed 72 multiplexer ports.
<suppressed ~88 debug messages>

6.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_su_model.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
    New ctrl vector for $pmux cell $procmux$1124: { $procmux$1007_CMP $auto$opt_reduce.cc:134:opt_mux$2018 }
    New ctrl vector for $pmux cell $procmux$1129: { $procmux$1007_CMP $auto$opt_reduce.cc:134:opt_mux$2020 }
    New ctrl vector for $pmux cell $procmux$1109: { $procmux$1046_CMP $procmux$1007_CMP $auto$opt_reduce.cc:134:opt_mux$2022 }
    New ctrl vector for $pmux cell $procmux$1114: { $procmux$1046_CMP $procmux$1007_CMP $auto$opt_reduce.cc:134:opt_mux$2024 }
    New ctrl vector for $pmux cell $procmux$1119: { $procmux$1007_CMP $auto$opt_reduce.cc:134:opt_mux$2026 }
  Optimizing cells in module \store_unit.
  Optimizing cells in module \store_unit_model_tb.
Performed a total of 5 changes.

6.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_su_model'.
<suppressed ~9 debug messages>
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
<suppressed ~24 debug messages>
Finding identical cells in module `\store_unit_model_tb'.
<suppressed ~12 debug messages>
Removed a total of 15 cells.

6.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..
Removed 0 unused cells and 189 unused wires.
<suppressed ~4 debug messages>

6.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module amo_buffer.
Optimizing module cva6_su_model.
Optimizing module store_buffer.
Optimizing module store_unit.
Optimizing module store_unit_model_tb.

6.7.8. Rerunning OPT passes. (Maybe there is more to do..)

6.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_su_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit_model_tb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

6.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_su_model.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
  Optimizing cells in module \store_unit_model_tb.
Performed a total of 0 changes.

6.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_su_model'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Finding identical cells in module `\store_unit_model_tb'.
Removed a total of 0 cells.

6.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..

6.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module amo_buffer.
Optimizing module cva6_su_model.
Optimizing module store_buffer.
Optimizing module store_unit.
Optimizing module store_unit_model_tb.

6.7.14. Finished OPT passes. (There is nothing left to do.)

6.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell cva6_su_model.$add$cva6_su_model.v:129$154 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_su_model.$add$cva6_su_model.v:129$154 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_su_model.$add$cva6_su_model.v:142$172 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_su_model.$add$cva6_su_model.v:142$172 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_su_model.$eq$cva6_su_model.v:149$186 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_su_model.$add$cva6_su_model.v:153$189 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_su_model.$add$cva6_su_model.v:153$189 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_su_model.$procmux$1137_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_su_model.$procmux$1161_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_su_model.$procmux$1240_CMP0 ($eq).
Removed top 30 bits (of 32) from wire cva6_su_model.$add$cva6_su_model.v:129$154_Y.
Removed top 30 bits (of 32) from wire cva6_su_model.$add$cva6_su_model.v:142$172_Y.
Removed top 30 bits (of 32) from wire cva6_su_model.$add$cva6_su_model.v:153$189_Y.
Removed top 30 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:88$283 ($lt).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:94$295 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:94$295 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:94$296 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:94$296 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:94$296 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$297 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$297 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$297 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$298 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$298 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$298 ($sub).
Removed top 258 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$300 ($and).
Removed top 258 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$305 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:95$310 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:95$310 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:95$310 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$311 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$311 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$311 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$312 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$312 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$312 ($sub).
Removed top 260 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$314 ($and).
Removed top 260 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$319 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:96$324 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:96$324 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:96$324 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$325 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$325 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$325 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$326 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$326 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$326 ($sub).
Removed top 288 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$328 ($and).
Removed top 288 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$333 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:97$338 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:97$338 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:97$338 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$339 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$339 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$339 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$340 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$340 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$340 ($sub).
Removed top 290 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$342 ($and).
Removed top 290 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$347 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:98$352 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:98$352 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:98$352 ($add).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$353 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$356 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$356 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:100$361 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:100$361 ($add).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:100$361 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:103$364 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:103$364 ($mul).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$369 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:105$374 ($sub).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:105$374 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:128$378 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:128$378 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:128$379 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:128$379 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:128$379 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$380 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$380 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$380 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$381 ($sub).
Removed top 28 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$381 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$381 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$382 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:131$385 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:131$385 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:131$385 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$386 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$386 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$386 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$387 ($sub).
Removed top 27 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$387 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$387 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$388 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:134$391 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:134$391 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:134$391 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$392 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$392 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$392 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$393 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$393 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$393 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$394 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:137$397 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:137$397 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:137$397 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$398 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$398 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$398 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$399 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$399 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$399 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$400 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:140$403 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:140$403 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:140$403 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$404 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$404 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$404 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$405 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$405 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$405 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$406 ($shiftx).
Removed top 29 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:145$413 ($lt).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:151$416 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:151$416 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:151$416 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$417 ($shiftx).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$424 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$427 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$427 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:156$432 ($sub).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:156$432 ($sub).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:156$432 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:160$435 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:160$435 ($mul).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$436 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$436 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$436 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$437 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$437 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$437 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$438 ($shl).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$440 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$440 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$440 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$441 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$441 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$441 ($add).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$442 ($shiftx).
Removed top 219 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$443 ($and).
Removed top 219 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$447 ($shl).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$447 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:162$452 ($add).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:162$452 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$766 ($mux).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$850 ($mux).
Removed top 1 bits (of 5) from mux cell store_buffer.$procmux$865 ($mux).
Removed top 1 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:105$374 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$sub$store_buffer.v:105$374 ($sub).
Removed top 1 bits (of 4) from port A of cell store_buffer.$sub$store_buffer.v:105$374 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$add$store_buffer.v:162$452 ($add).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:162$452 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$817 ($mux).
Removed top 1 bits (of 4) from mux cell store_buffer.$procmux$865 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$add$store_buffer.v:100$361 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$782 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$sub$store_buffer.v:156$432 ($sub).
Removed top 2 bits (of 5) from wire store_buffer.$1\core_if.speculative_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$1\store_if.commit_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$2\store_if.commit_status_cnt[4:0].
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$297_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$311_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$325_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$339_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$380_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$386_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$392_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$398_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$404_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$437_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$441_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:100$361_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:103$365_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:140$403_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:151$416_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:160$436_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:162$452_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:94$296_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:95$310_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:96$324_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:97$338_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:98$352_Y.
Removed top 258 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$300_Y.
Removed top 260 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$314_Y.
Removed top 288 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$328_Y.
Removed top 290 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$342_Y.
Removed top 219 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$443_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:160$435_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:94$295_Y.
Removed top 16 bits (of 73) from wire store_buffer.$shiftx$store_buffer.v:0$442_Y.
Removed top 11 bits (of 292) from wire store_buffer.$shl$store_buffer.v:0$313_Y.
Removed top 1 bits (of 292) from wire store_buffer.$shl$store_buffer.v:0$327_Y.
Removed top 1 bits (of 292) from wire store_buffer.$shl$store_buffer.v:0$341_Y.
Removed top 29 bits (of 32) from wire store_buffer.$sub$store_buffer.v:156$432_Y.
Removed top 2 bits (of 5) from wire store_buffer.core_if.speculative_status_cnt.
Removed top 2 bits (of 8) from port A of cell store_unit.$le$store_unit.v:81$238 ($le).
Removed top 1 bits (of 8) from port A of cell store_unit.$ge$store_unit.v:81$239 ($ge).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$908_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$908_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$909_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$909_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$910_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$910_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$911_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$911_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$912_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$912_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$913_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$913_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$914_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$914_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$915_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$915_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$916_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$916_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$917_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$917_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$918_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$918_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$921_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$921_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$921_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$921_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$921_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$922_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$922_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$922_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$922_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$922_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$923_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$923_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$923_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$923_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$923_CMP4 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$940_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1007_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell store_unit_model_tb.$eq$cva6_su_equiv.v:36$22 ($eq).
Removed top 30 bits (of 32) from port B of cell store_unit_model_tb.$lt$cva6_su_equiv.v:246$35 ($lt).
Removed top 1 bits (of 2) from port B of cell store_unit_model_tb.$eq$cva6_su_equiv.v:275$46 ($eq).
Removed top 31 bits (of 32) from port B of cell store_unit_model_tb.$sub$cva6_su_equiv.v:279$47 ($sub).
Removed top 30 bits (of 32) from port Y of cell store_unit_model_tb.$sub$cva6_su_equiv.v:279$47 ($sub).
Removed top 30 bits (of 32) from wire store_unit_model_tb.$sub$cva6_su_equiv.v:279$47_Y.

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..
Removed 0 unused cells and 42 unused wires.
<suppressed ~3 debug messages>

6.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module amo_buffer.
Optimizing module cva6_su_model.
Optimizing module store_buffer.
Optimizing module store_unit.
Optimizing module store_unit_model_tb.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_su_model'.
Finding identical cells in module `\store_buffer'.
<suppressed ~3 debug messages>
Finding identical cells in module `\store_unit'.
Finding identical cells in module `\store_unit_model_tb'.
Removed a total of 1 cells.

6.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.11.4. Finished fast OPT passes.

6.12. Printing statistics.

=== amo_buffer ===

   Number of wires:                 17
   Number of wire bits:            425
   Number of public wires:          16
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $and                            2

=== cva6_su_model ===

   Number of wires:                134
   Number of wire bits:            782
   Number of public wires:          23
   Number of public wire bits:     234
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                126
     $add                            3
     $adff                          13
     $eq                            16
     $logic_and                      5
     $logic_not                      6
     $logic_or                       4
     $mux                           71
     $pmux                           3
     $reduce_bool                    5

=== store_buffer ===

   Number of wires:                215
   Number of wire bits:          15200
   Number of public wires:          48
   Number of public wire bits:    1494
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                202
     $add                           30
     $adff                           8
     $and                           14
     $eq                             9
     $logic_and                      9
     $logic_not                      4
     $logic_or                       5
     $lt                             9
     $mul                            4
     $mux                           59
     $ne                             2
     $not                            8
     $or                             8
     $shiftx                         7
     $shl                           15
     $sub                           11

=== store_unit ===

   Number of wires:                123
   Number of wire bits:           1061
   Number of public wires:          57
   Number of public wire bits:     922
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           6
     $and                            2
     $eq                            43
     $ge                             1
     $le                             1
     $logic_and                      4
     $logic_not                      4
     $mux                           20
     $pmux                           8
     $reduce_bool                    2
     $reduce_or                     16
     amo_buffer                      1
     store_buffer                    1

=== store_unit_model_tb ===

   Number of wires:                102
   Number of wire bits:           1606
   Number of public wires:          50
   Number of public wire bits:     995
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     $add                            1
     $anyseq                         5
     $assert                         1
     $dff                           14
     $eq                             4
     $logic_and                      8
     $logic_not                      5
     $logic_or                       1
     $lt                             1
     $mux                           28
     $reduce_and                     1
     $sub                            1
     cva6_su_model                   1
     store_unit                      1

=== design hierarchy ===

   store_unit_model_tb               1
     cva6_su_model                   1
     store_unit                      1
       amo_buffer                    1
       store_buffer                  1

   Number of wires:                591
   Number of wire bits:          19074
   Number of public wires:         194
   Number of public wire bits:    4069
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                507
     $add                           34
     $adff                          27
     $and                           18
     $anyseq                         5
     $assert                         1
     $dff                           14
     $eq                            72
     $ge                             1
     $le                             1
     $logic_and                     26
     $logic_not                     19
     $logic_or                      10
     $lt                            10
     $mul                            4
     $mux                          178
     $ne                             2
     $not                            8
     $or                             8
     $pmux                          11
     $reduce_and                     1
     $reduce_bool                    7
     $reduce_or                     16
     $shiftx                         7
     $shl                           15
     $sub                           12

6.13. Executing CHECK pass (checking for obvious problems).
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_su_model...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Checking module store_unit_model_tb...
Found and reported 75 problems.

7. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

8. Executing ASYNC2SYNC pass.
Replacing cva6_su_model.$procdff$1948 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_su_model.$procdff$1949 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_su_model.$procdff$1950 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_su_model.$procdff$1963 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_su_model.$procdff$1964 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_su_model.$procdff$1966 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_su_model.$procdff$1967 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_su_model.$procdff$1968 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_su_model.$procdff$1969 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_su_model.$procdff$1974 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_su_model.$procdff$1975 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_su_model.$procdff$1976 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_su_model.$procdff$1977 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]
Replacing store_buffer.$procdff$1932 ($adff): ARST=\rst_ni, D=\commit_queue_n, Q=\commit_queue_q
Replacing store_buffer.$procdff$1933 ($adff): ARST=\rst_ni, D=\commit_status_cnt_n, Q=\commit_status_cnt_q
Replacing store_buffer.$procdff$1934 ($adff): ARST=\rst_ni, D=\commit_read_pointer_n, Q=\commit_read_pointer_q
Replacing store_buffer.$procdff$1935 ($adff): ARST=\rst_ni, D=\commit_write_pointer_n, Q=\commit_write_pointer_q
Replacing store_buffer.$procdff$1936 ($adff): ARST=\rst_ni, D=\speculative_queue_n, Q=\speculative_queue_q
Replacing store_buffer.$procdff$1937 ($adff): ARST=\rst_ni, D=\speculative_status_cnt_n, Q=\speculative_status_cnt_q
Replacing store_buffer.$procdff$1938 ($adff): ARST=\rst_ni, D=\speculative_read_pointer_n, Q=\speculative_read_pointer_q
Replacing store_buffer.$procdff$1939 ($adff): ARST=\rst_ni, D=\speculative_write_pointer_n, Q=\speculative_write_pointer_q
Replacing store_unit.$procdff$1940 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing store_unit.$procdff$1941 ($adff): ARST=\rst_ni, D=\st_data_n, Q=\st_data_q
Replacing store_unit.$procdff$1942 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [18:15], Q=\st_be_q
Replacing store_unit.$procdff$1943 ($adff): ARST=\rst_ni, D=\st_data_size_n, Q=\st_data_size_q
Replacing store_unit.$procdff$1944 ($adff): ARST=\rst_ni, D=\amo_op_d, Q=\amo_op_q
Replacing store_unit.$procdff$1945 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [2:0], Q=\trans_id_q

9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..

10. Executing SETUNDEF pass (replace undef values with defined constants).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module amo_buffer.
Optimizing module cva6_su_model.
Optimizing module store_buffer.
Optimizing module store_unit.
Optimizing module store_unit_model_tb.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_su_model'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Finding identical cells in module `\store_unit_model_tb'.
Removed a total of 0 cells.

11.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$1937 ($sdff) from module store_buffer (D = \core_if.speculative_status_cnt, Q = $auto$async2sync.cc:140:execute$2105, rval = 3'000).
Adding SRST signal on $procdff$1936 ($sdff) from module store_buffer (D = { $2\speculative_queue_n[291:0] [219] $2\speculative_queue_n[291:0] [146] $2\speculative_queue_n[291:0] [73] $2\speculative_queue_n[291:0] [0] }, Q = { $auto$async2sync.cc:140:execute$2103 [219] $auto$async2sync.cc:140:execute$2103 [146] $auto$async2sync.cc:140:execute$2103 [73] $auto$async2sync.cc:140:execute$2103 [0] }, rval = 4'0000).
Adding SRST signal on $procdff$1940 ($sdff) from module store_unit (D = $1\state_d[1:0], Q = $auto$async2sync.cc:140:execute$2111, rval = 2'00).
Adding SRST signal on $procdff$2014 ($dff) from module store_unit_model_tb (D = $procmux$1804_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$2190 ($sdff) from module store_unit_model_tb (D = 1'0, Q = \reset).
Adding EN signal on $procdff$2013 ($dff) from module store_unit_model_tb (D = 1'0, Q = \init).
Adding SRST signal on $procdff$2007 ($dff) from module store_unit_model_tb (D = $2\store_seen[1:0], Q = \store_seen, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$2193 ($sdff) from module store_unit_model_tb (D = $2\store_seen[1:0], Q = \store_seen).
Adding SRST signal on $procdff$2006 ($dff) from module store_unit_model_tb (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $procdff$2004 ($dff) from module store_unit_model_tb (D = \vaddr [31:0], Q = \tb_io_instr_i).
Adding SRST signal on $procdff$2003 ($dff) from module store_unit_model_tb (D = $2\tb_io_req_port_i[34:0], Q = \tb_io_req_port_i, rval = 35'00000000000000000000000000000000000).
Adding EN signal on $procdff$2002 ($dff) from module store_unit_model_tb (D = \poffset, Q = \tb_io_page_offset_i).
Adding EN signal on $procdff$2001 ($dff) from module store_unit_model_tb (D = { 2'00 \vaddr [31:0] }, Q = \tb_io_paddr_i).
Adding SRST signal on $procdff$2000 ($dff) from module store_unit_model_tb (D = $3\tb_io_commit_i[0:0], Q = \tb_io_commit_i, rval = 1'0).
Adding SRST signal on $procdff$1999 ($dff) from module store_unit_model_tb (D = { $3\tb_io_lsu_ctrl_i[84:0] [84] $3\tb_io_lsu_ctrl_i[84:0] [51] $3\tb_io_lsu_ctrl_i[84:0] [18:0] }, Q = { \tb_io_lsu_ctrl_i [84] \tb_io_lsu_ctrl_i [51] \tb_io_lsu_ctrl_i [18:0] }, rval = 21'000000000000000000000).
Adding SRST signal on $procdff$1999 ($dff) from module store_unit_model_tb (D = { \vaddr [31:0] \data }, Q = { \tb_io_lsu_ctrl_i [83:52] \tb_io_lsu_ctrl_i [50:19] }, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$1998 ($dff) from module store_unit_model_tb (D = $3\tb_io_instr_valid_i[0:0], Q = \tb_io_valid_i, rval = 1'0).

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..
Removed 33 unused cells and 35 unused wires.
<suppressed ~44 debug messages>

11.5. Rerunning OPT passes. (Removed registers in this run.)

11.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module amo_buffer.
Optimizing module cva6_su_model.
Optimizing module store_buffer.
Optimizing module store_unit.
Optimizing module store_unit_model_tb.

11.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_su_model'.
Finding identical cells in module `\store_buffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\store_unit'.
Finding identical cells in module `\store_unit_model_tb'.
<suppressed ~15 debug messages>
Removed a total of 7 cells.

11.8. Executing OPT_DFF pass (perform DFF optimizations).

11.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_su_model..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module \store_unit_model_tb..
Removed 0 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

11.10. Finished fast OPT passes.

12. Executing CHECK pass (checking for obvious problems).
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_su_model...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Checking module store_unit_model_tb...
Found and reported 75 problems.

13. Executing HIERARCHY pass (managing design hierarchy).

13.1. Analyzing design hierarchy..
Top module:  \store_unit_model_tb
Used module:     \store_unit
Used module:         \amo_buffer
Used module:         \store_buffer
Used module:     \cva6_su_model

13.2. Analyzing design hierarchy..
Top module:  \store_unit_model_tb
Used module:     \store_unit
Used module:         \amo_buffer
Used module:         \store_buffer
Used module:     \cva6_su_model
Removed 0 unused modules.
Module store_unit_model_tb directly or indirectly contains formal properties -> setting "keep" attribute.

14. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 79 unique messages, 233 total
End of script. Logfile hash: d24527c0d8, CPU: user 2.81s system 0.06s, MEM: 39.98 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 37% 3x check (1 sec), 26% 8x opt_clean (0 sec), ...
