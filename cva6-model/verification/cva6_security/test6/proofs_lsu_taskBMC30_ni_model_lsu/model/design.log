
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cva6_lsu_model.v
Parsing formal SystemVerilog input from `cva6_lsu_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_model'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

4.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

4.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_model'.
Generating RTLIL representation for module `\cva6_lsu_model'.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_lsu_model.v:98
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_lsu_model.v:94
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_lsu_model.v:90

4.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

4.2.6. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removing unused module `$abstract\cva6_lsu_model'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 3 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
Cleaned up 1 empty switch.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$588 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$588 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$583 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$583 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$578 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$578 in module cva6_lsu_model.
Removed 9 dead cases from process $proc$cva6_lsu_model.v:85$411 in module cva6_lsu_model.
Marked 27 switch rules as full_case in process $proc$cva6_lsu_model.v:85$411 in module cva6_lsu_model.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$144 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$144 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$30 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$30 in module cva6_lsu_formal.
Removed a total of 22 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 249 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
  Set init value: $formal$cva6_lsu_formal.v:209$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
  Set init value: $formal$cva6_lsu_formal.v:174$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
  Set init value: $formal$cva6_lsu_formal.v:172$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
  Set init value: $formal$cva6_lsu_formal.v:165$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
  Set init value: $formal$cva6_lsu_formal.v:163$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
  Set init value: $formal$cva6_lsu_formal.v:162$6_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
  Set init value: $formal$cva6_lsu_formal.v:161$5_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
  Set init value: $formal$cva6_lsu_formal.v:160$4_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
  Set init value: $formal$cva6_lsu_formal.v:156$3_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$588'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$388_DATA[7:0]$590
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$583'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$404_DATA[1:0]$587
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$578'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$403_DATA[31:0]$582
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
     1/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_DATA[1:0]$576
     2/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_ADDR[1:0]$575
     3/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_DATA[1:0]$573
     4/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_DATA[1:0]$572
     5/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_ADDR[1:0]$571
     6/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_DATA[1:0]$570
     7/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_ADDR[1:0]$569
     8/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_DATA[1:0]$567
     9/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_ADDR[1:0]$566
    10/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_DATA[1:0]$564
    11/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_DATA[1:0]$563
    12/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_ADDR[1:0]$562
    13/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_DATA[1:0]$561
    14/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_ADDR[1:0]$560
    15/153: $5$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_DATA[7:0]$553
    16/153: $5$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_DATA[1:0]$552
    17/153: $5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA[31:0]$551
    18/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_DATA[7:0]$550
    19/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_ADDR[1:0]$549
    20/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_DATA[1:0]$548
    21/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_ADDR[1:0]$547
    22/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA[31:0]$546
    23/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_ADDR[1:0]$545
    24/153: $4$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$387[1:0]$544
    25/153: $4$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$386[31:0]$543
    26/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_DATA[7:0]$540
    27/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_ADDR[1:0]$539
    28/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_DATA[1:0]$538
    29/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_ADDR[1:0]$537
    30/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA[31:0]$536
    31/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_ADDR[1:0]$535
    32/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$387[1:0]$534
    33/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$386[31:0]$533
    34/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_DATA[7:0]$526
    35/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_DATA[1:0]$525
    36/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_DATA[31:0]$524
    37/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_DATA[7:0]$523
    38/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_ADDR[1:0]$522
    39/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_DATA[1:0]$521
    40/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_ADDR[1:0]$520
    41/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_DATA[31:0]$519
    42/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_ADDR[1:0]$518
    43/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$385[1:0]$517
    44/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$384[31:0]$516
    45/153: $5\instr_i_pc[7:0]
    46/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_DATA[7:0]$508
    47/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_ADDR[1:0]$507
    48/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_DATA[1:0]$506
    49/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_ADDR[1:0]$505
    50/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_DATA[31:0]$504
    51/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_ADDR[1:0]$503
    52/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$385[1:0]$500
    53/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$384[31:0]$499
    54/153: $4\instr_i_pc[7:0]
    55/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_DATA[7:0]$514
    56/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_ADDR[1:0]$513
    57/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_DATA[1:0]$512
    58/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_ADDR[1:0]$511
    59/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA[31:0]$510
    60/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_ADDR[1:0]$509
    61/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$387[1:0]$502
    62/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$386[31:0]$501
    63/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_DATA[1:0]$495
    64/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_ADDR[1:0]$494
    65/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_DATA[7:0]$493
    66/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_ADDR[1:0]$492
    67/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_DATA[31:0]$491
    68/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_ADDR[1:0]$490
    69/153: $3\instr_i_pc[7:0]
    70/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_DATA[1:0]$488
    71/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_DATA[1:0]$487
    72/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_ADDR[1:0]$486
    73/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_DATA[7:0]$485
    74/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_ADDR[1:0]$484
    75/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_DATA[31:0]$483
    76/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_ADDR[1:0]$482
    77/153: $2\instr_i_pc[7:0]
    78/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_DATA[1:0]$481
    79/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_ADDR[1:0]$480
    80/153: $0\inner_load_mem_resp_i[0:0]
    81/153: $0\x_inner_store_mem_resp_i[0:0]
    82/153: $0\inner_store_mem_resp_i[0:0]
    83/153: $0\x_inner_instr_i[31:0]
    84/153: $0\inner_instr_i[31:0]
    85/153: $0\x_inner_instr_valid_i[0:0]
    86/153: $0\inner_instr_valid_i[0:0]
    87/153: $0\x_inner_is_load_i[0:0]
    88/153: $0\inner_is_load_i[0:0]
    89/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_DATA[1:0]$476
    90/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_ADDR[1:0]$475
    91/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_DATA[1:0]$474
    92/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_ADDR[1:0]$473
    93/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_DATA[1:0]$472
    94/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_ADDR[1:0]$471
    95/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_DATA[1:0]$470
    96/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_ADDR[1:0]$469
    97/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_DATA[7:0]$468
    98/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_ADDR[1:0]$467
    99/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_DATA[1:0]$466
   100/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_ADDR[1:0]$465
   101/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA[31:0]$464
   102/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_ADDR[1:0]$463
   103/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_DATA[7:0]$462
   104/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_ADDR[1:0]$461
   105/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_DATA[1:0]$460
   106/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_ADDR[1:0]$459
   107/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_DATA[31:0]$458
   108/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_ADDR[1:0]$457
   109/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$387[1:0]$448
   110/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$386[31:0]$447
   111/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$385[1:0]$446
   112/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$384[31:0]$445
   113/153: $1\instr_i_pc[7:0]
   114/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_DATA[1:0]$456
   115/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_ADDR[1:0]$455
   116/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_DATA[7:0]$454
   117/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_ADDR[1:0]$453
   118/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_DATA[31:0]$452
   119/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_ADDR[1:0]$451
   120/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_DATA[1:0]$450
   121/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_ADDR[1:0]$449
   122/153: $0\CLK_CYCLE[31:0]
   123/153: $0\store_instr_queue_state[3][1:0]
   124/153: $0\store_instr_queue_state[2][1:0]
   125/153: $0\store_instr_queue_state[1][1:0]
   126/153: $0\store_instr_queue_state[0][1:0]
   127/153: $0\store_instr_i_queue_pc[3][7:0]
   128/153: $0\store_instr_i_queue_pc[2][7:0]
   129/153: $0\store_instr_i_queue_pc[1][7:0]
   130/153: $0\store_instr_i_queue_pc[0][7:0]
   131/153: $0\store_instr_i_queue[3][31:0]
   132/153: $0\store_instr_i_queue[2][31:0]
   133/153: $0\store_instr_i_queue[1][31:0]
   134/153: $0\store_instr_i_queue[0][31:0]
   135/153: $0\ready_flag[0:0]
   136/153: $0\store_instr_queue_state_flatten_3[1:0]
   137/153: $0\store_instr_queue_state_flatten_2[1:0]
   138/153: $0\store_instr_queue_state_flatten_1[1:0]
   139/153: $0\store_instr_queue_state_flatten_0[1:0]
   140/153: $0\store_instr_i_queue_flatten_3_pc[7:0]
   141/153: $0\store_instr_i_queue_flatten_3[31:0]
   142/153: $0\store_instr_i_queue_flatten_2_pc[7:0]
   143/153: $0\store_instr_i_queue_flatten_2[31:0]
   144/153: $0\store_instr_i_queue_flatten_1_pc[7:0]
   145/153: $0\store_instr_i_queue_flatten_1[31:0]
   146/153: $0\store_instr_i_queue_flatten_0_pc[7:0]
   147/153: $0\store_instr_i_queue_flatten_0[31:0]
   148/153: $0\load_instr_queue_state[1:0]
   149/153: $0\load_instr_i_queue_pc[7:0]
   150/153: $0\load_instr_i_queue[31:0]
   151/153: $0\queue_serve_ptr[1:0]
   152/153: $0\queue_commit_ptr[1:0]
   153/153: $0\queue_store_ptr[1:0]
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA[31:0]$329
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_ADDR[4:0]$327
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_DATA[31:0]$328
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$134.$result[31:0]$318
   126/587: $5\sra$func$cva6_processor_shim.v:100$135.$result[31:0]$322
   127/587: $5\sra$func$cva6_processor_shim.v:100$135.shamt[4:0]$324
   128/587: $5\sra$func$cva6_processor_shim.v:100$135.d[63:0]$323
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$134.alu_fun[2:0]$321
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$134.imm_data[31:0]$320
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$134.reg_data[31:0]$319
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA[31:0]$326
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_ADDR[4:0]$325
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$133.$result[31:0]$316
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$133.inst[31:0]$317
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_DATA[31:0]$314
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_DATA[31:0]$312
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_ADDR[4:0]$304
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_DATA[31:0]$305
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_DATA[31:0]$307
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_ADDR[4:0]$306
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_DATA[31:0]$303
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_ADDR[4:0]$302
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$131.$result[31:0]$289
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$131.inst[31:0]$290
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_DATA[31:0]$311
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_ADDR[4:0]$310
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA[31:0]$309
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_ADDR[4:0]$308
   218/587: $4\sra$func$cva6_processor_shim.v:100$135.shamt[4:0]$301
   219/587: $4\sra$func$cva6_processor_shim.v:100$135.d[63:0]$300
   220/587: $4\sra$func$cva6_processor_shim.v:100$135.$result[31:0]$299
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$134.alu_fun[2:0]$298
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$134.imm_data[31:0]$297
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$134.reg_data[31:0]$296
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$134.$result[31:0]$295
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$133.inst[31:0]$294
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$133.$result[31:0]$293
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$132.instr[31:0]$292
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$132.$result[0:0]$291
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_DATA[31:0]$287
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_DATA[31:0]$285
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_ADDR[4:0]$271
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_DATA[31:0]$272
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_DATA[31:0]$274
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_ADDR[4:0]$273
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_DATA[31:0]$270
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_ADDR[4:0]$269
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$129.$result[31:0]$252
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$129.inst[31:0]$253
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_DATA[31:0]$284
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_ADDR[4:0]$283
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA[31:0]$282
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_ADDR[4:0]$281
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_DATA[31:0]$280
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_ADDR[4:0]$279
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_DATA[31:0]$278
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_ADDR[4:0]$277
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_DATA[31:0]$276
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_ADDR[4:0]$275
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$135.shamt[4:0]$268
   350/587: $3\sra$func$cva6_processor_shim.v:100$135.d[63:0]$267
   351/587: $3\sra$func$cva6_processor_shim.v:100$135.$result[31:0]$266
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$134.alu_fun[2:0]$265
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$134.imm_data[31:0]$264
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$134.reg_data[31:0]$263
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$134.$result[31:0]$262
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$133.inst[31:0]$261
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$133.$result[31:0]$260
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$132.instr[31:0]$259
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$132.$result[0:0]$258
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$131.inst[31:0]$257
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$131.$result[31:0]$256
   362/587: $3\is_load$func$cva6_processor_shim.v:232$130.instr[31:0]$255
   363/587: $3\is_load$func$cva6_processor_shim.v:232$130.$result[0:0]$254
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_DATA[31:0]$250
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_ADDR[4:0]$249
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA[31:0]$248
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_ADDR[4:0]$247
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_DATA[31:0]$246
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_ADDR[4:0]$245
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_DATA[31:0]$244
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_ADDR[4:0]$243
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_DATA[31:0]$242
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_ADDR[4:0]$241
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_DATA[31:0]$240
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_ADDR[4:0]$239
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_DATA[31:0]$238
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_ADDR[4:0]$237
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_DATA[31:0]$236
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_ADDR[4:0]$235
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$135.shamt[4:0]$234
   445/587: $2\sra$func$cva6_processor_shim.v:100$135.d[63:0]$233
   446/587: $2\sra$func$cva6_processor_shim.v:100$135.$result[31:0]$232
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$134.alu_fun[2:0]$231
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$134.imm_data[31:0]$230
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$134.reg_data[31:0]$229
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$134.$result[31:0]$228
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$133.inst[31:0]$227
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$133.$result[31:0]$226
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$132.instr[31:0]$225
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$132.$result[0:0]$224
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$131.inst[31:0]$223
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$131.$result[31:0]$222
   457/587: $2\is_load$func$cva6_processor_shim.v:232$130.instr[31:0]$221
   458/587: $2\is_load$func$cva6_processor_shim.v:232$130.$result[0:0]$220
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$129.inst[31:0]$219
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$129.$result[31:0]$218
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$128.$result[0:0]$216
   466/587: $2\is_store$func$cva6_processor_shim.v:226$128.instr[31:0]$217
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_DATA[31:0]$215
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_ADDR[4:0]$214
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA[31:0]$213
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_ADDR[4:0]$212
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_DATA[31:0]$211
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_ADDR[4:0]$210
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_DATA[31:0]$209
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_ADDR[4:0]$208
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_DATA[31:0]$207
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_ADDR[4:0]$206
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_DATA[31:0]$205
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_ADDR[4:0]$204
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_DATA[31:0]$203
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_ADDR[4:0]$202
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_DATA[31:0]$201
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_ADDR[4:0]$200
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$135.shamt[4:0]$199
   570/587: $1\sra$func$cva6_processor_shim.v:100$135.d[63:0]$198
   571/587: $1\sra$func$cva6_processor_shim.v:100$135.$result[31:0]$197
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$134.alu_fun[2:0]$196
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$134.imm_data[31:0]$195
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$134.reg_data[31:0]$194
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$134.$result[31:0]$193
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$133.inst[31:0]$192
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$133.$result[31:0]$191
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$132.instr[31:0]$190
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$132.$result[0:0]$189
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$131.inst[31:0]$188
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$131.$result[31:0]$187
   582/587: $1\is_load$func$cva6_processor_shim.v:232$130.instr[31:0]$186
   583/587: $1\is_load$func$cva6_processor_shim.v:232$130.$result[0:0]$185
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$129.inst[31:0]$184
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$129.$result[31:0]$183
   586/587: $1\is_store$func$cva6_processor_shim.v:226$128.instr[31:0]$182
   587/587: $1\is_store$func$cva6_processor_shim.v:226$128.$result[0:0]$181
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
     1/52: $4\local_ready_2[0:0]
     2/52: $3\tb_io_instr_valid_i_2[0:0]
     3/52: $3\pc_2[31:0]
     4/52: $3\local_ready_2[0:0]
     5/52: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_DATA[31:0]$90
     6/52: $4\local_ready_1[0:0]
     7/52: $3\tb_io_instr_valid_i_1[0:0]
     8/52: $3\pc_1[31:0]
     9/52: $3\local_ready_1[0:0]
    10/52: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_DATA[31:0]$82
    11/52: $2\local_ready_2[0:0]
    12/52: $2\pc_2[31:0]
    13/52: $2\tb_io_instr_valid_i_2[0:0]
    14/52: $2\tb_io_instr_i_2[31:0]
    15/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_DATA[31:0]$79
    16/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_ADDR[1:0]$78
    17/52: $2\local_ready_1[0:0]
    18/52: $2\pc_1[31:0]
    19/52: $2\tb_io_instr_valid_i_1[0:0]
    20/52: $2\tb_io_instr_i_1[31:0]
    21/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_DATA[31:0]$77
    22/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_ADDR[1:0]$76
    23/52: $1\local_ready_2[0:0]
    24/52: $1\local_ready_1[0:0]
    25/52: $1\tb_io_instr_i_2[31:0]
    26/52: $1\tb_io_instr_i_1[31:0]
    27/52: $1\tb_io_instr_valid_i_2[0:0]
    28/52: $1\tb_io_instr_valid_i_1[0:0]
    29/52: $1\pc_2[31:0]
    30/52: $1\pc_1[31:0]
    31/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_DATA[31:0]$58
    32/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_ADDR[1:0]$57
    33/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_DATA[31:0]$56
    34/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_ADDR[1:0]$55
    35/52: $0$formal$cva6_lsu_formal.v:156$3_EN[0:0]$36
    36/52: $0$formal$cva6_lsu_formal.v:156$3_CHECK[0:0]$35
    37/52: $0$formal$cva6_lsu_formal.v:160$4_EN[0:0]$38
    38/52: $0$formal$cva6_lsu_formal.v:160$4_CHECK[0:0]$37
    39/52: $0$formal$cva6_lsu_formal.v:161$5_EN[0:0]$40
    40/52: $0$formal$cva6_lsu_formal.v:161$5_CHECK[0:0]$39
    41/52: $0$formal$cva6_lsu_formal.v:162$6_EN[0:0]$42
    42/52: $0$formal$cva6_lsu_formal.v:162$6_CHECK[0:0]$41
    43/52: $0$formal$cva6_lsu_formal.v:163$7_EN[0:0]$44
    44/52: $0$formal$cva6_lsu_formal.v:163$7_CHECK[0:0]$43
    45/52: $0$formal$cva6_lsu_formal.v:165$8_EN[0:0]$46
    46/52: $0$formal$cva6_lsu_formal.v:165$8_CHECK[0:0]$45
    47/52: $0$formal$cva6_lsu_formal.v:172$9_EN[0:0]$48
    48/52: $0$formal$cva6_lsu_formal.v:172$9_CHECK[0:0]$47
    49/52: $0$formal$cva6_lsu_formal.v:174$10_EN[0:0]$50
    50/52: $0$formal$cva6_lsu_formal.v:174$10_CHECK[0:0]$49
    51/52: $0$formal$cva6_lsu_formal.v:209$11_EN[0:0]$52
    52/52: $0$formal$cva6_lsu_formal.v:209$11_CHECK[0:0]$51
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$388_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$588'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:70$383' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$583'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$404_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$583'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$404_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$583'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:68$382' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$578'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$403_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$578'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$403_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$578'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cva6_lsu_model.\CLK_CYCLE' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10189' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\instr_i_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10190' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_store_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10191' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_commit_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10192' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_serve_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10193' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10194' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10195' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_queue_state' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10196' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10197' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10198' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10199' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10200' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10201' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10202' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10203' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10204' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10205' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10206' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10207' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10208' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\ready_flag' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10209' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10210' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10211' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10212' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10213' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10214' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10215' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10216' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10217' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_load_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10218' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$384' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10219' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$385' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10220' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$386' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10221' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$387' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10222' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10223' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10224' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10225' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10226' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10227' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10228' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10229' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10230' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10231' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10232' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10233' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10234' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10235' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$389_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10236' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10237' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$390_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10238' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10239' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$391_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10240' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10241' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$392_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10242' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10243' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10244' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10245' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$394_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10246' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10247' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$395_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10248' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10249' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10250' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10251' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$397_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10252' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10253' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$398_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10254' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10255' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$399_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10256' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10257' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$400_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10258' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10259' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$401_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10260' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10261' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$402_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
  created $adff cell `$procdff$10262' with positive edge clock and negative level reset.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10263' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10264' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10265' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10266' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10267' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10268' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10269' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10270' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10271' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10272' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10273' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10274' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10275' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10276' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10277' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10278' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10279' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10280' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10281' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10282' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10283' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10284' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10285' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10286' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10287' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10288' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10289' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10290' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10291' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10292' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10293' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10294' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10295' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10296' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10297' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10298' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10299' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10300' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10301' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10302' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10303' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10304' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10305' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10306' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10307' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10308' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10309' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10310' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10311' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10312' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10313' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10314' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10315' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10316' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10317' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10318' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10319' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10320' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10321' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10322' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10323' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10324' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10325' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10326' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10327' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10328' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10329' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10330' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10331' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10332' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10333' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10334' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10335' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10336' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10337' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10338' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10339' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10340' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10341' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$128.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10342' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$128.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10343' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$129.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10344' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$129.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10345' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$130.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10346' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$130.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10347' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$131.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10348' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$131.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10349' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$132.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10350' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$132.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10351' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$133.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10352' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$133.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10353' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$134.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10354' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$134.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10355' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$134.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10356' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$134.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10357' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$135.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10358' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$135.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10359' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$135.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10360' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10361' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10362' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10363' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10364' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10365' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10366' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10367' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10368' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10369' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10370' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10371' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10372' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10373' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10374' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10375' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10376' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10377' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10378' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10379' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10380' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10381' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10382' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10383' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10384' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10385' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10386' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10387' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10388' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10389' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10390' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10391' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10392' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10393' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10394' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10395' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10396' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10397' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10398' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10399' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10400' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10401' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10402' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10403' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10404' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10405' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10406' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10407' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10408' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10409' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10410' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10411' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10412' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10413' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10414' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10415' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10416' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10417' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10418' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10419' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10420' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10421' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10422' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10423' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10424' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10425' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$136_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10426' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10427' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$137_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10428' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10429' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$138_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10430' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10431' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$139_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10432' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10433' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$140_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10434' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10435' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$141_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10436' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10437' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$142_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10438' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10439' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$143_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
  created $dff cell `$procdff$10440' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10441' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10442' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10443' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10444' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10445' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10446' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10447' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10448' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10449' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10450' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10451' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10452' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10453' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10454' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$4_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10455' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$4_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10456' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$5_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10457' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$5_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10458' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$6_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10459' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$6_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10460' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:163$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10461' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:163$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10462' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:165$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10463' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:165$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10464' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10465' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10466' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:174$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10467' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:174$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10468' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:209$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10469' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:209$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10470' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10471' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10472' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10473' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10474' with positive edge clock.

4.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$588'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$588'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$583'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$583'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$578'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$578'.
Found and cleaned up 28 empty switches in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:85$411'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$144'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
Cleaned up 70 empty switches.

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_model.
<suppressed ~23 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~4 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 674 unused cells and 3784 unused wires.
<suppressed ~771 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~132 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Removed a total of 3149 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10007.
    dead port 1/2 on $mux $procmux$10013.
    dead port 1/2 on $mux $procmux$10019.
    dead port 1/2 on $mux $procmux$10025.
    dead port 1/2 on $mux $procmux$10043.
    dead port 1/2 on $mux $procmux$10049.
    dead port 1/2 on $mux $procmux$10055.
    dead port 1/2 on $mux $procmux$10061.
    dead port 2/2 on $mux $procmux$9908.
    dead port 2/2 on $mux $procmux$9910.
    dead port 1/2 on $mux $procmux$9913.
    dead port 2/2 on $mux $procmux$9919.
    dead port 1/2 on $mux $procmux$9922.
    dead port 2/2 on $mux $procmux$9928.
    dead port 1/2 on $mux $procmux$9931.
    dead port 2/2 on $mux $procmux$9937.
    dead port 1/2 on $mux $procmux$9940.
    dead port 2/2 on $mux $procmux$9958.
    dead port 2/2 on $mux $procmux$9960.
    dead port 1/2 on $mux $procmux$9963.
    dead port 2/2 on $mux $procmux$9969.
    dead port 1/2 on $mux $procmux$9972.
    dead port 2/2 on $mux $procmux$9978.
    dead port 1/2 on $mux $procmux$9981.
    dead port 2/2 on $mux $procmux$9987.
    dead port 1/2 on $mux $procmux$9990.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1010.
    dead port 2/2 on $mux $procmux$917.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1354: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$1332: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$2044: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$1961: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1762: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1684: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1609: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1450: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1424: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6094.
    dead port 1/2 on $mux $procmux$6101.
    dead port 2/2 on $mux $procmux$6103.
    dead port 2/2 on $mux $procmux$6106.
    dead port 1/2 on $mux $procmux$6113.
    dead port 2/2 on $mux $procmux$6115.
    dead port 2/2 on $mux $procmux$6118.
    dead port 1/2 on $mux $procmux$6125.
    dead port 2/2 on $mux $procmux$6127.
    dead port 2/2 on $mux $procmux$6130.
    dead port 1/2 on $mux $procmux$6137.
    dead port 2/2 on $mux $procmux$6139.
    dead port 2/2 on $mux $procmux$6142.
    dead port 1/2 on $mux $procmux$6149.
    dead port 2/2 on $mux $procmux$6151.
    dead port 2/2 on $mux $procmux$6154.
    dead port 1/2 on $mux $procmux$6161.
    dead port 2/2 on $mux $procmux$6163.
    dead port 2/2 on $mux $procmux$6166.
    dead port 1/2 on $mux $procmux$6173.
    dead port 2/2 on $mux $procmux$6175.
    dead port 2/2 on $mux $procmux$6178.
    dead port 1/2 on $mux $procmux$6185.
    dead port 2/2 on $mux $procmux$6187.
    dead port 2/2 on $mux $procmux$6190.
    dead port 1/2 on $mux $procmux$6197.
    dead port 2/2 on $mux $procmux$6199.
    dead port 2/2 on $mux $procmux$6202.
    dead port 1/2 on $mux $procmux$6209.
    dead port 2/2 on $mux $procmux$6211.
    dead port 2/2 on $mux $procmux$6214.
    dead port 1/2 on $mux $procmux$6221.
    dead port 2/2 on $mux $procmux$6223.
    dead port 2/2 on $mux $procmux$6226.
    dead port 1/2 on $mux $procmux$6233.
    dead port 2/2 on $mux $procmux$6235.
    dead port 2/2 on $mux $procmux$6238.
    dead port 1/2 on $mux $procmux$6245.
    dead port 2/2 on $mux $procmux$6247.
    dead port 2/2 on $mux $procmux$6250.
    dead port 1/2 on $mux $procmux$6257.
    dead port 2/2 on $mux $procmux$6259.
    dead port 2/2 on $mux $procmux$6262.
    dead port 1/2 on $mux $procmux$6269.
    dead port 2/2 on $mux $procmux$6271.
    dead port 2/2 on $mux $procmux$6274.
    dead port 1/2 on $mux $procmux$6329.
    dead port 2/2 on $mux $procmux$6331.
    dead port 2/2 on $mux $procmux$6334.
    dead port 2/2 on $mux $procmux$6599.
    dead port 2/2 on $mux $procmux$6601.
    dead port 2/2 on $mux $procmux$6604.
    dead port 1/2 on $mux $procmux$1825.
    dead port 1/2 on $mux $procmux$1828.
    dead port 2/2 on $mux $procmux$1831.
    dead port 2/2 on $mux $procmux$1838.
    dead port 1/2 on $mux $procmux$1840.
    dead port 1/2 on $mux $procmux$1843.
    dead port 2/2 on $mux $procmux$1846.
    dead port 2/2 on $mux $procmux$2519.
    dead port 1/2 on $mux $procmux$2522.
    dead port 1/2 on $mux $procmux$2525.
    dead port 2/2 on $mux $procmux$2527.
    dead port 2/2 on $mux $procmux$4676.
    dead port 1/2 on $mux $procmux$4679.
    dead port 2/2 on $mux $procmux$4681.
    dead port 2/2 on $mux $procmux$4684.
    dead port 2/2 on $mux $procmux$2530.
    dead port 2/2 on $mux $procmux$1853.
    dead port 1/2 on $mux $procmux$1855.
    dead port 1/2 on $mux $procmux$1858.
    dead port 2/2 on $mux $procmux$1861.
    dead port 2/2 on $mux $procmux$3191.
    dead port 1/2 on $mux $procmux$3194.
    dead port 1/2 on $mux $procmux$3197.
    dead port 2/2 on $mux $procmux$3199.
    dead port 2/2 on $mux $procmux$3202.
    dead port 1/2 on $mux $procmux$1867.
    dead port 2/2 on $mux $procmux$6641.
    dead port 2/2 on $mux $procmux$6643.
    dead port 2/2 on $mux $procmux$6646.
    dead port 1/2 on $mux $procmux$1870.
    dead port 2/2 on $mux $procmux$1873.
    dead port 1/2 on $mux $procmux$1879.
    dead port 1/2 on $mux $procmux$1882.
    dead port 2/2 on $mux $procmux$1885.
    dead port 1/2 on $mux $procmux$1891.
    dead port 1/2 on $mux $procmux$1894.
    dead port 2/2 on $mux $procmux$1897.
    dead port 1/2 on $mux $procmux$1915.
    dead port 1/2 on $mux $procmux$1918.
    dead port 2/2 on $mux $procmux$1921.
    dead port 1/2 on $mux $procmux$1927.
    dead port 1/2 on $mux $procmux$1930.
    dead port 2/2 on $mux $procmux$4721.
    dead port 1/2 on $mux $procmux$4724.
    dead port 2/2 on $mux $procmux$4726.
    dead port 2/2 on $mux $procmux$4729.
    dead port 2/2 on $mux $procmux$1933.
    dead port 1/2 on $mux $procmux$1939.
    dead port 1/2 on $mux $procmux$1942.
    dead port 2/2 on $mux $procmux$1945.
    dead port 1/2 on $mux $procmux$1951.
    dead port 1/2 on $mux $procmux$1954.
    dead port 2/2 on $mux $procmux$2567.
    dead port 1/2 on $mux $procmux$2570.
    dead port 2/2 on $mux $procmux$6683.
    dead port 2/2 on $mux $procmux$6685.
    dead port 2/2 on $mux $procmux$6688.
    dead port 1/2 on $mux $procmux$2573.
    dead port 2/2 on $mux $procmux$2575.
    dead port 2/2 on $mux $procmux$2578.
    dead port 2/2 on $mux $procmux$3239.
    dead port 1/2 on $mux $procmux$3242.
    dead port 1/2 on $mux $procmux$3245.
    dead port 2/2 on $mux $procmux$3247.
    dead port 2/2 on $mux $procmux$3250.
    dead port 2/2 on $mux $procmux$1957.
    dead port 1/2 on $mux $procmux$1963.
    dead port 1/2 on $mux $procmux$1966.
    dead port 2/2 on $mux $procmux$1969.
    dead port 1/2 on $mux $procmux$1975.
    dead port 2/2 on $mux $procmux$1978.
    dead port 1/2 on $mux $procmux$1984.
    dead port 2/2 on $mux $procmux$1987.
    dead port 2/2 on $mux $procmux$4766.
    dead port 1/2 on $mux $procmux$4769.
    dead port 2/2 on $mux $procmux$4771.
    dead port 2/2 on $mux $procmux$4774.
    dead port 1/2 on $mux $procmux$2002.
    dead port 2/2 on $mux $procmux$2005.
    dead port 1/2 on $mux $procmux$2011.
    dead port 2/2 on $mux $procmux$2014.
    dead port 2/2 on $mux $procmux$6725.
    dead port 2/2 on $mux $procmux$6727.
    dead port 2/2 on $mux $procmux$6730.
    dead port 1/2 on $mux $procmux$2020.
    dead port 2/2 on $mux $procmux$2023.
    dead port 1/2 on $mux $procmux$2029.
    dead port 2/2 on $mux $procmux$2032.
    dead port 1/2 on $mux $procmux$2038.
    dead port 2/2 on $mux $procmux$2041.
    dead port 1/2 on $mux $procmux$2047.
    dead port 2/2 on $mux $procmux$2050.
    dead port 2/2 on $mux $procmux$3287.
    dead port 1/2 on $mux $procmux$3290.
    dead port 1/2 on $mux $procmux$3293.
    dead port 2/2 on $mux $procmux$3295.
    dead port 2/2 on $mux $procmux$3298.
    dead port 2/2 on $mux $procmux$2615.
    dead port 1/2 on $mux $procmux$2618.
    dead port 1/2 on $mux $procmux$2621.
    dead port 2/2 on $mux $procmux$2623.
    dead port 2/2 on $mux $procmux$2626.
    dead port 2/2 on $mux $procmux$4811.
    dead port 1/2 on $mux $procmux$4814.
    dead port 2/2 on $mux $procmux$4816.
    dead port 2/2 on $mux $procmux$4819.
    dead port 2/2 on $mux $procmux$6767.
    dead port 2/2 on $mux $procmux$6769.
    dead port 2/2 on $mux $procmux$6772.
    dead port 2/2 on $mux $procmux$3335.
    dead port 1/2 on $mux $procmux$3338.
    dead port 1/2 on $mux $procmux$3341.
    dead port 2/2 on $mux $procmux$3343.
    dead port 2/2 on $mux $procmux$3346.
    dead port 2/2 on $mux $procmux$6809.
    dead port 2/2 on $mux $procmux$6811.
    dead port 2/2 on $mux $procmux$6814.
    dead port 2/2 on $mux $procmux$4856.
    dead port 1/2 on $mux $procmux$4859.
    dead port 2/2 on $mux $procmux$4861.
    dead port 2/2 on $mux $procmux$4864.
    dead port 2/2 on $mux $procmux$2087.
    dead port 1/2 on $mux $procmux$2090.
    dead port 2/2 on $mux $procmux$2663.
    dead port 1/2 on $mux $procmux$2666.
    dead port 1/2 on $mux $procmux$2669.
    dead port 2/2 on $mux $procmux$2671.
    dead port 2/2 on $mux $procmux$2674.
    dead port 1/2 on $mux $procmux$2093.
    dead port 2/2 on $mux $procmux$2095.
    dead port 2/2 on $mux $procmux$2098.
    dead port 2/2 on $mux $procmux$6851.
    dead port 2/2 on $mux $procmux$6853.
    dead port 2/2 on $mux $procmux$6856.
    dead port 2/2 on $mux $procmux$4901.
    dead port 1/2 on $mux $procmux$4904.
    dead port 2/2 on $mux $procmux$4906.
    dead port 2/2 on $mux $procmux$4909.
    dead port 2/2 on $mux $procmux$3383.
    dead port 1/2 on $mux $procmux$3386.
    dead port 1/2 on $mux $procmux$3389.
    dead port 2/2 on $mux $procmux$3391.
    dead port 2/2 on $mux $procmux$3394.
    dead port 2/2 on $mux $procmux$2711.
    dead port 1/2 on $mux $procmux$2714.
    dead port 1/2 on $mux $procmux$2717.
    dead port 2/2 on $mux $procmux$2719.
    dead port 2/2 on $mux $procmux$6893.
    dead port 2/2 on $mux $procmux$6895.
    dead port 2/2 on $mux $procmux$6898.
    dead port 2/2 on $mux $procmux$2722.
    dead port 2/2 on $mux $procmux$2135.
    dead port 1/2 on $mux $procmux$2138.
    dead port 1/2 on $mux $procmux$2141.
    dead port 2/2 on $mux $procmux$2143.
    dead port 2/2 on $mux $procmux$4946.
    dead port 1/2 on $mux $procmux$4949.
    dead port 2/2 on $mux $procmux$4951.
    dead port 2/2 on $mux $procmux$4954.
    dead port 2/2 on $mux $procmux$2146.
    dead port 2/2 on $mux $procmux$3431.
    dead port 1/2 on $mux $procmux$3434.
    dead port 1/2 on $mux $procmux$3437.
    dead port 2/2 on $mux $procmux$3439.
    dead port 2/2 on $mux $procmux$3442.
    dead port 2/2 on $mux $procmux$6935.
    dead port 2/2 on $mux $procmux$6937.
    dead port 2/2 on $mux $procmux$6940.
    dead port 2/2 on $mux $procmux$2759.
    dead port 1/2 on $mux $procmux$2762.
    dead port 2/2 on $mux $procmux$4991.
    dead port 1/2 on $mux $procmux$4994.
    dead port 2/2 on $mux $procmux$4996.
    dead port 2/2 on $mux $procmux$4999.
    dead port 1/2 on $mux $procmux$2765.
    dead port 2/2 on $mux $procmux$2767.
    dead port 2/2 on $mux $procmux$2770.
    dead port 2/2 on $mux $procmux$6977.
    dead port 2/2 on $mux $procmux$6979.
    dead port 2/2 on $mux $procmux$6982.
    dead port 2/2 on $mux $procmux$3479.
    dead port 1/2 on $mux $procmux$3482.
    dead port 1/2 on $mux $procmux$3485.
    dead port 2/2 on $mux $procmux$3487.
    dead port 2/2 on $mux $procmux$3490.
    dead port 2/2 on $mux $procmux$2183.
    dead port 1/2 on $mux $procmux$2186.
    dead port 1/2 on $mux $procmux$2189.
    dead port 2/2 on $mux $procmux$2191.
    dead port 2/2 on $mux $procmux$2194.
    dead port 2/2 on $mux $procmux$5036.
    dead port 1/2 on $mux $procmux$5039.
    dead port 2/2 on $mux $procmux$5041.
    dead port 2/2 on $mux $procmux$5044.
    dead port 2/2 on $mux $procmux$7019.
    dead port 2/2 on $mux $procmux$7021.
    dead port 2/2 on $mux $procmux$7024.
    dead port 2/2 on $mux $procmux$2807.
    dead port 1/2 on $mux $procmux$2810.
    dead port 1/2 on $mux $procmux$2813.
    dead port 2/2 on $mux $procmux$2815.
    dead port 2/2 on $mux $procmux$2818.
    dead port 2/2 on $mux $procmux$3527.
    dead port 1/2 on $mux $procmux$3530.
    dead port 1/2 on $mux $procmux$3533.
    dead port 2/2 on $mux $procmux$3535.
    dead port 2/2 on $mux $procmux$3538.
    dead port 2/2 on $mux $procmux$5081.
    dead port 1/2 on $mux $procmux$5084.
    dead port 2/2 on $mux $procmux$5086.
    dead port 2/2 on $mux $procmux$5089.
    dead port 2/2 on $mux $procmux$7061.
    dead port 2/2 on $mux $procmux$7063.
    dead port 2/2 on $mux $procmux$7066.
    dead port 2/2 on $mux $procmux$2231.
    dead port 1/2 on $mux $procmux$2234.
    dead port 1/2 on $mux $procmux$2237.
    dead port 2/2 on $mux $procmux$2239.
    dead port 2/2 on $mux $procmux$2242.
    dead port 2/2 on $mux $procmux$2855.
    dead port 1/2 on $mux $procmux$2858.
    dead port 2/2 on $mux $procmux$3575.
    dead port 1/2 on $mux $procmux$3578.
    dead port 1/2 on $mux $procmux$3581.
    dead port 2/2 on $mux $procmux$3583.
    dead port 2/2 on $mux $procmux$3586.
    dead port 2/2 on $mux $procmux$5126.
    dead port 1/2 on $mux $procmux$5129.
    dead port 2/2 on $mux $procmux$7103.
    dead port 2/2 on $mux $procmux$7105.
    dead port 2/2 on $mux $procmux$7108.
    dead port 2/2 on $mux $procmux$5131.
    dead port 2/2 on $mux $procmux$5134.
    dead port 2/2 on $mux $procmux$7145.
    dead port 2/2 on $mux $procmux$7147.
    dead port 2/2 on $mux $procmux$7150.
    dead port 2/2 on $mux $procmux$5171.
    dead port 1/2 on $mux $procmux$5174.
    dead port 2/2 on $mux $procmux$5176.
    dead port 2/2 on $mux $procmux$5179.
    dead port 1/2 on $mux $procmux$3641.
    dead port 1/2 on $mux $procmux$3644.
    dead port 2/2 on $mux $procmux$3646.
    dead port 2/2 on $mux $procmux$3649.
    dead port 1/2 on $mux $procmux$3656.
    dead port 1/2 on $mux $procmux$3659.
    dead port 2/2 on $mux $procmux$3661.
    dead port 2/2 on $mux $procmux$3664.
    dead port 1/2 on $mux $procmux$3671.
    dead port 1/2 on $mux $procmux$3674.
    dead port 2/2 on $mux $procmux$3676.
    dead port 2/2 on $mux $procmux$3679.
    dead port 1/2 on $mux $procmux$3686.
    dead port 1/2 on $mux $procmux$3689.
    dead port 2/2 on $mux $procmux$3691.
    dead port 2/2 on $mux $procmux$3694.
    dead port 2/2 on $mux $procmux$7187.
    dead port 2/2 on $mux $procmux$7189.
    dead port 2/2 on $mux $procmux$7192.
    dead port 1/2 on $mux $procmux$3701.
    dead port 1/2 on $mux $procmux$3704.
    dead port 2/2 on $mux $procmux$3706.
    dead port 2/2 on $mux $procmux$3709.
    dead port 1/2 on $mux $procmux$3716.
    dead port 1/2 on $mux $procmux$3719.
    dead port 2/2 on $mux $procmux$3721.
    dead port 2/2 on $mux $procmux$5216.
    dead port 1/2 on $mux $procmux$5219.
    dead port 2/2 on $mux $procmux$5221.
    dead port 2/2 on $mux $procmux$5224.
    dead port 2/2 on $mux $procmux$3724.
    dead port 1/2 on $mux $procmux$3731.
    dead port 1/2 on $mux $procmux$3734.
    dead port 2/2 on $mux $procmux$3736.
    dead port 2/2 on $mux $procmux$3739.
    dead port 1/2 on $mux $procmux$3746.
    dead port 1/2 on $mux $procmux$3749.
    dead port 2/2 on $mux $procmux$3751.
    dead port 2/2 on $mux $procmux$3754.
    dead port 1/2 on $mux $procmux$3761.
    dead port 1/2 on $mux $procmux$3764.
    dead port 2/2 on $mux $procmux$3766.
    dead port 2/2 on $mux $procmux$3769.
    dead port 1/2 on $mux $procmux$3776.
    dead port 1/2 on $mux $procmux$3779.
    dead port 2/2 on $mux $procmux$7229.
    dead port 2/2 on $mux $procmux$7231.
    dead port 2/2 on $mux $procmux$7234.
    dead port 2/2 on $mux $procmux$3781.
    dead port 2/2 on $mux $procmux$3784.
    dead port 1/2 on $mux $procmux$3791.
    dead port 1/2 on $mux $procmux$3794.
    dead port 2/2 on $mux $procmux$3796.
    dead port 2/2 on $mux $procmux$3799.
    dead port 1/2 on $mux $procmux$3806.
    dead port 1/2 on $mux $procmux$3809.
    dead port 2/2 on $mux $procmux$3811.
    dead port 2/2 on $mux $procmux$3814.
    dead port 2/2 on $mux $procmux$5261.
    dead port 1/2 on $mux $procmux$5264.
    dead port 2/2 on $mux $procmux$5266.
    dead port 2/2 on $mux $procmux$5269.
    dead port 1/2 on $mux $procmux$3821.
    dead port 1/2 on $mux $procmux$3824.
    dead port 2/2 on $mux $procmux$3826.
    dead port 2/2 on $mux $procmux$3829.
    dead port 1/2 on $mux $procmux$3836.
    dead port 1/2 on $mux $procmux$3839.
    dead port 2/2 on $mux $procmux$3841.
    dead port 2/2 on $mux $procmux$3844.
    dead port 1/2 on $mux $procmux$3851.
    dead port 1/2 on $mux $procmux$3854.
    dead port 2/2 on $mux $procmux$3856.
    dead port 2/2 on $mux $procmux$3859.
    dead port 2/2 on $mux $procmux$7271.
    dead port 2/2 on $mux $procmux$7273.
    dead port 2/2 on $mux $procmux$7276.
    dead port 1/2 on $mux $procmux$3866.
    dead port 1/2 on $mux $procmux$3869.
    dead port 2/2 on $mux $procmux$3871.
    dead port 2/2 on $mux $procmux$3874.
    dead port 1/2 on $mux $procmux$3881.
    dead port 1/2 on $mux $procmux$3884.
    dead port 2/2 on $mux $procmux$3886.
    dead port 2/2 on $mux $procmux$3889.
    dead port 1/2 on $mux $procmux$3896.
    dead port 1/2 on $mux $procmux$3899.
    dead port 2/2 on $mux $procmux$3901.
    dead port 2/2 on $mux $procmux$3904.
    dead port 1/2 on $mux $procmux$3911.
    dead port 1/2 on $mux $procmux$3914.
    dead port 2/2 on $mux $procmux$5306.
    dead port 1/2 on $mux $procmux$5309.
    dead port 2/2 on $mux $procmux$5311.
    dead port 2/2 on $mux $procmux$5314.
    dead port 2/2 on $mux $procmux$3916.
    dead port 2/2 on $mux $procmux$3919.
    dead port 1/2 on $mux $procmux$3926.
    dead port 1/2 on $mux $procmux$3929.
    dead port 2/2 on $mux $procmux$3931.
    dead port 2/2 on $mux $procmux$3934.
    dead port 1/2 on $mux $procmux$3941.
    dead port 2/2 on $mux $procmux$7313.
    dead port 2/2 on $mux $procmux$7315.
    dead port 2/2 on $mux $procmux$7318.
    dead port 1/2 on $mux $procmux$3944.
    dead port 2/2 on $mux $procmux$3946.
    dead port 2/2 on $mux $procmux$3949.
    dead port 1/2 on $mux $procmux$3956.
    dead port 1/2 on $mux $procmux$3959.
    dead port 2/2 on $mux $procmux$3961.
    dead port 2/2 on $mux $procmux$3964.
    dead port 1/2 on $mux $procmux$3971.
    dead port 1/2 on $mux $procmux$3974.
    dead port 2/2 on $mux $procmux$3976.
    dead port 2/2 on $mux $procmux$3979.
    dead port 1/2 on $mux $procmux$3986.
    dead port 1/2 on $mux $procmux$3989.
    dead port 2/2 on $mux $procmux$3991.
    dead port 2/2 on $mux $procmux$3994.
    dead port 1/2 on $mux $procmux$4001.
    dead port 1/2 on $mux $procmux$4004.
    dead port 2/2 on $mux $procmux$4006.
    dead port 2/2 on $mux $procmux$4009.
    dead port 2/2 on $mux $procmux$5351.
    dead port 1/2 on $mux $procmux$5354.
    dead port 2/2 on $mux $procmux$5356.
    dead port 2/2 on $mux $procmux$5359.
    dead port 1/2 on $mux $procmux$4016.
    dead port 1/2 on $mux $procmux$4019.
    dead port 2/2 on $mux $procmux$4021.
    dead port 2/2 on $mux $procmux$7355.
    dead port 2/2 on $mux $procmux$7357.
    dead port 2/2 on $mux $procmux$7360.
    dead port 2/2 on $mux $procmux$4024.
    dead port 1/2 on $mux $procmux$4031.
    dead port 1/2 on $mux $procmux$4034.
    dead port 2/2 on $mux $procmux$4036.
    dead port 2/2 on $mux $procmux$4039.
    dead port 1/2 on $mux $procmux$4046.
    dead port 1/2 on $mux $procmux$4049.
    dead port 2/2 on $mux $procmux$4051.
    dead port 2/2 on $mux $procmux$4054.
    dead port 1/2 on $mux $procmux$4061.
    dead port 1/2 on $mux $procmux$4064.
    dead port 2/2 on $mux $procmux$4066.
    dead port 2/2 on $mux $procmux$4069.
    dead port 1/2 on $mux $procmux$4076.
    dead port 1/2 on $mux $procmux$4079.
    dead port 2/2 on $mux $procmux$4081.
    dead port 2/2 on $mux $procmux$4084.
    dead port 1/2 on $mux $procmux$4091.
    dead port 1/2 on $mux $procmux$4094.
    dead port 2/2 on $mux $procmux$4096.
    dead port 2/2 on $mux $procmux$4099.
    dead port 1/2 on $mux $procmux$4106.
    dead port 2/2 on $mux $procmux$5396.
    dead port 1/2 on $mux $procmux$5399.
    dead port 2/2 on $mux $procmux$5401.
    dead port 2/2 on $mux $procmux$5404.
    dead port 2/2 on $mux $procmux$7397.
    dead port 2/2 on $mux $procmux$7399.
    dead port 2/2 on $mux $procmux$7402.
    dead port 1/2 on $mux $procmux$4109.
    dead port 2/2 on $mux $procmux$4111.
    dead port 2/2 on $mux $procmux$4114.
    dead port 1/2 on $mux $procmux$4121.
    dead port 1/2 on $mux $procmux$4124.
    dead port 2/2 on $mux $procmux$4126.
    dead port 2/2 on $mux $procmux$4129.
    dead port 1/2 on $mux $procmux$2861.
    dead port 2/2 on $mux $procmux$2863.
    dead port 2/2 on $mux $procmux$2866.
    dead port 1/2 on $mux $procmux$1305.
    dead port 2/2 on $mux $procmux$1308.
    dead port 2/2 on $mux $procmux$1314.
    dead port 2/2 on $mux $procmux$1320.
    dead port 1/2 on $mux $procmux$1326.
    dead port 2/2 on $mux $procmux$1329.
    dead port 1/2 on $mux $procmux$1335.
    dead port 2/2 on $mux $procmux$7439.
    dead port 2/2 on $mux $procmux$7441.
    dead port 2/2 on $mux $procmux$7444.
    dead port 2/2 on $mux $procmux$1338.
    dead port 2/2 on $mux $procmux$5441.
    dead port 1/2 on $mux $procmux$5444.
    dead port 2/2 on $mux $procmux$5446.
    dead port 2/2 on $mux $procmux$5449.
    dead port 1/2 on $mux $procmux$1345.
    dead port 2/2 on $mux $procmux$1347.
    dead port 2/2 on $mux $procmux$2279.
    dead port 1/2 on $mux $procmux$2282.
    dead port 1/2 on $mux $procmux$2285.
    dead port 2/2 on $mux $procmux$2287.
    dead port 2/2 on $mux $procmux$2290.
    dead port 2/2 on $mux $procmux$4361.
    dead port 1/2 on $mux $procmux$4364.
    dead port 2/2 on $mux $procmux$4366.
    dead port 2/2 on $mux $procmux$4369.
    dead port 2/2 on $mux $procmux$1350.
    dead port 1/2 on $mux $procmux$1357.
    dead port 2/2 on $mux $procmux$1359.
    dead port 2/2 on $mux $procmux$2903.
    dead port 1/2 on $mux $procmux$2906.
    dead port 1/2 on $mux $procmux$2909.
    dead port 2/2 on $mux $procmux$2911.
    dead port 2/2 on $mux $procmux$2914.
    dead port 2/2 on $mux $procmux$1362.
    dead port 2/2 on $mux $procmux$7481.
    dead port 2/2 on $mux $procmux$7483.
    dead port 2/2 on $mux $procmux$7486.
    dead port 1/2 on $mux $procmux$1369.
    dead port 2/2 on $mux $procmux$1371.
    dead port 2/2 on $mux $procmux$1374.
    dead port 2/2 on $mux $procmux$1380.
    dead port 2/2 on $mux $procmux$1383.
    dead port 2/2 on $mux $procmux$5486.
    dead port 1/2 on $mux $procmux$5489.
    dead port 2/2 on $mux $procmux$5491.
    dead port 2/2 on $mux $procmux$5494.
    dead port 2/2 on $mux $procmux$1389.
    dead port 2/2 on $mux $procmux$1392.
    dead port 2/2 on $mux $procmux$1398.
    dead port 2/2 on $mux $procmux$1401.
    dead port 2/2 on $mux $procmux$1407.
    dead port 2/2 on $mux $procmux$1413.
    dead port 2/2 on $mux $procmux$1419.
    dead port 2/2 on $mux $procmux$1426.
    dead port 2/2 on $mux $procmux$4406.
    dead port 1/2 on $mux $procmux$4409.
    dead port 2/2 on $mux $procmux$4411.
    dead port 2/2 on $mux $procmux$4414.
    dead port 1/2 on $mux $procmux$1429.
    dead port 1/2 on $mux $procmux$1432.
    dead port 2/2 on $mux $procmux$7523.
    dead port 2/2 on $mux $procmux$7525.
    dead port 2/2 on $mux $procmux$7528.
    dead port 1/2 on $mux $procmux$1435.
    dead port 1/2 on $mux $procmux$1438.
    dead port 1/2 on $mux $procmux$1440.
    dead port 1/2 on $mux $procmux$1443.
    dead port 2/2 on $mux $procmux$2327.
    dead port 1/2 on $mux $procmux$2330.
    dead port 1/2 on $mux $procmux$2333.
    dead port 2/2 on $mux $procmux$2335.
    dead port 2/2 on $mux $procmux$2951.
    dead port 1/2 on $mux $procmux$2954.
    dead port 1/2 on $mux $procmux$2957.
    dead port 2/2 on $mux $procmux$5531.
    dead port 1/2 on $mux $procmux$5534.
    dead port 2/2 on $mux $procmux$5536.
    dead port 2/2 on $mux $procmux$5539.
    dead port 2/2 on $mux $procmux$2959.
    dead port 2/2 on $mux $procmux$2962.
    dead port 2/2 on $mux $procmux$2338.
    dead port 2/2 on $mux $procmux$1446.
    dead port 1/2 on $mux $procmux$1453.
    dead port 1/2 on $mux $procmux$1456.
    dead port 1/2 on $mux $procmux$1459.
    dead port 1/2 on $mux $procmux$1462.
    dead port 1/2 on $mux $procmux$1464.
    dead port 1/2 on $mux $procmux$1467.
    dead port 2/2 on $mux $procmux$1470.
    dead port 1/2 on $mux $procmux$1477.
    dead port 2/2 on $mux $procmux$7565.
    dead port 2/2 on $mux $procmux$7567.
    dead port 2/2 on $mux $procmux$7570.
    dead port 1/2 on $mux $procmux$1480.
    dead port 1/2 on $mux $procmux$1483.
    dead port 1/2 on $mux $procmux$1486.
    dead port 2/2 on $mux $procmux$4451.
    dead port 1/2 on $mux $procmux$4454.
    dead port 2/2 on $mux $procmux$4456.
    dead port 2/2 on $mux $procmux$4459.
    dead port 1/2 on $mux $procmux$1488.
    dead port 1/2 on $mux $procmux$1491.
    dead port 2/2 on $mux $procmux$1494.
    dead port 2/2 on $mux $procmux$1501.
    dead port 1/2 on $mux $procmux$1504.
    dead port 1/2 on $mux $procmux$1507.
    dead port 1/2 on $mux $procmux$1510.
    dead port 2/2 on $mux $procmux$5576.
    dead port 1/2 on $mux $procmux$5579.
    dead port 2/2 on $mux $procmux$5581.
    dead port 2/2 on $mux $procmux$5584.
    dead port 1/2 on $mux $procmux$1512.
    dead port 1/2 on $mux $procmux$1515.
    dead port 2/2 on $mux $procmux$1518.
    dead port 2/2 on $mux $procmux$1525.
    dead port 1/2 on $mux $procmux$1528.
    dead port 1/2 on $mux $procmux$1531.
    dead port 1/2 on $mux $procmux$1534.
    dead port 2/2 on $mux $procmux$2999.
    dead port 1/2 on $mux $procmux$3002.
    dead port 1/2 on $mux $procmux$3005.
    dead port 2/2 on $mux $procmux$7607.
    dead port 2/2 on $mux $procmux$7609.
    dead port 2/2 on $mux $procmux$7612.
    dead port 2/2 on $mux $procmux$3007.
    dead port 2/2 on $mux $procmux$3010.
    dead port 1/2 on $mux $procmux$1536.
    dead port 1/2 on $mux $procmux$1539.
    dead port 2/2 on $mux $procmux$2375.
    dead port 1/2 on $mux $procmux$2378.
    dead port 1/2 on $mux $procmux$2381.
    dead port 2/2 on $mux $procmux$2383.
    dead port 2/2 on $mux $procmux$2386.
    dead port 2/2 on $mux $procmux$1542.
    dead port 2/2 on $mux $procmux$4496.
    dead port 1/2 on $mux $procmux$4499.
    dead port 2/2 on $mux $procmux$4501.
    dead port 2/2 on $mux $procmux$4504.
    dead port 1/2 on $mux $procmux$1549.
    dead port 1/2 on $mux $procmux$1552.
    dead port 1/2 on $mux $procmux$1555.
    dead port 2/2 on $mux $procmux$5621.
    dead port 1/2 on $mux $procmux$5624.
    dead port 2/2 on $mux $procmux$5626.
    dead port 2/2 on $mux $procmux$5629.
    dead port 1/2 on $mux $procmux$1557.
    dead port 1/2 on $mux $procmux$1560.
    dead port 2/2 on $mux $procmux$1563.
    dead port 1/2 on $mux $procmux$1570.
    dead port 1/2 on $mux $procmux$1573.
    dead port 2/2 on $mux $procmux$7649.
    dead port 2/2 on $mux $procmux$7651.
    dead port 2/2 on $mux $procmux$7654.
    dead port 1/2 on $mux $procmux$1576.
    dead port 1/2 on $mux $procmux$1578.
    dead port 1/2 on $mux $procmux$1581.
    dead port 2/2 on $mux $procmux$1584.
    dead port 1/2 on $mux $procmux$1591.
    dead port 1/2 on $mux $procmux$1594.
    dead port 1/2 on $mux $procmux$1597.
    dead port 1/2 on $mux $procmux$1599.
    dead port 1/2 on $mux $procmux$1602.
    dead port 2/2 on $mux $procmux$1605.
    dead port 1/2 on $mux $procmux$1612.
    dead port 2/2 on $mux $procmux$3047.
    dead port 1/2 on $mux $procmux$3050.
    dead port 1/2 on $mux $procmux$3053.
    dead port 2/2 on $mux $procmux$3055.
    dead port 2/2 on $mux $procmux$3058.
    dead port 1/2 on $mux $procmux$1615.
    dead port 1/2 on $mux $procmux$1618.
    dead port 1/2 on $mux $procmux$1620.
    dead port 1/2 on $mux $procmux$1623.
    dead port 2/2 on $mux $procmux$4541.
    dead port 1/2 on $mux $procmux$4544.
    dead port 2/2 on $mux $procmux$4546.
    dead port 2/2 on $mux $procmux$5666.
    dead port 1/2 on $mux $procmux$5669.
    dead port 2/2 on $mux $procmux$5671.
    dead port 2/2 on $mux $procmux$5674.
    dead port 2/2 on $mux $procmux$4549.
    dead port 2/2 on $mux $procmux$7691.
    dead port 2/2 on $mux $procmux$7693.
    dead port 2/2 on $mux $procmux$7696.
    dead port 2/2 on $mux $procmux$1626.
    dead port 1/2 on $mux $procmux$1633.
    dead port 1/2 on $mux $procmux$1636.
    dead port 2/2 on $mux $procmux$2423.
    dead port 1/2 on $mux $procmux$2426.
    dead port 1/2 on $mux $procmux$2429.
    dead port 2/2 on $mux $procmux$2431.
    dead port 2/2 on $mux $procmux$2434.
    dead port 1/2 on $mux $procmux$1638.
    dead port 1/2 on $mux $procmux$1641.
    dead port 2/2 on $mux $procmux$1644.
    dead port 1/2 on $mux $procmux$1651.
    dead port 1/2 on $mux $procmux$1654.
    dead port 1/2 on $mux $procmux$1656.
    dead port 1/2 on $mux $procmux$1659.
    dead port 2/2 on $mux $procmux$1662.
    dead port 1/2 on $mux $procmux$1669.
    dead port 1/2 on $mux $procmux$1672.
    dead port 1/2 on $mux $procmux$1674.
    dead port 1/2 on $mux $procmux$1677.
    dead port 2/2 on $mux $procmux$1680.
    dead port 1/2 on $mux $procmux$1687.
    dead port 1/2 on $mux $procmux$1690.
    dead port 2/2 on $mux $procmux$3095.
    dead port 1/2 on $mux $procmux$3098.
    dead port 2/2 on $mux $procmux$5711.
    dead port 2/2 on $mux $procmux$7733.
    dead port 2/2 on $mux $procmux$7735.
    dead port 2/2 on $mux $procmux$7738.
    dead port 1/2 on $mux $procmux$5714.
    dead port 2/2 on $mux $procmux$5716.
    dead port 2/2 on $mux $procmux$5719.
    dead port 1/2 on $mux $procmux$3101.
    dead port 2/2 on $mux $procmux$3103.
    dead port 2/2 on $mux $procmux$4586.
    dead port 1/2 on $mux $procmux$4589.
    dead port 2/2 on $mux $procmux$4591.
    dead port 2/2 on $mux $procmux$4594.
    dead port 2/2 on $mux $procmux$3106.
    dead port 1/2 on $mux $procmux$1692.
    dead port 1/2 on $mux $procmux$1695.
    dead port 2/2 on $mux $procmux$1698.
    dead port 1/2 on $mux $procmux$1705.
    dead port 1/2 on $mux $procmux$1707.
    dead port 1/2 on $mux $procmux$1710.
    dead port 2/2 on $mux $procmux$1713.
    dead port 1/2 on $mux $procmux$1720.
    dead port 1/2 on $mux $procmux$1722.
    dead port 1/2 on $mux $procmux$1725.
    dead port 2/2 on $mux $procmux$1728.
    dead port 2/2 on $mux $procmux$2471.
    dead port 1/2 on $mux $procmux$2474.
    dead port 1/2 on $mux $procmux$2477.
    dead port 2/2 on $mux $procmux$2479.
    dead port 2/2 on $mux $procmux$2482.
    dead port 2/2 on $mux $procmux$7775.
    dead port 2/2 on $mux $procmux$7777.
    dead port 2/2 on $mux $procmux$7780.
    dead port 1/2 on $mux $procmux$1735.
    dead port 1/2 on $mux $procmux$1737.
    dead port 1/2 on $mux $procmux$1740.
    dead port 2/2 on $mux $procmux$5756.
    dead port 1/2 on $mux $procmux$5759.
    dead port 2/2 on $mux $procmux$5761.
    dead port 2/2 on $mux $procmux$5764.
    dead port 2/2 on $mux $procmux$7817.
    dead port 2/2 on $mux $procmux$7819.
    dead port 2/2 on $mux $procmux$7822.
    dead port 2/2 on $mux $procmux$5801.
    dead port 1/2 on $mux $procmux$5804.
    dead port 2/2 on $mux $procmux$5806.
    dead port 2/2 on $mux $procmux$5809.
    dead port 2/2 on $mux $procmux$1743.
    dead port 1/2 on $mux $procmux$1750.
    dead port 1/2 on $mux $procmux$1752.
    dead port 1/2 on $mux $procmux$1755.
    dead port 2/2 on $mux $procmux$1758.
    dead port 2/2 on $mux $procmux$4631.
    dead port 1/2 on $mux $procmux$4634.
    dead port 2/2 on $mux $procmux$4636.
    dead port 2/2 on $mux $procmux$4639.
    dead port 1/2 on $mux $procmux$1765.
    dead port 1/2 on $mux $procmux$1767.
    dead port 2/2 on $mux $procmux$3143.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3149.
    dead port 2/2 on $mux $procmux$3151.
    dead port 2/2 on $mux $procmux$7859.
    dead port 2/2 on $mux $procmux$7861.
    dead port 2/2 on $mux $procmux$7864.
    dead port 2/2 on $mux $procmux$3154.
    dead port 1/2 on $mux $procmux$1770.
    dead port 2/2 on $mux $procmux$1773.
    dead port 2/2 on $mux $procmux$1794.
    dead port 1/2 on $mux $procmux$1796.
    dead port 1/2 on $mux $procmux$1799.
    dead port 2/2 on $mux $procmux$1802.
    dead port 2/2 on $mux $procmux$1809.
    dead port 1/2 on $mux $procmux$1811.
    dead port 1/2 on $mux $procmux$1814.
    dead port 2/2 on $mux $procmux$1817.
    dead port 2/2 on $mux $procmux$1823.
    dead port 1/2 on $mux $procmux$5861.
    dead port 2/2 on $mux $procmux$5863.
    dead port 2/2 on $mux $procmux$5866.
    dead port 1/2 on $mux $procmux$5873.
    dead port 2/2 on $mux $procmux$5875.
    dead port 2/2 on $mux $procmux$5878.
    dead port 1/2 on $mux $procmux$5885.
    dead port 2/2 on $mux $procmux$5887.
    dead port 2/2 on $mux $procmux$5890.
    dead port 1/2 on $mux $procmux$5897.
    dead port 2/2 on $mux $procmux$7901.
    dead port 2/2 on $mux $procmux$7903.
    dead port 2/2 on $mux $procmux$7906.
    dead port 2/2 on $mux $procmux$5899.
    dead port 2/2 on $mux $procmux$5902.
    dead port 1/2 on $mux $procmux$5909.
    dead port 2/2 on $mux $procmux$5911.
    dead port 2/2 on $mux $procmux$5914.
    dead port 1/2 on $mux $procmux$5921.
    dead port 2/2 on $mux $procmux$5923.
    dead port 2/2 on $mux $procmux$5926.
    dead port 1/2 on $mux $procmux$5933.
    dead port 2/2 on $mux $procmux$5935.
    dead port 2/2 on $mux $procmux$5938.
    dead port 1/2 on $mux $procmux$5945.
    dead port 2/2 on $mux $procmux$5947.
    dead port 2/2 on $mux $procmux$5950.
    dead port 1/2 on $mux $procmux$5957.
    dead port 2/2 on $mux $procmux$5959.
    dead port 2/2 on $mux $procmux$5962.
    dead port 1/2 on $mux $procmux$5969.
    dead port 2/2 on $mux $procmux$5971.
    dead port 2/2 on $mux $procmux$5974.
    dead port 1/2 on $mux $procmux$5981.
    dead port 2/2 on $mux $procmux$5983.
    dead port 2/2 on $mux $procmux$5986.
    dead port 1/2 on $mux $procmux$5993.
    dead port 2/2 on $mux $procmux$7943.
    dead port 2/2 on $mux $procmux$7945.
    dead port 2/2 on $mux $procmux$7948.
    dead port 2/2 on $mux $procmux$5995.
    dead port 2/2 on $mux $procmux$5998.
    dead port 1/2 on $mux $procmux$6005.
    dead port 2/2 on $mux $procmux$6007.
    dead port 2/2 on $mux $procmux$6010.
    dead port 1/2 on $mux $procmux$6017.
    dead port 2/2 on $mux $procmux$6019.
    dead port 2/2 on $mux $procmux$6022.
    dead port 1/2 on $mux $procmux$6029.
    dead port 2/2 on $mux $procmux$6031.
    dead port 2/2 on $mux $procmux$6034.
    dead port 1/2 on $mux $procmux$6041.
    dead port 2/2 on $mux $procmux$6043.
    dead port 2/2 on $mux $procmux$6046.
    dead port 1/2 on $mux $procmux$6053.
    dead port 2/2 on $mux $procmux$6055.
    dead port 2/2 on $mux $procmux$6058.
    dead port 1/2 on $mux $procmux$6065.
    dead port 2/2 on $mux $procmux$6067.
    dead port 2/2 on $mux $procmux$6070.
    dead port 1/2 on $mux $procmux$6077.
    dead port 2/2 on $mux $procmux$6079.
    dead port 2/2 on $mux $procmux$6082.
    dead port 1/2 on $mux $procmux$6089.
    dead port 2/2 on $mux $procmux$7996.
    dead port 2/2 on $mux $procmux$7999.
    dead port 2/2 on $mux $procmux$8005.
    dead port 2/2 on $mux $procmux$8008.
    dead port 2/2 on $mux $procmux$8014.
    dead port 2/2 on $mux $procmux$8017.
    dead port 2/2 on $mux $procmux$8023.
    dead port 2/2 on $mux $procmux$8026.
    dead port 2/2 on $mux $procmux$8032.
    dead port 2/2 on $mux $procmux$8035.
    dead port 2/2 on $mux $procmux$8041.
    dead port 2/2 on $mux $procmux$8044.
    dead port 2/2 on $mux $procmux$8050.
    dead port 2/2 on $mux $procmux$8053.
    dead port 2/2 on $mux $procmux$8059.
    dead port 2/2 on $mux $procmux$8062.
    dead port 2/2 on $mux $procmux$8068.
    dead port 2/2 on $mux $procmux$8071.
    dead port 2/2 on $mux $procmux$8077.
    dead port 2/2 on $mux $procmux$8080.
    dead port 2/2 on $mux $procmux$8086.
    dead port 2/2 on $mux $procmux$8089.
    dead port 2/2 on $mux $procmux$8095.
    dead port 2/2 on $mux $procmux$8098.
    dead port 2/2 on $mux $procmux$8104.
    dead port 2/2 on $mux $procmux$8107.
    dead port 2/2 on $mux $procmux$8113.
    dead port 2/2 on $mux $procmux$8116.
    dead port 2/2 on $mux $procmux$8122.
    dead port 2/2 on $mux $procmux$8125.
    dead port 2/2 on $mux $procmux$8131.
    dead port 2/2 on $mux $procmux$8134.
    dead port 2/2 on $mux $procmux$8140.
    dead port 2/2 on $mux $procmux$8143.
    dead port 2/2 on $mux $procmux$8149.
    dead port 2/2 on $mux $procmux$8152.
    dead port 2/2 on $mux $procmux$8158.
    dead port 2/2 on $mux $procmux$8161.
    dead port 2/2 on $mux $procmux$8167.
    dead port 2/2 on $mux $procmux$8170.
    dead port 2/2 on $mux $procmux$8176.
    dead port 2/2 on $mux $procmux$8179.
    dead port 2/2 on $mux $procmux$8185.
    dead port 2/2 on $mux $procmux$8188.
    dead port 2/2 on $mux $procmux$8194.
    dead port 2/2 on $mux $procmux$8197.
    dead port 2/2 on $mux $procmux$8203.
    dead port 2/2 on $mux $procmux$8206.
    dead port 2/2 on $mux $procmux$8212.
    dead port 2/2 on $mux $procmux$8215.
    dead port 2/2 on $mux $procmux$8221.
    dead port 2/2 on $mux $procmux$8224.
    dead port 2/2 on $mux $procmux$8230.
    dead port 2/2 on $mux $procmux$8233.
    dead port 2/2 on $mux $procmux$8239.
    dead port 2/2 on $mux $procmux$8242.
    dead port 2/2 on $mux $procmux$8248.
    dead port 2/2 on $mux $procmux$8251.
    dead port 2/2 on $mux $procmux$8257.
    dead port 2/2 on $mux $procmux$8260.
    dead port 2/2 on $mux $procmux$8266.
    dead port 2/2 on $mux $procmux$8269.
    dead port 2/2 on $mux $procmux$8275.
    dead port 2/2 on $mux $procmux$8278.
    dead port 2/2 on $mux $procmux$8284.
    dead port 2/2 on $mux $procmux$8287.
    dead port 2/2 on $mux $procmux$8293.
    dead port 2/2 on $mux $procmux$8296.
    dead port 2/2 on $mux $procmux$8302.
    dead port 2/2 on $mux $procmux$8305.
    dead port 2/2 on $mux $procmux$8347.
    dead port 2/2 on $mux $procmux$8350.
    dead port 2/2 on $mux $procmux$8482.
    dead port 2/2 on $mux $procmux$8485.
    dead port 2/2 on $mux $procmux$8491.
    dead port 2/2 on $mux $procmux$8494.
    dead port 2/2 on $mux $procmux$8500.
    dead port 2/2 on $mux $procmux$8503.
    dead port 2/2 on $mux $procmux$8509.
    dead port 2/2 on $mux $procmux$8512.
    dead port 2/2 on $mux $procmux$8518.
    dead port 2/2 on $mux $procmux$8521.
    dead port 2/2 on $mux $procmux$8527.
    dead port 2/2 on $mux $procmux$8530.
    dead port 2/2 on $mux $procmux$8536.
    dead port 2/2 on $mux $procmux$8539.
    dead port 2/2 on $mux $procmux$8545.
    dead port 2/2 on $mux $procmux$8548.
    dead port 2/2 on $mux $procmux$8554.
    dead port 2/2 on $mux $procmux$8557.
    dead port 2/2 on $mux $procmux$8563.
    dead port 2/2 on $mux $procmux$8566.
    dead port 2/2 on $mux $procmux$8572.
    dead port 2/2 on $mux $procmux$8575.
    dead port 2/2 on $mux $procmux$8581.
    dead port 2/2 on $mux $procmux$8584.
    dead port 2/2 on $mux $procmux$8590.
    dead port 2/2 on $mux $procmux$8593.
    dead port 2/2 on $mux $procmux$8599.
    dead port 2/2 on $mux $procmux$8602.
    dead port 2/2 on $mux $procmux$8608.
    dead port 2/2 on $mux $procmux$8611.
    dead port 2/2 on $mux $procmux$8617.
    dead port 2/2 on $mux $procmux$8620.
    dead port 2/2 on $mux $procmux$8626.
    dead port 2/2 on $mux $procmux$8629.
    dead port 2/2 on $mux $procmux$8635.
    dead port 2/2 on $mux $procmux$8638.
    dead port 2/2 on $mux $procmux$8644.
    dead port 2/2 on $mux $procmux$8647.
    dead port 2/2 on $mux $procmux$8653.
    dead port 2/2 on $mux $procmux$8656.
    dead port 2/2 on $mux $procmux$8662.
    dead port 2/2 on $mux $procmux$8665.
    dead port 2/2 on $mux $procmux$8671.
    dead port 2/2 on $mux $procmux$8674.
    dead port 2/2 on $mux $procmux$8680.
    dead port 2/2 on $mux $procmux$8683.
    dead port 2/2 on $mux $procmux$8689.
    dead port 2/2 on $mux $procmux$8692.
    dead port 2/2 on $mux $procmux$8698.
    dead port 2/2 on $mux $procmux$8701.
    dead port 2/2 on $mux $procmux$8707.
    dead port 2/2 on $mux $procmux$8710.
    dead port 2/2 on $mux $procmux$8716.
    dead port 2/2 on $mux $procmux$8719.
    dead port 2/2 on $mux $procmux$8725.
    dead port 2/2 on $mux $procmux$8728.
    dead port 2/2 on $mux $procmux$8734.
    dead port 2/2 on $mux $procmux$8737.
    dead port 2/2 on $mux $procmux$8743.
    dead port 2/2 on $mux $procmux$8746.
    dead port 2/2 on $mux $procmux$8752.
    dead port 2/2 on $mux $procmux$8755.
    dead port 2/2 on $mux $procmux$8761.
    dead port 2/2 on $mux $procmux$8764.
    dead port 2/2 on $mux $procmux$9001.
    dead port 2/2 on $mux $procmux$9007.
    dead port 2/2 on $mux $procmux$9013.
    dead port 2/2 on $mux $procmux$9019.
    dead port 2/2 on $mux $procmux$9025.
    dead port 2/2 on $mux $procmux$9031.
    dead port 2/2 on $mux $procmux$9037.
    dead port 2/2 on $mux $procmux$9043.
    dead port 2/2 on $mux $procmux$9049.
    dead port 2/2 on $mux $procmux$9055.
    dead port 2/2 on $mux $procmux$9061.
    dead port 2/2 on $mux $procmux$9067.
    dead port 2/2 on $mux $procmux$9073.
    dead port 2/2 on $mux $procmux$9079.
    dead port 2/2 on $mux $procmux$9085.
    dead port 2/2 on $mux $procmux$9091.
    dead port 2/2 on $mux $procmux$9097.
    dead port 2/2 on $mux $procmux$9103.
    dead port 2/2 on $mux $procmux$9109.
    dead port 2/2 on $mux $procmux$9115.
    dead port 2/2 on $mux $procmux$9121.
    dead port 2/2 on $mux $procmux$9127.
    dead port 2/2 on $mux $procmux$9133.
    dead port 2/2 on $mux $procmux$9139.
    dead port 2/2 on $mux $procmux$9145.
    dead port 2/2 on $mux $procmux$9151.
    dead port 2/2 on $mux $procmux$9157.
    dead port 2/2 on $mux $procmux$9163.
    dead port 2/2 on $mux $procmux$9169.
    dead port 2/2 on $mux $procmux$9175.
    dead port 2/2 on $mux $procmux$9181.
    dead port 2/2 on $mux $procmux$9187.
    dead port 2/2 on $mux $procmux$9193.
    dead port 2/2 on $mux $procmux$9199.
    dead port 2/2 on $mux $procmux$9205.
    dead port 2/2 on $mux $procmux$9211.
    dead port 2/2 on $mux $procmux$9217.
    dead port 2/2 on $mux $procmux$9223.
    dead port 2/2 on $mux $procmux$9229.
    dead port 2/2 on $mux $procmux$9235.
    dead port 2/2 on $mux $procmux$9241.
    dead port 2/2 on $mux $procmux$9247.
    dead port 2/2 on $mux $procmux$9253.
    dead port 2/2 on $mux $procmux$9259.
    dead port 2/2 on $mux $procmux$9265.
    dead port 2/2 on $mux $procmux$9271.
    dead port 2/2 on $mux $procmux$9277.
    dead port 2/2 on $mux $procmux$9283.
    dead port 2/2 on $mux $procmux$9289.
    dead port 2/2 on $mux $procmux$9295.
    dead port 2/2 on $mux $procmux$9301.
    dead port 2/2 on $mux $procmux$9307.
    dead port 2/2 on $mux $procmux$9313.
    dead port 2/2 on $mux $procmux$9319.
    dead port 2/2 on $mux $procmux$9325.
    dead port 2/2 on $mux $procmux$9331.
    dead port 2/2 on $mux $procmux$9337.
    dead port 2/2 on $mux $procmux$9343.
    dead port 2/2 on $mux $procmux$9349.
    dead port 2/2 on $mux $procmux$9355.
    dead port 2/2 on $mux $procmux$9361.
    dead port 2/2 on $mux $procmux$9367.
    dead port 2/2 on $mux $procmux$9373.
    dead port 2/2 on $mux $procmux$9379.
    dead port 2/2 on $mux $procmux$9493.
    dead port 2/2 on $mux $procmux$9499.
    dead port 2/2 on $mux $procmux$9505.
    dead port 2/2 on $mux $procmux$9523.
    dead port 2/2 on $mux $procmux$9541.
    dead port 2/2 on $mux $procmux$9547.
    dead port 2/2 on $mux $procmux$9553.
    dead port 2/2 on $mux $procmux$9559.
    dead port 2/2 on $mux $procmux$6091.
Removed 1053 multiplexer ports.
<suppressed ~154 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$7238: { $procmux$6582_CMP $auto$opt_reduce.cc:134:opt_mux$10476 }
    New ctrl vector for $pmux cell $procmux$5678: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10478 }
    New ctrl vector for $pmux cell $procmux$7700: { $procmux$6593_CMP $auto$opt_reduce.cc:134:opt_mux$10480 }
    New ctrl vector for $pmux cell $procmux$4553: { $procmux$2059_CMP $auto$opt_reduce.cc:134:opt_mux$10482 }
    New ctrl vector for $pmux cell $procmux$4778: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10484 }
    New ctrl vector for $pmux cell $procmux$2438: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10486 }
    New ctrl vector for $pmux cell $procmux$6902: { $procmux$6574_CMP $auto$opt_reduce.cc:134:opt_mux$10488 }
    New ctrl vector for $pmux cell $procmux$5273: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10490 }
    New ctrl vector for $pmux cell $procmux$2726: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10492 }
    New ctrl vector for $pmux cell $procmux$3206: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10494 }
    New ctrl vector for $pmux cell $procmux$6734: { $procmux$6570_CMP $auto$opt_reduce.cc:134:opt_mux$10496 }
    New ctrl vector for $pmux cell $procmux$4958: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10498 }
    New ctrl vector for $pmux cell $procmux$7280: { $procmux$6583_CMP $auto$opt_reduce.cc:134:opt_mux$10500 }
    New ctrl vector for $pmux cell $procmux$7742: { $procmux$6594_CMP $auto$opt_reduce.cc:134:opt_mux$10502 }
    New ctrl vector for $pmux cell $procmux$2150: { $procmux$2056_CMP $auto$opt_reduce.cc:134:opt_mux$10504 }
    New ctrl vector for $pmux cell $procmux$5723: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10506 }
    New ctrl vector for $pmux cell $procmux$6650: { $procmux$6568_CMP $auto$opt_reduce.cc:134:opt_mux$10508 }
    New ctrl vector for $pmux cell $procmux$4598: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10510 }
    New ctrl vector for $pmux cell $procmux$3110: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10512 }
    New ctrl vector for $pmux cell $procmux$3446: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10514 }
    New ctrl vector for $pmux cell $procmux$5318: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10516 }
    New ctrl vector for $pmux cell $procmux$6944: { $procmux$6575_CMP $auto$opt_reduce.cc:134:opt_mux$10518 }
    New ctrl vector for $pmux cell $procmux$7784: { $procmux$6595_CMP $auto$opt_reduce.cc:134:opt_mux$10520 }
    New ctrl vector for $pmux cell $procmux$2486: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10522 }
    New ctrl vector for $pmux cell $procmux$7322: { $procmux$6584_CMP $auto$opt_reduce.cc:134:opt_mux$10524 }
    New ctrl vector for $pmux cell $procmux$7826: { $procmux$6596_CMP $auto$opt_reduce.cc:134:opt_mux$10526 }
    New ctrl vector for $pmux cell $procmux$2054: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10528 }
    New ctrl vector for $pmux cell $procmux$5003: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10530 }
    New ctrl vector for $pmux cell $procmux$4643: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10532 }
    New ctrl vector for $pmux cell $procmux$2774: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10534 }
    New ctrl vector for $pmux cell $procmux$7868: { $procmux$6597_CMP $auto$opt_reduce.cc:134:opt_mux$10536 }
    New ctrl vector for $pmux cell $procmux$3158: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10538 }
    New ctrl vector for $pmux cell $procmux$5363: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10540 }
    New ctrl vector for $pmux cell $procmux$3302: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10542 }
    New ctrl vector for $pmux cell $procmux$6986: { $procmux$6576_CMP $auto$opt_reduce.cc:134:opt_mux$10544 }
    New ctrl vector for $pmux cell $procmux$7364: { $procmux$6585_CMP $auto$opt_reduce.cc:134:opt_mux$10546 }
    New ctrl vector for $pmux cell $procmux$2630: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10548 }
    New ctrl vector for $pmux cell $procmux$3494: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10550 }
    New ctrl vector for $pmux cell $procmux$4823: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10552 }
    New ctrl vector for $pmux cell $procmux$2198: { $procmux$2057_CMP $auto$opt_reduce.cc:134:opt_mux$10554 }
    New ctrl vector for $pmux cell $procmux$4733: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10556 }
    New ctrl vector for $pmux cell $procmux$6776: { $procmux$6571_CMP $auto$opt_reduce.cc:134:opt_mux$10558 }
    New ctrl vector for $pmux cell $procmux$5048: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10560 }
    New ctrl vector for $pmux cell $procmux$7406: { $procmux$6586_CMP $auto$opt_reduce.cc:134:opt_mux$10562 }
    New ctrl vector for $pmux cell $procmux$5408: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10564 }
    New ctrl vector for $pmux cell $procmux$7028: { $procmux$6577_CMP $auto$opt_reduce.cc:134:opt_mux$10566 }
    New ctrl vector for $pmux cell $procmux$4328: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10568 }
    New ctrl vector for $pmux cell $procmux$2870: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10570 }
    New ctrl vector for $pmux cell $procmux$2822: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10572 }
    New ctrl vector for $pmux cell $procmux$7448: { $procmux$6587_CMP $auto$opt_reduce.cc:134:opt_mux$10574 }
    New ctrl vector for $pmux cell $procmux$3542: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10576 }
    New ctrl vector for $pmux cell $procmux$5453: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10578 }
    New ctrl vector for $pmux cell $procmux$2294: { $procmux$2059_CMP $auto$opt_reduce.cc:134:opt_mux$10580 }
    New ctrl vector for $pmux cell $procmux$4373: { $auto$opt_reduce.cc:134:opt_mux$10582 $procmux$2055_CMP }
    New ctrl vector for $pmux cell $procmux$5093: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10584 }
    New ctrl vector for $pmux cell $procmux$7070: { $procmux$6578_CMP $auto$opt_reduce.cc:134:opt_mux$10586 }
    New ctrl vector for $pmux cell $procmux$2918: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10588 }
    New ctrl vector for $pmux cell $procmux$7490: { $procmux$6588_CMP $auto$opt_reduce.cc:134:opt_mux$10590 }
    New ctrl vector for $pmux cell $procmux$2246: { $procmux$2058_CMP $auto$opt_reduce.cc:134:opt_mux$10592 }
    New ctrl vector for $pmux cell $procmux$5498: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10594 }
    New ctrl vector for $pmux cell $procmux$6608: { $auto$opt_reduce.cc:134:opt_mux$10596 $procmux$6567_CMP }
    New ctrl vector for $pmux cell $procmux$4418: { $procmux$2056_CMP $auto$opt_reduce.cc:134:opt_mux$10598 }
    New ctrl vector for $pmux cell $procmux$3350: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10600 }
    New ctrl vector for $pmux cell $procmux$7532: { $procmux$6589_CMP $auto$opt_reduce.cc:134:opt_mux$10602 }
    New ctrl vector for $pmux cell $procmux$6818: { $procmux$6572_CMP $auto$opt_reduce.cc:134:opt_mux$10604 }
    New ctrl vector for $pmux cell $procmux$7112: { $procmux$6579_CMP $auto$opt_reduce.cc:134:opt_mux$10606 }
    New ctrl vector for $pmux cell $procmux$5138: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10608 }
    New ctrl vector for $pmux cell $procmux$5543: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10610 }
    New ctrl vector for $pmux cell $procmux$2966: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10612 }
    New ctrl vector for $pmux cell $procmux$2342: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10614 }
    New ctrl vector for $pmux cell $procmux$7574: { $procmux$6590_CMP $auto$opt_reduce.cc:134:opt_mux$10616 }
    New ctrl vector for $pmux cell $procmux$4463: { $procmux$2057_CMP $auto$opt_reduce.cc:134:opt_mux$10618 }
    New ctrl vector for $pmux cell $procmux$4868: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10620 }
    New ctrl vector for $pmux cell $procmux$7154: { $procmux$6580_CMP $auto$opt_reduce.cc:134:opt_mux$10622 }
    New ctrl vector for $pmux cell $procmux$6692: { $procmux$6569_CMP $auto$opt_reduce.cc:134:opt_mux$10624 }
    New ctrl vector for $pmux cell $procmux$5588: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10626 }
    New ctrl vector for $pmux cell $procmux$5183: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10628 }
    New ctrl vector for $pmux cell $procmux$2582: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10630 }
    New ctrl vector for $pmux cell $procmux$2678: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10632 }
    New ctrl vector for $pmux cell $procmux$7616: { $procmux$6591_CMP $auto$opt_reduce.cc:134:opt_mux$10634 }
    New ctrl vector for $pmux cell $procmux$3014: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10636 }
    New ctrl vector for $pmux cell $procmux$6566: { $procmux$6598_CMP $auto$opt_reduce.cc:134:opt_mux$10638 }
    New ctrl vector for $pmux cell $procmux$2102: { $auto$opt_reduce.cc:134:opt_mux$10640 $procmux$2055_CMP }
    New ctrl vector for $pmux cell $procmux$2390: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10642 }
    New ctrl vector for $pmux cell $procmux$4508: { $procmux$2058_CMP $auto$opt_reduce.cc:134:opt_mux$10644 }
    New ctrl vector for $pmux cell $procmux$7196: { $procmux$6581_CMP $auto$opt_reduce.cc:134:opt_mux$10646 }
    New ctrl vector for $pmux cell $procmux$3254: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10648 }
    New ctrl vector for $pmux cell $procmux$5633: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10650 }
    New ctrl vector for $pmux cell $procmux$6860: { $procmux$6573_CMP $auto$opt_reduce.cc:134:opt_mux$10652 }
    New ctrl vector for $pmux cell $procmux$5228: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10654 }
    New ctrl vector for $pmux cell $procmux$7658: { $procmux$6592_CMP $auto$opt_reduce.cc:134:opt_mux$10656 }
    New ctrl vector for $pmux cell $procmux$4688: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10658 }
    New ctrl vector for $pmux cell $procmux$2534: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10660 }
    New ctrl vector for $pmux cell $procmux$4913: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10662 }
    New ctrl vector for $pmux cell $procmux$3398: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10664 }
    New ctrl vector for $pmux cell $procmux$3062: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10666 }
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 96 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~48 debug messages>
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~12 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Removed a total of 55 cells.

4.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 4257 unused wires.
<suppressed ~3 debug messages>

4.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.8. Rerunning OPT passes. (Maybe there is more to do..)

4.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~150 debug messages>

4.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 0 changes.

4.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.14. Finished OPT passes. (There is nothing left to do.)

4.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$19 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$53 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$59 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$60 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$62 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$63 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$65 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$66 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:163$68 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:172$74 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:179$84 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:180$86 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:180$87 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:187$89 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:196$92 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:197$94 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:197$95 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:204$97 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9946_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9996_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$eq$cva6_lsu_model.v:72$410 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$496 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$496 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$497 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$497 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$532 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$532 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$ne$cva6_lsu_model.v:193$565 ($ne).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$568 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$568 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$577 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$577 ($add).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$696 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$710 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$852 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$863 ($mux).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1016_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1112_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1122_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$693 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$707 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$850 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$861 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$690 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$704 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$698 ($pmux).
Removed top 20 bits (of 32) from wire cva6_lsu_model.$4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$393_DATA[31:0]$524.
Removed top 20 bits (of 32) from wire cva6_lsu_model.$5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$396_DATA[31:0]$551.
Removed top 30 bits (of 32) from wire cva6_lsu_model.$add$cva6_lsu_model.v:148$496_Y.
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$251 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$288 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$315 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$330 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$333 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$345 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$346 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$347 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$348 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$350 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$351 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$352 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$362 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$362 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$363 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$364 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$365 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$371 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$371 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$374 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$374 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$381 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$381 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2071_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2072_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2073_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2074_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2075_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2076_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2077_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2078_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2079_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2080_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2081_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2082_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2083_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2084_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2085_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3607_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3608_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3609_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3610_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3611_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3612_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3613_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3614_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3615_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3616_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3617_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3618_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3619_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3620_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3621_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5785_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5786_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5787_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5788_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5789_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5790_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5791_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5792_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5793_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5794_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5795_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5796_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5797_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5798_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5799_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6583_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6584_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6585_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6586_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6587_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6588_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6589_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6590_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6591_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6592_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6593_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6594_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6595_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6596_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6597_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$362_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$330_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$347_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$352_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$350_Y.

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

4.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.11.4. Finished fast OPT passes.

4.12. Printing statistics.

=== cva6_lsu_formal ===

   Number of wires:                148
   Number of wire bits:           5236
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                140
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         8
     $dff                           22
     $eq                            23
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $lt                             2
     $mux                           46
     $ne                             1
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_model ===

   Number of wires:                186
   Number of wire bits:           1426
   Number of public wires:          40
   Number of public wire bits:     346
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $add                            5
     $adff                          28
     $eq                            12
     $ge                             2
     $logic_and                      2
     $logic_not                      5
     $logic_or                       4
     $mux                          104
     $ne                             4
     $not                            2
     $pmux                           5
     $reduce_bool                    2

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_model                  1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_model                1

   Number of wires:               2102
   Number of wire bits:          42760
   Number of public wires:         308
   Number of public wire bits:   13768
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2036
     $add                           21
     $adff                          56
     $and                            2
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         8
     $dff                          178
     $eq                           323
     $ge                             4
     $gt                             1
     $le                             1
     $logic_and                     24
     $logic_not                     35
     $logic_or                      11
     $lt                             6
     $mux                          984
     $ne                             9
     $not                            4
     $or                             2
     $pmux                         208
     $reduce_bool                    8
     $reduce_or                    128
     $shl                            2
     $shr                            4
     $sub                            6
     $xor                            2

4.13. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

5. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

6. Executing ASYNC2SYNC pass.
Replacing cva6_lsu_model.$procdff$10190 ($adff): ARST=\rst_ni, D=$0\instr_i_pc[7:0], Q=\instr_i_pc
Replacing cva6_lsu_model.$procdff$10191 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_lsu_model.$procdff$10192 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_lsu_model.$procdff$10193 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_lsu_model.$procdff$10194 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue[31:0], Q=\load_instr_i_queue
Replacing cva6_lsu_model.$procdff$10195 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue_pc[7:0], Q=\load_instr_i_queue_pc
Replacing cva6_lsu_model.$procdff$10196 ($adff): ARST=\rst_ni, D=$0\load_instr_queue_state[1:0], Q=\load_instr_queue_state
Replacing cva6_lsu_model.$procdff$10209 ($adff): ARST=\rst_ni, D=$0\ready_flag[0:0], Q=\ready_flag
Replacing cva6_lsu_model.$procdff$10210 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_lsu_model.$procdff$10211 ($adff): ARST=\rst_ni, D=\inner_instr_i, Q=\x_inner_instr_i
Replacing cva6_lsu_model.$procdff$10212 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10213 ($adff): ARST=\rst_ni, D=\inner_instr_valid_i, Q=\x_inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10214 ($adff): ARST=\rst_ni, D=\is_load_i, Q=\inner_is_load_i
Replacing cva6_lsu_model.$procdff$10215 ($adff): ARST=\rst_ni, D=\inner_is_load_i, Q=\x_inner_is_load_i
Replacing cva6_lsu_model.$procdff$10216 ($adff): ARST=\rst_ni, D=\store_mem_resp_i, Q=\inner_store_mem_resp_i
Replacing cva6_lsu_model.$procdff$10218 ($adff): ARST=\rst_ni, D=\load_mem_resp_i, Q=\inner_load_mem_resp_i
Replacing cva6_lsu_model.$procdff$10223 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_lsu_model.$procdff$10224 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_lsu_model.$procdff$10225 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_lsu_model.$procdff$10226 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_lsu_model.$procdff$10227 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[0][7:0], Q=\store_instr_i_queue_pc[0]
Replacing cva6_lsu_model.$procdff$10228 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[1][7:0], Q=\store_instr_i_queue_pc[1]
Replacing cva6_lsu_model.$procdff$10229 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[2][7:0], Q=\store_instr_i_queue_pc[2]
Replacing cva6_lsu_model.$procdff$10230 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[3][7:0], Q=\store_instr_i_queue_pc[3]
Replacing cva6_lsu_model.$procdff$10231 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_lsu_model.$procdff$10232 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_lsu_model.$procdff$10233 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_lsu_model.$procdff$10234 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

8. Executing SETUNDEF pass (replace undef values with defined constants).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

9.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$10472 ($dff) from module cva6_lsu_formal (D = $procmux$10183_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11055 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$10471 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$10448 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11058 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$10447 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11060 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$10446 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11062 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:204$97_Y, Q = \pc_2).
Adding SRST signal on $procdff$10445 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11066 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:187$89_Y, Q = \pc_1).
Adding SRST signal on $procdff$10444 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11070 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$10443 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11072 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:177$1_DATA[31:0]$82, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$10442 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11074 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$10441 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11076 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:194$2_DATA[31:0]$90, Q = \tb_io_instr_i_2).
Adding EN signal on $procdff$10424 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$10423 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$10422 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$10421 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$10420 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$10419 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$10418 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$10417 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$10416 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$10415 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$10414 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$10413 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$10412 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$10411 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$10410 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$10409 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$10408 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$10407 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$10406 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$10405 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$10404 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$10403 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$10402 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$10401 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$10400 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$10399 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$10398 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$10397 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$10396 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$10395 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$10394 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$10393 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$10392 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$10391 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$10390 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$10389 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$10388 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$10387 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$10386 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$10385 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$10384 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$10383 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$10382 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$10381 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$10380 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$10378 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$10377 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$10376 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$10375 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$10374 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$10373 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$10372 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$10371 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$10370 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$10369 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$10368 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$10367 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$10366 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$10365 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$10364 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$10363 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$10362 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$10361 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$10341 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11590 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$10340 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$10340 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11613 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$381_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$11608 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$10339 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$10338 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$10336 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$10335 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11621 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$10334 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11627 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$10333 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11633 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$10332 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$10331 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11652 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$10330 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11660 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$10329 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11670 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$10328 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11678 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$10327 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11686 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 253 unused cells and 253 unused wires.
<suppressed ~256 debug messages>

9.5. Rerunning OPT passes. (Removed registers in this run.)

9.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>

9.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

9.8. Executing OPT_DFF pass (perform DFF optimizations).

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

9.10. Finished fast OPT passes.

10. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

11.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

12. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 6 unique messages, 11 total
End of script. Logfile hash: 2bb285590e, CPU: user 7.55s system 0.10s, MEM: 94.13 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 26% 3x check (2 sec), 18% 8x opt_clean (1 sec), ...
