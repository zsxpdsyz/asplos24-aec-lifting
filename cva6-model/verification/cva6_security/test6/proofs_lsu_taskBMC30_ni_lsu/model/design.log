
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: load_store_unit.v
Parsing formal SystemVerilog input from `load_store_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_store_unit'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: shift_reg.v
Parsing formal SystemVerilog input from `shift_reg.v' to AST representation.
Storing AST representation for module `$abstract\shift_reg'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: store_unit.v
Parsing formal SystemVerilog input from `store_unit.v' to AST representation.
Storing AST representation for module `$abstract\store_unit'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: store_buffer.v
Parsing formal SystemVerilog input from `store_buffer.v' to AST representation.
Storing AST representation for module `$abstract\store_buffer'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: amo_buffer.v
Parsing formal SystemVerilog input from `amo_buffer.v' to AST representation.
Storing AST representation for module `$abstract\amo_buffer'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: load_unit.v
Parsing formal SystemVerilog input from `load_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_unit'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: lsu_bypass.v
Parsing formal SystemVerilog input from `lsu_bypass.v' to AST representation.
Storing AST representation for module `$abstract\lsu_bypass'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: cva6_lsu_shim.v
Parsing formal SystemVerilog input from `cva6_lsu_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_shim'.
Successfully finished Verilog frontend.

11. Executing PREP pass.

11.1. Executing HIERARCHY pass (managing design hierarchy).

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

11.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

11.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

11.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

11.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_shim'.
Generating RTLIL representation for module `\cva6_lsu_shim'.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.

11.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim

11.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\load_store_unit'.
Generating RTLIL representation for module `\load_store_unit'.
Note: Assuming pure combinatorial block at load_store_unit.v:320.2-339.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
load_store_unit.v:205: Warning: Range [33:0] select out of bounds on signal `\icache_areq_i': Setting 1 MSB bits to undef.
load_store_unit.v:218: Warning: Range [33:12] select out of bounds on signal `\mmu_vaddr': Setting 2 MSB bits to undef.

11.2.7. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit

11.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bypass'.
Generating RTLIL representation for module `\lsu_bypass'.

11.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg'.
Generating RTLIL representation for module `\shift_reg'.
Parameter \ArianeCfg

11.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\load_unit'.
Parameter \ArianeCfg
Generating RTLIL representation for module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.

11.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit'.
Generating RTLIL representation for module `\store_unit'.

11.2.12. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit

11.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\amo_buffer'.
Generating RTLIL representation for module `\amo_buffer'.

11.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\store_buffer'.
Generating RTLIL representation for module `\store_buffer'.

11.2.15. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer

11.2.16. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Removing unused module `$abstract\cva6_lsu_shim'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\lsu_bypass'.
Removing unused module `$abstract\load_unit'.
Removing unused module `$abstract\amo_buffer'.
Removing unused module `$abstract\store_buffer'.
Removing unused module `$abstract\store_unit'.
Removing unused module `$abstract\shift_reg'.
Removing unused module `$abstract\load_store_unit'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 10 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

11.3. Executing PROC pass (convert processes to netlists).

11.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
Cleaned up 1 empty switch.

11.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$store_buffer.v:234$910 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_buffer.v:220$908 in module store_buffer.
Marked 23 switch rules as full_case in process $proc$store_buffer.v:166$873 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:142$828 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:85$690 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_unit.v:0$654 in module store_unit.
Marked 1 switch rules as full_case in process $proc$store_unit.v:271$652 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:196$636 in module store_unit.
Marked 3 switch rules as full_case in process $proc$store_unit.v:196$636 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:99$625 in module store_unit.
Marked 12 switch rules as full_case in process $proc$store_unit.v:99$625 in module store_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:301$619 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:294$618 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:264$592 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 5 switch rules as full_case in process $proc$load_unit.v:244$582 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 23 switch rules as full_case in process $proc$load_unit.v:145$558 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$shift_reg.v:19$543 in module shift_reg.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:79$541 in module lsu_bypass.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:73$537 in module lsu_bypass.
Marked 5 switch rules as full_case in process $proc$lsu_bypass.v:41$489 in module lsu_bypass.
Removed 1 dead cases from process $proc$load_store_unit.v:0$467 in module load_store_unit.
Marked 4 switch rules as full_case in process $proc$load_store_unit.v:0$467 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$462 in module load_store_unit.
Removed 2 dead cases from process $proc$load_store_unit.v:0$445 in module load_store_unit.
Marked 5 switch rules as full_case in process $proc$load_store_unit.v:0$445 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$440 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:221$438 in module load_store_unit.
Marked 11 switch rules as full_case in process $proc$load_store_unit.v:519$429 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:320$428 in module load_store_unit.
Marked 10 switch rules as full_case in process $proc$cva6_lsu_shim.v:290$396 in module cva6_lsu_shim.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$148 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$148 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$34 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$34 in module cva6_lsu_formal.
Removed a total of 15 dead cases.

11.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 26 redundant assignments.
Promoted 347 assignments to connections.

11.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$130'.
  Set init value: $formal$cva6_lsu_formal.v:209$15_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
  Set init value: $formal$cva6_lsu_formal.v:174$14_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
  Set init value: $formal$cva6_lsu_formal.v:172$13_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
  Set init value: $formal$cva6_lsu_formal.v:165$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
  Set init value: $formal$cva6_lsu_formal.v:163$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
  Set init value: $formal$cva6_lsu_formal.v:162$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
  Set init value: $formal$cva6_lsu_formal.v:161$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
  Set init value: $formal$cva6_lsu_formal.v:160$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
  Set init value: $formal$cva6_lsu_formal.v:156$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

11.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:234$910'.
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:220$908'.
Found async reset \rst_ni in `\store_unit.$proc$store_unit.v:271$652'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$619'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$592'.
Found async reset \rst_ni in `\shift_reg.$proc$shift_reg.v:19$543'.
Found async reset \rst_ni in `\lsu_bypass.$proc$lsu_bypass.v:79$541'.
Found async reset \rst_ni in `\load_store_unit.$proc$load_store_unit.v:221$438'.

11.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_buffer.$proc$store_buffer.v:234$910'.
     1/4: $0\commit_status_cnt_q[2:0]
     2/4: $0\commit_write_pointer_q[1:0]
     3/4: $0\commit_read_pointer_q[1:0]
     4/4: $0\commit_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:220$908'.
     1/4: $0\speculative_status_cnt_q[2:0]
     2/4: $0\speculative_write_pointer_q[1:0]
     3/4: $0\speculative_read_pointer_q[1:0]
     4/4: $0\speculative_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:166$873'.
     1/50: $19\page_offset_matches_o[0:0]
     2/50: $18\page_offset_matches_o[0:0]
     3/50: $19\sv2v_autoblock_2._sv2v_jump[1:0]
     4/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
     5/50: $18\sv2v_autoblock_2._sv2v_jump[1:0]
     6/50: $17\page_offset_matches_o[0:0]
     7/50: $5\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
     8/50: $17\sv2v_autoblock_2._sv2v_jump[1:0]
     9/50: $16\page_offset_matches_o[0:0]
    10/50: $16\sv2v_autoblock_2._sv2v_jump[1:0]
    11/50: $15\page_offset_matches_o[0:0]
    12/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    13/50: $15\sv2v_autoblock_2._sv2v_jump[1:0]
    14/50: $14\page_offset_matches_o[0:0]
    15/50: $14\sv2v_autoblock_2._sv2v_jump[1:0]
    16/50: $13\page_offset_matches_o[0:0]
    17/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    18/50: $13\sv2v_autoblock_2._sv2v_jump[1:0]
    19/50: $12\page_offset_matches_o[0:0]
    20/50: $12\sv2v_autoblock_2._sv2v_jump[1:0]
    21/50: $11\page_offset_matches_o[0:0]
    22/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    23/50: $11\sv2v_autoblock_2._sv2v_jump[1:0]
    24/50: $10\page_offset_matches_o[0:0]
    25/50: $9\page_offset_matches_o[0:0]
    26/50: $10\sv2v_autoblock_2._sv2v_jump[1:0]
    27/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
    28/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    29/50: $9\sv2v_autoblock_2._sv2v_jump[1:0]
    30/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i[31:0]
    31/50: $8\sv2v_autoblock_2._sv2v_jump[1:0]
    32/50: $8\page_offset_matches_o[0:0]
    33/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    34/50: $7\sv2v_autoblock_2._sv2v_jump[1:0]
    35/50: $7\page_offset_matches_o[0:0]
    36/50: $6\sv2v_autoblock_2._sv2v_jump[1:0]
    37/50: $6\page_offset_matches_o[0:0]
    38/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    39/50: $5\sv2v_autoblock_2._sv2v_jump[1:0]
    40/50: $5\page_offset_matches_o[0:0]
    41/50: $4\sv2v_autoblock_2._sv2v_jump[1:0]
    42/50: $4\page_offset_matches_o[0:0]
    43/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    44/50: $3\sv2v_autoblock_2._sv2v_jump[1:0]
    45/50: $3\page_offset_matches_o[0:0]
    46/50: $2\sv2v_autoblock_2._sv2v_jump[1:0]
    47/50: $2\page_offset_matches_o[0:0]
    48/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    49/50: $1\sv2v_autoblock_2._sv2v_jump[1:0]
    50/50: $1\page_offset_matches_o[0:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:142$828'.
     1/16: $3\store_if.commit_status_cnt[4:0]
     2/16: $1\commit_write_pointer_n[1:0]
     3/16: $3\commit_queue_n[291:0]
     4/16: $1$bitselwrite$data$store_buffer.v:160$681[291:0]$854
     5/16: $1$bitselwrite$mask$store_buffer.v:160$680[291:0]$853
     6/16: $2\store_if.commit_status_cnt[4:0]
     7/16: $2\commit_read_pointer_n[1:0]
     8/16: $2\commit_queue_n[291:0]
     9/16: $2$bitselwrite$data$store_buffer.v:154$679[291:0]$841
    10/16: $2$bitselwrite$mask$store_buffer.v:154$678[291:0]$840
    11/16: $1$bitselwrite$data$store_buffer.v:154$679[291:0]$839
    12/16: $1$bitselwrite$mask$store_buffer.v:154$678[291:0]$838
    13/16: $1\store_if.commit_status_cnt[4:0]
    14/16: $1\commit_read_pointer_n[1:0]
    15/16: $1\commit_queue_n[291:0]
    16/16: $1\req_port_o[9:9]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:141$827'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:138$821'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:135$815'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:132$809'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:129$803'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:126$797'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:123$796'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:120$795'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:85$690'.
     1/25: $1\speculative_status_cnt_n[2:0]
     2/25: $2\speculative_write_pointer_n[1:0]
     3/25: $1\core_if.sv2v_autoblock_1.i[31:0]
     4/25: $6\speculative_queue_n[219:219]
     5/25: $5\speculative_queue_n[146:146]
     6/25: $4\speculative_queue_n[73:73]
     7/25: $3\speculative_queue_n[0:0]
     8/25: $2\core_if.speculative_status_cnt[4:0]
     9/25: $1\speculative_read_pointer_n[1:0]
    10/25: $2\speculative_queue_n[291:0]
    11/25: $1$bitselwrite$data$store_buffer.v:103$677[291:0]$783
    12/25: $1$bitselwrite$mask$store_buffer.v:103$676[291:0]$782
    13/25: $1\core_if.speculative_status_cnt[4:0]
    14/25: $1\speculative_write_pointer_n[1:0]
    15/25: $1\speculative_queue_n[291:0]
    16/25: $1$bitselwrite$data$store_buffer.v:98$675[291:0]$714
    17/25: $1$bitselwrite$mask$store_buffer.v:98$674[291:0]$713
    18/25: $1$bitselwrite$data$store_buffer.v:97$673[291:0]$712
    19/25: $1$bitselwrite$mask$store_buffer.v:97$672[291:0]$711
    20/25: $1$bitselwrite$data$store_buffer.v:96$671[291:0]$710
    21/25: $1$bitselwrite$mask$store_buffer.v:96$670[291:0]$709
    22/25: $1$bitselwrite$data$store_buffer.v:95$669[291:0]$708
    23/25: $1$bitselwrite$mask$store_buffer.v:95$668[291:0]$707
    24/25: $1$bitselwrite$data$store_buffer.v:94$667[291:0]$706
    25/25: $1$bitselwrite$mask$store_buffer.v:94$666[291:0]$705
Creating decoders for process `\store_unit.$proc$store_unit.v:0$654'.
     1/1: $1\ariane_pkg_is_amo$func$store_unit.v:86$624.$result[0:0]$661
Creating decoders for process `\store_unit.$proc$store_unit.v:271$652'.
     1/6: $0\amo_op_q[3:0]
     2/6: $0\st_data_size_q[1:0]
     3/6: $0\trans_id_q[2:0]
     4/6: $0\st_data_q[31:0]
     5/6: $0\st_be_q[3:0]
     6/6: $0\state_q[1:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:196$636'.
     1/4: $1\amo_op_d[3:0]
     2/4: $1\ariane_pkg_extract_transfer_size$func$store_unit.v:199$623.$result[1:0]$647
     3/4: $1\ariane_pkg_data_align$func$store_unit.v:198$622.data_tmp[63:0]$645 [63:32]
     4/4: $1\ariane_pkg_data_align$func$store_unit.v:198$622.data_tmp[63:0]$645 [31:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:99$625'.
     1/28: $11\state_d[1:0]
     2/28: $2\valid_o[0:0]
     3/28: $10\state_d[1:0]
     4/28: $3\st_valid[0:0]
     5/28: $8\pop_st_o[0:0]
     6/28: $9\state_d[1:0]
     7/28: $8\state_d[1:0]
     8/28: $7\pop_st_o[0:0]
     9/28: $7\state_d[1:0]
    10/28: $6\pop_st_o[0:0]
    11/28: $6\state_d[1:0]
    12/28: $5\state_d[1:0]
    13/28: $5\pop_st_o[0:0]
    14/28: $3\translation_req_o[0:0]
    15/28: $2\st_valid[0:0]
    16/28: $4\pop_st_o[0:0]
    17/28: $4\state_d[1:0]
    18/28: $3\pop_st_o[0:0]
    19/28: $3\state_d[1:0]
    20/28: $2\state_d[1:0]
    21/28: $2\pop_st_o[0:0]
    22/28: $2\translation_req_o[0:0]
    23/28: $1\state_d[1:0]
    24/28: $1\translation_req_o[0:0]
    25/28: $1\pop_st_o[0:0]
    26/28: $1\st_valid_without_flush[0:0]
    27/28: $1\valid_o[0:0]
    28/28: $1\st_valid[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$619'.
     1/3: $0\fp_sign_q[0:0]
     2/3: $0\signed_q[0:0]
     3/3: $0\idx_q[1:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$618'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$592'.
     1/2: $0\load_data_q[12:0]
     2/2: $0\state_q[3:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$582'.
     1/9: $5\valid_o[0:0]
     2/9: $1\trans_id_o[2:0]
     3/9: $3\ex_o[0:0]
     4/9: $4\valid_o[0:0]
     5/9: $2\ex_o[0:0]
     6/9: $3\valid_o[0:0]
     7/9: $2\valid_o[0:0]
     8/9: $1\ex_o[0:0]
     9/9: $1\valid_o[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
     1/45: $19\state_d[3:0]
     2/45: $1\load_data_d[12:0]
     3/45: $13\pop_ld_o[0:0]
     4/45: $12\pop_ld_o[0:0]
     5/45: $18\state_d[3:0]
     6/45: $2\req_port_o[1:0] [1]
     7/45: $17\state_d[3:0]
     8/45: $11\pop_ld_o[0:0]
     9/45: $16\state_d[3:0]
    10/45: $15\state_d[3:0]
    11/45: $10\pop_ld_o[0:0]
    12/45: $14\state_d[3:0]
    13/45: $9\pop_ld_o[0:0]
    14/45: $7\req_port_o[9:9]
    15/45: $13\state_d[3:0]
    16/45: $8\pop_ld_o[0:0]
    17/45: $6\req_port_o[9:9]
    18/45: $3\translation_req_o[0:0]
    19/45: $12\state_d[3:0]
    20/45: $7\pop_ld_o[0:0]
    21/45: $11\state_d[3:0]
    22/45: $10\state_d[3:0]
    23/45: $6\pop_ld_o[0:0]
    24/45: $2\req_port_o[1:0] [0]
    25/45: $8\req_port_o[1:1]
    26/45: $9\state_d[3:0]
    27/45: $8\state_d[3:0]
    28/45: $6\state_d[3:0]
    29/45: $5\pop_ld_o[0:0]
    30/45: $5\state_d[3:0]
    31/45: $4\state_d[3:0]
    32/45: $4\pop_ld_o[0:0]
    33/45: $3\state_d[3:0]
    34/45: $3\pop_ld_o[0:0]
    35/45: $5\req_port_o[9:9]
    36/45: $2\state_d[3:0]
    37/45: $2\pop_ld_o[0:0]
    38/45: $4\req_port_o[9:9]
    39/45: $2\translation_req_o[0:0]
    40/45: $1\state_d[3:0]
    41/45: $1\pop_ld_o[0:0]
    42/45: $3\req_port_o[9:9]
    43/45: $1\translation_req_o[0:0]
    44/45: $7\state_d[3:0]
    45/45: $1\ariane_pkg_extract_transfer_size$func$load_unit.v:153$545.$result[1:0]$561
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$551'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$550'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$549'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$548'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$547'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$546'.
Creating decoders for process `\shift_reg.$proc$shift_reg.v:19$543'.
     1/1: $0\d_o[100:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:79$541'.
     1/4: $0\read_pointer_q[0:0]
     2/4: $0\write_pointer_q[0:0]
     3/4: $0\status_cnt_q[1:0]
     4/4: $0\mem_q[169:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:73$537'.
     1/1: $1\lsu_ctrl_o[84:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
     1/20: $5\mem_n[169:0]
     2/20: $3\read_pointer[0:0]
     3/20: $2\write_pointer[0:0]
     4/20: $4\status_cnt[1:0]
     5/20: $4\mem_n[169:0]
     6/20: $3\status_cnt[1:0]
     7/20: $2\read_pointer[0:0]
     8/20: $3\mem_n[169:0]
     9/20: $1$bitselwrite$data$lsu_bypass.v:57$487[169:0]$524
    10/20: $1$bitselwrite$mask$lsu_bypass.v:57$486[169:0]$523
    11/20: $2\status_cnt[1:0]
    12/20: $1\read_pointer[0:0]
    13/20: $2\mem_n[169:0]
    14/20: $1$bitselwrite$data$lsu_bypass.v:52$485[169:0]$511
    15/20: $1$bitselwrite$mask$lsu_bypass.v:52$484[169:0]$510
    16/20: $1\status_cnt[1:0]
    17/20: $1\write_pointer[0:0]
    18/20: $1\mem_n[169:0]
    19/20: $1$bitselwrite$data$lsu_bypass.v:47$483[169:0]$497
    20/20: $1$bitselwrite$mask$lsu_bypass.v:47$482[169:0]$496
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$467'.
     1/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420._sv2v_jump[1:0]$481
     2/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.$result[3:0]$480
     3/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420._sv2v_jump[1:0]$478
     4/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.$result[3:0]$477
     5/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420._sv2v_jump[1:0]$476
     6/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.$result[3:0]$475
     7/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420._sv2v_jump[1:0]$474
     8/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.$result[3:0]$473
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$462'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$419.$result[1:0]$466
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$445'.
     1/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$418._sv2v_jump[1:0]$461
     2/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$418.$result[7:0]$460
     3/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$418._sv2v_jump[1:0]$458
     4/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$418.$result[7:0]$457
     5/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$418._sv2v_jump[1:0]$456
     6/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$418.$result[7:0]$455
     7/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$418._sv2v_jump[1:0]$454
     8/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$418.$result[7:0]$453
     9/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$418._sv2v_jump[1:0]$452
    10/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$418.$result[7:0]$451
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$440'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$417.$result[1:0]$444
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:221$438'.
     1/2: $0\translation_valid[0:0]
     2/2: $0\mmu_paddr[33:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:519$429'.
     1/11: $6\misaligned_exception[64:0]
     2/11: $5\misaligned_exception[64:0]
     3/11: $4\misaligned_exception[64:0]
     4/11: $3\misaligned_exception[64:0]
     5/11: $2\misaligned_exception[64:0]
     6/11: $1\misaligned_exception[64:0]
     7/11: $5\data_misaligned[0:0]
     8/11: $4\data_misaligned[0:0]
     9/11: $3\data_misaligned[0:0]
    10/11: $2\data_misaligned[0:0]
    11/11: $1\data_misaligned[0:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:320$428'.
     1/4: $1\mmu_vaddr[31:0]
     2/4: $1\translation_req[0:0]
     3/4: $1\ld_valid_i[0:0]
     4/4: $1\st_valid_i[0:0]
Creating decoders for process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
     1/45: $6\store_req_state[1:0]
     2/45: $5\tb_io_commit_i[0:0]
     3/45: $5\store_req_state[1:0]
     4/45: $4\tb_io_commit_i[0:0]
     5/45: $4\store_req_state[1:0]
     6/45: $6\tb_io_lsu_valid_i[0:0]
     7/45: $3\tb_io_commit_i[0:0]
     8/45: $6\load_req_state[1:0]
     9/45: $4\tb_io_commit_tran_id_i[2:0]
    10/45: $5\load_req_state[1:0]
    11/45: $3\tb_io_commit_tran_id_i[2:0]
    12/45: $5\tb_io_lsu_valid_i[0:0]
    13/45: $4\load_req_state[1:0]
    14/45: $4\tb_io_lsu_valid_i[0:0]
    15/45: $4\tb_io_fu_data_i[110:0]
    16/45: $4\raise_load_request$func$cva6_lsu_shim.v:0$389.addr[31:0]$407
    17/45: $3\store_req_state[1:0]
    18/45: $3\tb_io_lsu_valid_i[0:0]
    19/45: $3\tb_io_fu_data_i[110:0]
    20/45: $3\raise_store_request$func$cva6_lsu_shim.v:0$388.addr[31:0]$405
    21/45: $3\raise_load_request$func$cva6_lsu_shim.v:0$389.addr[31:0]$406
    22/45: $3\load_req_state[1:0]
    23/45: $2\raise_load_request$func$cva6_lsu_shim.v:0$389.addr[31:0]$403
    24/45: $2\raise_store_request$func$cva6_lsu_shim.v:0$388.addr[31:0]$402
    25/45: $2\store_req_state[1:0]
    26/45: $2\load_req_state[1:0]
    27/45: $2\tb_io_lsu_valid_i[0:0]
    28/45: $2\tb_io_fu_data_i[110:0]
    29/45: $2\tb_io_commit_tran_id_i[2:0]
    30/45: $2\tb_io_commit_i[0:0]
    31/45: $2\tb_io_dcache_req_ports_i[104:104]
    32/45: $1\tb_io_dcache_req_ports_i[104:0] [104]
    33/45: $1\tb_io_dcache_req_ports_i[104:0] [103:70]
    34/45: $1\tb_io_dcache_req_ports_i[104:0] [69:35]
    35/45: $1\tb_io_dcache_req_ports_i[104:0] [34:0]
    36/45: $1\load_req_state[1:0]
    37/45: $1\load_memreq_state[2:0]
    38/45: $1\x_load_mem_resp_i[0:0]
    39/45: $1\tb_io_lsu_valid_i[0:0]
    40/45: $1\tb_io_fu_data_i[110:0]
    41/45: $1\tb_io_commit_tran_id_i[2:0]
    42/45: $1\tb_io_commit_i[0:0]
    43/45: $1\store_req_state[1:0]
    44/45: $1\raise_load_request$func$cva6_lsu_shim.v:0$389.addr[31:0]$401
    45/45: $1\raise_store_request$func$cva6_lsu_shim.v:0$388.addr[31:0]$400
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$333
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$331
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$332
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$322
   126/587: $5\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$326
   127/587: $5\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$328
   128/587: $5\sra$func$cva6_processor_shim.v:100$139.d[63:0]$327
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$325
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$324
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$323
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$330
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$329
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$320
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$321
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$318
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$316
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$308
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$309
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$311
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$310
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$307
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$306
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$293
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$294
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$315
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$314
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$313
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$312
   218/587: $4\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$305
   219/587: $4\sra$func$cva6_processor_shim.v:100$139.d[63:0]$304
   220/587: $4\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$303
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$302
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$301
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$300
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$299
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$298
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$297
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$296
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$295
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$291
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$289
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR[4:0]$275
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA[31:0]$276
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$278
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR[4:0]$277
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$274
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR[4:0]$273
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$133.$result[31:0]$256
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$133.inst[31:0]$257
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$288
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$287
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$286
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$285
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$284
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$283
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$282
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$281
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$280
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$279
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$272
   350/587: $3\sra$func$cva6_processor_shim.v:100$139.d[63:0]$271
   351/587: $3\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$270
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$269
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$268
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$267
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$266
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$265
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$264
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$263
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$262
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$261
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$260
   362/587: $3\is_load$func$cva6_processor_shim.v:232$134.instr[31:0]$259
   363/587: $3\is_load$func$cva6_processor_shim.v:232$134.$result[0:0]$258
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$254
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$253
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$252
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$251
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$250
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$249
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$248
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$247
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$246
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$245
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$244
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR[4:0]$243
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA[31:0]$242
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR[4:0]$241
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$240
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR[4:0]$239
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$238
   445/587: $2\sra$func$cva6_processor_shim.v:100$139.d[63:0]$237
   446/587: $2\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$236
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$235
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$234
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$233
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$232
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$231
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$230
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$229
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$228
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$227
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$226
   457/587: $2\is_load$func$cva6_processor_shim.v:232$134.instr[31:0]$225
   458/587: $2\is_load$func$cva6_processor_shim.v:232$134.$result[0:0]$224
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$133.inst[31:0]$223
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$133.$result[31:0]$222
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$132.$result[0:0]$220
   466/587: $2\is_store$func$cva6_processor_shim.v:226$132.instr[31:0]$221
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$219
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$218
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$217
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$216
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$215
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$214
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$213
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$212
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$211
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$210
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$209
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR[4:0]$208
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA[31:0]$207
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR[4:0]$206
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$205
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR[4:0]$204
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$203
   570/587: $1\sra$func$cva6_processor_shim.v:100$139.d[63:0]$202
   571/587: $1\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$201
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$200
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$199
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$198
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$197
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$196
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$195
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$194
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$193
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$192
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$191
   582/587: $1\is_load$func$cva6_processor_shim.v:232$134.instr[31:0]$190
   583/587: $1\is_load$func$cva6_processor_shim.v:232$134.$result[0:0]$189
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$133.inst[31:0]$188
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$133.$result[31:0]$187
   586/587: $1\is_store$func$cva6_processor_shim.v:226$132.instr[31:0]$186
   587/587: $1\is_store$func$cva6_processor_shim.v:226$132.$result[0:0]$185
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$130'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
     1/52: $4\local_ready_2[0:0]
     2/52: $3\tb_io_instr_valid_i_2[0:0]
     3/52: $3\pc_2[31:0]
     4/52: $3\local_ready_2[0:0]
     5/52: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_DATA[31:0]$94
     6/52: $4\local_ready_1[0:0]
     7/52: $3\tb_io_instr_valid_i_1[0:0]
     8/52: $3\pc_1[31:0]
     9/52: $3\local_ready_1[0:0]
    10/52: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_DATA[31:0]$86
    11/52: $2\local_ready_2[0:0]
    12/52: $2\pc_2[31:0]
    13/52: $2\tb_io_instr_valid_i_2[0:0]
    14/52: $2\tb_io_instr_i_2[31:0]
    15/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_DATA[31:0]$83
    16/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_ADDR[1:0]$82
    17/52: $2\local_ready_1[0:0]
    18/52: $2\pc_1[31:0]
    19/52: $2\tb_io_instr_valid_i_1[0:0]
    20/52: $2\tb_io_instr_i_1[31:0]
    21/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_DATA[31:0]$81
    22/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_ADDR[1:0]$80
    23/52: $1\local_ready_2[0:0]
    24/52: $1\local_ready_1[0:0]
    25/52: $1\tb_io_instr_i_2[31:0]
    26/52: $1\tb_io_instr_i_1[31:0]
    27/52: $1\tb_io_instr_valid_i_2[0:0]
    28/52: $1\tb_io_instr_valid_i_1[0:0]
    29/52: $1\pc_2[31:0]
    30/52: $1\pc_1[31:0]
    31/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_DATA[31:0]$62
    32/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_ADDR[1:0]$61
    33/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_DATA[31:0]$60
    34/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_ADDR[1:0]$59
    35/52: $0$formal$cva6_lsu_formal.v:156$7_EN[0:0]$40
    36/52: $0$formal$cva6_lsu_formal.v:156$7_CHECK[0:0]$39
    37/52: $0$formal$cva6_lsu_formal.v:160$8_EN[0:0]$42
    38/52: $0$formal$cva6_lsu_formal.v:160$8_CHECK[0:0]$41
    39/52: $0$formal$cva6_lsu_formal.v:161$9_EN[0:0]$44
    40/52: $0$formal$cva6_lsu_formal.v:161$9_CHECK[0:0]$43
    41/52: $0$formal$cva6_lsu_formal.v:162$10_EN[0:0]$46
    42/52: $0$formal$cva6_lsu_formal.v:162$10_CHECK[0:0]$45
    43/52: $0$formal$cva6_lsu_formal.v:163$11_EN[0:0]$48
    44/52: $0$formal$cva6_lsu_formal.v:163$11_CHECK[0:0]$47
    45/52: $0$formal$cva6_lsu_formal.v:165$12_EN[0:0]$50
    46/52: $0$formal$cva6_lsu_formal.v:165$12_CHECK[0:0]$49
    47/52: $0$formal$cva6_lsu_formal.v:172$13_EN[0:0]$52
    48/52: $0$formal$cva6_lsu_formal.v:172$13_CHECK[0:0]$51
    49/52: $0$formal$cva6_lsu_formal.v:174$14_EN[0:0]$54
    50/52: $0$formal$cva6_lsu_formal.v:174$14_CHECK[0:0]$53
    51/52: $0$formal$cva6_lsu_formal.v:209$15_EN[0:0]$56
    52/52: $0$formal$cva6_lsu_formal.v:209$15_CHECK[0:0]$55
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

11.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_buffer.\page_offset_matches_o' from process `\store_buffer.$proc$store_buffer.v:166$873'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2._sv2v_jump' from process `\store_buffer.$proc$store_buffer.v:166$873'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i' from process `\store_buffer.$proc$store_buffer.v:166$873'.
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$873': $auto$proc_dlatch.cc:427:proc_dlatch$11607
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i' from process `\store_buffer.$proc$store_buffer.v:166$873': $auto$proc_dlatch.cc:427:proc_dlatch$11642
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$873': $auto$proc_dlatch.cc:427:proc_dlatch$11653
No latch inferred for signal `\store_buffer.\no_st_pending_o' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\commit_ready_o' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\req_port_o [9]' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\commit_queue_n' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\commit_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\commit_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\commit_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\store_if.commit_status_cnt' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:154$678' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:154$679' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:160$680' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:160$681' from process `\store_buffer.$proc$store_buffer.v:142$828'.
No latch inferred for signal `\store_buffer.\req_port_o [3:2]' from process `\store_buffer.$proc$store_buffer.v:141$827'.
No latch inferred for signal `\store_buffer.\req_port_o [7:4]' from process `\store_buffer.$proc$store_buffer.v:138$821'.
No latch inferred for signal `\store_buffer.\req_port_o [42:11]' from process `\store_buffer.$proc$store_buffer.v:135$815'.
No latch inferred for signal `\store_buffer.\req_port_o [64:43]' from process `\store_buffer.$proc$store_buffer.v:132$809'.
No latch inferred for signal `\store_buffer.\req_port_o [76:65]' from process `\store_buffer.$proc$store_buffer.v:129$803'.
No latch inferred for signal `\store_buffer.\req_port_o [0]' from process `\store_buffer.$proc$store_buffer.v:126$797'.
No latch inferred for signal `\store_buffer.\req_port_o [8]' from process `\store_buffer.$proc$store_buffer.v:123$796'.
No latch inferred for signal `\store_buffer.\req_port_o [1]' from process `\store_buffer.$proc$store_buffer.v:120$795'.
No latch inferred for signal `\store_buffer.\ready_o' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.\speculative_queue_n' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.\speculative_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.\speculative_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.\speculative_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.\core_if.speculative_status_cnt' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:94$666' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:94$667' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:95$668' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:95$669' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:96$670' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:96$671' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:97$672' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:97$673' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:98$674' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:98$675' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:103$676' from process `\store_buffer.$proc$store_buffer.v:85$690'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:103$677' from process `\store_buffer.$proc$store_buffer.v:85$690'.
Latch inferred for signal `\store_buffer.\core_if.sv2v_autoblock_1.i' from process `\store_buffer.$proc$store_buffer.v:85$690': $auto$proc_dlatch.cc:427:proc_dlatch$11718
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$621.$result' from process `\store_unit.$proc$store_unit.v:0$654'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$624.$result' from process `\store_unit.$proc$store_unit.v:0$654'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$624.op' from process `\store_unit.$proc$store_unit.v:0$654'.
No latch inferred for signal `\store_unit.\st_data_n' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\st_be_n' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\st_data_size_n' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\amo_op_d' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$622.$result' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$622.addr' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$622.data' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$622.addr_tmp' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$622.data_tmp' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$623.$result' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$623.op' from process `\store_unit.$proc$store_unit.v:196$636'.
No latch inferred for signal `\store_unit.\st_valid' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\pop_st_o' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\valid_o' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\ex_o' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\translation_req_o' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\state_d' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\st_valid_without_flush' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `\store_unit.\trans_id_n' from process `\store_unit.$proc$store_unit.v:99$625'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\result_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$618'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\valid_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$582'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\trans_id_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$582'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$582'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\translation_req_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [7:0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [9]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\pop_ld_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$545.$result' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$545.op' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [32:1]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [64:33]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$550'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [64:43]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$549'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [76:65]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$548'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [42:11]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$547'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [8]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$546'.
No latch inferred for signal `\lsu_bypass.\lsu_ctrl_o' from process `\lsu_bypass.$proc$lsu_bypass.v:73$537'.
No latch inferred for signal `\lsu_bypass.\mem_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.\read_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.\write_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.\status_cnt_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.\status_cnt' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.\write_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.\read_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:47$482' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:47$483' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:52$484' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:52$485' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:57$486' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:57$487' from process `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$416.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$467'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$467'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$467'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420.size' from process `\load_store_unit.$proc$load_store_unit.v:0$467'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$420._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$467'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$415.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$462'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$419.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$462'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$419.op' from process `\load_store_unit.$proc$load_store_unit.v:0$462'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$414.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$445'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$418.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$445'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$418.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$445'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$418.size' from process `\load_store_unit.$proc$load_store_unit.v:0$445'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$418._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$445'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$413.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$440'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$417.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$440'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$417.op' from process `\load_store_unit.$proc$load_store_unit.v:0$440'.
No latch inferred for signal `\load_store_unit.\data_misaligned' from process `\load_store_unit.$proc$load_store_unit.v:519$429'.
No latch inferred for signal `\load_store_unit.\misaligned_exception' from process `\load_store_unit.$proc$load_store_unit.v:519$429'.
No latch inferred for signal `\load_store_unit.\st_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$428'.
No latch inferred for signal `\load_store_unit.\ld_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$428'.
No latch inferred for signal `\load_store_unit.\translation_req' from process `\load_store_unit.$proc$load_store_unit.v:320$428'.
No latch inferred for signal `\load_store_unit.\mmu_vaddr' from process `\load_store_unit.$proc$load_store_unit.v:320$428'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.

11.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\store_buffer.\commit_queue_q' using process `\store_buffer.$proc$store_buffer.v:234$910'.
  created $adff cell `$procdff$11729' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:234$910'.
  created $adff cell `$procdff$11730' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$910'.
  created $adff cell `$procdff$11731' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$910'.
  created $adff cell `$procdff$11732' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_queue_q' using process `\store_buffer.$proc$store_buffer.v:220$908'.
  created $adff cell `$procdff$11733' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:220$908'.
  created $adff cell `$procdff$11734' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$908'.
  created $adff cell `$procdff$11735' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$908'.
  created $adff cell `$procdff$11736' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\state_q' using process `\store_unit.$proc$store_unit.v:271$652'.
  created $adff cell `$procdff$11737' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_q' using process `\store_unit.$proc$store_unit.v:271$652'.
  created $adff cell `$procdff$11738' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_be_q' using process `\store_unit.$proc$store_unit.v:271$652'.
  created $adff cell `$procdff$11739' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_size_q' using process `\store_unit.$proc$store_unit.v:271$652'.
  created $adff cell `$procdff$11740' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\amo_op_q' using process `\store_unit.$proc$store_unit.v:271$652'.
  created $adff cell `$procdff$11741' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\trans_id_q' using process `\store_unit.$proc$store_unit.v:271$652'.
  created $adff cell `$procdff$11742' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\idx_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$619'.
  created $adff cell `$procdff$11743' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\signed_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$619'.
  created $adff cell `$procdff$11744' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\fp_sign_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$619'.
  created $adff cell `$procdff$11745' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$592'.
  created $adff cell `$procdff$11746' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$592'.
  created $adff cell `$procdff$11747' with positive edge clock and negative level reset.
Creating register for signal `\shift_reg.\d_o' using process `\shift_reg.$proc$shift_reg.v:19$543'.
  created $adff cell `$procdff$11748' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\mem_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$541'.
  created $adff cell `$procdff$11749' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\read_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$541'.
  created $adff cell `$procdff$11750' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\write_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$541'.
  created $adff cell `$procdff$11751' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\status_cnt_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$541'.
  created $adff cell `$procdff$11752' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\translation_valid' using process `\load_store_unit.$proc$load_store_unit.v:221$438'.
  created $adff cell `$procdff$11753' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\mmu_paddr' using process `\load_store_unit.$proc$load_store_unit.v:221$438'.
  created $adff cell `$procdff$11754' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_shim.\tb_io_fu_data_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11755' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_lsu_valid_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11756' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11757' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_tran_id_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11758' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_dcache_req_ports_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11759' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_memreq_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11760' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11761' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\store_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11762' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\x_load_mem_resp_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11763' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_store_request$func$cva6_lsu_shim.v:0$388.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11764' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_load_request$func$cva6_lsu_shim.v:0$389.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
  created $dff cell `$procdff$11765' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11766' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11767' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11768' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11769' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11770' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11771' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11772' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11773' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11774' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11775' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11776' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11777' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11778' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11779' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11780' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11781' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11782' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11783' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11784' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11785' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11786' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11787' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11788' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11789' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11790' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11791' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11792' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11793' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11794' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11795' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11796' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11797' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11798' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11799' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11800' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11801' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11802' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11803' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11804' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11805' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11806' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11807' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11808' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11809' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11810' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11811' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11812' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11813' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11814' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11815' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11816' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11817' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11818' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11819' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11820' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11821' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11822' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11823' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11824' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11825' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11826' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11827' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11828' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11829' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11830' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11831' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11832' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11833' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11834' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11835' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11836' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11837' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11838' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11839' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11840' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11841' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11842' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11843' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11844' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$132.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11845' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$132.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11846' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$133.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11847' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$133.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11848' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$134.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11849' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$134.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11850' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$135.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11851' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$135.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11852' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$136.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11853' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$136.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11854' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$137.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11855' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$137.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11856' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11857' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11858' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11859' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11860' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$139.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11861' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$139.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11862' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$139.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11863' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11864' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11865' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11866' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11867' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11868' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11869' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11870' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11871' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11872' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11873' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11874' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11875' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11876' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11877' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11878' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11879' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11880' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11881' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11882' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11883' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11884' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11885' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11886' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11887' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11888' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11889' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11890' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11891' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11892' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11893' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11894' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11895' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11896' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11897' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11898' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11899' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11900' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11901' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11902' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11903' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11904' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11905' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11906' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11907' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11908' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11909' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11910' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11911' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11912' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11913' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11914' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11915' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11916' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11917' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11918' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11919' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11920' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11921' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11922' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11923' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11924' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11925' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11926' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11927' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11928' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11929' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11930' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11931' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11932' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11933' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11934' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11935' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11936' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11937' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11938' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11939' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11940' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11941' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11942' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$11943' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11944' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11945' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11946' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11947' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11948' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11949' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11950' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11951' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11952' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11953' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11954' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11955' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11956' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11957' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11958' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11959' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11960' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11961' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11962' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11963' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:163$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11964' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:163$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11965' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:165$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11966' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:165$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11967' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$13_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11968' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$13_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11969' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:174$14_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11970' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:174$14_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11971' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:209$15_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11972' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:209$15_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
  created $dff cell `$procdff$11973' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
  created $dff cell `$procdff$11974' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
  created $dff cell `$procdff$11975' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
  created $dff cell `$procdff$11976' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
  created $dff cell `$procdff$11977' with positive edge clock.

11.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

11.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `store_buffer.$proc$store_buffer.v:234$910'.
Removing empty process `store_buffer.$proc$store_buffer.v:220$908'.
Found and cleaned up 23 empty switches in `\store_buffer.$proc$store_buffer.v:166$873'.
Removing empty process `store_buffer.$proc$store_buffer.v:166$873'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:142$828'.
Removing empty process `store_buffer.$proc$store_buffer.v:142$828'.
Removing empty process `store_buffer.$proc$store_buffer.v:141$827'.
Removing empty process `store_buffer.$proc$store_buffer.v:138$821'.
Removing empty process `store_buffer.$proc$store_buffer.v:135$815'.
Removing empty process `store_buffer.$proc$store_buffer.v:132$809'.
Removing empty process `store_buffer.$proc$store_buffer.v:129$803'.
Removing empty process `store_buffer.$proc$store_buffer.v:126$797'.
Removing empty process `store_buffer.$proc$store_buffer.v:123$796'.
Removing empty process `store_buffer.$proc$store_buffer.v:120$795'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:85$690'.
Removing empty process `store_buffer.$proc$store_buffer.v:85$690'.
Found and cleaned up 1 empty switch in `\store_unit.$proc$store_unit.v:0$654'.
Removing empty process `store_unit.$proc$store_unit.v:0$654'.
Removing empty process `store_unit.$proc$store_unit.v:271$652'.
Found and cleaned up 3 empty switches in `\store_unit.$proc$store_unit.v:196$636'.
Removing empty process `store_unit.$proc$store_unit.v:196$636'.
Found and cleaned up 12 empty switches in `\store_unit.$proc$store_unit.v:99$625'.
Removing empty process `store_unit.$proc$store_unit.v:99$625'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$619'.
Found and cleaned up 1 empty switch in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$618'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$618'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$592'.
Found and cleaned up 5 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$582'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$582'.
Found and cleaned up 23 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$558'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$551'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$550'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$549'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$548'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$547'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$546'.
Removing empty process `shift_reg.$proc$shift_reg.v:19$543'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:79$541'.
Found and cleaned up 1 empty switch in `\lsu_bypass.$proc$lsu_bypass.v:73$537'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:73$537'.
Found and cleaned up 5 empty switches in `\lsu_bypass.$proc$lsu_bypass.v:41$489'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:41$489'.
Found and cleaned up 4 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$467'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$467'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$462'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$462'.
Found and cleaned up 5 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$445'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$445'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$440'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$440'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:221$438'.
Found and cleaned up 11 empty switches in `\load_store_unit.$proc$load_store_unit.v:519$429'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:519$429'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:320$428'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:320$428'.
Found and cleaned up 10 empty switches in `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
Removing empty process `cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$396'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$130'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$34'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$16'.
Cleaned up 152 empty switches.

11.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_buffer.
<suppressed ~81 debug messages>
Optimizing module amo_buffer.
Optimizing module store_unit.
<suppressed ~28 debug messages>
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
<suppressed ~60 debug messages>
Optimizing module shift_reg.
Optimizing module lsu_bypass.
<suppressed ~1 debug messages>
Optimizing module load_store_unit.
<suppressed ~29 debug messages>
Optimizing module cva6_lsu_shim.
<suppressed ~55 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~4 debug messages>

11.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 855 unused cells and 4545 unused wires.
<suppressed ~981 debug messages>

11.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

11.7. Executing OPT pass (performing simple optimizations).

11.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.
<suppressed ~4 debug messages>

11.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~177 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Finding identical cells in module `\load_store_unit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\lsu_bypass'.
<suppressed ~36 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~114 debug messages>
Finding identical cells in module `\store_unit'.
<suppressed ~144 debug messages>
Removed a total of 3280 cells.

11.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1628.
    dead port 2/2 on $mux $procmux$1631.
    dead port 1/2 on $mux $procmux$1633.
    dead port 2/2 on $mux $procmux$1635.
    dead port 2/2 on $mux $procmux$1637.
    dead port 2/2 on $mux $procmux$1647.
    dead port 1/2 on $mux $procmux$1649.
    dead port 2/2 on $mux $procmux$1651.
    dead port 2/2 on $mux $procmux$1653.
    dead port 2/2 on $mux $procmux$1663.
    dead port 1/2 on $mux $procmux$1665.
    dead port 2/2 on $mux $procmux$1667.
    dead port 2/2 on $mux $procmux$1669.
    dead port 1/2 on $mux $procmux$1678.
    dead port 2/2 on $mux $procmux$1680.
    dead port 2/2 on $mux $procmux$1682.
    dead port 1/2 on $mux $procmux$1691.
    dead port 2/2 on $mux $procmux$1693.
    dead port 2/2 on $mux $procmux$1695.
    dead port 2/2 on $mux $procmux$1703.
    dead port 2/2 on $mux $procmux$1705.
    dead port 2/2 on $mux $procmux$1713.
    dead port 2/2 on $mux $procmux$1715.
    dead port 2/2 on $mux $procmux$1723.
    dead port 2/2 on $mux $procmux$1725.
    dead port 2/2 on $mux $procmux$1732.
    dead port 2/2 on $mux $procmux$1739.
    dead port 2/2 on $mux $procmux$1746.
    dead port 2/2 on $mux $procmux$1753.
    dead port 1/2 on $mux $procmux$1763.
    dead port 2/2 on $mux $procmux$1765.
    dead port 2/2 on $mux $procmux$1767.
    dead port 2/2 on $mux $procmux$1776.
    dead port 2/2 on $mux $procmux$1778.
    dead port 2/2 on $mux $procmux$1787.
    dead port 2/2 on $mux $procmux$1789.
    dead port 2/2 on $mux $procmux$1797.
    dead port 2/2 on $mux $procmux$1805.
    dead port 2/2 on $mux $procmux$1817.
    dead port 2/2 on $mux $procmux$1826.
    dead port 2/2 on $mux $procmux$1836.
    dead port 1/2 on $mux $procmux$1852.
    dead port 2/2 on $mux $procmux$1855.
    dead port 1/2 on $mux $procmux$1857.
    dead port 2/2 on $mux $procmux$1859.
    dead port 2/2 on $mux $procmux$1861.
    dead port 2/2 on $mux $procmux$1877.
    dead port 1/2 on $mux $procmux$1879.
    dead port 2/2 on $mux $procmux$1881.
    dead port 2/2 on $mux $procmux$1883.
    dead port 2/2 on $mux $procmux$1899.
    dead port 1/2 on $mux $procmux$1901.
    dead port 2/2 on $mux $procmux$1903.
    dead port 2/2 on $mux $procmux$1905.
    dead port 1/2 on $mux $procmux$1920.
    dead port 2/2 on $mux $procmux$1922.
    dead port 2/2 on $mux $procmux$1924.
    dead port 1/2 on $mux $procmux$1939.
    dead port 2/2 on $mux $procmux$1941.
    dead port 2/2 on $mux $procmux$1943.
    dead port 2/2 on $mux $procmux$1957.
    dead port 2/2 on $mux $procmux$1959.
    dead port 2/2 on $mux $procmux$1973.
    dead port 2/2 on $mux $procmux$1975.
    dead port 2/2 on $mux $procmux$1989.
    dead port 2/2 on $mux $procmux$1991.
    dead port 2/2 on $mux $procmux$2004.
    dead port 2/2 on $mux $procmux$2017.
    dead port 2/2 on $mux $procmux$2030.
    dead port 2/2 on $mux $procmux$2043.
    dead port 1/2 on $mux $procmux$1562.
    dead port 2/2 on $mux $procmux$1577.
    dead port 2/2 on $mux $procmux$1583.
    dead port 2/2 on $mux $procmux$1589.
    dead port 2/2 on $mux $procmux$1607.
    dead port 2/2 on $mux $procmux$2084.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$11326.
    dead port 2/2 on $mux $procmux$11328.
    dead port 1/2 on $mux $procmux$11331.
    dead port 2/2 on $mux $procmux$11337.
    dead port 1/2 on $mux $procmux$11340.
    dead port 2/2 on $mux $procmux$11346.
    dead port 1/2 on $mux $procmux$11349.
    dead port 2/2 on $mux $procmux$11355.
    dead port 1/2 on $mux $procmux$11358.
    dead port 2/2 on $mux $procmux$11376.
    dead port 2/2 on $mux $procmux$11378.
    dead port 1/2 on $mux $procmux$11381.
    dead port 2/2 on $mux $procmux$11387.
    dead port 1/2 on $mux $procmux$11390.
    dead port 2/2 on $mux $procmux$11396.
    dead port 1/2 on $mux $procmux$11399.
    dead port 2/2 on $mux $procmux$11405.
    dead port 1/2 on $mux $procmux$11408.
    dead port 1/2 on $mux $procmux$11425.
    dead port 1/2 on $mux $procmux$11431.
    dead port 1/2 on $mux $procmux$11437.
    dead port 1/2 on $mux $procmux$11443.
    dead port 1/2 on $mux $procmux$11461.
    dead port 1/2 on $mux $procmux$11467.
    dead port 1/2 on $mux $procmux$11473.
    dead port 1/2 on $mux $procmux$11479.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2393.
    dead port 1/2 on $mux $procmux$2396.
    dead port 1/2 on $mux $procmux$2399.
    dead port 2/2 on $mux $procmux$2402.
    dead port 1/2 on $mux $procmux$2423.
    dead port 1/2 on $mux $procmux$2426.
    dead port 2/2 on $mux $procmux$2429.
    dead port 1/2 on $mux $procmux$2447.
    dead port 2/2 on $mux $procmux$2450.
    dead port 1/2 on $mux $procmux$2456.
    dead port 2/2 on $mux $procmux$2459.
    dead port 1/2 on $mux $procmux$2474.
    dead port 1/2 on $mux $procmux$2477.
    dead port 2/2 on $mux $procmux$2480.
    dead port 1/2 on $mux $procmux$2486.
    dead port 1/2 on $mux $procmux$2489.
    dead port 2/2 on $mux $procmux$2492.
    dead port 1/2 on $mux $procmux$2498.
    dead port 2/2 on $mux $procmux$2501.
    dead port 1/2 on $mux $procmux$2507.
    dead port 2/2 on $mux $procmux$2510.
    dead port 1/2 on $mux $procmux$2516.
    dead port 2/2 on $mux $procmux$2519.
    dead port 2/2 on $mux $procmux$2523.
    dead port 2/2 on $mux $procmux$2526.
    dead port 2/2 on $mux $procmux$2528.
    dead port 2/2 on $mux $procmux$2531.
    dead port 2/2 on $mux $procmux$2535.
    dead port 2/2 on $mux $procmux$2538.
    dead port 2/2 on $mux $procmux$2540.
    dead port 2/2 on $mux $procmux$2543.
    dead port 2/2 on $mux $procmux$2547.
    dead port 2/2 on $mux $procmux$2550.
    dead port 2/2 on $mux $procmux$2552.
    dead port 2/2 on $mux $procmux$2555.
    dead port 2/2 on $mux $procmux$2573.
    dead port 2/2 on $mux $procmux$2576.
    dead port 2/2 on $mux $procmux$2582.
    dead port 2/2 on $mux $procmux$2585.
    dead port 2/2 on $mux $procmux$2591.
    dead port 2/2 on $mux $procmux$2594.
    dead port 2/2 on $mux $procmux$2618.
    dead port 2/2 on $mux $procmux$2621.
    dead port 2/2 on $mux $procmux$2639.
    dead port 2/2 on $mux $procmux$2645.
    dead port 2/2 on $mux $procmux$2651.
    dead port 2/2 on $mux $procmux$2657.
    dead port 2/2 on $mux $procmux$2663.
    dead port 2/2 on $mux $procmux$2675.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$2772: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$2750: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$3462: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$3379: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3180: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3102: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3027: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2868: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2842: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$5089.
    dead port 1/2 on $mux $procmux$5092.
    dead port 2/2 on $mux $procmux$5094.
    dead port 2/2 on $mux $procmux$5097.
    dead port 1/2 on $mux $procmux$5104.
    dead port 1/2 on $mux $procmux$5107.
    dead port 2/2 on $mux $procmux$5109.
    dead port 2/2 on $mux $procmux$5112.
    dead port 1/2 on $mux $procmux$5119.
    dead port 1/2 on $mux $procmux$5122.
    dead port 2/2 on $mux $procmux$5124.
    dead port 2/2 on $mux $procmux$5127.
    dead port 1/2 on $mux $procmux$5134.
    dead port 1/2 on $mux $procmux$5137.
    dead port 2/2 on $mux $procmux$5139.
    dead port 2/2 on $mux $procmux$5142.
    dead port 2/2 on $mux $procmux$7039.
    dead port 1/2 on $mux $procmux$7042.
    dead port 2/2 on $mux $procmux$7044.
    dead port 2/2 on $mux $procmux$7047.
    dead port 1/2 on $mux $procmux$5149.
    dead port 1/2 on $mux $procmux$5152.
    dead port 2/2 on $mux $procmux$5154.
    dead port 2/2 on $mux $procmux$5157.
    dead port 1/2 on $mux $procmux$5164.
    dead port 1/2 on $mux $procmux$5167.
    dead port 2/2 on $mux $procmux$5169.
    dead port 2/2 on $mux $procmux$5172.
    dead port 1/2 on $mux $procmux$5179.
    dead port 1/2 on $mux $procmux$5182.
    dead port 2/2 on $mux $procmux$5184.
    dead port 2/2 on $mux $procmux$5187.
    dead port 1/2 on $mux $procmux$5194.
    dead port 1/2 on $mux $procmux$5197.
    dead port 2/2 on $mux $procmux$5199.
    dead port 2/2 on $mux $procmux$5202.
    dead port 1/2 on $mux $procmux$5209.
    dead port 1/2 on $mux $procmux$5212.
    dead port 2/2 on $mux $procmux$5214.
    dead port 2/2 on $mux $procmux$5217.
    dead port 1/2 on $mux $procmux$5224.
    dead port 1/2 on $mux $procmux$5227.
    dead port 2/2 on $mux $procmux$5229.
    dead port 2/2 on $mux $procmux$5232.
    dead port 1/2 on $mux $procmux$5239.
    dead port 2/2 on $mux $procmux$7084.
    dead port 1/2 on $mux $procmux$7087.
    dead port 2/2 on $mux $procmux$7089.
    dead port 2/2 on $mux $procmux$7092.
    dead port 1/2 on $mux $procmux$5242.
    dead port 2/2 on $mux $procmux$5244.
    dead port 2/2 on $mux $procmux$5247.
    dead port 1/2 on $mux $procmux$5254.
    dead port 1/2 on $mux $procmux$5257.
    dead port 2/2 on $mux $procmux$5259.
    dead port 2/2 on $mux $procmux$5262.
    dead port 1/2 on $mux $procmux$5269.
    dead port 1/2 on $mux $procmux$5272.
    dead port 2/2 on $mux $procmux$5274.
    dead port 2/2 on $mux $procmux$5277.
    dead port 1/2 on $mux $procmux$5284.
    dead port 1/2 on $mux $procmux$5287.
    dead port 2/2 on $mux $procmux$5289.
    dead port 2/2 on $mux $procmux$5292.
    dead port 1/2 on $mux $procmux$5299.
    dead port 1/2 on $mux $procmux$5302.
    dead port 2/2 on $mux $procmux$5304.
    dead port 2/2 on $mux $procmux$5307.
    dead port 1/2 on $mux $procmux$5314.
    dead port 1/2 on $mux $procmux$5317.
    dead port 2/2 on $mux $procmux$5319.
    dead port 2/2 on $mux $procmux$5322.
    dead port 1/2 on $mux $procmux$5329.
    dead port 1/2 on $mux $procmux$5332.
    dead port 2/2 on $mux $procmux$5334.
    dead port 2/2 on $mux $procmux$7129.
    dead port 1/2 on $mux $procmux$7132.
    dead port 2/2 on $mux $procmux$7134.
    dead port 2/2 on $mux $procmux$7137.
    dead port 2/2 on $mux $procmux$5337.
    dead port 1/2 on $mux $procmux$5344.
    dead port 1/2 on $mux $procmux$5347.
    dead port 2/2 on $mux $procmux$5349.
    dead port 2/2 on $mux $procmux$5352.
    dead port 1/2 on $mux $procmux$5359.
    dead port 1/2 on $mux $procmux$5362.
    dead port 2/2 on $mux $procmux$5364.
    dead port 2/2 on $mux $procmux$5367.
    dead port 1/2 on $mux $procmux$5374.
    dead port 1/2 on $mux $procmux$5377.
    dead port 2/2 on $mux $procmux$5379.
    dead port 2/2 on $mux $procmux$5382.
    dead port 1/2 on $mux $procmux$5389.
    dead port 1/2 on $mux $procmux$5392.
    dead port 2/2 on $mux $procmux$5394.
    dead port 2/2 on $mux $procmux$5397.
    dead port 1/2 on $mux $procmux$5404.
    dead port 1/2 on $mux $procmux$5407.
    dead port 2/2 on $mux $procmux$5409.
    dead port 2/2 on $mux $procmux$5412.
    dead port 1/2 on $mux $procmux$5419.
    dead port 1/2 on $mux $procmux$5422.
    dead port 2/2 on $mux $procmux$5424.
    dead port 2/2 on $mux $procmux$5427.
    dead port 2/2 on $mux $procmux$7174.
    dead port 1/2 on $mux $procmux$7177.
    dead port 2/2 on $mux $procmux$7179.
    dead port 2/2 on $mux $procmux$7182.
    dead port 2/2 on $mux $procmux$7219.
    dead port 1/2 on $mux $procmux$7222.
    dead port 2/2 on $mux $procmux$7224.
    dead port 2/2 on $mux $procmux$7227.
    dead port 1/2 on $mux $procmux$5434.
    dead port 1/2 on $mux $procmux$5437.
    dead port 2/2 on $mux $procmux$5439.
    dead port 2/2 on $mux $procmux$5442.
    dead port 1/2 on $mux $procmux$5449.
    dead port 1/2 on $mux $procmux$5452.
    dead port 2/2 on $mux $procmux$5454.
    dead port 2/2 on $mux $procmux$5457.
    dead port 1/2 on $mux $procmux$5464.
    dead port 1/2 on $mux $procmux$5467.
    dead port 2/2 on $mux $procmux$5469.
    dead port 2/2 on $mux $procmux$5472.
    dead port 1/2 on $mux $procmux$5479.
    dead port 1/2 on $mux $procmux$5482.
    dead port 2/2 on $mux $procmux$5484.
    dead port 2/2 on $mux $procmux$5487.
    dead port 1/2 on $mux $procmux$5494.
    dead port 1/2 on $mux $procmux$5497.
    dead port 2/2 on $mux $procmux$5499.
    dead port 2/2 on $mux $procmux$5502.
    dead port 1/2 on $mux $procmux$5509.
    dead port 1/2 on $mux $procmux$5512.
    dead port 2/2 on $mux $procmux$5514.
    dead port 2/2 on $mux $procmux$5517.
    dead port 1/2 on $mux $procmux$5524.
    dead port 1/2 on $mux $procmux$5527.
    dead port 1/2 on $mux $procmux$7279.
    dead port 2/2 on $mux $procmux$7281.
    dead port 2/2 on $mux $procmux$7284.
    dead port 1/2 on $mux $procmux$7291.
    dead port 2/2 on $mux $procmux$7293.
    dead port 2/2 on $mux $procmux$7296.
    dead port 1/2 on $mux $procmux$7303.
    dead port 2/2 on $mux $procmux$7305.
    dead port 2/2 on $mux $procmux$7308.
    dead port 1/2 on $mux $procmux$7315.
    dead port 2/2 on $mux $procmux$7317.
    dead port 2/2 on $mux $procmux$7320.
    dead port 1/2 on $mux $procmux$7327.
    dead port 2/2 on $mux $procmux$7329.
    dead port 2/2 on $mux $procmux$7332.
    dead port 1/2 on $mux $procmux$7339.
    dead port 2/2 on $mux $procmux$7341.
    dead port 2/2 on $mux $procmux$7344.
    dead port 1/2 on $mux $procmux$7351.
    dead port 2/2 on $mux $procmux$7353.
    dead port 2/2 on $mux $procmux$7356.
    dead port 1/2 on $mux $procmux$7363.
    dead port 2/2 on $mux $procmux$7365.
    dead port 2/2 on $mux $procmux$7368.
    dead port 1/2 on $mux $procmux$7375.
    dead port 2/2 on $mux $procmux$7377.
    dead port 2/2 on $mux $procmux$7380.
    dead port 1/2 on $mux $procmux$7387.
    dead port 2/2 on $mux $procmux$7389.
    dead port 2/2 on $mux $procmux$7392.
    dead port 1/2 on $mux $procmux$7399.
    dead port 2/2 on $mux $procmux$7401.
    dead port 2/2 on $mux $procmux$7404.
    dead port 1/2 on $mux $procmux$7411.
    dead port 2/2 on $mux $procmux$7413.
    dead port 2/2 on $mux $procmux$7416.
    dead port 1/2 on $mux $procmux$7423.
    dead port 2/2 on $mux $procmux$7425.
    dead port 2/2 on $mux $procmux$7428.
    dead port 1/2 on $mux $procmux$7435.
    dead port 2/2 on $mux $procmux$7437.
    dead port 2/2 on $mux $procmux$7440.
    dead port 1/2 on $mux $procmux$7447.
    dead port 2/2 on $mux $procmux$7449.
    dead port 2/2 on $mux $procmux$7452.
    dead port 1/2 on $mux $procmux$7459.
    dead port 2/2 on $mux $procmux$7461.
    dead port 2/2 on $mux $procmux$7464.
    dead port 1/2 on $mux $procmux$7471.
    dead port 2/2 on $mux $procmux$7473.
    dead port 2/2 on $mux $procmux$7476.
    dead port 1/2 on $mux $procmux$7483.
    dead port 2/2 on $mux $procmux$7485.
    dead port 2/2 on $mux $procmux$7488.
    dead port 1/2 on $mux $procmux$7495.
    dead port 2/2 on $mux $procmux$7497.
    dead port 2/2 on $mux $procmux$7500.
    dead port 1/2 on $mux $procmux$7507.
    dead port 2/2 on $mux $procmux$7509.
    dead port 2/2 on $mux $procmux$7512.
    dead port 1/2 on $mux $procmux$7519.
    dead port 2/2 on $mux $procmux$7521.
    dead port 2/2 on $mux $procmux$7524.
    dead port 1/2 on $mux $procmux$7531.
    dead port 2/2 on $mux $procmux$7533.
    dead port 2/2 on $mux $procmux$7536.
    dead port 1/2 on $mux $procmux$7543.
    dead port 2/2 on $mux $procmux$7545.
    dead port 2/2 on $mux $procmux$7548.
    dead port 1/2 on $mux $procmux$7555.
    dead port 2/2 on $mux $procmux$7557.
    dead port 2/2 on $mux $procmux$7560.
    dead port 1/2 on $mux $procmux$7567.
    dead port 2/2 on $mux $procmux$7569.
    dead port 2/2 on $mux $procmux$7572.
    dead port 1/2 on $mux $procmux$7579.
    dead port 2/2 on $mux $procmux$7581.
    dead port 2/2 on $mux $procmux$7584.
    dead port 1/2 on $mux $procmux$7591.
    dead port 2/2 on $mux $procmux$7593.
    dead port 2/2 on $mux $procmux$7596.
    dead port 1/2 on $mux $procmux$7603.
    dead port 2/2 on $mux $procmux$7605.
    dead port 2/2 on $mux $procmux$7608.
    dead port 1/2 on $mux $procmux$7615.
    dead port 2/2 on $mux $procmux$7617.
    dead port 2/2 on $mux $procmux$7620.
    dead port 1/2 on $mux $procmux$7627.
    dead port 2/2 on $mux $procmux$7629.
    dead port 2/2 on $mux $procmux$7632.
    dead port 1/2 on $mux $procmux$7639.
    dead port 2/2 on $mux $procmux$7641.
    dead port 2/2 on $mux $procmux$7644.
    dead port 1/2 on $mux $procmux$7651.
    dead port 2/2 on $mux $procmux$7653.
    dead port 2/2 on $mux $procmux$7656.
    dead port 1/2 on $mux $procmux$7663.
    dead port 2/2 on $mux $procmux$7665.
    dead port 2/2 on $mux $procmux$7668.
    dead port 1/2 on $mux $procmux$7675.
    dead port 2/2 on $mux $procmux$7677.
    dead port 2/2 on $mux $procmux$7680.
    dead port 1/2 on $mux $procmux$7687.
    dead port 2/2 on $mux $procmux$7689.
    dead port 2/2 on $mux $procmux$7692.
    dead port 1/2 on $mux $procmux$7747.
    dead port 2/2 on $mux $procmux$7749.
    dead port 2/2 on $mux $procmux$7752.
    dead port 2/2 on $mux $procmux$8017.
    dead port 2/2 on $mux $procmux$8019.
    dead port 2/2 on $mux $procmux$8022.
    dead port 2/2 on $mux $procmux$5529.
    dead port 2/2 on $mux $procmux$5532.
    dead port 1/2 on $mux $procmux$5539.
    dead port 1/2 on $mux $procmux$5542.
    dead port 2/2 on $mux $procmux$5544.
    dead port 2/2 on $mux $procmux$5547.
    dead port 2/2 on $mux $procmux$10707.
    dead port 2/2 on $mux $procmux$10713.
    dead port 2/2 on $mux $procmux$10719.
    dead port 2/2 on $mux $procmux$10725.
    dead port 2/2 on $mux $procmux$10731.
    dead port 2/2 on $mux $procmux$10737.
    dead port 2/2 on $mux $procmux$10743.
    dead port 2/2 on $mux $procmux$10749.
    dead port 2/2 on $mux $procmux$10755.
    dead port 2/2 on $mux $procmux$3937.
    dead port 1/2 on $mux $procmux$3940.
    dead port 1/2 on $mux $procmux$3943.
    dead port 2/2 on $mux $procmux$3945.
    dead port 2/2 on $mux $procmux$3948.
    dead port 2/2 on $mux $procmux$8059.
    dead port 2/2 on $mux $procmux$8061.
    dead port 2/2 on $mux $procmux$8064.
    dead port 2/2 on $mux $procmux$10761.
    dead port 2/2 on $mux $procmux$10767.
    dead port 2/2 on $mux $procmux$10773.
    dead port 2/2 on $mux $procmux$10779.
    dead port 2/2 on $mux $procmux$5779.
    dead port 1/2 on $mux $procmux$5782.
    dead port 2/2 on $mux $procmux$5784.
    dead port 2/2 on $mux $procmux$5787.
    dead port 2/2 on $mux $procmux$10785.
    dead port 2/2 on $mux $procmux$10791.
    dead port 2/2 on $mux $procmux$10797.
    dead port 2/2 on $mux $procmux$10911.
    dead port 2/2 on $mux $procmux$10917.
    dead port 2/2 on $mux $procmux$10923.
    dead port 2/2 on $mux $procmux$10941.
    dead port 2/2 on $mux $procmux$8101.
    dead port 2/2 on $mux $procmux$8103.
    dead port 2/2 on $mux $procmux$8106.
    dead port 2/2 on $mux $procmux$10959.
    dead port 2/2 on $mux $procmux$10965.
    dead port 2/2 on $mux $procmux$10971.
    dead port 2/2 on $mux $procmux$3985.
    dead port 1/2 on $mux $procmux$3988.
    dead port 1/2 on $mux $procmux$3991.
    dead port 2/2 on $mux $procmux$3993.
    dead port 2/2 on $mux $procmux$3996.
    dead port 2/2 on $mux $procmux$10977.
    dead port 2/2 on $mux $procmux$5824.
    dead port 1/2 on $mux $procmux$5827.
    dead port 2/2 on $mux $procmux$5829.
    dead port 2/2 on $mux $procmux$5832.
    dead port 2/2 on $mux $procmux$8143.
    dead port 2/2 on $mux $procmux$8145.
    dead port 2/2 on $mux $procmux$8148.
    dead port 2/2 on $mux $procmux$4033.
    dead port 2/2 on $mux $procmux$5869.
    dead port 1/2 on $mux $procmux$5872.
    dead port 2/2 on $mux $procmux$5874.
    dead port 2/2 on $mux $procmux$5877.
    dead port 1/2 on $mux $procmux$4036.
    dead port 1/2 on $mux $procmux$4039.
    dead port 2/2 on $mux $procmux$4041.
    dead port 2/2 on $mux $procmux$4044.
    dead port 2/2 on $mux $procmux$8185.
    dead port 2/2 on $mux $procmux$8187.
    dead port 2/2 on $mux $procmux$8190.
    dead port 2/2 on $mux $procmux$5914.
    dead port 1/2 on $mux $procmux$5917.
    dead port 2/2 on $mux $procmux$5919.
    dead port 2/2 on $mux $procmux$5922.
    dead port 2/2 on $mux $procmux$8227.
    dead port 2/2 on $mux $procmux$8229.
    dead port 2/2 on $mux $procmux$8232.
    dead port 2/2 on $mux $procmux$4081.
    dead port 1/2 on $mux $procmux$4084.
    dead port 1/2 on $mux $procmux$4087.
    dead port 2/2 on $mux $procmux$4089.
    dead port 2/2 on $mux $procmux$4092.
    dead port 1/2 on $mux $procmux$2723.
    dead port 2/2 on $mux $procmux$2726.
    dead port 2/2 on $mux $procmux$2732.
    dead port 2/2 on $mux $procmux$5959.
    dead port 1/2 on $mux $procmux$5962.
    dead port 2/2 on $mux $procmux$5964.
    dead port 2/2 on $mux $procmux$5967.
    dead port 2/2 on $mux $procmux$8269.
    dead port 2/2 on $mux $procmux$8271.
    dead port 2/2 on $mux $procmux$8274.
    dead port 2/2 on $mux $procmux$2738.
    dead port 1/2 on $mux $procmux$2744.
    dead port 2/2 on $mux $procmux$2747.
    dead port 1/2 on $mux $procmux$2753.
    dead port 2/2 on $mux $procmux$2756.
    dead port 1/2 on $mux $procmux$2763.
    dead port 2/2 on $mux $procmux$2765.
    dead port 2/2 on $mux $procmux$2768.
    dead port 2/2 on $mux $procmux$4129.
    dead port 1/2 on $mux $procmux$4132.
    dead port 1/2 on $mux $procmux$4135.
    dead port 2/2 on $mux $procmux$4137.
    dead port 2/2 on $mux $procmux$4140.
    dead port 1/2 on $mux $procmux$2775.
    dead port 2/2 on $mux $procmux$2777.
    dead port 2/2 on $mux $procmux$2780.
    dead port 1/2 on $mux $procmux$2787.
    dead port 2/2 on $mux $procmux$2789.
    dead port 2/2 on $mux $procmux$2792.
    dead port 2/2 on $mux $procmux$2798.
    dead port 2/2 on $mux $procmux$2801.
    dead port 2/2 on $mux $procmux$2807.
    dead port 2/2 on $mux $procmux$2810.
    dead port 2/2 on $mux $procmux$8311.
    dead port 2/2 on $mux $procmux$8313.
    dead port 2/2 on $mux $procmux$8316.
    dead port 2/2 on $mux $procmux$6004.
    dead port 1/2 on $mux $procmux$6007.
    dead port 2/2 on $mux $procmux$6009.
    dead port 2/2 on $mux $procmux$6012.
    dead port 2/2 on $mux $procmux$2816.
    dead port 2/2 on $mux $procmux$2819.
    dead port 2/2 on $mux $procmux$2825.
    dead port 2/2 on $mux $procmux$2831.
    dead port 2/2 on $mux $procmux$2837.
    dead port 2/2 on $mux $procmux$2844.
    dead port 1/2 on $mux $procmux$2847.
    dead port 1/2 on $mux $procmux$2850.
    dead port 1/2 on $mux $procmux$2853.
    dead port 1/2 on $mux $procmux$2856.
    dead port 1/2 on $mux $procmux$2858.
    dead port 1/2 on $mux $procmux$2861.
    dead port 2/2 on $mux $procmux$2864.
    dead port 2/2 on $mux $procmux$4177.
    dead port 1/2 on $mux $procmux$4180.
    dead port 1/2 on $mux $procmux$4183.
    dead port 2/2 on $mux $procmux$4185.
    dead port 2/2 on $mux $procmux$4188.
    dead port 1/2 on $mux $procmux$2871.
    dead port 1/2 on $mux $procmux$2874.
    dead port 2/2 on $mux $procmux$8353.
    dead port 2/2 on $mux $procmux$8355.
    dead port 2/2 on $mux $procmux$8358.
    dead port 1/2 on $mux $procmux$2877.
    dead port 1/2 on $mux $procmux$2880.
    dead port 1/2 on $mux $procmux$2882.
    dead port 1/2 on $mux $procmux$2885.
    dead port 2/2 on $mux $procmux$2888.
    dead port 2/2 on $mux $procmux$6049.
    dead port 1/2 on $mux $procmux$6052.
    dead port 2/2 on $mux $procmux$6054.
    dead port 2/2 on $mux $procmux$6057.
    dead port 1/2 on $mux $procmux$2895.
    dead port 1/2 on $mux $procmux$2898.
    dead port 1/2 on $mux $procmux$2901.
    dead port 1/2 on $mux $procmux$2904.
    dead port 1/2 on $mux $procmux$2906.
    dead port 1/2 on $mux $procmux$2909.
    dead port 2/2 on $mux $procmux$2912.
    dead port 2/2 on $mux $procmux$2919.
    dead port 1/2 on $mux $procmux$2922.
    dead port 1/2 on $mux $procmux$2925.
    dead port 1/2 on $mux $procmux$2928.
    dead port 1/2 on $mux $procmux$2930.
    dead port 1/2 on $mux $procmux$2933.
    dead port 2/2 on $mux $procmux$2936.
    dead port 2/2 on $mux $procmux$2943.
    dead port 1/2 on $mux $procmux$2946.
    dead port 1/2 on $mux $procmux$2949.
    dead port 1/2 on $mux $procmux$2952.
    dead port 1/2 on $mux $procmux$2954.
    dead port 2/2 on $mux $procmux$8395.
    dead port 2/2 on $mux $procmux$8397.
    dead port 2/2 on $mux $procmux$8400.
    dead port 1/2 on $mux $procmux$2957.
    dead port 2/2 on $mux $procmux$2960.
    dead port 2/2 on $mux $procmux$4225.
    dead port 1/2 on $mux $procmux$4228.
    dead port 1/2 on $mux $procmux$4231.
    dead port 2/2 on $mux $procmux$4233.
    dead port 2/2 on $mux $procmux$4236.
    dead port 1/2 on $mux $procmux$2967.
    dead port 1/2 on $mux $procmux$2970.
    dead port 2/2 on $mux $procmux$6094.
    dead port 1/2 on $mux $procmux$6097.
    dead port 2/2 on $mux $procmux$6099.
    dead port 2/2 on $mux $procmux$6102.
    dead port 1/2 on $mux $procmux$2973.
    dead port 1/2 on $mux $procmux$2975.
    dead port 1/2 on $mux $procmux$2978.
    dead port 2/2 on $mux $procmux$2981.
    dead port 1/2 on $mux $procmux$2988.
    dead port 1/2 on $mux $procmux$2991.
    dead port 1/2 on $mux $procmux$2994.
    dead port 1/2 on $mux $procmux$2996.
    dead port 1/2 on $mux $procmux$2999.
    dead port 2/2 on $mux $procmux$3002.
    dead port 1/2 on $mux $procmux$3009.
    dead port 1/2 on $mux $procmux$3012.
    dead port 1/2 on $mux $procmux$3015.
    dead port 1/2 on $mux $procmux$3017.
    dead port 2/2 on $mux $procmux$8437.
    dead port 2/2 on $mux $procmux$8439.
    dead port 2/2 on $mux $procmux$8442.
    dead port 1/2 on $mux $procmux$3020.
    dead port 2/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3030.
    dead port 1/2 on $mux $procmux$3033.
    dead port 1/2 on $mux $procmux$3036.
    dead port 1/2 on $mux $procmux$3038.
    dead port 1/2 on $mux $procmux$3041.
    dead port 2/2 on $mux $procmux$3044.
    dead port 1/2 on $mux $procmux$3051.
    dead port 1/2 on $mux $procmux$3054.
    dead port 1/2 on $mux $procmux$3056.
    dead port 2/2 on $mux $procmux$4273.
    dead port 1/2 on $mux $procmux$4276.
    dead port 1/2 on $mux $procmux$4279.
    dead port 2/2 on $mux $procmux$6139.
    dead port 1/2 on $mux $procmux$6142.
    dead port 2/2 on $mux $procmux$6144.
    dead port 2/2 on $mux $procmux$6147.
    dead port 2/2 on $mux $procmux$4281.
    dead port 2/2 on $mux $procmux$4284.
    dead port 1/2 on $mux $procmux$3059.
    dead port 2/2 on $mux $procmux$3062.
    dead port 1/2 on $mux $procmux$3069.
    dead port 1/2 on $mux $procmux$3072.
    dead port 1/2 on $mux $procmux$3074.
    dead port 1/2 on $mux $procmux$3077.
    dead port 2/2 on $mux $procmux$3080.
    dead port 2/2 on $mux $procmux$8479.
    dead port 2/2 on $mux $procmux$8481.
    dead port 2/2 on $mux $procmux$8484.
    dead port 1/2 on $mux $procmux$3087.
    dead port 1/2 on $mux $procmux$3090.
    dead port 1/2 on $mux $procmux$3092.
    dead port 1/2 on $mux $procmux$3095.
    dead port 2/2 on $mux $procmux$3098.
    dead port 1/2 on $mux $procmux$3105.
    dead port 1/2 on $mux $procmux$3108.
    dead port 1/2 on $mux $procmux$3110.
    dead port 1/2 on $mux $procmux$3113.
    dead port 2/2 on $mux $procmux$3116.
    dead port 1/2 on $mux $procmux$3123.
    dead port 1/2 on $mux $procmux$3125.
    dead port 1/2 on $mux $procmux$3128.
    dead port 2/2 on $mux $procmux$3131.
    dead port 1/2 on $mux $procmux$3138.
    dead port 1/2 on $mux $procmux$3140.
    dead port 1/2 on $mux $procmux$3143.
    dead port 2/2 on $mux $procmux$6184.
    dead port 1/2 on $mux $procmux$6187.
    dead port 2/2 on $mux $procmux$6189.
    dead port 2/2 on $mux $procmux$6192.
    dead port 2/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3153.
    dead port 2/2 on $mux $procmux$4321.
    dead port 1/2 on $mux $procmux$4324.
    dead port 1/2 on $mux $procmux$4327.
    dead port 2/2 on $mux $procmux$8521.
    dead port 2/2 on $mux $procmux$8523.
    dead port 2/2 on $mux $procmux$8526.
    dead port 2/2 on $mux $procmux$4329.
    dead port 2/2 on $mux $procmux$4332.
    dead port 1/2 on $mux $procmux$3155.
    dead port 1/2 on $mux $procmux$3158.
    dead port 2/2 on $mux $procmux$3161.
    dead port 1/2 on $mux $procmux$3168.
    dead port 1/2 on $mux $procmux$3170.
    dead port 1/2 on $mux $procmux$3173.
    dead port 2/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3183.
    dead port 1/2 on $mux $procmux$3185.
    dead port 1/2 on $mux $procmux$3188.
    dead port 2/2 on $mux $procmux$3191.
    dead port 2/2 on $mux $procmux$3212.
    dead port 1/2 on $mux $procmux$3214.
    dead port 1/2 on $mux $procmux$3217.
    dead port 2/2 on $mux $procmux$3220.
    dead port 2/2 on $mux $procmux$3227.
    dead port 1/2 on $mux $procmux$3229.
    dead port 1/2 on $mux $procmux$3232.
    dead port 2/2 on $mux $procmux$3235.
    dead port 2/2 on $mux $procmux$3241.
    dead port 2/2 on $mux $procmux$6229.
    dead port 1/2 on $mux $procmux$6232.
    dead port 2/2 on $mux $procmux$6234.
    dead port 2/2 on $mux $procmux$6237.
    dead port 1/2 on $mux $procmux$3243.
    dead port 2/2 on $mux $procmux$8563.
    dead port 2/2 on $mux $procmux$8565.
    dead port 2/2 on $mux $procmux$8568.
    dead port 1/2 on $mux $procmux$3246.
    dead port 2/2 on $mux $procmux$3249.
    dead port 2/2 on $mux $procmux$3256.
    dead port 1/2 on $mux $procmux$3258.
    dead port 1/2 on $mux $procmux$3261.
    dead port 2/2 on $mux $procmux$3264.
    dead port 2/2 on $mux $procmux$4369.
    dead port 1/2 on $mux $procmux$4372.
    dead port 1/2 on $mux $procmux$4375.
    dead port 2/2 on $mux $procmux$4377.
    dead port 2/2 on $mux $procmux$4380.
    dead port 2/2 on $mux $procmux$3271.
    dead port 1/2 on $mux $procmux$3273.
    dead port 1/2 on $mux $procmux$3276.
    dead port 2/2 on $mux $procmux$3279.
    dead port 1/2 on $mux $procmux$3285.
    dead port 1/2 on $mux $procmux$3288.
    dead port 2/2 on $mux $procmux$3291.
    dead port 1/2 on $mux $procmux$3297.
    dead port 1/2 on $mux $procmux$3300.
    dead port 2/2 on $mux $procmux$3303.
    dead port 1/2 on $mux $procmux$3309.
    dead port 1/2 on $mux $procmux$3312.
    dead port 2/2 on $mux $procmux$3315.
    dead port 2/2 on $mux $procmux$6274.
    dead port 2/2 on $mux $procmux$8605.
    dead port 2/2 on $mux $procmux$8607.
    dead port 2/2 on $mux $procmux$8610.
    dead port 1/2 on $mux $procmux$6277.
    dead port 2/2 on $mux $procmux$6279.
    dead port 2/2 on $mux $procmux$6282.
    dead port 1/2 on $mux $procmux$3333.
    dead port 1/2 on $mux $procmux$3336.
    dead port 2/2 on $mux $procmux$3339.
    dead port 1/2 on $mux $procmux$3345.
    dead port 1/2 on $mux $procmux$3348.
    dead port 2/2 on $mux $procmux$3351.
    dead port 1/2 on $mux $procmux$3357.
    dead port 1/2 on $mux $procmux$3360.
    dead port 2/2 on $mux $procmux$3363.
    dead port 1/2 on $mux $procmux$3369.
    dead port 1/2 on $mux $procmux$3372.
    dead port 2/2 on $mux $procmux$3375.
    dead port 2/2 on $mux $procmux$4417.
    dead port 1/2 on $mux $procmux$4420.
    dead port 1/2 on $mux $procmux$4423.
    dead port 2/2 on $mux $procmux$4425.
    dead port 2/2 on $mux $procmux$4428.
    dead port 1/2 on $mux $procmux$3381.
    dead port 1/2 on $mux $procmux$3384.
    dead port 2/2 on $mux $procmux$3387.
    dead port 1/2 on $mux $procmux$3393.
    dead port 2/2 on $mux $procmux$3396.
    dead port 2/2 on $mux $procmux$8647.
    dead port 2/2 on $mux $procmux$8649.
    dead port 2/2 on $mux $procmux$8652.
    dead port 1/2 on $mux $procmux$3402.
    dead port 2/2 on $mux $procmux$3405.
    dead port 2/2 on $mux $procmux$6319.
    dead port 1/2 on $mux $procmux$6322.
    dead port 2/2 on $mux $procmux$6324.
    dead port 2/2 on $mux $procmux$6327.
    dead port 1/2 on $mux $procmux$3420.
    dead port 2/2 on $mux $procmux$3423.
    dead port 1/2 on $mux $procmux$3429.
    dead port 2/2 on $mux $procmux$3432.
    dead port 1/2 on $mux $procmux$3438.
    dead port 2/2 on $mux $procmux$3441.
    dead port 1/2 on $mux $procmux$3447.
    dead port 2/2 on $mux $procmux$3450.
    dead port 1/2 on $mux $procmux$3456.
    dead port 2/2 on $mux $procmux$3459.
    dead port 1/2 on $mux $procmux$3465.
    dead port 2/2 on $mux $procmux$3468.
    dead port 2/2 on $mux $procmux$4465.
    dead port 1/2 on $mux $procmux$4468.
    dead port 2/2 on $mux $procmux$8689.
    dead port 2/2 on $mux $procmux$8691.
    dead port 2/2 on $mux $procmux$8694.
    dead port 1/2 on $mux $procmux$4471.
    dead port 2/2 on $mux $procmux$4473.
    dead port 2/2 on $mux $procmux$4476.
    dead port 2/2 on $mux $procmux$6364.
    dead port 1/2 on $mux $procmux$6367.
    dead port 2/2 on $mux $procmux$6369.
    dead port 2/2 on $mux $procmux$6372.
    dead port 2/2 on $mux $procmux$8731.
    dead port 2/2 on $mux $procmux$8733.
    dead port 2/2 on $mux $procmux$8736.
    dead port 2/2 on $mux $procmux$3505.
    dead port 1/2 on $mux $procmux$3508.
    dead port 1/2 on $mux $procmux$3511.
    dead port 2/2 on $mux $procmux$4513.
    dead port 1/2 on $mux $procmux$4516.
    dead port 1/2 on $mux $procmux$4519.
    dead port 2/2 on $mux $procmux$4521.
    dead port 2/2 on $mux $procmux$4524.
    dead port 2/2 on $mux $procmux$6409.
    dead port 1/2 on $mux $procmux$6412.
    dead port 2/2 on $mux $procmux$6414.
    dead port 2/2 on $mux $procmux$6417.
    dead port 2/2 on $mux $procmux$3513.
    dead port 2/2 on $mux $procmux$3516.
    dead port 2/2 on $mux $procmux$8773.
    dead port 2/2 on $mux $procmux$8775.
    dead port 2/2 on $mux $procmux$8778.
    dead port 2/2 on $mux $procmux$6454.
    dead port 1/2 on $mux $procmux$6457.
    dead port 2/2 on $mux $procmux$6459.
    dead port 2/2 on $mux $procmux$6462.
    dead port 2/2 on $mux $procmux$4561.
    dead port 1/2 on $mux $procmux$4564.
    dead port 1/2 on $mux $procmux$4567.
    dead port 2/2 on $mux $procmux$4569.
    dead port 2/2 on $mux $procmux$4572.
    dead port 2/2 on $mux $procmux$8815.
    dead port 2/2 on $mux $procmux$8817.
    dead port 2/2 on $mux $procmux$8820.
    dead port 2/2 on $mux $procmux$3553.
    dead port 1/2 on $mux $procmux$3556.
    dead port 1/2 on $mux $procmux$3559.
    dead port 2/2 on $mux $procmux$3561.
    dead port 2/2 on $mux $procmux$3564.
    dead port 2/2 on $mux $procmux$6499.
    dead port 1/2 on $mux $procmux$6502.
    dead port 2/2 on $mux $procmux$6504.
    dead port 2/2 on $mux $procmux$6507.
    dead port 2/2 on $mux $procmux$8857.
    dead port 2/2 on $mux $procmux$8859.
    dead port 2/2 on $mux $procmux$8862.
    dead port 2/2 on $mux $procmux$4609.
    dead port 1/2 on $mux $procmux$4612.
    dead port 1/2 on $mux $procmux$4615.
    dead port 2/2 on $mux $procmux$4617.
    dead port 2/2 on $mux $procmux$4620.
    dead port 2/2 on $mux $procmux$3601.
    dead port 1/2 on $mux $procmux$3604.
    dead port 1/2 on $mux $procmux$3607.
    dead port 2/2 on $mux $procmux$3609.
    dead port 2/2 on $mux $procmux$3612.
    dead port 2/2 on $mux $procmux$6544.
    dead port 1/2 on $mux $procmux$6547.
    dead port 2/2 on $mux $procmux$6549.
    dead port 2/2 on $mux $procmux$8899.
    dead port 2/2 on $mux $procmux$8901.
    dead port 2/2 on $mux $procmux$8904.
    dead port 2/2 on $mux $procmux$6552.
    dead port 2/2 on $mux $procmux$4657.
    dead port 1/2 on $mux $procmux$4660.
    dead port 1/2 on $mux $procmux$4663.
    dead port 2/2 on $mux $procmux$4665.
    dead port 2/2 on $mux $procmux$4668.
    dead port 2/2 on $mux $procmux$8941.
    dead port 2/2 on $mux $procmux$8943.
    dead port 2/2 on $mux $procmux$8946.
    dead port 2/2 on $mux $procmux$6589.
    dead port 1/2 on $mux $procmux$6592.
    dead port 2/2 on $mux $procmux$6594.
    dead port 2/2 on $mux $procmux$6597.
    dead port 2/2 on $mux $procmux$3649.
    dead port 1/2 on $mux $procmux$3652.
    dead port 1/2 on $mux $procmux$3655.
    dead port 2/2 on $mux $procmux$3657.
    dead port 2/2 on $mux $procmux$3660.
    dead port 2/2 on $mux $procmux$4705.
    dead port 1/2 on $mux $procmux$4708.
    dead port 1/2 on $mux $procmux$4711.
    dead port 2/2 on $mux $procmux$4713.
    dead port 2/2 on $mux $procmux$4716.
    dead port 2/2 on $mux $procmux$8983.
    dead port 2/2 on $mux $procmux$8985.
    dead port 2/2 on $mux $procmux$8988.
    dead port 2/2 on $mux $procmux$10002.
    dead port 2/2 on $mux $procmux$6634.
    dead port 1/2 on $mux $procmux$6637.
    dead port 2/2 on $mux $procmux$6639.
    dead port 2/2 on $mux $procmux$6642.
    dead port 2/2 on $mux $procmux$10008.
    dead port 2/2 on $mux $procmux$10011.
    dead port 2/2 on $mux $procmux$10017.
    dead port 2/2 on $mux $procmux$10020.
    dead port 2/2 on $mux $procmux$10026.
    dead port 2/2 on $mux $procmux$10029.
    dead port 2/2 on $mux $procmux$10035.
    dead port 2/2 on $mux $procmux$10038.
    dead port 2/2 on $mux $procmux$10044.
    dead port 2/2 on $mux $procmux$10047.
    dead port 2/2 on $mux $procmux$3697.
    dead port 1/2 on $mux $procmux$3700.
    dead port 1/2 on $mux $procmux$3703.
    dead port 2/2 on $mux $procmux$3705.
    dead port 2/2 on $mux $procmux$3708.
    dead port 2/2 on $mux $procmux$9025.
    dead port 2/2 on $mux $procmux$9027.
    dead port 2/2 on $mux $procmux$9030.
    dead port 2/2 on $mux $procmux$10053.
    dead port 2/2 on $mux $procmux$10056.
    dead port 2/2 on $mux $procmux$10062.
    dead port 2/2 on $mux $procmux$4753.
    dead port 1/2 on $mux $procmux$4756.
    dead port 1/2 on $mux $procmux$4759.
    dead port 2/2 on $mux $procmux$4761.
    dead port 2/2 on $mux $procmux$4764.
    dead port 2/2 on $mux $procmux$10065.
    dead port 2/2 on $mux $procmux$6679.
    dead port 1/2 on $mux $procmux$6682.
    dead port 2/2 on $mux $procmux$6684.
    dead port 2/2 on $mux $procmux$6687.
    dead port 2/2 on $mux $procmux$10071.
    dead port 2/2 on $mux $procmux$10074.
    dead port 2/2 on $mux $procmux$10080.
    dead port 2/2 on $mux $procmux$10083.
    dead port 2/2 on $mux $procmux$10089.
    dead port 2/2 on $mux $procmux$10092.
    dead port 2/2 on $mux $procmux$10098.
    dead port 2/2 on $mux $procmux$10101.
    dead port 2/2 on $mux $procmux$10107.
    dead port 2/2 on $mux $procmux$10110.
    dead port 2/2 on $mux $procmux$9067.
    dead port 2/2 on $mux $procmux$9069.
    dead port 2/2 on $mux $procmux$9072.
    dead port 2/2 on $mux $procmux$10116.
    dead port 2/2 on $mux $procmux$10119.
    dead port 2/2 on $mux $procmux$10125.
    dead port 2/2 on $mux $procmux$10128.
    dead port 2/2 on $mux $procmux$10134.
    dead port 2/2 on $mux $procmux$10137.
    dead port 2/2 on $mux $procmux$10143.
    dead port 2/2 on $mux $procmux$3745.
    dead port 1/2 on $mux $procmux$3748.
    dead port 1/2 on $mux $procmux$3751.
    dead port 2/2 on $mux $procmux$3753.
    dead port 2/2 on $mux $procmux$3756.
    dead port 2/2 on $mux $procmux$4801.
    dead port 2/2 on $mux $procmux$6724.
    dead port 1/2 on $mux $procmux$6727.
    dead port 2/2 on $mux $procmux$6729.
    dead port 2/2 on $mux $procmux$6732.
    dead port 1/2 on $mux $procmux$4804.
    dead port 1/2 on $mux $procmux$4807.
    dead port 2/2 on $mux $procmux$4809.
    dead port 2/2 on $mux $procmux$4812.
    dead port 2/2 on $mux $procmux$10146.
    dead port 2/2 on $mux $procmux$10152.
    dead port 2/2 on $mux $procmux$10155.
    dead port 2/2 on $mux $procmux$9109.
    dead port 2/2 on $mux $procmux$9111.
    dead port 2/2 on $mux $procmux$9114.
    dead port 2/2 on $mux $procmux$10161.
    dead port 2/2 on $mux $procmux$10164.
    dead port 2/2 on $mux $procmux$10170.
    dead port 2/2 on $mux $procmux$10173.
    dead port 2/2 on $mux $procmux$10179.
    dead port 2/2 on $mux $procmux$10182.
    dead port 2/2 on $mux $procmux$10419.
    dead port 2/2 on $mux $procmux$10425.
    dead port 2/2 on $mux $procmux$10431.
    dead port 2/2 on $mux $procmux$10437.
    dead port 2/2 on $mux $procmux$10443.
    dead port 2/2 on $mux $procmux$10449.
    dead port 2/2 on $mux $procmux$6769.
    dead port 1/2 on $mux $procmux$6772.
    dead port 2/2 on $mux $procmux$6774.
    dead port 2/2 on $mux $procmux$6777.
    dead port 2/2 on $mux $procmux$10455.
    dead port 2/2 on $mux $procmux$10461.
    dead port 2/2 on $mux $procmux$10467.
    dead port 2/2 on $mux $procmux$9151.
    dead port 2/2 on $mux $procmux$9153.
    dead port 2/2 on $mux $procmux$9156.
    dead port 2/2 on $mux $procmux$4849.
    dead port 1/2 on $mux $procmux$4852.
    dead port 1/2 on $mux $procmux$4855.
    dead port 2/2 on $mux $procmux$4857.
    dead port 2/2 on $mux $procmux$4860.
    dead port 2/2 on $mux $procmux$3793.
    dead port 1/2 on $mux $procmux$3796.
    dead port 1/2 on $mux $procmux$3799.
    dead port 2/2 on $mux $procmux$3801.
    dead port 2/2 on $mux $procmux$3804.
    dead port 2/2 on $mux $procmux$10473.
    dead port 2/2 on $mux $procmux$10479.
    dead port 2/2 on $mux $procmux$10485.
    dead port 2/2 on $mux $procmux$10491.
    dead port 2/2 on $mux $procmux$10497.
    dead port 2/2 on $mux $procmux$10503.
    dead port 2/2 on $mux $procmux$10509.
    dead port 2/2 on $mux $procmux$6814.
    dead port 1/2 on $mux $procmux$6817.
    dead port 2/2 on $mux $procmux$6819.
    dead port 2/2 on $mux $procmux$6822.
    dead port 2/2 on $mux $procmux$9193.
    dead port 2/2 on $mux $procmux$9195.
    dead port 2/2 on $mux $procmux$9198.
    dead port 2/2 on $mux $procmux$10515.
    dead port 2/2 on $mux $procmux$10521.
    dead port 2/2 on $mux $procmux$10527.
    dead port 2/2 on $mux $procmux$10533.
    dead port 2/2 on $mux $procmux$10539.
    dead port 2/2 on $mux $procmux$10545.
    dead port 2/2 on $mux $procmux$4897.
    dead port 1/2 on $mux $procmux$4900.
    dead port 1/2 on $mux $procmux$4903.
    dead port 2/2 on $mux $procmux$4905.
    dead port 2/2 on $mux $procmux$4908.
    dead port 2/2 on $mux $procmux$10551.
    dead port 2/2 on $mux $procmux$10557.
    dead port 2/2 on $mux $procmux$10563.
    dead port 2/2 on $mux $procmux$3841.
    dead port 1/2 on $mux $procmux$3844.
    dead port 1/2 on $mux $procmux$3847.
    dead port 2/2 on $mux $procmux$3849.
    dead port 2/2 on $mux $procmux$3852.
    dead port 2/2 on $mux $procmux$10569.
    dead port 2/2 on $mux $procmux$9235.
    dead port 2/2 on $mux $procmux$9237.
    dead port 2/2 on $mux $procmux$9240.
    dead port 2/2 on $mux $procmux$6859.
    dead port 1/2 on $mux $procmux$6862.
    dead port 2/2 on $mux $procmux$6864.
    dead port 2/2 on $mux $procmux$6867.
    dead port 2/2 on $mux $procmux$10575.
    dead port 2/2 on $mux $procmux$10581.
    dead port 2/2 on $mux $procmux$10587.
    dead port 2/2 on $mux $procmux$10593.
    dead port 2/2 on $mux $procmux$10599.
    dead port 2/2 on $mux $procmux$10605.
    dead port 2/2 on $mux $procmux$10611.
    dead port 2/2 on $mux $procmux$10617.
    dead port 2/2 on $mux $procmux$10623.
    dead port 2/2 on $mux $procmux$4945.
    dead port 1/2 on $mux $procmux$4948.
    dead port 1/2 on $mux $procmux$4951.
    dead port 2/2 on $mux $procmux$4953.
    dead port 2/2 on $mux $procmux$4956.
    dead port 2/2 on $mux $procmux$10629.
    dead port 2/2 on $mux $procmux$10635.
    dead port 2/2 on $mux $procmux$9277.
    dead port 2/2 on $mux $procmux$9279.
    dead port 2/2 on $mux $procmux$9282.
    dead port 2/2 on $mux $procmux$10641.
    dead port 2/2 on $mux $procmux$10647.
    dead port 2/2 on $mux $procmux$6904.
    dead port 1/2 on $mux $procmux$6907.
    dead port 2/2 on $mux $procmux$6909.
    dead port 2/2 on $mux $procmux$6912.
    dead port 2/2 on $mux $procmux$10653.
    dead port 2/2 on $mux $procmux$10659.
    dead port 2/2 on $mux $procmux$3889.
    dead port 1/2 on $mux $procmux$3892.
    dead port 1/2 on $mux $procmux$3895.
    dead port 2/2 on $mux $procmux$3897.
    dead port 2/2 on $mux $procmux$3900.
    dead port 2/2 on $mux $procmux$10665.
    dead port 2/2 on $mux $procmux$10671.
    dead port 2/2 on $mux $procmux$10677.
    dead port 2/2 on $mux $procmux$10683.
    dead port 2/2 on $mux $procmux$10689.
    dead port 2/2 on $mux $procmux$10695.
    dead port 2/2 on $mux $procmux$9319.
    dead port 2/2 on $mux $procmux$9321.
    dead port 2/2 on $mux $procmux$9324.
    dead port 2/2 on $mux $procmux$10701.
    dead port 2/2 on $mux $procmux$4993.
    dead port 1/2 on $mux $procmux$4996.
    dead port 1/2 on $mux $procmux$4999.
    dead port 2/2 on $mux $procmux$5001.
    dead port 2/2 on $mux $procmux$5004.
    dead port 2/2 on $mux $procmux$6949.
    dead port 1/2 on $mux $procmux$6952.
    dead port 2/2 on $mux $procmux$6954.
    dead port 2/2 on $mux $procmux$6957.
    dead port 2/2 on $mux $procmux$9361.
    dead port 2/2 on $mux $procmux$9363.
    dead port 2/2 on $mux $procmux$9366.
    dead port 2/2 on $mux $procmux$6994.
    dead port 1/2 on $mux $procmux$6997.
    dead port 2/2 on $mux $procmux$6999.
    dead port 2/2 on $mux $procmux$7002.
    dead port 1/2 on $mux $procmux$5059.
    dead port 1/2 on $mux $procmux$5062.
    dead port 2/2 on $mux $procmux$5064.
    dead port 2/2 on $mux $procmux$5067.
    dead port 1/2 on $mux $procmux$5074.
    dead port 1/2 on $mux $procmux$5077.
    dead port 2/2 on $mux $procmux$5079.
    dead port 2/2 on $mux $procmux$5082.
    dead port 2/2 on $mux $procmux$9414.
    dead port 2/2 on $mux $procmux$9417.
    dead port 2/2 on $mux $procmux$9423.
    dead port 2/2 on $mux $procmux$9426.
    dead port 2/2 on $mux $procmux$9432.
    dead port 2/2 on $mux $procmux$9435.
    dead port 2/2 on $mux $procmux$9441.
    dead port 2/2 on $mux $procmux$9444.
    dead port 2/2 on $mux $procmux$9450.
    dead port 2/2 on $mux $procmux$9453.
    dead port 2/2 on $mux $procmux$9459.
    dead port 2/2 on $mux $procmux$9462.
    dead port 2/2 on $mux $procmux$9468.
    dead port 2/2 on $mux $procmux$9471.
    dead port 2/2 on $mux $procmux$9477.
    dead port 2/2 on $mux $procmux$9480.
    dead port 2/2 on $mux $procmux$9486.
    dead port 2/2 on $mux $procmux$9489.
    dead port 2/2 on $mux $procmux$9495.
    dead port 2/2 on $mux $procmux$9498.
    dead port 2/2 on $mux $procmux$9504.
    dead port 2/2 on $mux $procmux$9507.
    dead port 2/2 on $mux $procmux$9513.
    dead port 2/2 on $mux $procmux$9516.
    dead port 2/2 on $mux $procmux$9522.
    dead port 2/2 on $mux $procmux$9525.
    dead port 2/2 on $mux $procmux$9531.
    dead port 2/2 on $mux $procmux$9534.
    dead port 2/2 on $mux $procmux$9540.
    dead port 2/2 on $mux $procmux$9543.
    dead port 2/2 on $mux $procmux$9549.
    dead port 2/2 on $mux $procmux$9552.
    dead port 2/2 on $mux $procmux$9558.
    dead port 2/2 on $mux $procmux$9561.
    dead port 2/2 on $mux $procmux$9567.
    dead port 2/2 on $mux $procmux$9570.
    dead port 2/2 on $mux $procmux$9576.
    dead port 2/2 on $mux $procmux$9579.
    dead port 2/2 on $mux $procmux$9585.
    dead port 2/2 on $mux $procmux$9588.
    dead port 2/2 on $mux $procmux$9594.
    dead port 2/2 on $mux $procmux$9597.
    dead port 2/2 on $mux $procmux$9603.
    dead port 2/2 on $mux $procmux$9606.
    dead port 2/2 on $mux $procmux$9612.
    dead port 2/2 on $mux $procmux$9615.
    dead port 2/2 on $mux $procmux$9621.
    dead port 2/2 on $mux $procmux$9624.
    dead port 2/2 on $mux $procmux$9630.
    dead port 2/2 on $mux $procmux$9633.
    dead port 2/2 on $mux $procmux$9639.
    dead port 2/2 on $mux $procmux$9642.
    dead port 2/2 on $mux $procmux$9648.
    dead port 2/2 on $mux $procmux$9651.
    dead port 2/2 on $mux $procmux$9657.
    dead port 2/2 on $mux $procmux$9660.
    dead port 2/2 on $mux $procmux$9666.
    dead port 2/2 on $mux $procmux$9669.
    dead port 2/2 on $mux $procmux$9675.
    dead port 2/2 on $mux $procmux$9678.
    dead port 2/2 on $mux $procmux$9684.
    dead port 2/2 on $mux $procmux$9687.
    dead port 2/2 on $mux $procmux$9693.
    dead port 2/2 on $mux $procmux$9696.
    dead port 2/2 on $mux $procmux$9702.
    dead port 2/2 on $mux $procmux$9705.
    dead port 2/2 on $mux $procmux$9711.
    dead port 2/2 on $mux $procmux$9714.
    dead port 2/2 on $mux $procmux$9720.
    dead port 2/2 on $mux $procmux$9723.
    dead port 2/2 on $mux $procmux$9765.
    dead port 2/2 on $mux $procmux$9768.
    dead port 2/2 on $mux $procmux$9900.
    dead port 2/2 on $mux $procmux$9903.
    dead port 2/2 on $mux $procmux$9909.
    dead port 2/2 on $mux $procmux$9912.
    dead port 2/2 on $mux $procmux$9918.
    dead port 2/2 on $mux $procmux$9921.
    dead port 2/2 on $mux $procmux$9927.
    dead port 2/2 on $mux $procmux$9930.
    dead port 2/2 on $mux $procmux$9936.
    dead port 2/2 on $mux $procmux$9939.
    dead port 2/2 on $mux $procmux$9945.
    dead port 2/2 on $mux $procmux$9948.
    dead port 2/2 on $mux $procmux$9954.
    dead port 2/2 on $mux $procmux$9957.
    dead port 2/2 on $mux $procmux$9963.
    dead port 2/2 on $mux $procmux$9966.
    dead port 2/2 on $mux $procmux$9972.
    dead port 2/2 on $mux $procmux$9975.
    dead port 2/2 on $mux $procmux$9981.
    dead port 2/2 on $mux $procmux$9984.
    dead port 2/2 on $mux $procmux$9990.
    dead port 2/2 on $mux $procmux$9993.
    dead port 2/2 on $mux $procmux$9999.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2183.
    dead port 2/2 on $mux $procmux$2166.
    dead port 2/2 on $mux $procmux$2192.
    dead port 2/2 on $mux $procmux$2174.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1009.
    dead port 2/2 on $mux $procmux$1025.
    dead port 2/2 on $mux $procmux$1027.
    dead port 2/2 on $mux $procmux$1045.
    dead port 2/2 on $mux $procmux$1061.
    dead port 2/2 on $mux $procmux$1063.
    dead port 2/2 on $mux $procmux$1111.
    dead port 2/2 on $mux $procmux$1132.
    dead port 2/2 on $mux $procmux$1153.
    dead port 2/2 on $mux $procmux$1204.
    dead port 2/2 on $mux $procmux$1210.
    dead port 2/2 on $mux $procmux$1216.
    dead port 2/2 on $mux $procmux$917.
    dead port 2/2 on $mux $procmux$919.
    dead port 2/2 on $mux $procmux$925.
    dead port 2/2 on $mux $procmux$953.
    dead port 2/2 on $mux $procmux$955.
    dead port 2/2 on $mux $procmux$973.
    dead port 2/2 on $mux $procmux$989.
    dead port 2/2 on $mux $procmux$991.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/9 on $pmux $procmux$1353.
    dead port 2/9 on $pmux $procmux$1353.
    dead port 3/9 on $pmux $procmux$1353.
    dead port 4/9 on $pmux $procmux$1353.
    dead port 2/2 on $mux $procmux$1380.
    dead port 2/2 on $mux $procmux$1386.
    dead port 2/2 on $mux $procmux$1394.
    dead port 2/2 on $mux $procmux$1396.
    dead port 2/2 on $mux $procmux$1404.
    dead port 2/2 on $mux $procmux$1406.
    dead port 2/2 on $mux $procmux$1414.
    dead port 2/2 on $mux $procmux$1416.
    dead port 2/2 on $mux $procmux$1424.
    dead port 2/2 on $mux $procmux$1426.
    dead port 2/2 on $mux $procmux$1433.
    dead port 2/2 on $mux $procmux$1440.
    dead port 2/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$1454.
    dead port 2/2 on $mux $procmux$1463.
    dead port 2/2 on $mux $procmux$1465.
    dead port 2/2 on $mux $procmux$1474.
    dead port 2/2 on $mux $procmux$1476.
    dead port 2/2 on $mux $procmux$1485.
    dead port 2/2 on $mux $procmux$1487.
    dead port 2/2 on $mux $procmux$1496.
    dead port 2/2 on $mux $procmux$1498.
    dead port 2/2 on $mux $procmux$1506.
    dead port 2/2 on $mux $procmux$1514.
    dead port 2/2 on $mux $procmux$1522.
Removed 1229 multiplexer ports.
<suppressed ~205 debug messages>

11.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$1808: $auto$opt_reduce.cc:134:opt_mux$11979
    New ctrl vector for $pmux cell $procmux$2069: { $procmux$1862_CMP $auto$opt_reduce.cc:134:opt_mux$11981 $eq$load_unit.v:251$586_Y }
    New ctrl vector for $pmux cell $procmux$1616: { $eq$load_unit.v:251$586_Y $auto$opt_reduce.cc:134:opt_mux$11983 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11978: { $procmux$1619_CMP [0] $procmux$1617_CMP $eq$load_unit.v:251$586_Y $eq$load_unit.v:181$568_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11982: { $procmux$1619_CMP [0] $procmux$1617_CMP $eq$load_unit.v:181$568_Y }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
    New ctrl vector for $mux cell $procmux$2580: { }
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$6016: { $procmux$3478_CMP $auto$opt_reduce.cc:134:opt_mux$11985 }
    New ctrl vector for $pmux cell $procmux$8782: { $procmux$8003_CMP $auto$opt_reduce.cc:134:opt_mux$11987 }
    New ctrl vector for $pmux cell $procmux$6466: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$11989 }
    New ctrl vector for $pmux cell $procmux$4576: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$11991 }
    New ctrl vector for $pmux cell $procmux$8824: { $procmux$8004_CMP $auto$opt_reduce.cc:134:opt_mux$11993 }
    New ctrl vector for $pmux cell $procmux$3568: { $procmux$3474_CMP $auto$opt_reduce.cc:134:opt_mux$11995 }
    New ctrl vector for $pmux cell $procmux$4192: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$11997 }
    New ctrl vector for $pmux cell $procmux$6511: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$11999 }
    New ctrl vector for $pmux cell $procmux$8026: { $auto$opt_reduce.cc:134:opt_mux$12001 $procmux$7985_CMP }
    New ctrl vector for $pmux cell $procmux$8866: { $procmux$8005_CMP $auto$opt_reduce.cc:134:opt_mux$12003 }
    New ctrl vector for $pmux cell $procmux$8362: { $procmux$7993_CMP $auto$opt_reduce.cc:134:opt_mux$12005 }
    New ctrl vector for $pmux cell $procmux$4624: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12007 }
    New ctrl vector for $pmux cell $procmux$5746: { $procmux$3504_CMP $auto$opt_reduce.cc:134:opt_mux$12009 }
    New ctrl vector for $pmux cell $procmux$3616: { $procmux$3475_CMP $auto$opt_reduce.cc:134:opt_mux$12011 }
    New ctrl vector for $pmux cell $procmux$6061: { $procmux$3479_CMP $auto$opt_reduce.cc:134:opt_mux$12013 }
    New ctrl vector for $pmux cell $procmux$8908: { $procmux$8006_CMP $auto$opt_reduce.cc:134:opt_mux$12015 }
    New ctrl vector for $pmux cell $procmux$6556: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12017 }
    New ctrl vector for $pmux cell $procmux$4672: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12019 }
    New ctrl vector for $pmux cell $procmux$7096: { $procmux$3502_CMP $auto$opt_reduce.cc:134:opt_mux$12021 }
    New ctrl vector for $pmux cell $procmux$8950: { $procmux$8007_CMP $auto$opt_reduce.cc:134:opt_mux$12023 }
    New ctrl vector for $pmux cell $procmux$6601: { $procmux$3491_CMP $auto$opt_reduce.cc:134:opt_mux$12025 }
    New ctrl vector for $pmux cell $procmux$3664: { $procmux$3476_CMP $auto$opt_reduce.cc:134:opt_mux$12027 }
    New ctrl vector for $pmux cell $procmux$7141: { $procmux$3503_CMP $auto$opt_reduce.cc:134:opt_mux$12029 }
    New ctrl vector for $pmux cell $procmux$4720: { $procmux$3498_CMP $auto$opt_reduce.cc:134:opt_mux$12031 }
    New ctrl vector for $pmux cell $procmux$8404: { $procmux$7994_CMP $auto$opt_reduce.cc:134:opt_mux$12033 }
    New ctrl vector for $pmux cell $procmux$8068: { $procmux$7986_CMP $auto$opt_reduce.cc:134:opt_mux$12035 }
    New ctrl vector for $pmux cell $procmux$3952: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$12037 }
    New ctrl vector for $pmux cell $procmux$8992: { $procmux$8008_CMP $auto$opt_reduce.cc:134:opt_mux$12039 }
    New ctrl vector for $pmux cell $procmux$6646: { $procmux$3492_CMP $auto$opt_reduce.cc:134:opt_mux$12041 }
    New ctrl vector for $pmux cell $procmux$4240: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$12043 }
    New ctrl vector for $pmux cell $procmux$7051: { $procmux$3501_CMP $auto$opt_reduce.cc:134:opt_mux$12045 }
    New ctrl vector for $pmux cell $procmux$6106: { $procmux$3480_CMP $auto$opt_reduce.cc:134:opt_mux$12047 }
    New ctrl vector for $pmux cell $procmux$5791: { $auto$opt_reduce.cc:134:opt_mux$12049 $procmux$3473_CMP }
    New ctrl vector for $pmux cell $procmux$3712: { $procmux$3477_CMP $auto$opt_reduce.cc:134:opt_mux$12051 }
    New ctrl vector for $pmux cell $procmux$9034: { $procmux$8009_CMP $auto$opt_reduce.cc:134:opt_mux$12053 }
    New ctrl vector for $pmux cell $procmux$4768: { $procmux$3499_CMP $auto$opt_reduce.cc:134:opt_mux$12055 }
    New ctrl vector for $pmux cell $procmux$8446: { $procmux$7995_CMP $auto$opt_reduce.cc:134:opt_mux$12057 }
    New ctrl vector for $pmux cell $procmux$6691: { $procmux$3493_CMP $auto$opt_reduce.cc:134:opt_mux$12059 }
    New ctrl vector for $pmux cell $procmux$8110: { $procmux$7987_CMP $auto$opt_reduce.cc:134:opt_mux$12061 }
    New ctrl vector for $pmux cell $procmux$9076: { $procmux$8010_CMP $auto$opt_reduce.cc:134:opt_mux$12063 }
    New ctrl vector for $pmux cell $procmux$6151: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$12065 }
    New ctrl vector for $pmux cell $procmux$4000: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12067 }
    New ctrl vector for $pmux cell $procmux$4288: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$12069 }
    New ctrl vector for $pmux cell $procmux$5836: { $procmux$3474_CMP $auto$opt_reduce.cc:134:opt_mux$12071 }
    New ctrl vector for $pmux cell $procmux$6736: { $procmux$3494_CMP $auto$opt_reduce.cc:134:opt_mux$12073 }
    New ctrl vector for $pmux cell $procmux$8488: { $procmux$7996_CMP $auto$opt_reduce.cc:134:opt_mux$12075 }
    New ctrl vector for $pmux cell $procmux$4816: { $procmux$3500_CMP $auto$opt_reduce.cc:134:opt_mux$12077 }
    New ctrl vector for $pmux cell $procmux$3760: { $procmux$3478_CMP $auto$opt_reduce.cc:134:opt_mux$12079 }
    New ctrl vector for $pmux cell $procmux$9118: { $procmux$8011_CMP $auto$opt_reduce.cc:134:opt_mux$12081 }
    New ctrl vector for $pmux cell $procmux$8152: { $procmux$7988_CMP $auto$opt_reduce.cc:134:opt_mux$12083 }
    New ctrl vector for $pmux cell $procmux$6781: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12085 }
    New ctrl vector for $pmux cell $procmux$6196: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$12087 }
    New ctrl vector for $pmux cell $procmux$9160: { $procmux$8012_CMP $auto$opt_reduce.cc:134:opt_mux$12089 }
    New ctrl vector for $pmux cell $procmux$4864: { $procmux$3501_CMP $auto$opt_reduce.cc:134:opt_mux$12091 }
    New ctrl vector for $pmux cell $procmux$8530: { $procmux$7997_CMP $auto$opt_reduce.cc:134:opt_mux$12093 }
    New ctrl vector for $pmux cell $procmux$3808: { $procmux$3479_CMP $auto$opt_reduce.cc:134:opt_mux$12095 }
    New ctrl vector for $pmux cell $procmux$4336: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12097 }
    New ctrl vector for $pmux cell $procmux$5881: { $procmux$3475_CMP $auto$opt_reduce.cc:134:opt_mux$12099 }
    New ctrl vector for $pmux cell $procmux$6826: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12101 }
    New ctrl vector for $pmux cell $procmux$4048: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12103 }
    New ctrl vector for $pmux cell $procmux$9202: { $procmux$8013_CMP $auto$opt_reduce.cc:134:opt_mux$12105 }
    New ctrl vector for $pmux cell $procmux$8194: { $procmux$7989_CMP $auto$opt_reduce.cc:134:opt_mux$12107 }
    New ctrl vector for $pmux cell $procmux$4912: { $procmux$3502_CMP $auto$opt_reduce.cc:134:opt_mux$12109 }
    New ctrl vector for $pmux cell $procmux$6241: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12111 }
    New ctrl vector for $pmux cell $procmux$3856: { $procmux$3480_CMP $auto$opt_reduce.cc:134:opt_mux$12113 }
    New ctrl vector for $pmux cell $procmux$8572: { $procmux$7998_CMP $auto$opt_reduce.cc:134:opt_mux$12115 }
    New ctrl vector for $pmux cell $procmux$9244: { $procmux$8014_CMP $auto$opt_reduce.cc:134:opt_mux$12117 }
    New ctrl vector for $pmux cell $procmux$6871: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12119 }
    New ctrl vector for $pmux cell $procmux$4384: { $procmux$3491_CMP $auto$opt_reduce.cc:134:opt_mux$12121 }
    New ctrl vector for $pmux cell $procmux$4960: { $procmux$3503_CMP $auto$opt_reduce.cc:134:opt_mux$12123 }
    New ctrl vector for $pmux cell $procmux$5926: { $procmux$3476_CMP $auto$opt_reduce.cc:134:opt_mux$12125 }
    New ctrl vector for $pmux cell $procmux$9286: { $procmux$8015_CMP $auto$opt_reduce.cc:134:opt_mux$12127 }
    New ctrl vector for $pmux cell $procmux$6916: { $procmux$3498_CMP $auto$opt_reduce.cc:134:opt_mux$12129 }
    New ctrl vector for $pmux cell $procmux$8236: { $procmux$7990_CMP $auto$opt_reduce.cc:134:opt_mux$12131 }
    New ctrl vector for $pmux cell $procmux$8614: { $procmux$7999_CMP $auto$opt_reduce.cc:134:opt_mux$12133 }
    New ctrl vector for $pmux cell $procmux$3904: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$12135 }
    New ctrl vector for $pmux cell $procmux$6286: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12137 }
    New ctrl vector for $pmux cell $procmux$4096: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12139 }
    New ctrl vector for $pmux cell $procmux$6961: { $procmux$3499_CMP $auto$opt_reduce.cc:134:opt_mux$12141 }
    New ctrl vector for $pmux cell $procmux$4432: { $procmux$3492_CMP $auto$opt_reduce.cc:134:opt_mux$12143 }
    New ctrl vector for $pmux cell $procmux$7006: { $procmux$3500_CMP $auto$opt_reduce.cc:134:opt_mux$12145 }
    New ctrl vector for $pmux cell $procmux$8656: { $procmux$8000_CMP $auto$opt_reduce.cc:134:opt_mux$12147 }
    New ctrl vector for $pmux cell $procmux$8278: { $procmux$7991_CMP $auto$opt_reduce.cc:134:opt_mux$12149 }
    New ctrl vector for $pmux cell $procmux$6331: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12151 }
    New ctrl vector for $pmux cell $procmux$5971: { $procmux$3477_CMP $auto$opt_reduce.cc:134:opt_mux$12153 }
    New ctrl vector for $pmux cell $procmux$3472: { $procmux$3504_CMP $auto$opt_reduce.cc:134:opt_mux$12155 }
    New ctrl vector for $pmux cell $procmux$7984: { $procmux$8016_CMP $auto$opt_reduce.cc:134:opt_mux$12157 }
    New ctrl vector for $pmux cell $procmux$8698: { $procmux$8001_CMP $auto$opt_reduce.cc:134:opt_mux$12159 }
    New ctrl vector for $pmux cell $procmux$4144: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12161 }
    New ctrl vector for $pmux cell $procmux$4480: { $procmux$3493_CMP $auto$opt_reduce.cc:134:opt_mux$12163 }
    New ctrl vector for $pmux cell $procmux$6376: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12165 }
    New ctrl vector for $pmux cell $procmux$8740: { $procmux$8002_CMP $auto$opt_reduce.cc:134:opt_mux$12167 }
    New ctrl vector for $pmux cell $procmux$8320: { $procmux$7992_CMP $auto$opt_reduce.cc:134:opt_mux$12169 }
    New ctrl vector for $pmux cell $procmux$6421: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12171 }
    New ctrl vector for $pmux cell $procmux$4528: { $procmux$3494_CMP $auto$opt_reduce.cc:134:opt_mux$12173 }
    New ctrl vector for $pmux cell $procmux$3520: { $auto$opt_reduce.cc:134:opt_mux$12175 $procmux$3473_CMP }
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
    New ctrl vector for $pmux cell $procmux$2179: $auto$opt_reduce.cc:134:opt_mux$12177
    New ctrl vector for $pmux cell $procmux$2161: $auto$opt_reduce.cc:134:opt_mux$12179
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
    New ctrl vector for $pmux cell $procmux$1529: { $procmux$1466_CMP $procmux$1397_CMP $auto$opt_reduce.cc:134:opt_mux$12181 }
    New ctrl vector for $pmux cell $procmux$1534: { $procmux$1466_CMP $procmux$1397_CMP $auto$opt_reduce.cc:134:opt_mux$12183 }
    New ctrl vector for $pmux cell $procmux$1539: { $procmux$1397_CMP $auto$opt_reduce.cc:134:opt_mux$12185 }
    New ctrl vector for $pmux cell $procmux$1544: { $procmux$1397_CMP $auto$opt_reduce.cc:134:opt_mux$12187 }
    New ctrl vector for $pmux cell $procmux$1549: { $procmux$1397_CMP $auto$opt_reduce.cc:134:opt_mux$12189 }
  Optimizing cells in module \store_unit.
Performed a total of 109 changes.

11.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~39 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~48 debug messages>
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
<suppressed ~24 debug messages>
Removed a total of 72 cells.

11.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 4568 unused wires.
<suppressed ~8 debug messages>

11.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.8. Rerunning OPT passes. (Maybe there is more to do..)

11.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

11.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$2057: { $procmux$1768_CMP $auto$opt_reduce.cc:134:opt_mux$12191 }
    New ctrl vector for $pmux cell $procmux$2063: { $procmux$1768_CMP $auto$opt_reduce.cc:134:opt_mux$12193 }
    New ctrl vector for $pmux cell $procmux$2069: { $auto$opt_reduce.cc:134:opt_mux$11981 $auto$opt_reduce.cc:134:opt_mux$12195 }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 3 changes.

11.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 2 cells.

11.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

11.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.14. Rerunning OPT passes. (Maybe there is more to do..)

11.7.15. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

11.7.16. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 0 changes.

11.7.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

11.7.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..

11.7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.20. Finished OPT passes. (There is nothing left to do.)

11.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:181$568 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ne$load_unit.v:248$583 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:251$586 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:261$591 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$595 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$596 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$597 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$599 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$600 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$601 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$611 ($add).
Removed top 29 bits (of 32) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$611 ($add).
Removed top 30 bits (of 32) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ternary$load_unit.v:286$613 ($mux).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1556_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1556_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1556_CMP2 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1557_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1557_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1557_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1617_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1619_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1660 ($mux).
Removed top 3 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1768_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1918 ($mux).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2053_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2088_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2088_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2088_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2088_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2088_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2089_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2089_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2089_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2089_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2089_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2090_CMP15 ($eq).
Removed top 1 bits (of 3) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$611 ($add).
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$11\state_d[3:0].
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$15\state_d[3:0].
Removed top 30 bits (of 32) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$611_Y.
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$23 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$57 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$63 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$64 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$66 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$67 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$69 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$70 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:163$72 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:172$78 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:179$88 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:180$90 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:180$91 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:187$93 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:196$96 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:197$98 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:197$99 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:204$101 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11364_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11414_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:347$408 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:356$410 ($eq).
Removed top 2 bits (of 111) from mux cell cva6_lsu_shim.$procmux$2589 ($mux).
Removed top 2 bits (of 111) from wire cva6_lsu_shim.$3\tb_io_fu_data_i[110:0].
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$255 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$292 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$319 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$334 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$337 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$349 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$350 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$351 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$352 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$354 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$355 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$356 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$366 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$366 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$367 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$368 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$369 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$375 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$375 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$378 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$378 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$385 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$385 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3489_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3490_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3491_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3492_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3493_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3494_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3495_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3496_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3497_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3498_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3499_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3500_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3501_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3502_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3503_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5025_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5026_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5027_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5028_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5029_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5030_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5031_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5032_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5033_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5034_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5035_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5036_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5037_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5038_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5039_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7203_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7204_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7205_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7206_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7207_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7208_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7209_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7210_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7211_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7212_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7213_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7214_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7215_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7216_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7217_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8001_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8002_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8003_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8004_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8005_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8006_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8007_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8008_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8009_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8010_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8011_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8012_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8013_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8014_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8015_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$366_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$334_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$351_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$356_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$354_Y.
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2164_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2184_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2205_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2205_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2205_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2205_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2205_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2206_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2206_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2206_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2206_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2206_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2207_CMP15 ($eq).
Removed top 2 bits (of 4) from port B of cell load_store_unit.$procmux$2376_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell load_store_unit.$procmux$2377_CMP0 ($eq).
Removed top 2 bits (of 34) from FF cell load_store_unit.$procdff$11754 ($adff).
Removed top 2 bits (of 22) from wire load_store_unit.dtlb_ppn.
Removed top 2 bits (of 34) from wire load_store_unit.mmu_paddr.
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:47$498 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:47$498 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$499 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$499 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$499 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$500 ($shl).
Removed top 85 bits (of 170) from port Y of cell lsu_bypass.$and$lsu_bypass.v:0$501 ($and).
Removed top 85 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$504 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$504 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:48$508 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:48$508 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:49$509 ($add).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:49$509 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:52$512 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:52$512 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:52$513 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:52$513 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:52$513 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$514 ($shl).
Removed top 169 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$517 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$517 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:53$521 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:53$521 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:54$522 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:54$522 ($sub).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:58$534 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:58$534 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:59$535 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:59$535 ($sub).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$539 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$539 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$539 ($add).
Removed top 22 bits (of 32) from port B of cell lsu_bypass.$shiftx$lsu_bypass.v:0$540 ($shiftx).
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$499_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$539_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:48$508_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:52$513_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:53$521_Y.
Removed top 85 bits (of 170) from wire lsu_bypass.$and$lsu_bypass.v:0$501_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:47$498_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:52$512_Y.
Removed top 30 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:88$703 ($lt).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:94$715 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:94$715 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:94$716 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:94$716 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:94$716 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$717 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$717 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$717 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$718 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$718 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$718 ($sub).
Removed top 258 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$720 ($and).
Removed top 258 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$725 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:95$730 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:95$730 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:95$730 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$731 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$731 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$731 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$732 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$732 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$732 ($sub).
Removed top 260 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$734 ($and).
Removed top 260 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$739 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:96$744 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:96$744 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:96$744 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$745 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$745 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$745 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$746 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$746 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$746 ($sub).
Removed top 288 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$748 ($and).
Removed top 288 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$753 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:97$758 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:97$758 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:97$758 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$759 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$759 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$759 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$760 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$760 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$760 ($sub).
Removed top 290 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$762 ($and).
Removed top 290 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$767 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:98$772 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:98$772 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:98$772 ($add).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$773 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$776 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$776 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:100$781 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:100$781 ($add).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:100$781 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:103$784 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:103$784 ($mul).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$789 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:105$794 ($sub).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:105$794 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:128$798 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:128$798 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:128$799 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:128$799 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:128$799 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$800 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$800 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$800 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$801 ($sub).
Removed top 28 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$801 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$801 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$802 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:131$805 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:131$805 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:131$805 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$806 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$806 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$806 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$807 ($sub).
Removed top 27 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$807 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$807 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$808 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:134$811 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:134$811 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:134$811 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$812 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$812 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$812 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$813 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$813 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$813 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$814 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:137$817 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:137$817 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:137$817 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$818 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$818 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$818 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$819 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$819 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$819 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$820 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:140$823 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:140$823 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:140$823 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$824 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$824 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$824 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$825 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$825 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$825 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$826 ($shiftx).
Removed top 29 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:145$833 ($lt).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:151$836 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:151$836 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:151$836 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$837 ($shiftx).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$844 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$847 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$847 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:156$852 ($sub).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:156$852 ($sub).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:156$852 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:160$855 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:160$855 ($mul).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$856 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$856 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$856 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$857 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$857 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$857 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$858 ($shl).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$860 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$860 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$860 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$861 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$861 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$861 ($add).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$862 ($shiftx).
Removed top 219 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$863 ($and).
Removed top 219 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$867 ($shl).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$867 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:162$872 ($add).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:162$872 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1186 ($mux).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1270 ($mux).
Removed top 1 bits (of 5) from mux cell store_buffer.$procmux$1285 ($mux).
Removed top 1 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:105$794 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$sub$store_buffer.v:105$794 ($sub).
Removed top 1 bits (of 4) from port A of cell store_buffer.$sub$store_buffer.v:105$794 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$add$store_buffer.v:162$872 ($add).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:162$872 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1237 ($mux).
Removed top 1 bits (of 4) from mux cell store_buffer.$procmux$1285 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$add$store_buffer.v:100$781 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1202 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$sub$store_buffer.v:156$852 ($sub).
Removed top 2 bits (of 5) from wire store_buffer.$1\core_if.speculative_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$1\store_if.commit_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$2\store_if.commit_status_cnt[4:0].
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$717_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$731_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$745_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$759_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$800_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$806_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$812_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$818_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$824_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$857_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$861_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:100$781_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:103$785_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:140$823_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:151$836_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:160$856_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:162$872_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:94$716_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:95$730_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:96$744_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:97$758_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:98$772_Y.
Removed top 258 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$720_Y.
Removed top 260 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$734_Y.
Removed top 288 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$748_Y.
Removed top 290 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$762_Y.
Removed top 219 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$863_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:160$855_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:94$715_Y.
Removed top 29 bits (of 32) from wire store_buffer.$sub$store_buffer.v:156$852_Y.
Removed top 2 bits (of 5) from wire store_buffer.core_if.speculative_status_cnt.
Removed top 2 bits (of 8) from port A of cell store_unit.$le$store_unit.v:81$658 ($le).
Removed top 1 bits (of 8) from port A of cell store_unit.$ge$store_unit.v:81$659 ($ge).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1330_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1330_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1331_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1331_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1332_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1332_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1333_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1333_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1337_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1337_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1338_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1338_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP4 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1360_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1397_CMP0 ($eq).

11.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 54 unused wires.
<suppressed ~6 debug messages>

11.10. Executing MEMORY_COLLECT pass (generating $mem cells).

11.11. Executing OPT pass (performing simple optimizations).

11.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~3 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 1 cells.

11.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

11.11.4. Finished fast OPT passes.

11.12. Printing statistics.

=== $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit ===

   Number of wires:                117
   Number of wire bits:            844
   Number of public wires:          47
   Number of public wire bits:     711
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $add                            1
     $adff                           5
     $and                            1
     $eq                            46
     $logic_and                      5
     $logic_not                      3
     $mux                           34
     $ne                             1
     $or                             1
     $pmux                           7
     $reduce_or                     13
     $shiftx                         1
     $shr                            1

=== amo_buffer ===

   Number of wires:                 17
   Number of wire bits:            425
   Number of public wires:          16
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $and                            2

=== cva6_lsu_formal ===

   Number of wires:                148
   Number of wire bits:           5236
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                140
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         8
     $dff                           22
     $eq                            23
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $lt                             2
     $mux                           46
     $ne                             1
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_shim ===

   Number of wires:                 90
   Number of wire bits:           2490
   Number of public wires:          60
   Number of public wire bits:    2009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $dff                            7
     $eq                             5
     $mux                           28
     load_store_unit                 1

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_shim                   1

=== load_store_unit ===

   Number of wires:                108
   Number of wire bits:           2482
   Number of public wires:          84
   Number of public wire bits:    2423
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $add                            1
     $adff                           1
     $eq                            33
     $logic_not                      3
     $mux                            5
     $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
     $pmux                           6
     $reduce_or                      5
     lsu_bypass                      1
     shift_reg                       2
     store_unit                      1

=== lsu_bypass ===

   Number of wires:                 57
   Number of wire bits:           3651
   Number of public wires:          21
   Number of public wire bits:     530
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            7
     $adff                           4
     $and                            4
     $logic_and                      1
     $logic_not                      1
     $mul                            2
     $mux                           15
     $not                            2
     $or                             3
     $shiftx                         1
     $shl                            4
     $sub                            2

=== shift_reg ===

   Number of wires:                  4
   Number of wire bits:            204
   Number of public wires:           4
   Number of public wire bits:     204
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $adff                           1

=== store_buffer ===

   Number of wires:                215
   Number of wire bits:          15200
   Number of public wires:          48
   Number of public wire bits:    1494
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                202
     $add                           30
     $adff                           8
     $and                           14
     $eq                             9
     $logic_and                      9
     $logic_not                      4
     $logic_or                       5
     $lt                             9
     $mul                            4
     $mux                           59
     $ne                             2
     $not                            8
     $or                             8
     $shiftx                         7
     $shl                           15
     $sub                           11

=== store_unit ===

   Number of wires:                123
   Number of wire bits:           1061
   Number of public wires:          57
   Number of public wire bits:     922
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           6
     $and                            2
     $eq                            43
     $ge                             1
     $le                             1
     $logic_and                      4
     $logic_not                      4
     $mux                           20
     $pmux                           8
     $reduce_bool                    2
     $reduce_or                     16
     amo_buffer                      1
     store_buffer                    1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_shim                 1
         load_store_unit             1
           $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
           lsu_bypass                1
           shift_reg                 2
           store_unit                1
             amo_buffer              1
             store_buffer            1

   Number of wires:               3200
   Number of wire bits:          93030
   Number of public wires:         910
   Number of public wire bits:   30918
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2830
     $add                           89
     $adff                          52
     $and                           48
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         8
     $dff                          192
     $eq                           571
     $ge                             2
     $gt                             1
     $le                             3
     $logic_and                     58
     $logic_not                     55
     $logic_or                      13
     $lt                            24
     $mul                           12
     $mux                         1098
     $ne                             7
     $not                           20
     $or                            26
     $pmux                         240
     $reduce_bool                    8
     $reduce_or                    196
     $shiftx                        18
     $shl                           40
     $shr                            6
     $sub                           32
     $xor                            2

11.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

12. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

13. Executing ASYNC2SYNC pass.
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11743 ($adff): ARST=\rst_ni, D=\idx_d, Q=\idx_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11744 ($adff): ARST=\rst_ni, D=\signed_d, Q=\signed_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11745 ($adff): ARST=\rst_ni, D=\fp_sign_d, Q=\fp_sign_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11746 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11747 ($adff): ARST=\rst_ni, D=\load_data_d, Q=\load_data_q
Replacing load_store_unit.$procdff$11754 ($adff): ARST=\rst_ni, D=\mmu_vaddr, Q=\mmu_paddr
Replacing lsu_bypass.$procdff$11749 ($adff): ARST=\rst_ni, D=\mem_n, Q=\mem_q
Replacing lsu_bypass.$procdff$11750 ($adff): ARST=\rst_ni, D=\read_pointer, Q=\read_pointer_q
Replacing lsu_bypass.$procdff$11751 ($adff): ARST=\rst_ni, D=\write_pointer, Q=\write_pointer_q
Replacing lsu_bypass.$procdff$11752 ($adff): ARST=\rst_ni, D=\status_cnt, Q=\status_cnt_q
Replacing shift_reg.$procdff$11748 ($adff): ARST=\rst_ni, D=\d_i, Q=\d_o
Replacing store_buffer.$procdff$11729 ($adff): ARST=\rst_ni, D=\commit_queue_n, Q=\commit_queue_q
Replacing store_buffer.$procdff$11730 ($adff): ARST=\rst_ni, D=\commit_status_cnt_n, Q=\commit_status_cnt_q
Replacing store_buffer.$procdff$11731 ($adff): ARST=\rst_ni, D=\commit_read_pointer_n, Q=\commit_read_pointer_q
Replacing store_buffer.$procdff$11732 ($adff): ARST=\rst_ni, D=\commit_write_pointer_n, Q=\commit_write_pointer_q
Replacing store_buffer.$procdff$11733 ($adff): ARST=\rst_ni, D=\speculative_queue_n, Q=\speculative_queue_q
Replacing store_buffer.$procdff$11734 ($adff): ARST=\rst_ni, D=\speculative_status_cnt_n, Q=\speculative_status_cnt_q
Replacing store_buffer.$procdff$11735 ($adff): ARST=\rst_ni, D=\speculative_read_pointer_n, Q=\speculative_read_pointer_q
Replacing store_buffer.$procdff$11736 ($adff): ARST=\rst_ni, D=\speculative_write_pointer_n, Q=\speculative_write_pointer_q
Replacing store_unit.$procdff$11737 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing store_unit.$procdff$11738 ($adff): ARST=\rst_ni, D=\st_data_n, Q=\st_data_q
Replacing store_unit.$procdff$11739 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [18:15], Q=\st_be_q
Replacing store_unit.$procdff$11740 ($adff): ARST=\rst_ni, D=\st_data_size_n, Q=\st_data_size_q
Replacing store_unit.$procdff$11741 ($adff): ARST=\rst_ni, D=\amo_op_d, Q=\amo_op_q
Replacing store_unit.$procdff$11742 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [2:0], Q=\trans_id_q

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

15. Executing SETUNDEF pass (replace undef values with defined constants).

16. Executing OPT pass (performing simple optimizations).

16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

16.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$11746 ($sdff) from module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit (D = $1\state_d[3:0] [3], Q = $auto$async2sync.cc:140:execute$12255 [3], rval = 1'0).
Adding SRST signal on $procdff$11975 ($dff) from module cva6_lsu_formal (D = $procmux$11601_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12622 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$11974 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$11951 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12625 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$11950 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12627 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$11949 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12629 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:204$101_Y, Q = \pc_2).
Adding SRST signal on $procdff$11948 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12633 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:187$93_Y, Q = \pc_1).
Adding SRST signal on $procdff$11947 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12637 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$11946 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12639 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:177$5_DATA[31:0]$86, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$11945 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12641 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$11944 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12643 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:194$6_DATA[31:0]$94, Q = \tb_io_instr_i_2).
Adding SRST signal on $procdff$11763 ($dff) from module cva6_lsu_shim (D = \load_mem_resp_i, Q = \x_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11762 ($dff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12646 ($sdff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state).
Adding SRST signal on $procdff$11761 ($dff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12654 ($sdff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state).
Adding SRST signal on $procdff$11759 ($dff) from module cva6_lsu_shim (D = { $2\tb_io_dcache_req_ports_i[104:104] \load_mem_resp_i \x_load_mem_resp_i \dummy_data }, Q = { \tb_io_dcache_req_ports_i [104] \tb_io_dcache_req_ports_i [69:36] }, rval = 35'00000000000000000000000000000000000).
Adding EN signal on $procdff$11759 ($dff) from module cva6_lsu_shim (D = 69'000000000000000000000000000000000000000000000000000000000000000000000, Q = { \tb_io_dcache_req_ports_i [103:70] \tb_io_dcache_req_ports_i [34:0] }).
Adding SRST signal on $procdff$11758 ($dff) from module cva6_lsu_shim (D = $2\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$12664 ($sdff) from module cva6_lsu_shim (D = $3\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i).
Adding SRST signal on $procdff$11756 ($dff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12672 ($sdff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i).
Adding SRST signal on $procdff$11755 ($dff) from module cva6_lsu_shim (D = $2\tb_io_fu_data_i[110:0], Q = \tb_io_fu_data_i, rval = 111'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$12676 ($sdff) from module cva6_lsu_shim (D = { 2'00 $3\tb_io_fu_data_i[110:0] }, Q = \tb_io_fu_data_i).
Adding EN signal on $procdff$11927 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$11926 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$11925 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$11924 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$11923 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$11922 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$11921 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$11920 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$11919 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$11918 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$11917 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$11916 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$11915 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$11914 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$11913 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$11912 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$11911 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$11910 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$11909 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$11908 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$11907 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$11906 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$11905 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$11904 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$11903 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$11902 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$11901 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$11900 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$11899 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$11898 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$11897 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$11896 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$11895 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$11894 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$11893 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$11892 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$11891 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$11890 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$11889 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$11888 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$11887 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$11886 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$11885 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$11884 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$11883 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$11882 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$11881 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$11880 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$11879 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$11878 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$11877 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$11876 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$11875 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$11874 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$11873 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$11872 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$11871 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$11870 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$11869 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$11868 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$11867 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$11866 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$11865 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$11864 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$11844 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13190 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$11843 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$11843 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13213 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$385_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$13208 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$11842 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$11841 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$11839 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$11838 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13221 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$11837 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13227 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$11836 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13233 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$11835 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11834 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13252 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$11833 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13260 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$11832 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13270 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$11831 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13278 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$11830 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$13286 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).
Adding SRST signal on $procdff$11752 ($sdff) from module lsu_bypass (D = $3\status_cnt[1:0], Q = $auto$async2sync.cc:140:execute$12267, rval = 2'00).
Adding SRST signal on $procdff$11751 ($sdff) from module lsu_bypass (D = $1\write_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12265, rval = 1'0).
Adding SRST signal on $procdff$11750 ($sdff) from module lsu_bypass (D = $2\read_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12263, rval = 1'0).
Adding SRST signal on $procdff$11749 ($sdff) from module lsu_bypass (D = $3\mem_n[169:0], Q = $auto$async2sync.cc:140:execute$12261, rval = 170'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$11734 ($sdff) from module store_buffer (D = \core_if.speculative_status_cnt, Q = $auto$async2sync.cc:140:execute$12281, rval = 3'000).
Adding SRST signal on $procdff$11733 ($sdff) from module store_buffer (D = { $2\speculative_queue_n[291:0] [219] $2\speculative_queue_n[291:0] [146] $2\speculative_queue_n[291:0] [73] $2\speculative_queue_n[291:0] [0] }, Q = { $auto$async2sync.cc:140:execute$12279 [219] $auto$async2sync.cc:140:execute$12279 [146] $auto$async2sync.cc:140:execute$12279 [73] $auto$async2sync.cc:140:execute$12279 [0] }, rval = 4'0000).
Adding SRST signal on $procdff$11737 ($sdff) from module store_unit (D = $1\state_d[1:0], Q = $auto$async2sync.cc:140:execute$12287, rval = 2'00).

16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 283 unused cells and 295 unused wires.
<suppressed ~315 debug messages>

16.5. Rerunning OPT passes. (Removed registers in this run.)

16.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
<suppressed ~4 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
<suppressed ~15 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 80 cells.

16.8. Executing OPT_DFF pass (perform DFF optimizations).

16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 80 unused wires.
<suppressed ~3 debug messages>

16.10. Finished fast OPT passes.

17. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

18. Executing HIERARCHY pass (managing design hierarchy).

18.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass

18.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

19. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 114 unique messages, 334 total
End of script. Logfile hash: b0d38f09eb, CPU: user 11.45s system 0.06s, MEM: 102.54 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 31% 3x check (3 sec), 25% 9x opt_clean (2 sec), ...
