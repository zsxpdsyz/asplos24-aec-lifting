
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cva6_lsu_model.v
Parsing formal SystemVerilog input from `cva6_lsu_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_model'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

4.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

4.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_model'.
Generating RTLIL representation for module `\cva6_lsu_model'.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_lsu_model.v:98
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_lsu_model.v:94
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_lsu_model.v:90

4.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

4.2.6. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removing unused module `$abstract\cva6_lsu_model'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 3 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
Cleaned up 1 empty switch.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$609 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$609 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$604 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$604 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$599 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$599 in module cva6_lsu_model.
Removed 9 dead cases from process $proc$cva6_lsu_model.v:85$432 in module cva6_lsu_model.
Marked 27 switch rules as full_case in process $proc$cva6_lsu_model.v:85$432 in module cva6_lsu_model.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$165 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$165 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$33 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$33 in module cva6_lsu_formal.
Removed a total of 22 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 252 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$147'.
  Set init value: $formal$cva6_lsu_formal.v:210$14_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$145'.
  Set init value: $formal$cva6_lsu_formal.v:175$13_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$143'.
  Set init value: $formal$cva6_lsu_formal.v:173$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$141'.
  Set init value: $formal$cva6_lsu_formal.v:169$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$139'.
  Set init value: $formal$cva6_lsu_formal.v:168$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
  Set init value: $formal$cva6_lsu_formal.v:166$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
  Set init value: $formal$cva6_lsu_formal.v:164$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
  Set init value: $formal$cva6_lsu_formal.v:162$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
  Set init value: $formal$cva6_lsu_formal.v:161$6_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
  Set init value: $formal$cva6_lsu_formal.v:160$5_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
  Set init value: $formal$cva6_lsu_formal.v:159$4_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
  Set init value: $formal$cva6_lsu_formal.v:156$3_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$609'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$409_DATA[7:0]$611
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$604'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$425_DATA[1:0]$608
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$599'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$424_DATA[31:0]$603
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
     1/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_DATA[1:0]$597
     2/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_ADDR[1:0]$596
     3/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_DATA[1:0]$594
     4/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_DATA[1:0]$593
     5/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_ADDR[1:0]$592
     6/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_DATA[1:0]$591
     7/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_ADDR[1:0]$590
     8/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_DATA[1:0]$588
     9/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_ADDR[1:0]$587
    10/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_DATA[1:0]$585
    11/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_DATA[1:0]$584
    12/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_ADDR[1:0]$583
    13/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_DATA[1:0]$582
    14/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_ADDR[1:0]$581
    15/153: $5$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_DATA[7:0]$574
    16/153: $5$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_DATA[1:0]$573
    17/153: $5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA[31:0]$572
    18/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_DATA[7:0]$571
    19/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_ADDR[1:0]$570
    20/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_DATA[1:0]$569
    21/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_ADDR[1:0]$568
    22/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA[31:0]$567
    23/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_ADDR[1:0]$566
    24/153: $4$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$408[1:0]$565
    25/153: $4$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$407[31:0]$564
    26/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_DATA[7:0]$561
    27/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_ADDR[1:0]$560
    28/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_DATA[1:0]$559
    29/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_ADDR[1:0]$558
    30/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA[31:0]$557
    31/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_ADDR[1:0]$556
    32/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$408[1:0]$555
    33/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$407[31:0]$554
    34/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_DATA[7:0]$547
    35/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_DATA[1:0]$546
    36/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_DATA[31:0]$545
    37/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_DATA[7:0]$544
    38/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_ADDR[1:0]$543
    39/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_DATA[1:0]$542
    40/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_ADDR[1:0]$541
    41/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_DATA[31:0]$540
    42/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_ADDR[1:0]$539
    43/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$406[1:0]$538
    44/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$405[31:0]$537
    45/153: $5\instr_i_pc[7:0]
    46/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_DATA[7:0]$529
    47/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_ADDR[1:0]$528
    48/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_DATA[1:0]$527
    49/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_ADDR[1:0]$526
    50/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_DATA[31:0]$525
    51/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_ADDR[1:0]$524
    52/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$406[1:0]$521
    53/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$405[31:0]$520
    54/153: $4\instr_i_pc[7:0]
    55/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_DATA[7:0]$535
    56/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_ADDR[1:0]$534
    57/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_DATA[1:0]$533
    58/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_ADDR[1:0]$532
    59/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA[31:0]$531
    60/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_ADDR[1:0]$530
    61/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$408[1:0]$523
    62/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$407[31:0]$522
    63/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_DATA[1:0]$516
    64/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_ADDR[1:0]$515
    65/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_DATA[7:0]$514
    66/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_ADDR[1:0]$513
    67/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_DATA[31:0]$512
    68/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_ADDR[1:0]$511
    69/153: $3\instr_i_pc[7:0]
    70/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_DATA[1:0]$509
    71/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_DATA[1:0]$508
    72/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_ADDR[1:0]$507
    73/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_DATA[7:0]$506
    74/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_ADDR[1:0]$505
    75/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_DATA[31:0]$504
    76/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_ADDR[1:0]$503
    77/153: $2\instr_i_pc[7:0]
    78/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_DATA[1:0]$502
    79/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_ADDR[1:0]$501
    80/153: $0\inner_load_mem_resp_i[0:0]
    81/153: $0\x_inner_store_mem_resp_i[0:0]
    82/153: $0\inner_store_mem_resp_i[0:0]
    83/153: $0\x_inner_instr_i[31:0]
    84/153: $0\inner_instr_i[31:0]
    85/153: $0\x_inner_instr_valid_i[0:0]
    86/153: $0\inner_instr_valid_i[0:0]
    87/153: $0\x_inner_is_load_i[0:0]
    88/153: $0\inner_is_load_i[0:0]
    89/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_DATA[1:0]$497
    90/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_ADDR[1:0]$496
    91/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_DATA[1:0]$495
    92/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_ADDR[1:0]$494
    93/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_DATA[1:0]$493
    94/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_ADDR[1:0]$492
    95/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_DATA[1:0]$491
    96/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_ADDR[1:0]$490
    97/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_DATA[7:0]$489
    98/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_ADDR[1:0]$488
    99/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_DATA[1:0]$487
   100/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_ADDR[1:0]$486
   101/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA[31:0]$485
   102/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_ADDR[1:0]$484
   103/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_DATA[7:0]$483
   104/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_ADDR[1:0]$482
   105/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_DATA[1:0]$481
   106/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_ADDR[1:0]$480
   107/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_DATA[31:0]$479
   108/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_ADDR[1:0]$478
   109/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$408[1:0]$469
   110/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$407[31:0]$468
   111/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$406[1:0]$467
   112/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$405[31:0]$466
   113/153: $1\instr_i_pc[7:0]
   114/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_DATA[1:0]$477
   115/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_ADDR[1:0]$476
   116/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_DATA[7:0]$475
   117/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_ADDR[1:0]$474
   118/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_DATA[31:0]$473
   119/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_ADDR[1:0]$472
   120/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_DATA[1:0]$471
   121/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_ADDR[1:0]$470
   122/153: $0\CLK_CYCLE[31:0]
   123/153: $0\store_instr_queue_state[3][1:0]
   124/153: $0\store_instr_queue_state[2][1:0]
   125/153: $0\store_instr_queue_state[1][1:0]
   126/153: $0\store_instr_queue_state[0][1:0]
   127/153: $0\store_instr_i_queue_pc[3][7:0]
   128/153: $0\store_instr_i_queue_pc[2][7:0]
   129/153: $0\store_instr_i_queue_pc[1][7:0]
   130/153: $0\store_instr_i_queue_pc[0][7:0]
   131/153: $0\store_instr_i_queue[3][31:0]
   132/153: $0\store_instr_i_queue[2][31:0]
   133/153: $0\store_instr_i_queue[1][31:0]
   134/153: $0\store_instr_i_queue[0][31:0]
   135/153: $0\ready_flag[0:0]
   136/153: $0\store_instr_queue_state_flatten_3[1:0]
   137/153: $0\store_instr_queue_state_flatten_2[1:0]
   138/153: $0\store_instr_queue_state_flatten_1[1:0]
   139/153: $0\store_instr_queue_state_flatten_0[1:0]
   140/153: $0\store_instr_i_queue_flatten_3_pc[7:0]
   141/153: $0\store_instr_i_queue_flatten_3[31:0]
   142/153: $0\store_instr_i_queue_flatten_2_pc[7:0]
   143/153: $0\store_instr_i_queue_flatten_2[31:0]
   144/153: $0\store_instr_i_queue_flatten_1_pc[7:0]
   145/153: $0\store_instr_i_queue_flatten_1[31:0]
   146/153: $0\store_instr_i_queue_flatten_0_pc[7:0]
   147/153: $0\store_instr_i_queue_flatten_0[31:0]
   148/153: $0\load_instr_queue_state[1:0]
   149/153: $0\load_instr_i_queue_pc[7:0]
   150/153: $0\load_instr_i_queue[31:0]
   151/153: $0\queue_serve_ptr[1:0]
   152/153: $0\queue_commit_ptr[1:0]
   153/153: $0\queue_store_ptr[1:0]
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA[31:0]$350
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_ADDR[4:0]$348
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_DATA[31:0]$349
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$155.$result[31:0]$339
   126/587: $5\sra$func$cva6_processor_shim.v:100$156.$result[31:0]$343
   127/587: $5\sra$func$cva6_processor_shim.v:100$156.shamt[4:0]$345
   128/587: $5\sra$func$cva6_processor_shim.v:100$156.d[63:0]$344
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$155.alu_fun[2:0]$342
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$155.imm_data[31:0]$341
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$155.reg_data[31:0]$340
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA[31:0]$347
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_ADDR[4:0]$346
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$154.$result[31:0]$337
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$154.inst[31:0]$338
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_DATA[31:0]$335
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_DATA[31:0]$333
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_ADDR[4:0]$325
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_DATA[31:0]$326
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_DATA[31:0]$328
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_ADDR[4:0]$327
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_DATA[31:0]$324
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_ADDR[4:0]$323
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$152.$result[31:0]$310
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$152.inst[31:0]$311
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_DATA[31:0]$332
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_ADDR[4:0]$331
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA[31:0]$330
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_ADDR[4:0]$329
   218/587: $4\sra$func$cva6_processor_shim.v:100$156.shamt[4:0]$322
   219/587: $4\sra$func$cva6_processor_shim.v:100$156.d[63:0]$321
   220/587: $4\sra$func$cva6_processor_shim.v:100$156.$result[31:0]$320
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$155.alu_fun[2:0]$319
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$155.imm_data[31:0]$318
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$155.reg_data[31:0]$317
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$155.$result[31:0]$316
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$154.inst[31:0]$315
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$154.$result[31:0]$314
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$153.instr[31:0]$313
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$153.$result[0:0]$312
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_DATA[31:0]$308
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_DATA[31:0]$306
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_ADDR[4:0]$292
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_DATA[31:0]$293
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_DATA[31:0]$295
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_ADDR[4:0]$294
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_DATA[31:0]$291
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_ADDR[4:0]$290
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$150.$result[31:0]$273
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$150.inst[31:0]$274
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_DATA[31:0]$305
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_ADDR[4:0]$304
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA[31:0]$303
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_ADDR[4:0]$302
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_DATA[31:0]$301
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_ADDR[4:0]$300
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_DATA[31:0]$299
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_ADDR[4:0]$298
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_DATA[31:0]$297
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_ADDR[4:0]$296
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$156.shamt[4:0]$289
   350/587: $3\sra$func$cva6_processor_shim.v:100$156.d[63:0]$288
   351/587: $3\sra$func$cva6_processor_shim.v:100$156.$result[31:0]$287
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$155.alu_fun[2:0]$286
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$155.imm_data[31:0]$285
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$155.reg_data[31:0]$284
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$155.$result[31:0]$283
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$154.inst[31:0]$282
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$154.$result[31:0]$281
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$153.instr[31:0]$280
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$153.$result[0:0]$279
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$152.inst[31:0]$278
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$152.$result[31:0]$277
   362/587: $3\is_load$func$cva6_processor_shim.v:232$151.instr[31:0]$276
   363/587: $3\is_load$func$cva6_processor_shim.v:232$151.$result[0:0]$275
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_DATA[31:0]$271
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_ADDR[4:0]$270
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA[31:0]$269
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_ADDR[4:0]$268
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_DATA[31:0]$267
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_ADDR[4:0]$266
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_DATA[31:0]$265
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_ADDR[4:0]$264
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_DATA[31:0]$263
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_ADDR[4:0]$262
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_DATA[31:0]$261
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_ADDR[4:0]$260
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_DATA[31:0]$259
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_ADDR[4:0]$258
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_DATA[31:0]$257
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_ADDR[4:0]$256
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$156.shamt[4:0]$255
   445/587: $2\sra$func$cva6_processor_shim.v:100$156.d[63:0]$254
   446/587: $2\sra$func$cva6_processor_shim.v:100$156.$result[31:0]$253
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$155.alu_fun[2:0]$252
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$155.imm_data[31:0]$251
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$155.reg_data[31:0]$250
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$155.$result[31:0]$249
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$154.inst[31:0]$248
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$154.$result[31:0]$247
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$153.instr[31:0]$246
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$153.$result[0:0]$245
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$152.inst[31:0]$244
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$152.$result[31:0]$243
   457/587: $2\is_load$func$cva6_processor_shim.v:232$151.instr[31:0]$242
   458/587: $2\is_load$func$cva6_processor_shim.v:232$151.$result[0:0]$241
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$150.inst[31:0]$240
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$150.$result[31:0]$239
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$149.$result[0:0]$237
   466/587: $2\is_store$func$cva6_processor_shim.v:226$149.instr[31:0]$238
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_DATA[31:0]$236
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_ADDR[4:0]$235
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA[31:0]$234
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_ADDR[4:0]$233
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_DATA[31:0]$232
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_ADDR[4:0]$231
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_DATA[31:0]$230
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_ADDR[4:0]$229
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_DATA[31:0]$228
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_ADDR[4:0]$227
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_DATA[31:0]$226
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_ADDR[4:0]$225
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_DATA[31:0]$224
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_ADDR[4:0]$223
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_DATA[31:0]$222
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_ADDR[4:0]$221
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$156.shamt[4:0]$220
   570/587: $1\sra$func$cva6_processor_shim.v:100$156.d[63:0]$219
   571/587: $1\sra$func$cva6_processor_shim.v:100$156.$result[31:0]$218
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$155.alu_fun[2:0]$217
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$155.imm_data[31:0]$216
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$155.reg_data[31:0]$215
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$155.$result[31:0]$214
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$154.inst[31:0]$213
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$154.$result[31:0]$212
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$153.instr[31:0]$211
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$153.$result[0:0]$210
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$152.inst[31:0]$209
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$152.$result[31:0]$208
   582/587: $1\is_load$func$cva6_processor_shim.v:232$151.instr[31:0]$207
   583/587: $1\is_load$func$cva6_processor_shim.v:232$151.$result[0:0]$206
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$150.inst[31:0]$205
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$150.$result[31:0]$204
   586/587: $1\is_store$func$cva6_processor_shim.v:226$149.instr[31:0]$203
   587/587: $1\is_store$func$cva6_processor_shim.v:226$149.$result[0:0]$202
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$147'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$145'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$143'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$141'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$139'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
     1/58: $4\local_ready_2[0:0]
     2/58: $3\tb_io_instr_valid_i_2[0:0]
     3/58: $3\pc_2[31:0]
     4/58: $3\local_ready_2[0:0]
     5/58: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_DATA[31:0]$102
     6/58: $4\local_ready_1[0:0]
     7/58: $3\tb_io_instr_valid_i_1[0:0]
     8/58: $3\pc_1[31:0]
     9/58: $3\local_ready_1[0:0]
    10/58: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_DATA[31:0]$94
    11/58: $2\local_ready_2[0:0]
    12/58: $2\pc_2[31:0]
    13/58: $2\tb_io_instr_valid_i_2[0:0]
    14/58: $2\tb_io_instr_i_2[31:0]
    15/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_DATA[31:0]$91
    16/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_ADDR[1:0]$90
    17/58: $2\local_ready_1[0:0]
    18/58: $2\pc_1[31:0]
    19/58: $2\tb_io_instr_valid_i_1[0:0]
    20/58: $2\tb_io_instr_i_1[31:0]
    21/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_DATA[31:0]$89
    22/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_ADDR[1:0]$88
    23/58: $1\local_ready_2[0:0]
    24/58: $1\local_ready_1[0:0]
    25/58: $1\tb_io_instr_i_2[31:0]
    26/58: $1\tb_io_instr_i_1[31:0]
    27/58: $1\tb_io_instr_valid_i_2[0:0]
    28/58: $1\tb_io_instr_valid_i_1[0:0]
    29/58: $1\pc_2[31:0]
    30/58: $1\pc_1[31:0]
    31/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_DATA[31:0]$67
    32/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_ADDR[1:0]$66
    33/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_DATA[31:0]$65
    34/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_ADDR[1:0]$64
    35/58: $0$formal$cva6_lsu_formal.v:156$3_EN[0:0]$39
    36/58: $0$formal$cva6_lsu_formal.v:156$3_CHECK[0:0]$38
    37/58: $0$formal$cva6_lsu_formal.v:159$4_EN[0:0]$41
    38/58: $0$formal$cva6_lsu_formal.v:159$4_CHECK[0:0]$40
    39/58: $0$formal$cva6_lsu_formal.v:160$5_EN[0:0]$43
    40/58: $0$formal$cva6_lsu_formal.v:160$5_CHECK[0:0]$42
    41/58: $0$formal$cva6_lsu_formal.v:161$6_EN[0:0]$45
    42/58: $0$formal$cva6_lsu_formal.v:161$6_CHECK[0:0]$44
    43/58: $0$formal$cva6_lsu_formal.v:162$7_EN[0:0]$47
    44/58: $0$formal$cva6_lsu_formal.v:162$7_CHECK[0:0]$46
    45/58: $0$formal$cva6_lsu_formal.v:164$8_EN[0:0]$49
    46/58: $0$formal$cva6_lsu_formal.v:164$8_CHECK[0:0]$48
    47/58: $0$formal$cva6_lsu_formal.v:166$9_EN[0:0]$51
    48/58: $0$formal$cva6_lsu_formal.v:166$9_CHECK[0:0]$50
    49/58: $0$formal$cva6_lsu_formal.v:168$10_EN[0:0]$53
    50/58: $0$formal$cva6_lsu_formal.v:168$10_CHECK[0:0]$52
    51/58: $0$formal$cva6_lsu_formal.v:169$11_EN[0:0]$55
    52/58: $0$formal$cva6_lsu_formal.v:169$11_CHECK[0:0]$54
    53/58: $0$formal$cva6_lsu_formal.v:173$12_EN[0:0]$57
    54/58: $0$formal$cva6_lsu_formal.v:173$12_CHECK[0:0]$56
    55/58: $0$formal$cva6_lsu_formal.v:175$13_EN[0:0]$59
    56/58: $0$formal$cva6_lsu_formal.v:175$13_CHECK[0:0]$58
    57/58: $0$formal$cva6_lsu_formal.v:210$14_EN[0:0]$61
    58/58: $0$formal$cva6_lsu_formal.v:210$14_CHECK[0:0]$60
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$409_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$609'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:70$404' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$604'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$425_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$604'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$425_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$604'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:68$403' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$599'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$424_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$599'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$424_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$599'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cva6_lsu_model.\CLK_CYCLE' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10228' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\instr_i_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10229' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_store_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10230' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_commit_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10231' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_serve_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10232' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10233' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10234' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_queue_state' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10235' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10236' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10237' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10238' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10239' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10240' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10241' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10242' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10243' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10244' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10245' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10246' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10247' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\ready_flag' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10248' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10249' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10250' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10251' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10252' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10253' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10254' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10255' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10256' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_load_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10257' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$405' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10258' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$406' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10259' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$407' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10260' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$408' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10261' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10262' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10263' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10264' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10265' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10266' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10267' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10268' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10269' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10270' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10271' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10272' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10273' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10274' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$410_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10275' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10276' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$411_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10277' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10278' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$412_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10279' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10280' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$413_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10281' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10282' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10283' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10284' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$415_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10285' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10286' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$416_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10287' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10288' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10289' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10290' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$418_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10291' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10292' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$419_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10293' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10294' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$420_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10295' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10296' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$421_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10297' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10298' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$422_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10299' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10300' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$423_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
  created $adff cell `$procdff$10301' with positive edge clock and negative level reset.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10302' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10303' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10304' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10305' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10306' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10307' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10308' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10309' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10310' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10311' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10312' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10313' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10314' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10315' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10316' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10317' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10318' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10319' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10320' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10321' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10322' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10323' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10324' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10325' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10326' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10327' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10328' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10329' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10330' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10331' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10332' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10333' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10334' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10335' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10336' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10337' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10338' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10339' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10340' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10341' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10342' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10343' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10344' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10345' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10346' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10347' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10348' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10349' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10350' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10351' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10352' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10353' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10354' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10355' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10356' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10357' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10358' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10359' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10360' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10361' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10362' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10363' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10364' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10365' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10366' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10367' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10368' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10369' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10370' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10371' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10372' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10373' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10374' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10375' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10376' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10377' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10378' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10379' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10380' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$149.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10381' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$149.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10382' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$150.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10383' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$150.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10384' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$151.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10385' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$151.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10386' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$152.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10387' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$152.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10388' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$153.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10389' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$153.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10390' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$154.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10391' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$154.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10392' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$155.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10393' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$155.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10394' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$155.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10395' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$155.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10396' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$156.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10397' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$156.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10398' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$156.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10399' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10400' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10401' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10402' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10403' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10404' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10405' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10406' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10407' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10408' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10409' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10410' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10411' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10412' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10413' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10414' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10415' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10416' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10417' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10418' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10419' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10420' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10421' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10422' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10423' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10424' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10425' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10426' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10427' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10428' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10429' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10430' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10431' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10432' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10433' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10434' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10435' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10436' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10437' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10438' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10439' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10440' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10441' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10442' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10443' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10444' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10445' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10446' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10447' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10448' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10449' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10450' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10451' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10452' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10453' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10454' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10455' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10456' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10457' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10458' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10459' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10460' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10461' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10462' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10463' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10464' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$157_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10465' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10466' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$158_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10467' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10468' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$159_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10469' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10470' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$160_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10471' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10472' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$161_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10473' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10474' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$162_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10475' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10476' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$163_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10477' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10478' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$164_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
  created $dff cell `$procdff$10479' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10480' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10481' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10482' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10483' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10484' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10485' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10486' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10487' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10488' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10489' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10490' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10491' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10492' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10493' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10494' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10495' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10496' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10497' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10498' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10499' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10500' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10501' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10502' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10503' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10504' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10505' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10506' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10507' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10508' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10509' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:173$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10510' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:173$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10511' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:175$13_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10512' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:175$13_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10513' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:210$14_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10514' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:210$14_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$10515' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$10516' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$10517' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$10518' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$10519' with positive edge clock.

4.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$609'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$609'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$604'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$604'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$599'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$599'.
Found and cleaned up 28 empty switches in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:85$432'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$165'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$147'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$145'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$143'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$141'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$139'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
Cleaned up 70 empty switches.

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_model.
<suppressed ~23 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~3 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 674 unused cells and 3799 unused wires.
<suppressed ~771 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~132 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Removed a total of 3149 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10002.
    dead port 2/2 on $mux $procmux$10008.
    dead port 1/2 on $mux $procmux$10011.
    dead port 1/2 on $mux $procmux$10028.
    dead port 1/2 on $mux $procmux$10034.
    dead port 1/2 on $mux $procmux$10040.
    dead port 1/2 on $mux $procmux$10046.
    dead port 1/2 on $mux $procmux$10064.
    dead port 1/2 on $mux $procmux$10070.
    dead port 1/2 on $mux $procmux$10076.
    dead port 1/2 on $mux $procmux$10082.
    dead port 2/2 on $mux $procmux$9929.
    dead port 2/2 on $mux $procmux$9931.
    dead port 1/2 on $mux $procmux$9934.
    dead port 2/2 on $mux $procmux$9940.
    dead port 1/2 on $mux $procmux$9943.
    dead port 2/2 on $mux $procmux$9949.
    dead port 1/2 on $mux $procmux$9952.
    dead port 2/2 on $mux $procmux$9958.
    dead port 1/2 on $mux $procmux$9961.
    dead port 2/2 on $mux $procmux$9979.
    dead port 2/2 on $mux $procmux$9981.
    dead port 1/2 on $mux $procmux$9984.
    dead port 2/2 on $mux $procmux$9990.
    dead port 1/2 on $mux $procmux$9993.
    dead port 2/2 on $mux $procmux$9999.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1031.
    dead port 2/2 on $mux $procmux$938.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1375: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$1353: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$2065: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$1982: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1783: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1705: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1630: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1471: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1445: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6115.
    dead port 1/2 on $mux $procmux$6122.
    dead port 2/2 on $mux $procmux$6124.
    dead port 2/2 on $mux $procmux$6127.
    dead port 1/2 on $mux $procmux$6134.
    dead port 2/2 on $mux $procmux$6136.
    dead port 2/2 on $mux $procmux$6139.
    dead port 1/2 on $mux $procmux$6146.
    dead port 2/2 on $mux $procmux$6148.
    dead port 2/2 on $mux $procmux$6151.
    dead port 1/2 on $mux $procmux$6158.
    dead port 2/2 on $mux $procmux$6160.
    dead port 2/2 on $mux $procmux$6163.
    dead port 1/2 on $mux $procmux$6170.
    dead port 2/2 on $mux $procmux$6172.
    dead port 2/2 on $mux $procmux$6175.
    dead port 1/2 on $mux $procmux$6182.
    dead port 2/2 on $mux $procmux$6184.
    dead port 2/2 on $mux $procmux$6187.
    dead port 1/2 on $mux $procmux$6194.
    dead port 2/2 on $mux $procmux$6196.
    dead port 2/2 on $mux $procmux$6199.
    dead port 1/2 on $mux $procmux$6206.
    dead port 2/2 on $mux $procmux$6208.
    dead port 2/2 on $mux $procmux$6211.
    dead port 1/2 on $mux $procmux$6218.
    dead port 2/2 on $mux $procmux$6220.
    dead port 2/2 on $mux $procmux$6223.
    dead port 1/2 on $mux $procmux$6230.
    dead port 2/2 on $mux $procmux$6232.
    dead port 2/2 on $mux $procmux$6235.
    dead port 1/2 on $mux $procmux$6242.
    dead port 2/2 on $mux $procmux$6244.
    dead port 2/2 on $mux $procmux$6247.
    dead port 1/2 on $mux $procmux$6254.
    dead port 2/2 on $mux $procmux$6256.
    dead port 2/2 on $mux $procmux$6259.
    dead port 1/2 on $mux $procmux$6266.
    dead port 2/2 on $mux $procmux$6268.
    dead port 2/2 on $mux $procmux$6271.
    dead port 1/2 on $mux $procmux$6278.
    dead port 2/2 on $mux $procmux$6280.
    dead port 2/2 on $mux $procmux$6283.
    dead port 1/2 on $mux $procmux$6290.
    dead port 2/2 on $mux $procmux$6292.
    dead port 2/2 on $mux $procmux$6295.
    dead port 1/2 on $mux $procmux$6350.
    dead port 2/2 on $mux $procmux$6352.
    dead port 2/2 on $mux $procmux$6355.
    dead port 2/2 on $mux $procmux$6620.
    dead port 2/2 on $mux $procmux$6622.
    dead port 2/2 on $mux $procmux$6625.
    dead port 1/2 on $mux $procmux$1846.
    dead port 1/2 on $mux $procmux$1849.
    dead port 2/2 on $mux $procmux$1852.
    dead port 2/2 on $mux $procmux$1859.
    dead port 1/2 on $mux $procmux$1861.
    dead port 1/2 on $mux $procmux$1864.
    dead port 2/2 on $mux $procmux$1867.
    dead port 2/2 on $mux $procmux$2540.
    dead port 1/2 on $mux $procmux$2543.
    dead port 1/2 on $mux $procmux$2546.
    dead port 2/2 on $mux $procmux$2548.
    dead port 2/2 on $mux $procmux$4697.
    dead port 1/2 on $mux $procmux$4700.
    dead port 2/2 on $mux $procmux$4702.
    dead port 2/2 on $mux $procmux$4705.
    dead port 2/2 on $mux $procmux$2551.
    dead port 2/2 on $mux $procmux$1874.
    dead port 1/2 on $mux $procmux$1876.
    dead port 1/2 on $mux $procmux$1879.
    dead port 2/2 on $mux $procmux$1882.
    dead port 2/2 on $mux $procmux$3212.
    dead port 1/2 on $mux $procmux$3215.
    dead port 1/2 on $mux $procmux$3218.
    dead port 2/2 on $mux $procmux$3220.
    dead port 2/2 on $mux $procmux$3223.
    dead port 1/2 on $mux $procmux$1888.
    dead port 2/2 on $mux $procmux$6662.
    dead port 2/2 on $mux $procmux$6664.
    dead port 2/2 on $mux $procmux$6667.
    dead port 1/2 on $mux $procmux$1891.
    dead port 2/2 on $mux $procmux$1894.
    dead port 1/2 on $mux $procmux$1900.
    dead port 1/2 on $mux $procmux$1903.
    dead port 2/2 on $mux $procmux$1906.
    dead port 1/2 on $mux $procmux$1912.
    dead port 1/2 on $mux $procmux$1915.
    dead port 2/2 on $mux $procmux$1918.
    dead port 1/2 on $mux $procmux$1936.
    dead port 1/2 on $mux $procmux$1939.
    dead port 2/2 on $mux $procmux$1942.
    dead port 1/2 on $mux $procmux$1948.
    dead port 1/2 on $mux $procmux$1951.
    dead port 2/2 on $mux $procmux$4742.
    dead port 1/2 on $mux $procmux$4745.
    dead port 2/2 on $mux $procmux$4747.
    dead port 2/2 on $mux $procmux$4750.
    dead port 2/2 on $mux $procmux$1954.
    dead port 1/2 on $mux $procmux$1960.
    dead port 1/2 on $mux $procmux$1963.
    dead port 2/2 on $mux $procmux$1966.
    dead port 1/2 on $mux $procmux$1972.
    dead port 1/2 on $mux $procmux$1975.
    dead port 2/2 on $mux $procmux$2588.
    dead port 1/2 on $mux $procmux$2591.
    dead port 2/2 on $mux $procmux$6704.
    dead port 2/2 on $mux $procmux$6706.
    dead port 2/2 on $mux $procmux$6709.
    dead port 1/2 on $mux $procmux$2594.
    dead port 2/2 on $mux $procmux$2596.
    dead port 2/2 on $mux $procmux$2599.
    dead port 2/2 on $mux $procmux$3260.
    dead port 1/2 on $mux $procmux$3263.
    dead port 1/2 on $mux $procmux$3266.
    dead port 2/2 on $mux $procmux$3268.
    dead port 2/2 on $mux $procmux$3271.
    dead port 2/2 on $mux $procmux$1978.
    dead port 1/2 on $mux $procmux$1984.
    dead port 1/2 on $mux $procmux$1987.
    dead port 2/2 on $mux $procmux$1990.
    dead port 1/2 on $mux $procmux$1996.
    dead port 2/2 on $mux $procmux$1999.
    dead port 1/2 on $mux $procmux$2005.
    dead port 2/2 on $mux $procmux$2008.
    dead port 2/2 on $mux $procmux$4787.
    dead port 1/2 on $mux $procmux$4790.
    dead port 2/2 on $mux $procmux$4792.
    dead port 2/2 on $mux $procmux$4795.
    dead port 1/2 on $mux $procmux$2023.
    dead port 2/2 on $mux $procmux$2026.
    dead port 1/2 on $mux $procmux$2032.
    dead port 2/2 on $mux $procmux$2035.
    dead port 2/2 on $mux $procmux$6746.
    dead port 2/2 on $mux $procmux$6748.
    dead port 2/2 on $mux $procmux$6751.
    dead port 1/2 on $mux $procmux$2041.
    dead port 2/2 on $mux $procmux$2044.
    dead port 1/2 on $mux $procmux$2050.
    dead port 2/2 on $mux $procmux$2053.
    dead port 1/2 on $mux $procmux$2059.
    dead port 2/2 on $mux $procmux$2062.
    dead port 1/2 on $mux $procmux$2068.
    dead port 2/2 on $mux $procmux$2071.
    dead port 2/2 on $mux $procmux$3308.
    dead port 1/2 on $mux $procmux$3311.
    dead port 1/2 on $mux $procmux$3314.
    dead port 2/2 on $mux $procmux$3316.
    dead port 2/2 on $mux $procmux$3319.
    dead port 2/2 on $mux $procmux$2636.
    dead port 1/2 on $mux $procmux$2639.
    dead port 1/2 on $mux $procmux$2642.
    dead port 2/2 on $mux $procmux$2644.
    dead port 2/2 on $mux $procmux$2647.
    dead port 2/2 on $mux $procmux$4832.
    dead port 1/2 on $mux $procmux$4835.
    dead port 2/2 on $mux $procmux$4837.
    dead port 2/2 on $mux $procmux$4840.
    dead port 2/2 on $mux $procmux$6788.
    dead port 2/2 on $mux $procmux$6790.
    dead port 2/2 on $mux $procmux$6793.
    dead port 2/2 on $mux $procmux$3356.
    dead port 1/2 on $mux $procmux$3359.
    dead port 1/2 on $mux $procmux$3362.
    dead port 2/2 on $mux $procmux$3364.
    dead port 2/2 on $mux $procmux$3367.
    dead port 2/2 on $mux $procmux$6830.
    dead port 2/2 on $mux $procmux$6832.
    dead port 2/2 on $mux $procmux$6835.
    dead port 2/2 on $mux $procmux$4877.
    dead port 1/2 on $mux $procmux$4880.
    dead port 2/2 on $mux $procmux$4882.
    dead port 2/2 on $mux $procmux$4885.
    dead port 2/2 on $mux $procmux$2108.
    dead port 1/2 on $mux $procmux$2111.
    dead port 2/2 on $mux $procmux$2684.
    dead port 1/2 on $mux $procmux$2687.
    dead port 1/2 on $mux $procmux$2690.
    dead port 2/2 on $mux $procmux$2692.
    dead port 2/2 on $mux $procmux$2695.
    dead port 1/2 on $mux $procmux$2114.
    dead port 2/2 on $mux $procmux$2116.
    dead port 2/2 on $mux $procmux$2119.
    dead port 2/2 on $mux $procmux$6872.
    dead port 2/2 on $mux $procmux$6874.
    dead port 2/2 on $mux $procmux$6877.
    dead port 2/2 on $mux $procmux$4922.
    dead port 1/2 on $mux $procmux$4925.
    dead port 2/2 on $mux $procmux$4927.
    dead port 2/2 on $mux $procmux$4930.
    dead port 2/2 on $mux $procmux$3404.
    dead port 1/2 on $mux $procmux$3407.
    dead port 1/2 on $mux $procmux$3410.
    dead port 2/2 on $mux $procmux$3412.
    dead port 2/2 on $mux $procmux$3415.
    dead port 2/2 on $mux $procmux$2732.
    dead port 1/2 on $mux $procmux$2735.
    dead port 1/2 on $mux $procmux$2738.
    dead port 2/2 on $mux $procmux$2740.
    dead port 2/2 on $mux $procmux$6914.
    dead port 2/2 on $mux $procmux$6916.
    dead port 2/2 on $mux $procmux$6919.
    dead port 2/2 on $mux $procmux$2743.
    dead port 2/2 on $mux $procmux$2156.
    dead port 1/2 on $mux $procmux$2159.
    dead port 1/2 on $mux $procmux$2162.
    dead port 2/2 on $mux $procmux$2164.
    dead port 2/2 on $mux $procmux$4967.
    dead port 1/2 on $mux $procmux$4970.
    dead port 2/2 on $mux $procmux$4972.
    dead port 2/2 on $mux $procmux$4975.
    dead port 2/2 on $mux $procmux$2167.
    dead port 2/2 on $mux $procmux$3452.
    dead port 1/2 on $mux $procmux$3455.
    dead port 1/2 on $mux $procmux$3458.
    dead port 2/2 on $mux $procmux$3460.
    dead port 2/2 on $mux $procmux$3463.
    dead port 2/2 on $mux $procmux$6956.
    dead port 2/2 on $mux $procmux$6958.
    dead port 2/2 on $mux $procmux$6961.
    dead port 2/2 on $mux $procmux$2780.
    dead port 1/2 on $mux $procmux$2783.
    dead port 2/2 on $mux $procmux$5012.
    dead port 1/2 on $mux $procmux$5015.
    dead port 2/2 on $mux $procmux$5017.
    dead port 2/2 on $mux $procmux$5020.
    dead port 1/2 on $mux $procmux$2786.
    dead port 2/2 on $mux $procmux$2788.
    dead port 2/2 on $mux $procmux$2791.
    dead port 2/2 on $mux $procmux$6998.
    dead port 2/2 on $mux $procmux$7000.
    dead port 2/2 on $mux $procmux$7003.
    dead port 2/2 on $mux $procmux$3500.
    dead port 1/2 on $mux $procmux$3503.
    dead port 1/2 on $mux $procmux$3506.
    dead port 2/2 on $mux $procmux$3508.
    dead port 2/2 on $mux $procmux$3511.
    dead port 2/2 on $mux $procmux$2204.
    dead port 1/2 on $mux $procmux$2207.
    dead port 1/2 on $mux $procmux$2210.
    dead port 2/2 on $mux $procmux$2212.
    dead port 2/2 on $mux $procmux$2215.
    dead port 2/2 on $mux $procmux$5057.
    dead port 1/2 on $mux $procmux$5060.
    dead port 2/2 on $mux $procmux$5062.
    dead port 2/2 on $mux $procmux$5065.
    dead port 2/2 on $mux $procmux$7040.
    dead port 2/2 on $mux $procmux$7042.
    dead port 2/2 on $mux $procmux$7045.
    dead port 2/2 on $mux $procmux$2828.
    dead port 1/2 on $mux $procmux$2831.
    dead port 1/2 on $mux $procmux$2834.
    dead port 2/2 on $mux $procmux$2836.
    dead port 2/2 on $mux $procmux$2839.
    dead port 2/2 on $mux $procmux$3548.
    dead port 1/2 on $mux $procmux$3551.
    dead port 1/2 on $mux $procmux$3554.
    dead port 2/2 on $mux $procmux$3556.
    dead port 2/2 on $mux $procmux$3559.
    dead port 2/2 on $mux $procmux$5102.
    dead port 1/2 on $mux $procmux$5105.
    dead port 2/2 on $mux $procmux$5107.
    dead port 2/2 on $mux $procmux$5110.
    dead port 2/2 on $mux $procmux$7082.
    dead port 2/2 on $mux $procmux$7084.
    dead port 2/2 on $mux $procmux$7087.
    dead port 2/2 on $mux $procmux$2252.
    dead port 1/2 on $mux $procmux$2255.
    dead port 1/2 on $mux $procmux$2258.
    dead port 2/2 on $mux $procmux$2260.
    dead port 2/2 on $mux $procmux$2263.
    dead port 2/2 on $mux $procmux$2876.
    dead port 1/2 on $mux $procmux$2879.
    dead port 2/2 on $mux $procmux$3596.
    dead port 1/2 on $mux $procmux$3599.
    dead port 1/2 on $mux $procmux$3602.
    dead port 2/2 on $mux $procmux$3604.
    dead port 2/2 on $mux $procmux$3607.
    dead port 2/2 on $mux $procmux$5147.
    dead port 1/2 on $mux $procmux$5150.
    dead port 2/2 on $mux $procmux$7124.
    dead port 2/2 on $mux $procmux$7126.
    dead port 2/2 on $mux $procmux$7129.
    dead port 2/2 on $mux $procmux$5152.
    dead port 2/2 on $mux $procmux$5155.
    dead port 2/2 on $mux $procmux$7166.
    dead port 2/2 on $mux $procmux$7168.
    dead port 2/2 on $mux $procmux$7171.
    dead port 2/2 on $mux $procmux$5192.
    dead port 1/2 on $mux $procmux$5195.
    dead port 2/2 on $mux $procmux$5197.
    dead port 2/2 on $mux $procmux$5200.
    dead port 1/2 on $mux $procmux$3662.
    dead port 1/2 on $mux $procmux$3665.
    dead port 2/2 on $mux $procmux$3667.
    dead port 2/2 on $mux $procmux$3670.
    dead port 1/2 on $mux $procmux$3677.
    dead port 1/2 on $mux $procmux$3680.
    dead port 2/2 on $mux $procmux$3682.
    dead port 2/2 on $mux $procmux$3685.
    dead port 1/2 on $mux $procmux$3692.
    dead port 1/2 on $mux $procmux$3695.
    dead port 2/2 on $mux $procmux$3697.
    dead port 2/2 on $mux $procmux$3700.
    dead port 1/2 on $mux $procmux$3707.
    dead port 1/2 on $mux $procmux$3710.
    dead port 2/2 on $mux $procmux$3712.
    dead port 2/2 on $mux $procmux$3715.
    dead port 2/2 on $mux $procmux$7208.
    dead port 2/2 on $mux $procmux$7210.
    dead port 2/2 on $mux $procmux$7213.
    dead port 1/2 on $mux $procmux$3722.
    dead port 1/2 on $mux $procmux$3725.
    dead port 2/2 on $mux $procmux$3727.
    dead port 2/2 on $mux $procmux$3730.
    dead port 1/2 on $mux $procmux$3737.
    dead port 1/2 on $mux $procmux$3740.
    dead port 2/2 on $mux $procmux$3742.
    dead port 2/2 on $mux $procmux$5237.
    dead port 1/2 on $mux $procmux$5240.
    dead port 2/2 on $mux $procmux$5242.
    dead port 2/2 on $mux $procmux$5245.
    dead port 2/2 on $mux $procmux$3745.
    dead port 1/2 on $mux $procmux$3752.
    dead port 1/2 on $mux $procmux$3755.
    dead port 2/2 on $mux $procmux$3757.
    dead port 2/2 on $mux $procmux$3760.
    dead port 1/2 on $mux $procmux$3767.
    dead port 1/2 on $mux $procmux$3770.
    dead port 2/2 on $mux $procmux$3772.
    dead port 2/2 on $mux $procmux$3775.
    dead port 1/2 on $mux $procmux$3782.
    dead port 1/2 on $mux $procmux$3785.
    dead port 2/2 on $mux $procmux$3787.
    dead port 2/2 on $mux $procmux$3790.
    dead port 1/2 on $mux $procmux$3797.
    dead port 1/2 on $mux $procmux$3800.
    dead port 2/2 on $mux $procmux$7250.
    dead port 2/2 on $mux $procmux$7252.
    dead port 2/2 on $mux $procmux$7255.
    dead port 2/2 on $mux $procmux$3802.
    dead port 2/2 on $mux $procmux$3805.
    dead port 1/2 on $mux $procmux$3812.
    dead port 1/2 on $mux $procmux$3815.
    dead port 2/2 on $mux $procmux$3817.
    dead port 2/2 on $mux $procmux$3820.
    dead port 1/2 on $mux $procmux$3827.
    dead port 1/2 on $mux $procmux$3830.
    dead port 2/2 on $mux $procmux$3832.
    dead port 2/2 on $mux $procmux$3835.
    dead port 2/2 on $mux $procmux$5282.
    dead port 1/2 on $mux $procmux$5285.
    dead port 2/2 on $mux $procmux$5287.
    dead port 2/2 on $mux $procmux$5290.
    dead port 1/2 on $mux $procmux$3842.
    dead port 1/2 on $mux $procmux$3845.
    dead port 2/2 on $mux $procmux$3847.
    dead port 2/2 on $mux $procmux$3850.
    dead port 1/2 on $mux $procmux$3857.
    dead port 1/2 on $mux $procmux$3860.
    dead port 2/2 on $mux $procmux$3862.
    dead port 2/2 on $mux $procmux$3865.
    dead port 1/2 on $mux $procmux$3872.
    dead port 1/2 on $mux $procmux$3875.
    dead port 2/2 on $mux $procmux$3877.
    dead port 2/2 on $mux $procmux$3880.
    dead port 2/2 on $mux $procmux$7292.
    dead port 2/2 on $mux $procmux$7294.
    dead port 2/2 on $mux $procmux$7297.
    dead port 1/2 on $mux $procmux$3887.
    dead port 1/2 on $mux $procmux$3890.
    dead port 2/2 on $mux $procmux$3892.
    dead port 2/2 on $mux $procmux$3895.
    dead port 1/2 on $mux $procmux$3902.
    dead port 1/2 on $mux $procmux$3905.
    dead port 2/2 on $mux $procmux$3907.
    dead port 2/2 on $mux $procmux$3910.
    dead port 1/2 on $mux $procmux$3917.
    dead port 1/2 on $mux $procmux$3920.
    dead port 2/2 on $mux $procmux$3922.
    dead port 2/2 on $mux $procmux$3925.
    dead port 1/2 on $mux $procmux$3932.
    dead port 1/2 on $mux $procmux$3935.
    dead port 2/2 on $mux $procmux$5327.
    dead port 1/2 on $mux $procmux$5330.
    dead port 2/2 on $mux $procmux$5332.
    dead port 2/2 on $mux $procmux$5335.
    dead port 2/2 on $mux $procmux$3937.
    dead port 2/2 on $mux $procmux$3940.
    dead port 1/2 on $mux $procmux$3947.
    dead port 1/2 on $mux $procmux$3950.
    dead port 2/2 on $mux $procmux$3952.
    dead port 2/2 on $mux $procmux$3955.
    dead port 1/2 on $mux $procmux$3962.
    dead port 2/2 on $mux $procmux$7334.
    dead port 2/2 on $mux $procmux$7336.
    dead port 2/2 on $mux $procmux$7339.
    dead port 1/2 on $mux $procmux$3965.
    dead port 2/2 on $mux $procmux$3967.
    dead port 2/2 on $mux $procmux$3970.
    dead port 1/2 on $mux $procmux$3977.
    dead port 1/2 on $mux $procmux$3980.
    dead port 2/2 on $mux $procmux$3982.
    dead port 2/2 on $mux $procmux$3985.
    dead port 1/2 on $mux $procmux$3992.
    dead port 1/2 on $mux $procmux$3995.
    dead port 2/2 on $mux $procmux$3997.
    dead port 2/2 on $mux $procmux$4000.
    dead port 1/2 on $mux $procmux$4007.
    dead port 1/2 on $mux $procmux$4010.
    dead port 2/2 on $mux $procmux$4012.
    dead port 2/2 on $mux $procmux$4015.
    dead port 1/2 on $mux $procmux$4022.
    dead port 1/2 on $mux $procmux$4025.
    dead port 2/2 on $mux $procmux$4027.
    dead port 2/2 on $mux $procmux$4030.
    dead port 2/2 on $mux $procmux$5372.
    dead port 1/2 on $mux $procmux$5375.
    dead port 2/2 on $mux $procmux$5377.
    dead port 2/2 on $mux $procmux$5380.
    dead port 1/2 on $mux $procmux$4037.
    dead port 1/2 on $mux $procmux$4040.
    dead port 2/2 on $mux $procmux$4042.
    dead port 2/2 on $mux $procmux$7376.
    dead port 2/2 on $mux $procmux$7378.
    dead port 2/2 on $mux $procmux$7381.
    dead port 2/2 on $mux $procmux$4045.
    dead port 1/2 on $mux $procmux$4052.
    dead port 1/2 on $mux $procmux$4055.
    dead port 2/2 on $mux $procmux$4057.
    dead port 2/2 on $mux $procmux$4060.
    dead port 1/2 on $mux $procmux$4067.
    dead port 1/2 on $mux $procmux$4070.
    dead port 2/2 on $mux $procmux$4072.
    dead port 2/2 on $mux $procmux$4075.
    dead port 1/2 on $mux $procmux$4082.
    dead port 1/2 on $mux $procmux$4085.
    dead port 2/2 on $mux $procmux$4087.
    dead port 2/2 on $mux $procmux$4090.
    dead port 1/2 on $mux $procmux$4097.
    dead port 1/2 on $mux $procmux$4100.
    dead port 2/2 on $mux $procmux$4102.
    dead port 2/2 on $mux $procmux$4105.
    dead port 1/2 on $mux $procmux$4112.
    dead port 1/2 on $mux $procmux$4115.
    dead port 2/2 on $mux $procmux$4117.
    dead port 2/2 on $mux $procmux$4120.
    dead port 1/2 on $mux $procmux$4127.
    dead port 2/2 on $mux $procmux$5417.
    dead port 1/2 on $mux $procmux$5420.
    dead port 2/2 on $mux $procmux$5422.
    dead port 2/2 on $mux $procmux$5425.
    dead port 2/2 on $mux $procmux$7418.
    dead port 2/2 on $mux $procmux$7420.
    dead port 2/2 on $mux $procmux$7423.
    dead port 1/2 on $mux $procmux$4130.
    dead port 2/2 on $mux $procmux$4132.
    dead port 2/2 on $mux $procmux$4135.
    dead port 1/2 on $mux $procmux$4142.
    dead port 1/2 on $mux $procmux$4145.
    dead port 2/2 on $mux $procmux$4147.
    dead port 2/2 on $mux $procmux$4150.
    dead port 1/2 on $mux $procmux$2882.
    dead port 2/2 on $mux $procmux$2884.
    dead port 2/2 on $mux $procmux$2887.
    dead port 1/2 on $mux $procmux$1326.
    dead port 2/2 on $mux $procmux$1329.
    dead port 2/2 on $mux $procmux$1335.
    dead port 2/2 on $mux $procmux$1341.
    dead port 1/2 on $mux $procmux$1347.
    dead port 2/2 on $mux $procmux$1350.
    dead port 1/2 on $mux $procmux$1356.
    dead port 2/2 on $mux $procmux$7460.
    dead port 2/2 on $mux $procmux$7462.
    dead port 2/2 on $mux $procmux$7465.
    dead port 2/2 on $mux $procmux$1359.
    dead port 2/2 on $mux $procmux$5462.
    dead port 1/2 on $mux $procmux$5465.
    dead port 2/2 on $mux $procmux$5467.
    dead port 2/2 on $mux $procmux$5470.
    dead port 1/2 on $mux $procmux$1366.
    dead port 2/2 on $mux $procmux$1368.
    dead port 2/2 on $mux $procmux$2300.
    dead port 1/2 on $mux $procmux$2303.
    dead port 1/2 on $mux $procmux$2306.
    dead port 2/2 on $mux $procmux$2308.
    dead port 2/2 on $mux $procmux$2311.
    dead port 2/2 on $mux $procmux$4382.
    dead port 1/2 on $mux $procmux$4385.
    dead port 2/2 on $mux $procmux$4387.
    dead port 2/2 on $mux $procmux$4390.
    dead port 2/2 on $mux $procmux$1371.
    dead port 1/2 on $mux $procmux$1378.
    dead port 2/2 on $mux $procmux$1380.
    dead port 2/2 on $mux $procmux$2924.
    dead port 1/2 on $mux $procmux$2927.
    dead port 1/2 on $mux $procmux$2930.
    dead port 2/2 on $mux $procmux$2932.
    dead port 2/2 on $mux $procmux$2935.
    dead port 2/2 on $mux $procmux$1383.
    dead port 2/2 on $mux $procmux$7502.
    dead port 2/2 on $mux $procmux$7504.
    dead port 2/2 on $mux $procmux$7507.
    dead port 1/2 on $mux $procmux$1390.
    dead port 2/2 on $mux $procmux$1392.
    dead port 2/2 on $mux $procmux$1395.
    dead port 2/2 on $mux $procmux$1401.
    dead port 2/2 on $mux $procmux$1404.
    dead port 2/2 on $mux $procmux$5507.
    dead port 1/2 on $mux $procmux$5510.
    dead port 2/2 on $mux $procmux$5512.
    dead port 2/2 on $mux $procmux$5515.
    dead port 2/2 on $mux $procmux$1410.
    dead port 2/2 on $mux $procmux$1413.
    dead port 2/2 on $mux $procmux$1419.
    dead port 2/2 on $mux $procmux$1422.
    dead port 2/2 on $mux $procmux$1428.
    dead port 2/2 on $mux $procmux$1434.
    dead port 2/2 on $mux $procmux$1440.
    dead port 2/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$4427.
    dead port 1/2 on $mux $procmux$4430.
    dead port 2/2 on $mux $procmux$4432.
    dead port 2/2 on $mux $procmux$4435.
    dead port 1/2 on $mux $procmux$1450.
    dead port 1/2 on $mux $procmux$1453.
    dead port 2/2 on $mux $procmux$7544.
    dead port 2/2 on $mux $procmux$7546.
    dead port 2/2 on $mux $procmux$7549.
    dead port 1/2 on $mux $procmux$1456.
    dead port 1/2 on $mux $procmux$1459.
    dead port 1/2 on $mux $procmux$1461.
    dead port 1/2 on $mux $procmux$1464.
    dead port 2/2 on $mux $procmux$2348.
    dead port 1/2 on $mux $procmux$2351.
    dead port 1/2 on $mux $procmux$2354.
    dead port 2/2 on $mux $procmux$2356.
    dead port 2/2 on $mux $procmux$2972.
    dead port 1/2 on $mux $procmux$2975.
    dead port 1/2 on $mux $procmux$2978.
    dead port 2/2 on $mux $procmux$5552.
    dead port 1/2 on $mux $procmux$5555.
    dead port 2/2 on $mux $procmux$5557.
    dead port 2/2 on $mux $procmux$5560.
    dead port 2/2 on $mux $procmux$2980.
    dead port 2/2 on $mux $procmux$2983.
    dead port 2/2 on $mux $procmux$2359.
    dead port 2/2 on $mux $procmux$1467.
    dead port 1/2 on $mux $procmux$1474.
    dead port 1/2 on $mux $procmux$1477.
    dead port 1/2 on $mux $procmux$1480.
    dead port 1/2 on $mux $procmux$1483.
    dead port 1/2 on $mux $procmux$1485.
    dead port 1/2 on $mux $procmux$1488.
    dead port 2/2 on $mux $procmux$1491.
    dead port 1/2 on $mux $procmux$1498.
    dead port 2/2 on $mux $procmux$7586.
    dead port 2/2 on $mux $procmux$7588.
    dead port 2/2 on $mux $procmux$7591.
    dead port 1/2 on $mux $procmux$1501.
    dead port 1/2 on $mux $procmux$1504.
    dead port 1/2 on $mux $procmux$1507.
    dead port 2/2 on $mux $procmux$4472.
    dead port 1/2 on $mux $procmux$4475.
    dead port 2/2 on $mux $procmux$4477.
    dead port 2/2 on $mux $procmux$4480.
    dead port 1/2 on $mux $procmux$1509.
    dead port 1/2 on $mux $procmux$1512.
    dead port 2/2 on $mux $procmux$1515.
    dead port 2/2 on $mux $procmux$1522.
    dead port 1/2 on $mux $procmux$1525.
    dead port 1/2 on $mux $procmux$1528.
    dead port 1/2 on $mux $procmux$1531.
    dead port 2/2 on $mux $procmux$5597.
    dead port 1/2 on $mux $procmux$5600.
    dead port 2/2 on $mux $procmux$5602.
    dead port 2/2 on $mux $procmux$5605.
    dead port 1/2 on $mux $procmux$1533.
    dead port 1/2 on $mux $procmux$1536.
    dead port 2/2 on $mux $procmux$1539.
    dead port 2/2 on $mux $procmux$1546.
    dead port 1/2 on $mux $procmux$1549.
    dead port 1/2 on $mux $procmux$1552.
    dead port 1/2 on $mux $procmux$1555.
    dead port 2/2 on $mux $procmux$3020.
    dead port 1/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3026.
    dead port 2/2 on $mux $procmux$7628.
    dead port 2/2 on $mux $procmux$7630.
    dead port 2/2 on $mux $procmux$7633.
    dead port 2/2 on $mux $procmux$3028.
    dead port 2/2 on $mux $procmux$3031.
    dead port 1/2 on $mux $procmux$1557.
    dead port 1/2 on $mux $procmux$1560.
    dead port 2/2 on $mux $procmux$2396.
    dead port 1/2 on $mux $procmux$2399.
    dead port 1/2 on $mux $procmux$2402.
    dead port 2/2 on $mux $procmux$2404.
    dead port 2/2 on $mux $procmux$2407.
    dead port 2/2 on $mux $procmux$1563.
    dead port 2/2 on $mux $procmux$4517.
    dead port 1/2 on $mux $procmux$4520.
    dead port 2/2 on $mux $procmux$4522.
    dead port 2/2 on $mux $procmux$4525.
    dead port 1/2 on $mux $procmux$1570.
    dead port 1/2 on $mux $procmux$1573.
    dead port 1/2 on $mux $procmux$1576.
    dead port 2/2 on $mux $procmux$5642.
    dead port 1/2 on $mux $procmux$5645.
    dead port 2/2 on $mux $procmux$5647.
    dead port 2/2 on $mux $procmux$5650.
    dead port 1/2 on $mux $procmux$1578.
    dead port 1/2 on $mux $procmux$1581.
    dead port 2/2 on $mux $procmux$1584.
    dead port 1/2 on $mux $procmux$1591.
    dead port 1/2 on $mux $procmux$1594.
    dead port 2/2 on $mux $procmux$7670.
    dead port 2/2 on $mux $procmux$7672.
    dead port 2/2 on $mux $procmux$7675.
    dead port 1/2 on $mux $procmux$1597.
    dead port 1/2 on $mux $procmux$1599.
    dead port 1/2 on $mux $procmux$1602.
    dead port 2/2 on $mux $procmux$1605.
    dead port 1/2 on $mux $procmux$1612.
    dead port 1/2 on $mux $procmux$1615.
    dead port 1/2 on $mux $procmux$1618.
    dead port 1/2 on $mux $procmux$1620.
    dead port 1/2 on $mux $procmux$1623.
    dead port 2/2 on $mux $procmux$1626.
    dead port 1/2 on $mux $procmux$1633.
    dead port 2/2 on $mux $procmux$3068.
    dead port 1/2 on $mux $procmux$3071.
    dead port 1/2 on $mux $procmux$3074.
    dead port 2/2 on $mux $procmux$3076.
    dead port 2/2 on $mux $procmux$3079.
    dead port 1/2 on $mux $procmux$1636.
    dead port 1/2 on $mux $procmux$1639.
    dead port 1/2 on $mux $procmux$1641.
    dead port 1/2 on $mux $procmux$1644.
    dead port 2/2 on $mux $procmux$4562.
    dead port 1/2 on $mux $procmux$4565.
    dead port 2/2 on $mux $procmux$4567.
    dead port 2/2 on $mux $procmux$5687.
    dead port 1/2 on $mux $procmux$5690.
    dead port 2/2 on $mux $procmux$5692.
    dead port 2/2 on $mux $procmux$5695.
    dead port 2/2 on $mux $procmux$4570.
    dead port 2/2 on $mux $procmux$7712.
    dead port 2/2 on $mux $procmux$7714.
    dead port 2/2 on $mux $procmux$7717.
    dead port 2/2 on $mux $procmux$1647.
    dead port 1/2 on $mux $procmux$1654.
    dead port 1/2 on $mux $procmux$1657.
    dead port 2/2 on $mux $procmux$2444.
    dead port 1/2 on $mux $procmux$2447.
    dead port 1/2 on $mux $procmux$2450.
    dead port 2/2 on $mux $procmux$2452.
    dead port 2/2 on $mux $procmux$2455.
    dead port 1/2 on $mux $procmux$1659.
    dead port 1/2 on $mux $procmux$1662.
    dead port 2/2 on $mux $procmux$1665.
    dead port 1/2 on $mux $procmux$1672.
    dead port 1/2 on $mux $procmux$1675.
    dead port 1/2 on $mux $procmux$1677.
    dead port 1/2 on $mux $procmux$1680.
    dead port 2/2 on $mux $procmux$1683.
    dead port 1/2 on $mux $procmux$1690.
    dead port 1/2 on $mux $procmux$1693.
    dead port 1/2 on $mux $procmux$1695.
    dead port 1/2 on $mux $procmux$1698.
    dead port 2/2 on $mux $procmux$1701.
    dead port 1/2 on $mux $procmux$1708.
    dead port 1/2 on $mux $procmux$1711.
    dead port 2/2 on $mux $procmux$3116.
    dead port 1/2 on $mux $procmux$3119.
    dead port 2/2 on $mux $procmux$5732.
    dead port 2/2 on $mux $procmux$7754.
    dead port 2/2 on $mux $procmux$7756.
    dead port 2/2 on $mux $procmux$7759.
    dead port 1/2 on $mux $procmux$5735.
    dead port 2/2 on $mux $procmux$5737.
    dead port 2/2 on $mux $procmux$5740.
    dead port 1/2 on $mux $procmux$3122.
    dead port 2/2 on $mux $procmux$3124.
    dead port 2/2 on $mux $procmux$4607.
    dead port 1/2 on $mux $procmux$4610.
    dead port 2/2 on $mux $procmux$4612.
    dead port 2/2 on $mux $procmux$4615.
    dead port 2/2 on $mux $procmux$3127.
    dead port 1/2 on $mux $procmux$1713.
    dead port 1/2 on $mux $procmux$1716.
    dead port 2/2 on $mux $procmux$1719.
    dead port 1/2 on $mux $procmux$1726.
    dead port 1/2 on $mux $procmux$1728.
    dead port 1/2 on $mux $procmux$1731.
    dead port 2/2 on $mux $procmux$1734.
    dead port 1/2 on $mux $procmux$1741.
    dead port 1/2 on $mux $procmux$1743.
    dead port 1/2 on $mux $procmux$1746.
    dead port 2/2 on $mux $procmux$1749.
    dead port 2/2 on $mux $procmux$2492.
    dead port 1/2 on $mux $procmux$2495.
    dead port 1/2 on $mux $procmux$2498.
    dead port 2/2 on $mux $procmux$2500.
    dead port 2/2 on $mux $procmux$2503.
    dead port 2/2 on $mux $procmux$7796.
    dead port 2/2 on $mux $procmux$7798.
    dead port 2/2 on $mux $procmux$7801.
    dead port 1/2 on $mux $procmux$1756.
    dead port 1/2 on $mux $procmux$1758.
    dead port 1/2 on $mux $procmux$1761.
    dead port 2/2 on $mux $procmux$5777.
    dead port 1/2 on $mux $procmux$5780.
    dead port 2/2 on $mux $procmux$5782.
    dead port 2/2 on $mux $procmux$5785.
    dead port 2/2 on $mux $procmux$7838.
    dead port 2/2 on $mux $procmux$7840.
    dead port 2/2 on $mux $procmux$7843.
    dead port 2/2 on $mux $procmux$5822.
    dead port 1/2 on $mux $procmux$5825.
    dead port 2/2 on $mux $procmux$5827.
    dead port 2/2 on $mux $procmux$5830.
    dead port 2/2 on $mux $procmux$1764.
    dead port 1/2 on $mux $procmux$1771.
    dead port 1/2 on $mux $procmux$1773.
    dead port 1/2 on $mux $procmux$1776.
    dead port 2/2 on $mux $procmux$1779.
    dead port 2/2 on $mux $procmux$4652.
    dead port 1/2 on $mux $procmux$4655.
    dead port 2/2 on $mux $procmux$4657.
    dead port 2/2 on $mux $procmux$4660.
    dead port 1/2 on $mux $procmux$1786.
    dead port 1/2 on $mux $procmux$1788.
    dead port 2/2 on $mux $procmux$3164.
    dead port 1/2 on $mux $procmux$3167.
    dead port 1/2 on $mux $procmux$3170.
    dead port 2/2 on $mux $procmux$3172.
    dead port 2/2 on $mux $procmux$7880.
    dead port 2/2 on $mux $procmux$7882.
    dead port 2/2 on $mux $procmux$7885.
    dead port 2/2 on $mux $procmux$3175.
    dead port 1/2 on $mux $procmux$1791.
    dead port 2/2 on $mux $procmux$1794.
    dead port 2/2 on $mux $procmux$1815.
    dead port 1/2 on $mux $procmux$1817.
    dead port 1/2 on $mux $procmux$1820.
    dead port 2/2 on $mux $procmux$1823.
    dead port 2/2 on $mux $procmux$1830.
    dead port 1/2 on $mux $procmux$1832.
    dead port 1/2 on $mux $procmux$1835.
    dead port 2/2 on $mux $procmux$1838.
    dead port 2/2 on $mux $procmux$1844.
    dead port 1/2 on $mux $procmux$5882.
    dead port 2/2 on $mux $procmux$5884.
    dead port 2/2 on $mux $procmux$5887.
    dead port 1/2 on $mux $procmux$5894.
    dead port 2/2 on $mux $procmux$5896.
    dead port 2/2 on $mux $procmux$5899.
    dead port 1/2 on $mux $procmux$5906.
    dead port 2/2 on $mux $procmux$5908.
    dead port 2/2 on $mux $procmux$5911.
    dead port 1/2 on $mux $procmux$5918.
    dead port 2/2 on $mux $procmux$7922.
    dead port 2/2 on $mux $procmux$7924.
    dead port 2/2 on $mux $procmux$7927.
    dead port 2/2 on $mux $procmux$5920.
    dead port 2/2 on $mux $procmux$5923.
    dead port 1/2 on $mux $procmux$5930.
    dead port 2/2 on $mux $procmux$5932.
    dead port 2/2 on $mux $procmux$5935.
    dead port 1/2 on $mux $procmux$5942.
    dead port 2/2 on $mux $procmux$5944.
    dead port 2/2 on $mux $procmux$5947.
    dead port 1/2 on $mux $procmux$5954.
    dead port 2/2 on $mux $procmux$5956.
    dead port 2/2 on $mux $procmux$5959.
    dead port 1/2 on $mux $procmux$5966.
    dead port 2/2 on $mux $procmux$5968.
    dead port 2/2 on $mux $procmux$5971.
    dead port 1/2 on $mux $procmux$5978.
    dead port 2/2 on $mux $procmux$5980.
    dead port 2/2 on $mux $procmux$5983.
    dead port 1/2 on $mux $procmux$5990.
    dead port 2/2 on $mux $procmux$5992.
    dead port 2/2 on $mux $procmux$5995.
    dead port 1/2 on $mux $procmux$6002.
    dead port 2/2 on $mux $procmux$6004.
    dead port 2/2 on $mux $procmux$6007.
    dead port 1/2 on $mux $procmux$6014.
    dead port 2/2 on $mux $procmux$7964.
    dead port 2/2 on $mux $procmux$7966.
    dead port 2/2 on $mux $procmux$7969.
    dead port 2/2 on $mux $procmux$6016.
    dead port 2/2 on $mux $procmux$6019.
    dead port 1/2 on $mux $procmux$6026.
    dead port 2/2 on $mux $procmux$6028.
    dead port 2/2 on $mux $procmux$6031.
    dead port 1/2 on $mux $procmux$6038.
    dead port 2/2 on $mux $procmux$6040.
    dead port 2/2 on $mux $procmux$6043.
    dead port 1/2 on $mux $procmux$6050.
    dead port 2/2 on $mux $procmux$6052.
    dead port 2/2 on $mux $procmux$6055.
    dead port 1/2 on $mux $procmux$6062.
    dead port 2/2 on $mux $procmux$6064.
    dead port 2/2 on $mux $procmux$6067.
    dead port 1/2 on $mux $procmux$6074.
    dead port 2/2 on $mux $procmux$6076.
    dead port 2/2 on $mux $procmux$6079.
    dead port 1/2 on $mux $procmux$6086.
    dead port 2/2 on $mux $procmux$6088.
    dead port 2/2 on $mux $procmux$6091.
    dead port 1/2 on $mux $procmux$6098.
    dead port 2/2 on $mux $procmux$6100.
    dead port 2/2 on $mux $procmux$6103.
    dead port 1/2 on $mux $procmux$6110.
    dead port 2/2 on $mux $procmux$8017.
    dead port 2/2 on $mux $procmux$8020.
    dead port 2/2 on $mux $procmux$8026.
    dead port 2/2 on $mux $procmux$8029.
    dead port 2/2 on $mux $procmux$8035.
    dead port 2/2 on $mux $procmux$8038.
    dead port 2/2 on $mux $procmux$8044.
    dead port 2/2 on $mux $procmux$8047.
    dead port 2/2 on $mux $procmux$8053.
    dead port 2/2 on $mux $procmux$8056.
    dead port 2/2 on $mux $procmux$8062.
    dead port 2/2 on $mux $procmux$8065.
    dead port 2/2 on $mux $procmux$8071.
    dead port 2/2 on $mux $procmux$8074.
    dead port 2/2 on $mux $procmux$8080.
    dead port 2/2 on $mux $procmux$8083.
    dead port 2/2 on $mux $procmux$8089.
    dead port 2/2 on $mux $procmux$8092.
    dead port 2/2 on $mux $procmux$8098.
    dead port 2/2 on $mux $procmux$8101.
    dead port 2/2 on $mux $procmux$8107.
    dead port 2/2 on $mux $procmux$8110.
    dead port 2/2 on $mux $procmux$8116.
    dead port 2/2 on $mux $procmux$8119.
    dead port 2/2 on $mux $procmux$8125.
    dead port 2/2 on $mux $procmux$8128.
    dead port 2/2 on $mux $procmux$8134.
    dead port 2/2 on $mux $procmux$8137.
    dead port 2/2 on $mux $procmux$8143.
    dead port 2/2 on $mux $procmux$8146.
    dead port 2/2 on $mux $procmux$8152.
    dead port 2/2 on $mux $procmux$8155.
    dead port 2/2 on $mux $procmux$8161.
    dead port 2/2 on $mux $procmux$8164.
    dead port 2/2 on $mux $procmux$8170.
    dead port 2/2 on $mux $procmux$8173.
    dead port 2/2 on $mux $procmux$8179.
    dead port 2/2 on $mux $procmux$8182.
    dead port 2/2 on $mux $procmux$8188.
    dead port 2/2 on $mux $procmux$8191.
    dead port 2/2 on $mux $procmux$8197.
    dead port 2/2 on $mux $procmux$8200.
    dead port 2/2 on $mux $procmux$8206.
    dead port 2/2 on $mux $procmux$8209.
    dead port 2/2 on $mux $procmux$8215.
    dead port 2/2 on $mux $procmux$8218.
    dead port 2/2 on $mux $procmux$8224.
    dead port 2/2 on $mux $procmux$8227.
    dead port 2/2 on $mux $procmux$8233.
    dead port 2/2 on $mux $procmux$8236.
    dead port 2/2 on $mux $procmux$8242.
    dead port 2/2 on $mux $procmux$8245.
    dead port 2/2 on $mux $procmux$8251.
    dead port 2/2 on $mux $procmux$8254.
    dead port 2/2 on $mux $procmux$8260.
    dead port 2/2 on $mux $procmux$8263.
    dead port 2/2 on $mux $procmux$8269.
    dead port 2/2 on $mux $procmux$8272.
    dead port 2/2 on $mux $procmux$8278.
    dead port 2/2 on $mux $procmux$8281.
    dead port 2/2 on $mux $procmux$8287.
    dead port 2/2 on $mux $procmux$8290.
    dead port 2/2 on $mux $procmux$8296.
    dead port 2/2 on $mux $procmux$8299.
    dead port 2/2 on $mux $procmux$8305.
    dead port 2/2 on $mux $procmux$8308.
    dead port 2/2 on $mux $procmux$8314.
    dead port 2/2 on $mux $procmux$8317.
    dead port 2/2 on $mux $procmux$8323.
    dead port 2/2 on $mux $procmux$8326.
    dead port 2/2 on $mux $procmux$8368.
    dead port 2/2 on $mux $procmux$8371.
    dead port 2/2 on $mux $procmux$8503.
    dead port 2/2 on $mux $procmux$8506.
    dead port 2/2 on $mux $procmux$8512.
    dead port 2/2 on $mux $procmux$8515.
    dead port 2/2 on $mux $procmux$8521.
    dead port 2/2 on $mux $procmux$8524.
    dead port 2/2 on $mux $procmux$8530.
    dead port 2/2 on $mux $procmux$8533.
    dead port 2/2 on $mux $procmux$8539.
    dead port 2/2 on $mux $procmux$8542.
    dead port 2/2 on $mux $procmux$8548.
    dead port 2/2 on $mux $procmux$8551.
    dead port 2/2 on $mux $procmux$8557.
    dead port 2/2 on $mux $procmux$8560.
    dead port 2/2 on $mux $procmux$8566.
    dead port 2/2 on $mux $procmux$8569.
    dead port 2/2 on $mux $procmux$8575.
    dead port 2/2 on $mux $procmux$8578.
    dead port 2/2 on $mux $procmux$8584.
    dead port 2/2 on $mux $procmux$8587.
    dead port 2/2 on $mux $procmux$8593.
    dead port 2/2 on $mux $procmux$8596.
    dead port 2/2 on $mux $procmux$8602.
    dead port 2/2 on $mux $procmux$8605.
    dead port 2/2 on $mux $procmux$8611.
    dead port 2/2 on $mux $procmux$8614.
    dead port 2/2 on $mux $procmux$8620.
    dead port 2/2 on $mux $procmux$8623.
    dead port 2/2 on $mux $procmux$8629.
    dead port 2/2 on $mux $procmux$8632.
    dead port 2/2 on $mux $procmux$8638.
    dead port 2/2 on $mux $procmux$8641.
    dead port 2/2 on $mux $procmux$8647.
    dead port 2/2 on $mux $procmux$8650.
    dead port 2/2 on $mux $procmux$8656.
    dead port 2/2 on $mux $procmux$8659.
    dead port 2/2 on $mux $procmux$8665.
    dead port 2/2 on $mux $procmux$8668.
    dead port 2/2 on $mux $procmux$8674.
    dead port 2/2 on $mux $procmux$8677.
    dead port 2/2 on $mux $procmux$8683.
    dead port 2/2 on $mux $procmux$8686.
    dead port 2/2 on $mux $procmux$8692.
    dead port 2/2 on $mux $procmux$8695.
    dead port 2/2 on $mux $procmux$8701.
    dead port 2/2 on $mux $procmux$8704.
    dead port 2/2 on $mux $procmux$8710.
    dead port 2/2 on $mux $procmux$8713.
    dead port 2/2 on $mux $procmux$8719.
    dead port 2/2 on $mux $procmux$8722.
    dead port 2/2 on $mux $procmux$8728.
    dead port 2/2 on $mux $procmux$8731.
    dead port 2/2 on $mux $procmux$8737.
    dead port 2/2 on $mux $procmux$8740.
    dead port 2/2 on $mux $procmux$8746.
    dead port 2/2 on $mux $procmux$8749.
    dead port 2/2 on $mux $procmux$8755.
    dead port 2/2 on $mux $procmux$8758.
    dead port 2/2 on $mux $procmux$8764.
    dead port 2/2 on $mux $procmux$8767.
    dead port 2/2 on $mux $procmux$8773.
    dead port 2/2 on $mux $procmux$8776.
    dead port 2/2 on $mux $procmux$8782.
    dead port 2/2 on $mux $procmux$8785.
    dead port 2/2 on $mux $procmux$9022.
    dead port 2/2 on $mux $procmux$9028.
    dead port 2/2 on $mux $procmux$9034.
    dead port 2/2 on $mux $procmux$9040.
    dead port 2/2 on $mux $procmux$9046.
    dead port 2/2 on $mux $procmux$9052.
    dead port 2/2 on $mux $procmux$9058.
    dead port 2/2 on $mux $procmux$9064.
    dead port 2/2 on $mux $procmux$9070.
    dead port 2/2 on $mux $procmux$9076.
    dead port 2/2 on $mux $procmux$9082.
    dead port 2/2 on $mux $procmux$9088.
    dead port 2/2 on $mux $procmux$9094.
    dead port 2/2 on $mux $procmux$9100.
    dead port 2/2 on $mux $procmux$9106.
    dead port 2/2 on $mux $procmux$9112.
    dead port 2/2 on $mux $procmux$9118.
    dead port 2/2 on $mux $procmux$9124.
    dead port 2/2 on $mux $procmux$9130.
    dead port 2/2 on $mux $procmux$9136.
    dead port 2/2 on $mux $procmux$9142.
    dead port 2/2 on $mux $procmux$9148.
    dead port 2/2 on $mux $procmux$9154.
    dead port 2/2 on $mux $procmux$9160.
    dead port 2/2 on $mux $procmux$9166.
    dead port 2/2 on $mux $procmux$9172.
    dead port 2/2 on $mux $procmux$9178.
    dead port 2/2 on $mux $procmux$9184.
    dead port 2/2 on $mux $procmux$9190.
    dead port 2/2 on $mux $procmux$9196.
    dead port 2/2 on $mux $procmux$9202.
    dead port 2/2 on $mux $procmux$9208.
    dead port 2/2 on $mux $procmux$9214.
    dead port 2/2 on $mux $procmux$9220.
    dead port 2/2 on $mux $procmux$9226.
    dead port 2/2 on $mux $procmux$9232.
    dead port 2/2 on $mux $procmux$9238.
    dead port 2/2 on $mux $procmux$9244.
    dead port 2/2 on $mux $procmux$9250.
    dead port 2/2 on $mux $procmux$9256.
    dead port 2/2 on $mux $procmux$9262.
    dead port 2/2 on $mux $procmux$9268.
    dead port 2/2 on $mux $procmux$9274.
    dead port 2/2 on $mux $procmux$9280.
    dead port 2/2 on $mux $procmux$9286.
    dead port 2/2 on $mux $procmux$9292.
    dead port 2/2 on $mux $procmux$9298.
    dead port 2/2 on $mux $procmux$9304.
    dead port 2/2 on $mux $procmux$9310.
    dead port 2/2 on $mux $procmux$9316.
    dead port 2/2 on $mux $procmux$9322.
    dead port 2/2 on $mux $procmux$9328.
    dead port 2/2 on $mux $procmux$9334.
    dead port 2/2 on $mux $procmux$9340.
    dead port 2/2 on $mux $procmux$9346.
    dead port 2/2 on $mux $procmux$9352.
    dead port 2/2 on $mux $procmux$9358.
    dead port 2/2 on $mux $procmux$9364.
    dead port 2/2 on $mux $procmux$9370.
    dead port 2/2 on $mux $procmux$9376.
    dead port 2/2 on $mux $procmux$9382.
    dead port 2/2 on $mux $procmux$9388.
    dead port 2/2 on $mux $procmux$9394.
    dead port 2/2 on $mux $procmux$9400.
    dead port 2/2 on $mux $procmux$9514.
    dead port 2/2 on $mux $procmux$9520.
    dead port 2/2 on $mux $procmux$9526.
    dead port 2/2 on $mux $procmux$9544.
    dead port 2/2 on $mux $procmux$9562.
    dead port 2/2 on $mux $procmux$9568.
    dead port 2/2 on $mux $procmux$9574.
    dead port 2/2 on $mux $procmux$9580.
    dead port 2/2 on $mux $procmux$6112.
Removed 1053 multiplexer ports.
<suppressed ~160 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$7259: { $procmux$6603_CMP $auto$opt_reduce.cc:134:opt_mux$10521 }
    New ctrl vector for $pmux cell $procmux$5699: { $procmux$2105_CMP $auto$opt_reduce.cc:134:opt_mux$10523 }
    New ctrl vector for $pmux cell $procmux$7721: { $procmux$6614_CMP $auto$opt_reduce.cc:134:opt_mux$10525 }
    New ctrl vector for $pmux cell $procmux$4574: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10527 }
    New ctrl vector for $pmux cell $procmux$4799: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10529 }
    New ctrl vector for $pmux cell $procmux$2459: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10531 }
    New ctrl vector for $pmux cell $procmux$6923: { $procmux$6595_CMP $auto$opt_reduce.cc:134:opt_mux$10533 }
    New ctrl vector for $pmux cell $procmux$5294: { $procmux$2096_CMP $auto$opt_reduce.cc:134:opt_mux$10535 }
    New ctrl vector for $pmux cell $procmux$2747: { $procmux$2089_CMP $auto$opt_reduce.cc:134:opt_mux$10537 }
    New ctrl vector for $pmux cell $procmux$3227: { $procmux$2099_CMP $auto$opt_reduce.cc:134:opt_mux$10539 }
    New ctrl vector for $pmux cell $procmux$6755: { $procmux$6591_CMP $auto$opt_reduce.cc:134:opt_mux$10541 }
    New ctrl vector for $pmux cell $procmux$4979: { $procmux$2089_CMP $auto$opt_reduce.cc:134:opt_mux$10543 }
    New ctrl vector for $pmux cell $procmux$7301: { $procmux$6604_CMP $auto$opt_reduce.cc:134:opt_mux$10545 }
    New ctrl vector for $pmux cell $procmux$7763: { $procmux$6615_CMP $auto$opt_reduce.cc:134:opt_mux$10547 }
    New ctrl vector for $pmux cell $procmux$2171: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10549 }
    New ctrl vector for $pmux cell $procmux$5744: { $procmux$2106_CMP $auto$opt_reduce.cc:134:opt_mux$10551 }
    New ctrl vector for $pmux cell $procmux$6671: { $procmux$6589_CMP $auto$opt_reduce.cc:134:opt_mux$10553 }
    New ctrl vector for $pmux cell $procmux$4619: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10555 }
    New ctrl vector for $pmux cell $procmux$3131: { $procmux$2097_CMP $auto$opt_reduce.cc:134:opt_mux$10557 }
    New ctrl vector for $pmux cell $procmux$3467: { $procmux$2104_CMP $auto$opt_reduce.cc:134:opt_mux$10559 }
    New ctrl vector for $pmux cell $procmux$5339: { $procmux$2097_CMP $auto$opt_reduce.cc:134:opt_mux$10561 }
    New ctrl vector for $pmux cell $procmux$6965: { $procmux$6596_CMP $auto$opt_reduce.cc:134:opt_mux$10563 }
    New ctrl vector for $pmux cell $procmux$7805: { $procmux$6616_CMP $auto$opt_reduce.cc:134:opt_mux$10565 }
    New ctrl vector for $pmux cell $procmux$2507: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10567 }
    New ctrl vector for $pmux cell $procmux$7343: { $procmux$6605_CMP $auto$opt_reduce.cc:134:opt_mux$10569 }
    New ctrl vector for $pmux cell $procmux$7847: { $procmux$6617_CMP $auto$opt_reduce.cc:134:opt_mux$10571 }
    New ctrl vector for $pmux cell $procmux$2075: { $procmux$2107_CMP $auto$opt_reduce.cc:134:opt_mux$10573 }
    New ctrl vector for $pmux cell $procmux$5024: { $procmux$2090_CMP $auto$opt_reduce.cc:134:opt_mux$10575 }
    New ctrl vector for $pmux cell $procmux$4664: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10577 }
    New ctrl vector for $pmux cell $procmux$2795: { $procmux$2090_CMP $auto$opt_reduce.cc:134:opt_mux$10579 }
    New ctrl vector for $pmux cell $procmux$7889: { $procmux$6618_CMP $auto$opt_reduce.cc:134:opt_mux$10581 }
    New ctrl vector for $pmux cell $procmux$3179: { $procmux$2098_CMP $auto$opt_reduce.cc:134:opt_mux$10583 }
    New ctrl vector for $pmux cell $procmux$5384: { $procmux$2098_CMP $auto$opt_reduce.cc:134:opt_mux$10585 }
    New ctrl vector for $pmux cell $procmux$3323: { $procmux$2101_CMP $auto$opt_reduce.cc:134:opt_mux$10587 }
    New ctrl vector for $pmux cell $procmux$7007: { $procmux$6597_CMP $auto$opt_reduce.cc:134:opt_mux$10589 }
    New ctrl vector for $pmux cell $procmux$7385: { $procmux$6606_CMP $auto$opt_reduce.cc:134:opt_mux$10591 }
    New ctrl vector for $pmux cell $procmux$2651: { $procmux$2087_CMP $auto$opt_reduce.cc:134:opt_mux$10593 }
    New ctrl vector for $pmux cell $procmux$3515: { $procmux$2105_CMP $auto$opt_reduce.cc:134:opt_mux$10595 }
    New ctrl vector for $pmux cell $procmux$4844: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10597 }
    New ctrl vector for $pmux cell $procmux$2219: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10599 }
    New ctrl vector for $pmux cell $procmux$4754: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10601 }
    New ctrl vector for $pmux cell $procmux$6797: { $procmux$6592_CMP $auto$opt_reduce.cc:134:opt_mux$10603 }
    New ctrl vector for $pmux cell $procmux$5069: { $procmux$2091_CMP $auto$opt_reduce.cc:134:opt_mux$10605 }
    New ctrl vector for $pmux cell $procmux$7427: { $procmux$6607_CMP $auto$opt_reduce.cc:134:opt_mux$10607 }
    New ctrl vector for $pmux cell $procmux$5429: { $procmux$2099_CMP $auto$opt_reduce.cc:134:opt_mux$10609 }
    New ctrl vector for $pmux cell $procmux$7049: { $procmux$6598_CMP $auto$opt_reduce.cc:134:opt_mux$10611 }
    New ctrl vector for $pmux cell $procmux$4349: { $procmux$2107_CMP $auto$opt_reduce.cc:134:opt_mux$10613 }
    New ctrl vector for $pmux cell $procmux$2891: { $procmux$2092_CMP $auto$opt_reduce.cc:134:opt_mux$10615 }
    New ctrl vector for $pmux cell $procmux$2843: { $procmux$2091_CMP $auto$opt_reduce.cc:134:opt_mux$10617 }
    New ctrl vector for $pmux cell $procmux$7469: { $procmux$6608_CMP $auto$opt_reduce.cc:134:opt_mux$10619 }
    New ctrl vector for $pmux cell $procmux$3563: { $procmux$2106_CMP $auto$opt_reduce.cc:134:opt_mux$10621 }
    New ctrl vector for $pmux cell $procmux$5474: { $procmux$2100_CMP $auto$opt_reduce.cc:134:opt_mux$10623 }
    New ctrl vector for $pmux cell $procmux$2315: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10625 }
    New ctrl vector for $pmux cell $procmux$4394: { $auto$opt_reduce.cc:134:opt_mux$10627 $procmux$2076_CMP }
    New ctrl vector for $pmux cell $procmux$5114: { $procmux$2092_CMP $auto$opt_reduce.cc:134:opt_mux$10629 }
    New ctrl vector for $pmux cell $procmux$7091: { $procmux$6599_CMP $auto$opt_reduce.cc:134:opt_mux$10631 }
    New ctrl vector for $pmux cell $procmux$2939: { $procmux$2093_CMP $auto$opt_reduce.cc:134:opt_mux$10633 }
    New ctrl vector for $pmux cell $procmux$7511: { $procmux$6609_CMP $auto$opt_reduce.cc:134:opt_mux$10635 }
    New ctrl vector for $pmux cell $procmux$2267: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10637 }
    New ctrl vector for $pmux cell $procmux$5519: { $procmux$2101_CMP $auto$opt_reduce.cc:134:opt_mux$10639 }
    New ctrl vector for $pmux cell $procmux$6629: { $auto$opt_reduce.cc:134:opt_mux$10641 $procmux$6588_CMP }
    New ctrl vector for $pmux cell $procmux$4439: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10643 }
    New ctrl vector for $pmux cell $procmux$3371: { $procmux$2102_CMP $auto$opt_reduce.cc:134:opt_mux$10645 }
    New ctrl vector for $pmux cell $procmux$7553: { $procmux$6610_CMP $auto$opt_reduce.cc:134:opt_mux$10647 }
    New ctrl vector for $pmux cell $procmux$6839: { $procmux$6593_CMP $auto$opt_reduce.cc:134:opt_mux$10649 }
    New ctrl vector for $pmux cell $procmux$7133: { $procmux$6600_CMP $auto$opt_reduce.cc:134:opt_mux$10651 }
    New ctrl vector for $pmux cell $procmux$5159: { $procmux$2093_CMP $auto$opt_reduce.cc:134:opt_mux$10653 }
    New ctrl vector for $pmux cell $procmux$5564: { $procmux$2102_CMP $auto$opt_reduce.cc:134:opt_mux$10655 }
    New ctrl vector for $pmux cell $procmux$2987: { $procmux$2094_CMP $auto$opt_reduce.cc:134:opt_mux$10657 }
    New ctrl vector for $pmux cell $procmux$2363: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10659 }
    New ctrl vector for $pmux cell $procmux$7595: { $procmux$6611_CMP $auto$opt_reduce.cc:134:opt_mux$10661 }
    New ctrl vector for $pmux cell $procmux$4484: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10663 }
    New ctrl vector for $pmux cell $procmux$4889: { $procmux$2087_CMP $auto$opt_reduce.cc:134:opt_mux$10665 }
    New ctrl vector for $pmux cell $procmux$7175: { $procmux$6601_CMP $auto$opt_reduce.cc:134:opt_mux$10667 }
    New ctrl vector for $pmux cell $procmux$6713: { $procmux$6590_CMP $auto$opt_reduce.cc:134:opt_mux$10669 }
    New ctrl vector for $pmux cell $procmux$5609: { $procmux$2103_CMP $auto$opt_reduce.cc:134:opt_mux$10671 }
    New ctrl vector for $pmux cell $procmux$5204: { $procmux$2094_CMP $auto$opt_reduce.cc:134:opt_mux$10673 }
    New ctrl vector for $pmux cell $procmux$2603: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10675 }
    New ctrl vector for $pmux cell $procmux$2699: { $procmux$2088_CMP $auto$opt_reduce.cc:134:opt_mux$10677 }
    New ctrl vector for $pmux cell $procmux$7637: { $procmux$6612_CMP $auto$opt_reduce.cc:134:opt_mux$10679 }
    New ctrl vector for $pmux cell $procmux$3035: { $procmux$2095_CMP $auto$opt_reduce.cc:134:opt_mux$10681 }
    New ctrl vector for $pmux cell $procmux$6587: { $procmux$6619_CMP $auto$opt_reduce.cc:134:opt_mux$10683 }
    New ctrl vector for $pmux cell $procmux$2123: { $auto$opt_reduce.cc:134:opt_mux$10685 $procmux$2076_CMP }
    New ctrl vector for $pmux cell $procmux$2411: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10687 }
    New ctrl vector for $pmux cell $procmux$4529: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10689 }
    New ctrl vector for $pmux cell $procmux$7217: { $procmux$6602_CMP $auto$opt_reduce.cc:134:opt_mux$10691 }
    New ctrl vector for $pmux cell $procmux$3275: { $procmux$2100_CMP $auto$opt_reduce.cc:134:opt_mux$10693 }
    New ctrl vector for $pmux cell $procmux$5654: { $procmux$2104_CMP $auto$opt_reduce.cc:134:opt_mux$10695 }
    New ctrl vector for $pmux cell $procmux$6881: { $procmux$6594_CMP $auto$opt_reduce.cc:134:opt_mux$10697 }
    New ctrl vector for $pmux cell $procmux$5249: { $procmux$2095_CMP $auto$opt_reduce.cc:134:opt_mux$10699 }
    New ctrl vector for $pmux cell $procmux$7679: { $procmux$6613_CMP $auto$opt_reduce.cc:134:opt_mux$10701 }
    New ctrl vector for $pmux cell $procmux$4709: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10703 }
    New ctrl vector for $pmux cell $procmux$2555: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10705 }
    New ctrl vector for $pmux cell $procmux$4934: { $procmux$2088_CMP $auto$opt_reduce.cc:134:opt_mux$10707 }
    New ctrl vector for $pmux cell $procmux$3419: { $procmux$2103_CMP $auto$opt_reduce.cc:134:opt_mux$10709 }
    New ctrl vector for $pmux cell $procmux$3083: { $procmux$2096_CMP $auto$opt_reduce.cc:134:opt_mux$10711 }
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 96 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~66 debug messages>
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~12 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Removed a total of 61 cells.

4.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 4263 unused wires.
<suppressed ~3 debug messages>

4.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.8. Rerunning OPT passes. (Maybe there is more to do..)

4.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

4.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 0 changes.

4.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.14. Finished OPT passes. (There is nothing left to do.)

4.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$22 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$62 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$68 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$69 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$71 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$72 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$74 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$75 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$77 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$78 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:173$86 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:180$96 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:181$98 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:181$99 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:188$101 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:197$104 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:198$106 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:198$107 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:205$109 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9967_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$10017_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$eq$cva6_lsu_model.v:72$431 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$517 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$517 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$518 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$518 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$553 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$553 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$ne$cva6_lsu_model.v:193$586 ($ne).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$589 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$589 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$598 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$598 ($add).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$717 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$731 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$873 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$884 ($mux).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1037_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1133_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1143_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$714 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$728 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$871 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$882 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$711 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$725 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$719 ($pmux).
Removed top 20 bits (of 32) from wire cva6_lsu_model.$4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$414_DATA[31:0]$545.
Removed top 20 bits (of 32) from wire cva6_lsu_model.$5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$417_DATA[31:0]$572.
Removed top 30 bits (of 32) from wire cva6_lsu_model.$add$cva6_lsu_model.v:148$517_Y.
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$272 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$309 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$336 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$351 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$354 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$366 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$367 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$368 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$369 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$371 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$372 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$373 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$383 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$383 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$384 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$385 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$386 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$392 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$392 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$395 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$395 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$402 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$402 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2092_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2093_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2094_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2095_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2096_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2097_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2098_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2099_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2100_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2101_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2102_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2103_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2104_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2105_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2106_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3628_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3629_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3630_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3631_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3632_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3633_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3634_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3635_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3636_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3637_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3638_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3639_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3640_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3641_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3642_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5806_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5807_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5808_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5809_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5810_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5811_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5812_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5813_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5814_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5815_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5816_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5817_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5818_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5819_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5820_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6604_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6605_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6606_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6607_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6608_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6609_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6610_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6611_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6612_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6613_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6614_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6615_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6616_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6617_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6618_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$383_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$351_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$368_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$373_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$371_Y.

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

4.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.11.4. Finished fast OPT passes.

4.12. Printing statistics.

=== cva6_lsu_formal ===

   Number of wires:                157
   Number of wire bits:           5245
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                152
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                        11
     $dff                           25
     $eq                            24
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      4
     $logic_or                       3
     $lt                             2
     $mux                           49
     $ne                             4
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_model ===

   Number of wires:                186
   Number of wire bits:           1426
   Number of public wires:          40
   Number of public wire bits:     346
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $add                            5
     $adff                          28
     $eq                            12
     $ge                             2
     $logic_and                      2
     $logic_not                      5
     $logic_or                       4
     $mux                          104
     $ne                             4
     $not                            2
     $pmux                           5
     $reduce_bool                    2

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_model                  1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_model                1

   Number of wires:               2111
   Number of wire bits:          42769
   Number of public wires:         308
   Number of public wire bits:   13768
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2048
     $add                           21
     $adff                          56
     $and                            2
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                        11
     $dff                          181
     $eq                           324
     $ge                             4
     $gt                             1
     $le                             1
     $logic_and                     24
     $logic_not                     34
     $logic_or                      11
     $lt                             6
     $mux                          987
     $ne                            12
     $not                            4
     $or                             2
     $pmux                         208
     $reduce_bool                    8
     $reduce_or                    128
     $shl                            2
     $shr                            4
     $sub                            6
     $xor                            2

4.13. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

5. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

6. Executing ASYNC2SYNC pass.
Replacing cva6_lsu_model.$procdff$10229 ($adff): ARST=\rst_ni, D=$0\instr_i_pc[7:0], Q=\instr_i_pc
Replacing cva6_lsu_model.$procdff$10230 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_lsu_model.$procdff$10231 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_lsu_model.$procdff$10232 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_lsu_model.$procdff$10233 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue[31:0], Q=\load_instr_i_queue
Replacing cva6_lsu_model.$procdff$10234 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue_pc[7:0], Q=\load_instr_i_queue_pc
Replacing cva6_lsu_model.$procdff$10235 ($adff): ARST=\rst_ni, D=$0\load_instr_queue_state[1:0], Q=\load_instr_queue_state
Replacing cva6_lsu_model.$procdff$10248 ($adff): ARST=\rst_ni, D=$0\ready_flag[0:0], Q=\ready_flag
Replacing cva6_lsu_model.$procdff$10249 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_lsu_model.$procdff$10250 ($adff): ARST=\rst_ni, D=\inner_instr_i, Q=\x_inner_instr_i
Replacing cva6_lsu_model.$procdff$10251 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10252 ($adff): ARST=\rst_ni, D=\inner_instr_valid_i, Q=\x_inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10253 ($adff): ARST=\rst_ni, D=\is_load_i, Q=\inner_is_load_i
Replacing cva6_lsu_model.$procdff$10254 ($adff): ARST=\rst_ni, D=\inner_is_load_i, Q=\x_inner_is_load_i
Replacing cva6_lsu_model.$procdff$10255 ($adff): ARST=\rst_ni, D=\store_mem_resp_i, Q=\inner_store_mem_resp_i
Replacing cva6_lsu_model.$procdff$10257 ($adff): ARST=\rst_ni, D=\load_mem_resp_i, Q=\inner_load_mem_resp_i
Replacing cva6_lsu_model.$procdff$10262 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_lsu_model.$procdff$10263 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_lsu_model.$procdff$10264 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_lsu_model.$procdff$10265 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_lsu_model.$procdff$10266 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[0][7:0], Q=\store_instr_i_queue_pc[0]
Replacing cva6_lsu_model.$procdff$10267 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[1][7:0], Q=\store_instr_i_queue_pc[1]
Replacing cva6_lsu_model.$procdff$10268 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[2][7:0], Q=\store_instr_i_queue_pc[2]
Replacing cva6_lsu_model.$procdff$10269 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[3][7:0], Q=\store_instr_i_queue_pc[3]
Replacing cva6_lsu_model.$procdff$10270 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_lsu_model.$procdff$10271 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_lsu_model.$procdff$10272 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_lsu_model.$procdff$10273 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 12 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

8. Executing SETUNDEF pass (replace undef values with defined constants).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

9.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$10517 ($dff) from module cva6_lsu_formal (D = $procmux$10222_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11106 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$10516 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$10487 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11109 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$10486 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11111 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$10485 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11113 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:205$109_Y, Q = \pc_2).
Adding SRST signal on $procdff$10484 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11117 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:188$101_Y, Q = \pc_1).
Adding SRST signal on $procdff$10483 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11121 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$10482 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11123 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:178$1_DATA[31:0]$94, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$10481 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11125 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$10480 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11127 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:195$2_DATA[31:0]$102, Q = \tb_io_instr_i_2).
Adding EN signal on $procdff$10463 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$10462 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$10461 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$10460 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$10459 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$10458 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$10457 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$10456 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$10455 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$10454 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$10453 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$10452 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$10451 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$10450 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$10449 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$10448 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$10447 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$10446 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$10445 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$10444 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$10443 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$10442 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$10441 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$10440 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$10439 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$10438 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$10437 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$10436 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$10435 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$10434 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$10433 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$10432 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$10431 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$10430 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$10429 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$10428 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$10427 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$10426 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$10425 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$10424 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$10423 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$10422 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$10421 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$10420 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$10419 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$10418 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$10417 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$10416 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$10415 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$10414 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$10413 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$10412 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$10411 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$10410 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$10409 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$10408 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$10407 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$10406 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$10405 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$10404 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$10403 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$10402 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$10401 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$10400 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$10380 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11641 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11664 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$402_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$11659 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$10378 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$10377 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$10375 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$10374 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11672 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$10373 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11678 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$10372 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11684 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$10371 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$10370 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11703 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$10369 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11711 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$10368 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11721 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$10367 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11729 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$10366 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11737 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 253 unused cells and 253 unused wires.
<suppressed ~256 debug messages>

9.5. Rerunning OPT passes. (Removed registers in this run.)

9.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>

9.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

9.8. Executing OPT_DFF pass (perform DFF optimizations).

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

9.10. Finished fast OPT passes.

10. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

11.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

12. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 6 unique messages, 11 total
End of script. Logfile hash: 590a0a4bf6, CPU: user 9.53s system 0.15s, MEM: 94.57 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 24% 3x check (2 sec), 23% 1x proc_mux (2 sec), ...
