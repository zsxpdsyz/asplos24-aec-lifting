
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: load_store_unit.v
Parsing formal SystemVerilog input from `load_store_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_store_unit'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: shift_reg.v
Parsing formal SystemVerilog input from `shift_reg.v' to AST representation.
Storing AST representation for module `$abstract\shift_reg'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: store_unit.v
Parsing formal SystemVerilog input from `store_unit.v' to AST representation.
Storing AST representation for module `$abstract\store_unit'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: store_buffer.v
Parsing formal SystemVerilog input from `store_buffer.v' to AST representation.
Storing AST representation for module `$abstract\store_buffer'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: amo_buffer.v
Parsing formal SystemVerilog input from `amo_buffer.v' to AST representation.
Storing AST representation for module `$abstract\amo_buffer'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: load_unit.v
Parsing formal SystemVerilog input from `load_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_unit'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: lsu_bypass.v
Parsing formal SystemVerilog input from `lsu_bypass.v' to AST representation.
Storing AST representation for module `$abstract\lsu_bypass'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: cva6_lsu_shim.v
Parsing formal SystemVerilog input from `cva6_lsu_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_shim'.
Successfully finished Verilog frontend.

11. Executing PREP pass.

11.1. Executing HIERARCHY pass (managing design hierarchy).

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

11.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

11.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

11.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

11.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_shim'.
Generating RTLIL representation for module `\cva6_lsu_shim'.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.

11.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim

11.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\load_store_unit'.
Generating RTLIL representation for module `\load_store_unit'.
Note: Assuming pure combinatorial block at load_store_unit.v:320.2-339.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
load_store_unit.v:205: Warning: Range [33:0] select out of bounds on signal `\icache_areq_i': Setting 1 MSB bits to undef.
load_store_unit.v:218: Warning: Range [33:12] select out of bounds on signal `\mmu_vaddr': Setting 2 MSB bits to undef.

11.2.7. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit

11.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bypass'.
Generating RTLIL representation for module `\lsu_bypass'.

11.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg'.
Generating RTLIL representation for module `\shift_reg'.
Parameter \ArianeCfg

11.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\load_unit'.
Parameter \ArianeCfg
Generating RTLIL representation for module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.

11.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit'.
Generating RTLIL representation for module `\store_unit'.

11.2.12. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit

11.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\amo_buffer'.
Generating RTLIL representation for module `\amo_buffer'.

11.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\store_buffer'.
Generating RTLIL representation for module `\store_buffer'.

11.2.15. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer

11.2.16. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Removing unused module `$abstract\cva6_lsu_shim'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\lsu_bypass'.
Removing unused module `$abstract\load_unit'.
Removing unused module `$abstract\amo_buffer'.
Removing unused module `$abstract\store_buffer'.
Removing unused module `$abstract\store_unit'.
Removing unused module `$abstract\shift_reg'.
Removing unused module `$abstract\load_store_unit'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 10 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

11.3. Executing PROC pass (convert processes to netlists).

11.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
Cleaned up 1 empty switch.

11.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$store_buffer.v:234$931 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_buffer.v:220$929 in module store_buffer.
Marked 23 switch rules as full_case in process $proc$store_buffer.v:166$894 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:142$849 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:85$711 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_unit.v:0$675 in module store_unit.
Marked 1 switch rules as full_case in process $proc$store_unit.v:271$673 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:196$657 in module store_unit.
Marked 3 switch rules as full_case in process $proc$store_unit.v:196$657 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:99$646 in module store_unit.
Marked 12 switch rules as full_case in process $proc$store_unit.v:99$646 in module store_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:301$640 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:294$639 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:264$613 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 5 switch rules as full_case in process $proc$load_unit.v:244$603 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 23 switch rules as full_case in process $proc$load_unit.v:145$579 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$shift_reg.v:19$564 in module shift_reg.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:79$562 in module lsu_bypass.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:73$558 in module lsu_bypass.
Marked 5 switch rules as full_case in process $proc$lsu_bypass.v:41$510 in module lsu_bypass.
Removed 1 dead cases from process $proc$load_store_unit.v:0$488 in module load_store_unit.
Marked 4 switch rules as full_case in process $proc$load_store_unit.v:0$488 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$483 in module load_store_unit.
Removed 2 dead cases from process $proc$load_store_unit.v:0$466 in module load_store_unit.
Marked 5 switch rules as full_case in process $proc$load_store_unit.v:0$466 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$461 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:221$459 in module load_store_unit.
Marked 11 switch rules as full_case in process $proc$load_store_unit.v:519$450 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:320$449 in module load_store_unit.
Marked 10 switch rules as full_case in process $proc$cva6_lsu_shim.v:290$417 in module cva6_lsu_shim.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$169 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$169 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$37 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$37 in module cva6_lsu_formal.
Removed a total of 15 dead cases.

11.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 26 redundant assignments.
Promoted 350 assignments to connections.

11.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$151'.
  Set init value: $formal$cva6_lsu_formal.v:210$18_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$149'.
  Set init value: $formal$cva6_lsu_formal.v:175$17_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$147'.
  Set init value: $formal$cva6_lsu_formal.v:173$16_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$145'.
  Set init value: $formal$cva6_lsu_formal.v:169$15_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$143'.
  Set init value: $formal$cva6_lsu_formal.v:168$14_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$141'.
  Set init value: $formal$cva6_lsu_formal.v:166$13_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$139'.
  Set init value: $formal$cva6_lsu_formal.v:164$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
  Set init value: $formal$cva6_lsu_formal.v:162$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
  Set init value: $formal$cva6_lsu_formal.v:161$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
  Set init value: $formal$cva6_lsu_formal.v:160$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
  Set init value: $formal$cva6_lsu_formal.v:159$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
  Set init value: $formal$cva6_lsu_formal.v:156$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

11.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:234$931'.
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:220$929'.
Found async reset \rst_ni in `\store_unit.$proc$store_unit.v:271$673'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$640'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$613'.
Found async reset \rst_ni in `\shift_reg.$proc$shift_reg.v:19$564'.
Found async reset \rst_ni in `\lsu_bypass.$proc$lsu_bypass.v:79$562'.
Found async reset \rst_ni in `\load_store_unit.$proc$load_store_unit.v:221$459'.

11.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_buffer.$proc$store_buffer.v:234$931'.
     1/4: $0\commit_status_cnt_q[2:0]
     2/4: $0\commit_write_pointer_q[1:0]
     3/4: $0\commit_read_pointer_q[1:0]
     4/4: $0\commit_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:220$929'.
     1/4: $0\speculative_status_cnt_q[2:0]
     2/4: $0\speculative_write_pointer_q[1:0]
     3/4: $0\speculative_read_pointer_q[1:0]
     4/4: $0\speculative_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:166$894'.
     1/50: $19\page_offset_matches_o[0:0]
     2/50: $18\page_offset_matches_o[0:0]
     3/50: $19\sv2v_autoblock_2._sv2v_jump[1:0]
     4/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
     5/50: $18\sv2v_autoblock_2._sv2v_jump[1:0]
     6/50: $17\page_offset_matches_o[0:0]
     7/50: $5\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
     8/50: $17\sv2v_autoblock_2._sv2v_jump[1:0]
     9/50: $16\page_offset_matches_o[0:0]
    10/50: $16\sv2v_autoblock_2._sv2v_jump[1:0]
    11/50: $15\page_offset_matches_o[0:0]
    12/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    13/50: $15\sv2v_autoblock_2._sv2v_jump[1:0]
    14/50: $14\page_offset_matches_o[0:0]
    15/50: $14\sv2v_autoblock_2._sv2v_jump[1:0]
    16/50: $13\page_offset_matches_o[0:0]
    17/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    18/50: $13\sv2v_autoblock_2._sv2v_jump[1:0]
    19/50: $12\page_offset_matches_o[0:0]
    20/50: $12\sv2v_autoblock_2._sv2v_jump[1:0]
    21/50: $11\page_offset_matches_o[0:0]
    22/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    23/50: $11\sv2v_autoblock_2._sv2v_jump[1:0]
    24/50: $10\page_offset_matches_o[0:0]
    25/50: $9\page_offset_matches_o[0:0]
    26/50: $10\sv2v_autoblock_2._sv2v_jump[1:0]
    27/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
    28/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    29/50: $9\sv2v_autoblock_2._sv2v_jump[1:0]
    30/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i[31:0]
    31/50: $8\sv2v_autoblock_2._sv2v_jump[1:0]
    32/50: $8\page_offset_matches_o[0:0]
    33/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    34/50: $7\sv2v_autoblock_2._sv2v_jump[1:0]
    35/50: $7\page_offset_matches_o[0:0]
    36/50: $6\sv2v_autoblock_2._sv2v_jump[1:0]
    37/50: $6\page_offset_matches_o[0:0]
    38/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    39/50: $5\sv2v_autoblock_2._sv2v_jump[1:0]
    40/50: $5\page_offset_matches_o[0:0]
    41/50: $4\sv2v_autoblock_2._sv2v_jump[1:0]
    42/50: $4\page_offset_matches_o[0:0]
    43/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    44/50: $3\sv2v_autoblock_2._sv2v_jump[1:0]
    45/50: $3\page_offset_matches_o[0:0]
    46/50: $2\sv2v_autoblock_2._sv2v_jump[1:0]
    47/50: $2\page_offset_matches_o[0:0]
    48/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    49/50: $1\sv2v_autoblock_2._sv2v_jump[1:0]
    50/50: $1\page_offset_matches_o[0:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:142$849'.
     1/16: $3\store_if.commit_status_cnt[4:0]
     2/16: $1\commit_write_pointer_n[1:0]
     3/16: $3\commit_queue_n[291:0]
     4/16: $1$bitselwrite$data$store_buffer.v:160$702[291:0]$875
     5/16: $1$bitselwrite$mask$store_buffer.v:160$701[291:0]$874
     6/16: $2\store_if.commit_status_cnt[4:0]
     7/16: $2\commit_read_pointer_n[1:0]
     8/16: $2\commit_queue_n[291:0]
     9/16: $2$bitselwrite$data$store_buffer.v:154$700[291:0]$862
    10/16: $2$bitselwrite$mask$store_buffer.v:154$699[291:0]$861
    11/16: $1$bitselwrite$data$store_buffer.v:154$700[291:0]$860
    12/16: $1$bitselwrite$mask$store_buffer.v:154$699[291:0]$859
    13/16: $1\store_if.commit_status_cnt[4:0]
    14/16: $1\commit_read_pointer_n[1:0]
    15/16: $1\commit_queue_n[291:0]
    16/16: $1\req_port_o[9:9]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:141$848'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:138$842'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:135$836'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:132$830'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:129$824'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:126$818'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:123$817'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:120$816'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:85$711'.
     1/25: $1\speculative_status_cnt_n[2:0]
     2/25: $2\speculative_write_pointer_n[1:0]
     3/25: $1\core_if.sv2v_autoblock_1.i[31:0]
     4/25: $6\speculative_queue_n[219:219]
     5/25: $5\speculative_queue_n[146:146]
     6/25: $4\speculative_queue_n[73:73]
     7/25: $3\speculative_queue_n[0:0]
     8/25: $2\core_if.speculative_status_cnt[4:0]
     9/25: $1\speculative_read_pointer_n[1:0]
    10/25: $2\speculative_queue_n[291:0]
    11/25: $1$bitselwrite$data$store_buffer.v:103$698[291:0]$804
    12/25: $1$bitselwrite$mask$store_buffer.v:103$697[291:0]$803
    13/25: $1\core_if.speculative_status_cnt[4:0]
    14/25: $1\speculative_write_pointer_n[1:0]
    15/25: $1\speculative_queue_n[291:0]
    16/25: $1$bitselwrite$data$store_buffer.v:98$696[291:0]$735
    17/25: $1$bitselwrite$mask$store_buffer.v:98$695[291:0]$734
    18/25: $1$bitselwrite$data$store_buffer.v:97$694[291:0]$733
    19/25: $1$bitselwrite$mask$store_buffer.v:97$693[291:0]$732
    20/25: $1$bitselwrite$data$store_buffer.v:96$692[291:0]$731
    21/25: $1$bitselwrite$mask$store_buffer.v:96$691[291:0]$730
    22/25: $1$bitselwrite$data$store_buffer.v:95$690[291:0]$729
    23/25: $1$bitselwrite$mask$store_buffer.v:95$689[291:0]$728
    24/25: $1$bitselwrite$data$store_buffer.v:94$688[291:0]$727
    25/25: $1$bitselwrite$mask$store_buffer.v:94$687[291:0]$726
Creating decoders for process `\store_unit.$proc$store_unit.v:0$675'.
     1/1: $1\ariane_pkg_is_amo$func$store_unit.v:86$645.$result[0:0]$682
Creating decoders for process `\store_unit.$proc$store_unit.v:271$673'.
     1/6: $0\amo_op_q[3:0]
     2/6: $0\st_data_size_q[1:0]
     3/6: $0\trans_id_q[2:0]
     4/6: $0\st_data_q[31:0]
     5/6: $0\st_be_q[3:0]
     6/6: $0\state_q[1:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:196$657'.
     1/4: $1\amo_op_d[3:0]
     2/4: $1\ariane_pkg_extract_transfer_size$func$store_unit.v:199$644.$result[1:0]$668
     3/4: $1\ariane_pkg_data_align$func$store_unit.v:198$643.data_tmp[63:0]$666 [63:32]
     4/4: $1\ariane_pkg_data_align$func$store_unit.v:198$643.data_tmp[63:0]$666 [31:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:99$646'.
     1/28: $11\state_d[1:0]
     2/28: $2\valid_o[0:0]
     3/28: $10\state_d[1:0]
     4/28: $3\st_valid[0:0]
     5/28: $8\pop_st_o[0:0]
     6/28: $9\state_d[1:0]
     7/28: $8\state_d[1:0]
     8/28: $7\pop_st_o[0:0]
     9/28: $7\state_d[1:0]
    10/28: $6\pop_st_o[0:0]
    11/28: $6\state_d[1:0]
    12/28: $5\state_d[1:0]
    13/28: $5\pop_st_o[0:0]
    14/28: $3\translation_req_o[0:0]
    15/28: $2\st_valid[0:0]
    16/28: $4\pop_st_o[0:0]
    17/28: $4\state_d[1:0]
    18/28: $3\pop_st_o[0:0]
    19/28: $3\state_d[1:0]
    20/28: $2\state_d[1:0]
    21/28: $2\pop_st_o[0:0]
    22/28: $2\translation_req_o[0:0]
    23/28: $1\state_d[1:0]
    24/28: $1\translation_req_o[0:0]
    25/28: $1\pop_st_o[0:0]
    26/28: $1\st_valid_without_flush[0:0]
    27/28: $1\valid_o[0:0]
    28/28: $1\st_valid[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$640'.
     1/3: $0\fp_sign_q[0:0]
     2/3: $0\signed_q[0:0]
     3/3: $0\idx_q[1:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$639'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$613'.
     1/2: $0\load_data_q[12:0]
     2/2: $0\state_q[3:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$603'.
     1/9: $5\valid_o[0:0]
     2/9: $1\trans_id_o[2:0]
     3/9: $3\ex_o[0:0]
     4/9: $4\valid_o[0:0]
     5/9: $2\ex_o[0:0]
     6/9: $3\valid_o[0:0]
     7/9: $2\valid_o[0:0]
     8/9: $1\ex_o[0:0]
     9/9: $1\valid_o[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
     1/45: $19\state_d[3:0]
     2/45: $1\load_data_d[12:0]
     3/45: $13\pop_ld_o[0:0]
     4/45: $12\pop_ld_o[0:0]
     5/45: $18\state_d[3:0]
     6/45: $2\req_port_o[1:0] [1]
     7/45: $17\state_d[3:0]
     8/45: $11\pop_ld_o[0:0]
     9/45: $16\state_d[3:0]
    10/45: $15\state_d[3:0]
    11/45: $10\pop_ld_o[0:0]
    12/45: $14\state_d[3:0]
    13/45: $9\pop_ld_o[0:0]
    14/45: $7\req_port_o[9:9]
    15/45: $13\state_d[3:0]
    16/45: $8\pop_ld_o[0:0]
    17/45: $6\req_port_o[9:9]
    18/45: $3\translation_req_o[0:0]
    19/45: $12\state_d[3:0]
    20/45: $7\pop_ld_o[0:0]
    21/45: $11\state_d[3:0]
    22/45: $10\state_d[3:0]
    23/45: $6\pop_ld_o[0:0]
    24/45: $2\req_port_o[1:0] [0]
    25/45: $8\req_port_o[1:1]
    26/45: $9\state_d[3:0]
    27/45: $8\state_d[3:0]
    28/45: $6\state_d[3:0]
    29/45: $5\pop_ld_o[0:0]
    30/45: $5\state_d[3:0]
    31/45: $4\state_d[3:0]
    32/45: $4\pop_ld_o[0:0]
    33/45: $3\state_d[3:0]
    34/45: $3\pop_ld_o[0:0]
    35/45: $5\req_port_o[9:9]
    36/45: $2\state_d[3:0]
    37/45: $2\pop_ld_o[0:0]
    38/45: $4\req_port_o[9:9]
    39/45: $2\translation_req_o[0:0]
    40/45: $1\state_d[3:0]
    41/45: $1\pop_ld_o[0:0]
    42/45: $3\req_port_o[9:9]
    43/45: $1\translation_req_o[0:0]
    44/45: $7\state_d[3:0]
    45/45: $1\ariane_pkg_extract_transfer_size$func$load_unit.v:153$566.$result[1:0]$582
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$572'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$571'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$570'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$569'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$568'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$567'.
Creating decoders for process `\shift_reg.$proc$shift_reg.v:19$564'.
     1/1: $0\d_o[100:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:79$562'.
     1/4: $0\read_pointer_q[0:0]
     2/4: $0\write_pointer_q[0:0]
     3/4: $0\status_cnt_q[1:0]
     4/4: $0\mem_q[169:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:73$558'.
     1/1: $1\lsu_ctrl_o[84:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
     1/20: $5\mem_n[169:0]
     2/20: $3\read_pointer[0:0]
     3/20: $2\write_pointer[0:0]
     4/20: $4\status_cnt[1:0]
     5/20: $4\mem_n[169:0]
     6/20: $3\status_cnt[1:0]
     7/20: $2\read_pointer[0:0]
     8/20: $3\mem_n[169:0]
     9/20: $1$bitselwrite$data$lsu_bypass.v:57$508[169:0]$545
    10/20: $1$bitselwrite$mask$lsu_bypass.v:57$507[169:0]$544
    11/20: $2\status_cnt[1:0]
    12/20: $1\read_pointer[0:0]
    13/20: $2\mem_n[169:0]
    14/20: $1$bitselwrite$data$lsu_bypass.v:52$506[169:0]$532
    15/20: $1$bitselwrite$mask$lsu_bypass.v:52$505[169:0]$531
    16/20: $1\status_cnt[1:0]
    17/20: $1\write_pointer[0:0]
    18/20: $1\mem_n[169:0]
    19/20: $1$bitselwrite$data$lsu_bypass.v:47$504[169:0]$518
    20/20: $1$bitselwrite$mask$lsu_bypass.v:47$503[169:0]$517
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$488'.
     1/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441._sv2v_jump[1:0]$502
     2/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.$result[3:0]$501
     3/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441._sv2v_jump[1:0]$499
     4/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.$result[3:0]$498
     5/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441._sv2v_jump[1:0]$497
     6/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.$result[3:0]$496
     7/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441._sv2v_jump[1:0]$495
     8/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.$result[3:0]$494
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$483'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$440.$result[1:0]$487
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$466'.
     1/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$439._sv2v_jump[1:0]$482
     2/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$439.$result[7:0]$481
     3/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$439._sv2v_jump[1:0]$479
     4/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$439.$result[7:0]$478
     5/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$439._sv2v_jump[1:0]$477
     6/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$439.$result[7:0]$476
     7/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$439._sv2v_jump[1:0]$475
     8/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$439.$result[7:0]$474
     9/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$439._sv2v_jump[1:0]$473
    10/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$439.$result[7:0]$472
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$461'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$438.$result[1:0]$465
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:221$459'.
     1/2: $0\translation_valid[0:0]
     2/2: $0\mmu_paddr[33:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:519$450'.
     1/11: $6\misaligned_exception[64:0]
     2/11: $5\misaligned_exception[64:0]
     3/11: $4\misaligned_exception[64:0]
     4/11: $3\misaligned_exception[64:0]
     5/11: $2\misaligned_exception[64:0]
     6/11: $1\misaligned_exception[64:0]
     7/11: $5\data_misaligned[0:0]
     8/11: $4\data_misaligned[0:0]
     9/11: $3\data_misaligned[0:0]
    10/11: $2\data_misaligned[0:0]
    11/11: $1\data_misaligned[0:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:320$449'.
     1/4: $1\mmu_vaddr[31:0]
     2/4: $1\translation_req[0:0]
     3/4: $1\ld_valid_i[0:0]
     4/4: $1\st_valid_i[0:0]
Creating decoders for process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
     1/45: $6\store_req_state[1:0]
     2/45: $5\tb_io_commit_i[0:0]
     3/45: $5\store_req_state[1:0]
     4/45: $4\tb_io_commit_i[0:0]
     5/45: $4\store_req_state[1:0]
     6/45: $6\tb_io_lsu_valid_i[0:0]
     7/45: $3\tb_io_commit_i[0:0]
     8/45: $6\load_req_state[1:0]
     9/45: $4\tb_io_commit_tran_id_i[2:0]
    10/45: $5\load_req_state[1:0]
    11/45: $3\tb_io_commit_tran_id_i[2:0]
    12/45: $5\tb_io_lsu_valid_i[0:0]
    13/45: $4\load_req_state[1:0]
    14/45: $4\tb_io_lsu_valid_i[0:0]
    15/45: $4\tb_io_fu_data_i[110:0]
    16/45: $4\raise_load_request$func$cva6_lsu_shim.v:0$410.addr[31:0]$428
    17/45: $3\store_req_state[1:0]
    18/45: $3\tb_io_lsu_valid_i[0:0]
    19/45: $3\tb_io_fu_data_i[110:0]
    20/45: $3\raise_store_request$func$cva6_lsu_shim.v:0$409.addr[31:0]$426
    21/45: $3\raise_load_request$func$cva6_lsu_shim.v:0$410.addr[31:0]$427
    22/45: $3\load_req_state[1:0]
    23/45: $2\raise_load_request$func$cva6_lsu_shim.v:0$410.addr[31:0]$424
    24/45: $2\raise_store_request$func$cva6_lsu_shim.v:0$409.addr[31:0]$423
    25/45: $2\store_req_state[1:0]
    26/45: $2\load_req_state[1:0]
    27/45: $2\tb_io_lsu_valid_i[0:0]
    28/45: $2\tb_io_fu_data_i[110:0]
    29/45: $2\tb_io_commit_tran_id_i[2:0]
    30/45: $2\tb_io_commit_i[0:0]
    31/45: $2\tb_io_dcache_req_ports_i[104:104]
    32/45: $1\tb_io_dcache_req_ports_i[104:0] [104]
    33/45: $1\tb_io_dcache_req_ports_i[104:0] [103:70]
    34/45: $1\tb_io_dcache_req_ports_i[104:0] [69:35]
    35/45: $1\tb_io_dcache_req_ports_i[104:0] [34:0]
    36/45: $1\load_req_state[1:0]
    37/45: $1\load_memreq_state[2:0]
    38/45: $1\x_load_mem_resp_i[0:0]
    39/45: $1\tb_io_lsu_valid_i[0:0]
    40/45: $1\tb_io_fu_data_i[110:0]
    41/45: $1\tb_io_commit_tran_id_i[2:0]
    42/45: $1\tb_io_commit_i[0:0]
    43/45: $1\store_req_state[1:0]
    44/45: $1\raise_load_request$func$cva6_lsu_shim.v:0$410.addr[31:0]$422
    45/45: $1\raise_store_request$func$cva6_lsu_shim.v:0$409.addr[31:0]$421
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA[31:0]$354
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_ADDR[4:0]$352
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_DATA[31:0]$353
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$159.$result[31:0]$343
   126/587: $5\sra$func$cva6_processor_shim.v:100$160.$result[31:0]$347
   127/587: $5\sra$func$cva6_processor_shim.v:100$160.shamt[4:0]$349
   128/587: $5\sra$func$cva6_processor_shim.v:100$160.d[63:0]$348
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$159.alu_fun[2:0]$346
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$159.imm_data[31:0]$345
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$159.reg_data[31:0]$344
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA[31:0]$351
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_ADDR[4:0]$350
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$158.$result[31:0]$341
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$158.inst[31:0]$342
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_DATA[31:0]$339
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_DATA[31:0]$337
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_ADDR[4:0]$329
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_DATA[31:0]$330
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_DATA[31:0]$332
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_ADDR[4:0]$331
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_DATA[31:0]$328
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_ADDR[4:0]$327
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$156.$result[31:0]$314
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$156.inst[31:0]$315
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_DATA[31:0]$336
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_ADDR[4:0]$335
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA[31:0]$334
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_ADDR[4:0]$333
   218/587: $4\sra$func$cva6_processor_shim.v:100$160.shamt[4:0]$326
   219/587: $4\sra$func$cva6_processor_shim.v:100$160.d[63:0]$325
   220/587: $4\sra$func$cva6_processor_shim.v:100$160.$result[31:0]$324
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$159.alu_fun[2:0]$323
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$159.imm_data[31:0]$322
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$159.reg_data[31:0]$321
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$159.$result[31:0]$320
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$158.inst[31:0]$319
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$158.$result[31:0]$318
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$157.instr[31:0]$317
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$157.$result[0:0]$316
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_DATA[31:0]$312
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_DATA[31:0]$310
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_ADDR[4:0]$296
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_DATA[31:0]$297
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_DATA[31:0]$299
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_ADDR[4:0]$298
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_DATA[31:0]$295
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_ADDR[4:0]$294
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$154.$result[31:0]$277
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$154.inst[31:0]$278
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_DATA[31:0]$309
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_ADDR[4:0]$308
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA[31:0]$307
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_ADDR[4:0]$306
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_DATA[31:0]$305
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_ADDR[4:0]$304
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_DATA[31:0]$303
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_ADDR[4:0]$302
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_DATA[31:0]$301
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_ADDR[4:0]$300
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$160.shamt[4:0]$293
   350/587: $3\sra$func$cva6_processor_shim.v:100$160.d[63:0]$292
   351/587: $3\sra$func$cva6_processor_shim.v:100$160.$result[31:0]$291
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$159.alu_fun[2:0]$290
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$159.imm_data[31:0]$289
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$159.reg_data[31:0]$288
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$159.$result[31:0]$287
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$158.inst[31:0]$286
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$158.$result[31:0]$285
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$157.instr[31:0]$284
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$157.$result[0:0]$283
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$156.inst[31:0]$282
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$156.$result[31:0]$281
   362/587: $3\is_load$func$cva6_processor_shim.v:232$155.instr[31:0]$280
   363/587: $3\is_load$func$cva6_processor_shim.v:232$155.$result[0:0]$279
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_DATA[31:0]$275
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_ADDR[4:0]$274
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA[31:0]$273
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_ADDR[4:0]$272
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_DATA[31:0]$271
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_ADDR[4:0]$270
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_DATA[31:0]$269
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_ADDR[4:0]$268
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_DATA[31:0]$267
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_ADDR[4:0]$266
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_DATA[31:0]$265
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_ADDR[4:0]$264
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_DATA[31:0]$263
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_ADDR[4:0]$262
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_DATA[31:0]$261
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_ADDR[4:0]$260
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$160.shamt[4:0]$259
   445/587: $2\sra$func$cva6_processor_shim.v:100$160.d[63:0]$258
   446/587: $2\sra$func$cva6_processor_shim.v:100$160.$result[31:0]$257
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$159.alu_fun[2:0]$256
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$159.imm_data[31:0]$255
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$159.reg_data[31:0]$254
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$159.$result[31:0]$253
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$158.inst[31:0]$252
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$158.$result[31:0]$251
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$157.instr[31:0]$250
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$157.$result[0:0]$249
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$156.inst[31:0]$248
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$156.$result[31:0]$247
   457/587: $2\is_load$func$cva6_processor_shim.v:232$155.instr[31:0]$246
   458/587: $2\is_load$func$cva6_processor_shim.v:232$155.$result[0:0]$245
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$154.inst[31:0]$244
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$154.$result[31:0]$243
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$153.$result[0:0]$241
   466/587: $2\is_store$func$cva6_processor_shim.v:226$153.instr[31:0]$242
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_DATA[31:0]$240
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_ADDR[4:0]$239
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA[31:0]$238
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_ADDR[4:0]$237
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_DATA[31:0]$236
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_ADDR[4:0]$235
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_DATA[31:0]$234
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_ADDR[4:0]$233
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_DATA[31:0]$232
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_ADDR[4:0]$231
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_DATA[31:0]$230
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_ADDR[4:0]$229
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_DATA[31:0]$228
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_ADDR[4:0]$227
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_DATA[31:0]$226
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_ADDR[4:0]$225
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$160.shamt[4:0]$224
   570/587: $1\sra$func$cva6_processor_shim.v:100$160.d[63:0]$223
   571/587: $1\sra$func$cva6_processor_shim.v:100$160.$result[31:0]$222
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$159.alu_fun[2:0]$221
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$159.imm_data[31:0]$220
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$159.reg_data[31:0]$219
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$159.$result[31:0]$218
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$158.inst[31:0]$217
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$158.$result[31:0]$216
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$157.instr[31:0]$215
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$157.$result[0:0]$214
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$156.inst[31:0]$213
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$156.$result[31:0]$212
   582/587: $1\is_load$func$cva6_processor_shim.v:232$155.instr[31:0]$211
   583/587: $1\is_load$func$cva6_processor_shim.v:232$155.$result[0:0]$210
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$154.inst[31:0]$209
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$154.$result[31:0]$208
   586/587: $1\is_store$func$cva6_processor_shim.v:226$153.instr[31:0]$207
   587/587: $1\is_store$func$cva6_processor_shim.v:226$153.$result[0:0]$206
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$151'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$149'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$147'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$145'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$143'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$141'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$139'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
     1/58: $4\local_ready_2[0:0]
     2/58: $3\tb_io_instr_valid_i_2[0:0]
     3/58: $3\pc_2[31:0]
     4/58: $3\local_ready_2[0:0]
     5/58: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_DATA[31:0]$106
     6/58: $4\local_ready_1[0:0]
     7/58: $3\tb_io_instr_valid_i_1[0:0]
     8/58: $3\pc_1[31:0]
     9/58: $3\local_ready_1[0:0]
    10/58: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_DATA[31:0]$98
    11/58: $2\local_ready_2[0:0]
    12/58: $2\pc_2[31:0]
    13/58: $2\tb_io_instr_valid_i_2[0:0]
    14/58: $2\tb_io_instr_i_2[31:0]
    15/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_DATA[31:0]$95
    16/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_ADDR[1:0]$94
    17/58: $2\local_ready_1[0:0]
    18/58: $2\pc_1[31:0]
    19/58: $2\tb_io_instr_valid_i_1[0:0]
    20/58: $2\tb_io_instr_i_1[31:0]
    21/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_DATA[31:0]$93
    22/58: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_ADDR[1:0]$92
    23/58: $1\local_ready_2[0:0]
    24/58: $1\local_ready_1[0:0]
    25/58: $1\tb_io_instr_i_2[31:0]
    26/58: $1\tb_io_instr_i_1[31:0]
    27/58: $1\tb_io_instr_valid_i_2[0:0]
    28/58: $1\tb_io_instr_valid_i_1[0:0]
    29/58: $1\pc_2[31:0]
    30/58: $1\pc_1[31:0]
    31/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_DATA[31:0]$71
    32/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_ADDR[1:0]$70
    33/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_DATA[31:0]$69
    34/58: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_ADDR[1:0]$68
    35/58: $0$formal$cva6_lsu_formal.v:156$7_EN[0:0]$43
    36/58: $0$formal$cva6_lsu_formal.v:156$7_CHECK[0:0]$42
    37/58: $0$formal$cva6_lsu_formal.v:159$8_EN[0:0]$45
    38/58: $0$formal$cva6_lsu_formal.v:159$8_CHECK[0:0]$44
    39/58: $0$formal$cva6_lsu_formal.v:160$9_EN[0:0]$47
    40/58: $0$formal$cva6_lsu_formal.v:160$9_CHECK[0:0]$46
    41/58: $0$formal$cva6_lsu_formal.v:161$10_EN[0:0]$49
    42/58: $0$formal$cva6_lsu_formal.v:161$10_CHECK[0:0]$48
    43/58: $0$formal$cva6_lsu_formal.v:162$11_EN[0:0]$51
    44/58: $0$formal$cva6_lsu_formal.v:162$11_CHECK[0:0]$50
    45/58: $0$formal$cva6_lsu_formal.v:164$12_EN[0:0]$53
    46/58: $0$formal$cva6_lsu_formal.v:164$12_CHECK[0:0]$52
    47/58: $0$formal$cva6_lsu_formal.v:166$13_EN[0:0]$55
    48/58: $0$formal$cva6_lsu_formal.v:166$13_CHECK[0:0]$54
    49/58: $0$formal$cva6_lsu_formal.v:168$14_EN[0:0]$57
    50/58: $0$formal$cva6_lsu_formal.v:168$14_CHECK[0:0]$56
    51/58: $0$formal$cva6_lsu_formal.v:169$15_EN[0:0]$59
    52/58: $0$formal$cva6_lsu_formal.v:169$15_CHECK[0:0]$58
    53/58: $0$formal$cva6_lsu_formal.v:173$16_EN[0:0]$61
    54/58: $0$formal$cva6_lsu_formal.v:173$16_CHECK[0:0]$60
    55/58: $0$formal$cva6_lsu_formal.v:175$17_EN[0:0]$63
    56/58: $0$formal$cva6_lsu_formal.v:175$17_CHECK[0:0]$62
    57/58: $0$formal$cva6_lsu_formal.v:210$18_EN[0:0]$65
    58/58: $0$formal$cva6_lsu_formal.v:210$18_CHECK[0:0]$64
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

11.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_buffer.\page_offset_matches_o' from process `\store_buffer.$proc$store_buffer.v:166$894'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2._sv2v_jump' from process `\store_buffer.$proc$store_buffer.v:166$894'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i' from process `\store_buffer.$proc$store_buffer.v:166$894'.
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$894': $auto$proc_dlatch.cc:427:proc_dlatch$11646
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i' from process `\store_buffer.$proc$store_buffer.v:166$894': $auto$proc_dlatch.cc:427:proc_dlatch$11681
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$894': $auto$proc_dlatch.cc:427:proc_dlatch$11692
No latch inferred for signal `\store_buffer.\no_st_pending_o' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\commit_ready_o' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\req_port_o [9]' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\commit_queue_n' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\commit_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\commit_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\commit_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\store_if.commit_status_cnt' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:154$699' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:154$700' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:160$701' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:160$702' from process `\store_buffer.$proc$store_buffer.v:142$849'.
No latch inferred for signal `\store_buffer.\req_port_o [3:2]' from process `\store_buffer.$proc$store_buffer.v:141$848'.
No latch inferred for signal `\store_buffer.\req_port_o [7:4]' from process `\store_buffer.$proc$store_buffer.v:138$842'.
No latch inferred for signal `\store_buffer.\req_port_o [42:11]' from process `\store_buffer.$proc$store_buffer.v:135$836'.
No latch inferred for signal `\store_buffer.\req_port_o [64:43]' from process `\store_buffer.$proc$store_buffer.v:132$830'.
No latch inferred for signal `\store_buffer.\req_port_o [76:65]' from process `\store_buffer.$proc$store_buffer.v:129$824'.
No latch inferred for signal `\store_buffer.\req_port_o [0]' from process `\store_buffer.$proc$store_buffer.v:126$818'.
No latch inferred for signal `\store_buffer.\req_port_o [8]' from process `\store_buffer.$proc$store_buffer.v:123$817'.
No latch inferred for signal `\store_buffer.\req_port_o [1]' from process `\store_buffer.$proc$store_buffer.v:120$816'.
No latch inferred for signal `\store_buffer.\ready_o' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.\speculative_queue_n' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.\speculative_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.\speculative_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.\speculative_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.\core_if.speculative_status_cnt' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:94$687' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:94$688' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:95$689' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:95$690' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:96$691' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:96$692' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:97$693' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:97$694' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:98$695' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:98$696' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:103$697' from process `\store_buffer.$proc$store_buffer.v:85$711'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:103$698' from process `\store_buffer.$proc$store_buffer.v:85$711'.
Latch inferred for signal `\store_buffer.\core_if.sv2v_autoblock_1.i' from process `\store_buffer.$proc$store_buffer.v:85$711': $auto$proc_dlatch.cc:427:proc_dlatch$11757
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$642.$result' from process `\store_unit.$proc$store_unit.v:0$675'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$645.$result' from process `\store_unit.$proc$store_unit.v:0$675'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$645.op' from process `\store_unit.$proc$store_unit.v:0$675'.
No latch inferred for signal `\store_unit.\st_data_n' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\st_be_n' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\st_data_size_n' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\amo_op_d' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$643.$result' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$643.addr' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$643.data' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$643.addr_tmp' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$643.data_tmp' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$644.$result' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$644.op' from process `\store_unit.$proc$store_unit.v:196$657'.
No latch inferred for signal `\store_unit.\st_valid' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\pop_st_o' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\valid_o' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\ex_o' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\translation_req_o' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\state_d' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\st_valid_without_flush' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `\store_unit.\trans_id_n' from process `\store_unit.$proc$store_unit.v:99$646'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\result_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$639'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\valid_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$603'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\trans_id_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$603'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$603'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\translation_req_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [7:0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [9]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\pop_ld_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$566.$result' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$566.op' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [32:1]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$572'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [64:33]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$571'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [64:43]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$570'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [76:65]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$569'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [42:11]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$568'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [8]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$567'.
No latch inferred for signal `\lsu_bypass.\lsu_ctrl_o' from process `\lsu_bypass.$proc$lsu_bypass.v:73$558'.
No latch inferred for signal `\lsu_bypass.\mem_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.\read_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.\write_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.\status_cnt_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.\status_cnt' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.\write_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.\read_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:47$503' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:47$504' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:52$505' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:52$506' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:57$507' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:57$508' from process `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$437.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$488'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$488'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$488'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441.size' from process `\load_store_unit.$proc$load_store_unit.v:0$488'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$441._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$488'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$436.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$483'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$440.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$483'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$440.op' from process `\load_store_unit.$proc$load_store_unit.v:0$483'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$435.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$466'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$439.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$466'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$439.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$466'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$439.size' from process `\load_store_unit.$proc$load_store_unit.v:0$466'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$439._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$466'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$434.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$461'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$438.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$461'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$438.op' from process `\load_store_unit.$proc$load_store_unit.v:0$461'.
No latch inferred for signal `\load_store_unit.\data_misaligned' from process `\load_store_unit.$proc$load_store_unit.v:519$450'.
No latch inferred for signal `\load_store_unit.\misaligned_exception' from process `\load_store_unit.$proc$load_store_unit.v:519$450'.
No latch inferred for signal `\load_store_unit.\st_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$449'.
No latch inferred for signal `\load_store_unit.\ld_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$449'.
No latch inferred for signal `\load_store_unit.\translation_req' from process `\load_store_unit.$proc$load_store_unit.v:320$449'.
No latch inferred for signal `\load_store_unit.\mmu_vaddr' from process `\load_store_unit.$proc$load_store_unit.v:320$449'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.

11.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\store_buffer.\commit_queue_q' using process `\store_buffer.$proc$store_buffer.v:234$931'.
  created $adff cell `$procdff$11768' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:234$931'.
  created $adff cell `$procdff$11769' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$931'.
  created $adff cell `$procdff$11770' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$931'.
  created $adff cell `$procdff$11771' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_queue_q' using process `\store_buffer.$proc$store_buffer.v:220$929'.
  created $adff cell `$procdff$11772' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:220$929'.
  created $adff cell `$procdff$11773' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$929'.
  created $adff cell `$procdff$11774' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$929'.
  created $adff cell `$procdff$11775' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\state_q' using process `\store_unit.$proc$store_unit.v:271$673'.
  created $adff cell `$procdff$11776' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_q' using process `\store_unit.$proc$store_unit.v:271$673'.
  created $adff cell `$procdff$11777' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_be_q' using process `\store_unit.$proc$store_unit.v:271$673'.
  created $adff cell `$procdff$11778' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_size_q' using process `\store_unit.$proc$store_unit.v:271$673'.
  created $adff cell `$procdff$11779' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\amo_op_q' using process `\store_unit.$proc$store_unit.v:271$673'.
  created $adff cell `$procdff$11780' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\trans_id_q' using process `\store_unit.$proc$store_unit.v:271$673'.
  created $adff cell `$procdff$11781' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\idx_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$640'.
  created $adff cell `$procdff$11782' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\signed_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$640'.
  created $adff cell `$procdff$11783' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\fp_sign_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$640'.
  created $adff cell `$procdff$11784' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$613'.
  created $adff cell `$procdff$11785' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$613'.
  created $adff cell `$procdff$11786' with positive edge clock and negative level reset.
Creating register for signal `\shift_reg.\d_o' using process `\shift_reg.$proc$shift_reg.v:19$564'.
  created $adff cell `$procdff$11787' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\mem_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$562'.
  created $adff cell `$procdff$11788' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\read_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$562'.
  created $adff cell `$procdff$11789' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\write_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$562'.
  created $adff cell `$procdff$11790' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\status_cnt_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$562'.
  created $adff cell `$procdff$11791' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\translation_valid' using process `\load_store_unit.$proc$load_store_unit.v:221$459'.
  created $adff cell `$procdff$11792' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\mmu_paddr' using process `\load_store_unit.$proc$load_store_unit.v:221$459'.
  created $adff cell `$procdff$11793' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_shim.\tb_io_fu_data_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11794' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_lsu_valid_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11795' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11796' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_tran_id_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11797' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_dcache_req_ports_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11798' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_memreq_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11799' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11800' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\store_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11801' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\x_load_mem_resp_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11802' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_store_request$func$cva6_lsu_shim.v:0$409.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11803' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_load_request$func$cva6_lsu_shim.v:0$410.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
  created $dff cell `$procdff$11804' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11805' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11806' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11807' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11808' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11809' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11810' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11811' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11812' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11813' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11814' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11815' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11816' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11817' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11818' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11819' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11820' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11821' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11822' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11823' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11824' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11825' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11826' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11827' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11828' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11829' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11830' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11831' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11832' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11833' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11834' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11835' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11836' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11837' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11838' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11839' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11840' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11841' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11842' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11843' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11844' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11845' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11846' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11847' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11848' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11849' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11850' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11851' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11852' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11853' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11854' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11855' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11856' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11857' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11858' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11859' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11860' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11861' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11862' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11863' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11864' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11865' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11866' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11867' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11868' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11869' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11870' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11871' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11872' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11873' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11874' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11875' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11876' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11877' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11878' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11879' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11880' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11881' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11882' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11883' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$153.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11884' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$153.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11885' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$154.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11886' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$154.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11887' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$155.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11888' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$155.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11889' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$156.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11890' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$156.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11891' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$157.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11892' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$157.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11893' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$158.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11894' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$158.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11895' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$159.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11896' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$159.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11897' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$159.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11898' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$159.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11899' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$160.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11900' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$160.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11901' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$160.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11902' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11903' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11904' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11905' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11906' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11907' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11908' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11909' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11910' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11911' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11912' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11913' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11914' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11915' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11916' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11917' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11918' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11919' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11920' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11921' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11922' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11923' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11924' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11925' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11926' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11927' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11928' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11929' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11930' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11931' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11932' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11933' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11934' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11935' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11936' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11937' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11938' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11939' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11940' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11941' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11942' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11943' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11944' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11945' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11946' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11947' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11948' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11949' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11950' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11951' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11952' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11953' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11954' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11955' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11956' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11957' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11958' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11959' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11960' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11961' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11962' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11963' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11964' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11965' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11966' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11967' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$161_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11968' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11969' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$162_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11970' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11971' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$163_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11972' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11973' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$164_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11974' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11975' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$165_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11976' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11977' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$166_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11978' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11979' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$167_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11980' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11981' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$168_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
  created $dff cell `$procdff$11982' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11983' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11984' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11985' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11986' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11987' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11988' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11989' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11990' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11991' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11992' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11993' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11994' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11995' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11996' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11997' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11998' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$11999' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12000' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12001' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12002' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12003' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12004' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12005' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12006' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$13_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12007' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$13_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12008' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$14_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12009' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$14_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12010' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$15_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12011' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$15_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12012' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:173$16_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12013' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:173$16_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12014' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:175$17_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12015' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:175$17_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12016' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:210$18_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12017' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:210$18_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
  created $dff cell `$procdff$12018' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
  created $dff cell `$procdff$12019' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
  created $dff cell `$procdff$12020' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
  created $dff cell `$procdff$12021' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
  created $dff cell `$procdff$12022' with positive edge clock.

11.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

11.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `store_buffer.$proc$store_buffer.v:234$931'.
Removing empty process `store_buffer.$proc$store_buffer.v:220$929'.
Found and cleaned up 23 empty switches in `\store_buffer.$proc$store_buffer.v:166$894'.
Removing empty process `store_buffer.$proc$store_buffer.v:166$894'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:142$849'.
Removing empty process `store_buffer.$proc$store_buffer.v:142$849'.
Removing empty process `store_buffer.$proc$store_buffer.v:141$848'.
Removing empty process `store_buffer.$proc$store_buffer.v:138$842'.
Removing empty process `store_buffer.$proc$store_buffer.v:135$836'.
Removing empty process `store_buffer.$proc$store_buffer.v:132$830'.
Removing empty process `store_buffer.$proc$store_buffer.v:129$824'.
Removing empty process `store_buffer.$proc$store_buffer.v:126$818'.
Removing empty process `store_buffer.$proc$store_buffer.v:123$817'.
Removing empty process `store_buffer.$proc$store_buffer.v:120$816'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:85$711'.
Removing empty process `store_buffer.$proc$store_buffer.v:85$711'.
Found and cleaned up 1 empty switch in `\store_unit.$proc$store_unit.v:0$675'.
Removing empty process `store_unit.$proc$store_unit.v:0$675'.
Removing empty process `store_unit.$proc$store_unit.v:271$673'.
Found and cleaned up 3 empty switches in `\store_unit.$proc$store_unit.v:196$657'.
Removing empty process `store_unit.$proc$store_unit.v:196$657'.
Found and cleaned up 12 empty switches in `\store_unit.$proc$store_unit.v:99$646'.
Removing empty process `store_unit.$proc$store_unit.v:99$646'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$640'.
Found and cleaned up 1 empty switch in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$639'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$639'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$613'.
Found and cleaned up 5 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$603'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$603'.
Found and cleaned up 23 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$579'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$572'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$571'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$570'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$569'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$568'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$567'.
Removing empty process `shift_reg.$proc$shift_reg.v:19$564'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:79$562'.
Found and cleaned up 1 empty switch in `\lsu_bypass.$proc$lsu_bypass.v:73$558'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:73$558'.
Found and cleaned up 5 empty switches in `\lsu_bypass.$proc$lsu_bypass.v:41$510'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:41$510'.
Found and cleaned up 4 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$488'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$488'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$483'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$483'.
Found and cleaned up 5 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$466'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$466'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$461'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$461'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:221$459'.
Found and cleaned up 11 empty switches in `\load_store_unit.$proc$load_store_unit.v:519$450'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:519$450'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:320$449'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:320$449'.
Found and cleaned up 10 empty switches in `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
Removing empty process `cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$417'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$169'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$151'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$149'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$147'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$145'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$143'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$141'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$139'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$37'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$19'.
Cleaned up 152 empty switches.

11.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_buffer.
<suppressed ~81 debug messages>
Optimizing module amo_buffer.
Optimizing module store_unit.
<suppressed ~28 debug messages>
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
<suppressed ~60 debug messages>
Optimizing module shift_reg.
Optimizing module lsu_bypass.
<suppressed ~1 debug messages>
Optimizing module load_store_unit.
<suppressed ~29 debug messages>
Optimizing module cva6_lsu_shim.
<suppressed ~55 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~3 debug messages>

11.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 855 unused cells and 4560 unused wires.
<suppressed ~981 debug messages>

11.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

11.7. Executing OPT pass (performing simple optimizations).

11.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.
<suppressed ~4 debug messages>

11.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~177 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Finding identical cells in module `\load_store_unit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\lsu_bypass'.
<suppressed ~36 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~114 debug messages>
Finding identical cells in module `\store_unit'.
<suppressed ~144 debug messages>
Removed a total of 3280 cells.

11.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1649.
    dead port 2/2 on $mux $procmux$1652.
    dead port 1/2 on $mux $procmux$1654.
    dead port 2/2 on $mux $procmux$1656.
    dead port 2/2 on $mux $procmux$1658.
    dead port 2/2 on $mux $procmux$1668.
    dead port 1/2 on $mux $procmux$1670.
    dead port 2/2 on $mux $procmux$1672.
    dead port 2/2 on $mux $procmux$1674.
    dead port 2/2 on $mux $procmux$1684.
    dead port 1/2 on $mux $procmux$1686.
    dead port 2/2 on $mux $procmux$1688.
    dead port 2/2 on $mux $procmux$1690.
    dead port 1/2 on $mux $procmux$1699.
    dead port 2/2 on $mux $procmux$1701.
    dead port 2/2 on $mux $procmux$1703.
    dead port 1/2 on $mux $procmux$1712.
    dead port 2/2 on $mux $procmux$1714.
    dead port 2/2 on $mux $procmux$1716.
    dead port 2/2 on $mux $procmux$1724.
    dead port 2/2 on $mux $procmux$1726.
    dead port 2/2 on $mux $procmux$1734.
    dead port 2/2 on $mux $procmux$1736.
    dead port 2/2 on $mux $procmux$1744.
    dead port 2/2 on $mux $procmux$1746.
    dead port 2/2 on $mux $procmux$1753.
    dead port 2/2 on $mux $procmux$1760.
    dead port 2/2 on $mux $procmux$1767.
    dead port 2/2 on $mux $procmux$1774.
    dead port 1/2 on $mux $procmux$1784.
    dead port 2/2 on $mux $procmux$1786.
    dead port 2/2 on $mux $procmux$1788.
    dead port 2/2 on $mux $procmux$1797.
    dead port 2/2 on $mux $procmux$1799.
    dead port 2/2 on $mux $procmux$1808.
    dead port 2/2 on $mux $procmux$1810.
    dead port 2/2 on $mux $procmux$1818.
    dead port 2/2 on $mux $procmux$1826.
    dead port 2/2 on $mux $procmux$1838.
    dead port 2/2 on $mux $procmux$1847.
    dead port 2/2 on $mux $procmux$1857.
    dead port 1/2 on $mux $procmux$1873.
    dead port 2/2 on $mux $procmux$1876.
    dead port 1/2 on $mux $procmux$1878.
    dead port 2/2 on $mux $procmux$1880.
    dead port 2/2 on $mux $procmux$1882.
    dead port 2/2 on $mux $procmux$1898.
    dead port 1/2 on $mux $procmux$1900.
    dead port 2/2 on $mux $procmux$1902.
    dead port 2/2 on $mux $procmux$1904.
    dead port 2/2 on $mux $procmux$1920.
    dead port 1/2 on $mux $procmux$1922.
    dead port 2/2 on $mux $procmux$1924.
    dead port 2/2 on $mux $procmux$1926.
    dead port 1/2 on $mux $procmux$1941.
    dead port 2/2 on $mux $procmux$1943.
    dead port 2/2 on $mux $procmux$1945.
    dead port 1/2 on $mux $procmux$1960.
    dead port 2/2 on $mux $procmux$1962.
    dead port 2/2 on $mux $procmux$1964.
    dead port 2/2 on $mux $procmux$1978.
    dead port 2/2 on $mux $procmux$1980.
    dead port 2/2 on $mux $procmux$1994.
    dead port 2/2 on $mux $procmux$1996.
    dead port 2/2 on $mux $procmux$2010.
    dead port 2/2 on $mux $procmux$2012.
    dead port 2/2 on $mux $procmux$2025.
    dead port 2/2 on $mux $procmux$2038.
    dead port 2/2 on $mux $procmux$2051.
    dead port 2/2 on $mux $procmux$2064.
    dead port 1/2 on $mux $procmux$1583.
    dead port 2/2 on $mux $procmux$1598.
    dead port 2/2 on $mux $procmux$1604.
    dead port 2/2 on $mux $procmux$1610.
    dead port 2/2 on $mux $procmux$1628.
    dead port 2/2 on $mux $procmux$2105.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$11347.
    dead port 2/2 on $mux $procmux$11349.
    dead port 1/2 on $mux $procmux$11352.
    dead port 2/2 on $mux $procmux$11358.
    dead port 1/2 on $mux $procmux$11361.
    dead port 2/2 on $mux $procmux$11367.
    dead port 1/2 on $mux $procmux$11370.
    dead port 2/2 on $mux $procmux$11376.
    dead port 1/2 on $mux $procmux$11379.
    dead port 2/2 on $mux $procmux$11397.
    dead port 2/2 on $mux $procmux$11399.
    dead port 1/2 on $mux $procmux$11402.
    dead port 2/2 on $mux $procmux$11408.
    dead port 1/2 on $mux $procmux$11411.
    dead port 2/2 on $mux $procmux$11417.
    dead port 1/2 on $mux $procmux$11420.
    dead port 2/2 on $mux $procmux$11426.
    dead port 1/2 on $mux $procmux$11429.
    dead port 1/2 on $mux $procmux$11446.
    dead port 1/2 on $mux $procmux$11452.
    dead port 1/2 on $mux $procmux$11458.
    dead port 1/2 on $mux $procmux$11464.
    dead port 1/2 on $mux $procmux$11482.
    dead port 1/2 on $mux $procmux$11488.
    dead port 1/2 on $mux $procmux$11494.
    dead port 1/2 on $mux $procmux$11500.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2414.
    dead port 1/2 on $mux $procmux$2417.
    dead port 1/2 on $mux $procmux$2420.
    dead port 2/2 on $mux $procmux$2423.
    dead port 1/2 on $mux $procmux$2444.
    dead port 1/2 on $mux $procmux$2447.
    dead port 2/2 on $mux $procmux$2450.
    dead port 1/2 on $mux $procmux$2468.
    dead port 2/2 on $mux $procmux$2471.
    dead port 1/2 on $mux $procmux$2477.
    dead port 2/2 on $mux $procmux$2480.
    dead port 1/2 on $mux $procmux$2495.
    dead port 1/2 on $mux $procmux$2498.
    dead port 2/2 on $mux $procmux$2501.
    dead port 1/2 on $mux $procmux$2507.
    dead port 1/2 on $mux $procmux$2510.
    dead port 2/2 on $mux $procmux$2513.
    dead port 1/2 on $mux $procmux$2519.
    dead port 2/2 on $mux $procmux$2522.
    dead port 1/2 on $mux $procmux$2528.
    dead port 2/2 on $mux $procmux$2531.
    dead port 1/2 on $mux $procmux$2537.
    dead port 2/2 on $mux $procmux$2540.
    dead port 2/2 on $mux $procmux$2544.
    dead port 2/2 on $mux $procmux$2547.
    dead port 2/2 on $mux $procmux$2549.
    dead port 2/2 on $mux $procmux$2552.
    dead port 2/2 on $mux $procmux$2556.
    dead port 2/2 on $mux $procmux$2559.
    dead port 2/2 on $mux $procmux$2561.
    dead port 2/2 on $mux $procmux$2564.
    dead port 2/2 on $mux $procmux$2568.
    dead port 2/2 on $mux $procmux$2571.
    dead port 2/2 on $mux $procmux$2573.
    dead port 2/2 on $mux $procmux$2576.
    dead port 2/2 on $mux $procmux$2594.
    dead port 2/2 on $mux $procmux$2597.
    dead port 2/2 on $mux $procmux$2603.
    dead port 2/2 on $mux $procmux$2606.
    dead port 2/2 on $mux $procmux$2612.
    dead port 2/2 on $mux $procmux$2615.
    dead port 2/2 on $mux $procmux$2639.
    dead port 2/2 on $mux $procmux$2642.
    dead port 2/2 on $mux $procmux$2660.
    dead port 2/2 on $mux $procmux$2666.
    dead port 2/2 on $mux $procmux$2672.
    dead port 2/2 on $mux $procmux$2678.
    dead port 2/2 on $mux $procmux$2684.
    dead port 2/2 on $mux $procmux$2696.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$2793: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$2771: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$3483: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$3400: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3201: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3123: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3048: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2889: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2863: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$5080.
    dead port 1/2 on $mux $procmux$5083.
    dead port 2/2 on $mux $procmux$5085.
    dead port 2/2 on $mux $procmux$5088.
    dead port 1/2 on $mux $procmux$5095.
    dead port 1/2 on $mux $procmux$5098.
    dead port 2/2 on $mux $procmux$5100.
    dead port 2/2 on $mux $procmux$5103.
    dead port 1/2 on $mux $procmux$5110.
    dead port 1/2 on $mux $procmux$5113.
    dead port 2/2 on $mux $procmux$5115.
    dead port 2/2 on $mux $procmux$5118.
    dead port 1/2 on $mux $procmux$5125.
    dead port 1/2 on $mux $procmux$5128.
    dead port 2/2 on $mux $procmux$5130.
    dead port 2/2 on $mux $procmux$5133.
    dead port 1/2 on $mux $procmux$5140.
    dead port 2/2 on $mux $procmux$7060.
    dead port 1/2 on $mux $procmux$7063.
    dead port 2/2 on $mux $procmux$7065.
    dead port 2/2 on $mux $procmux$7068.
    dead port 1/2 on $mux $procmux$5143.
    dead port 2/2 on $mux $procmux$5145.
    dead port 2/2 on $mux $procmux$5148.
    dead port 1/2 on $mux $procmux$5155.
    dead port 1/2 on $mux $procmux$5158.
    dead port 2/2 on $mux $procmux$5160.
    dead port 2/2 on $mux $procmux$5163.
    dead port 1/2 on $mux $procmux$5170.
    dead port 1/2 on $mux $procmux$5173.
    dead port 2/2 on $mux $procmux$5175.
    dead port 2/2 on $mux $procmux$5178.
    dead port 1/2 on $mux $procmux$5185.
    dead port 1/2 on $mux $procmux$5188.
    dead port 2/2 on $mux $procmux$5190.
    dead port 2/2 on $mux $procmux$5193.
    dead port 1/2 on $mux $procmux$5200.
    dead port 1/2 on $mux $procmux$5203.
    dead port 2/2 on $mux $procmux$5205.
    dead port 2/2 on $mux $procmux$5208.
    dead port 1/2 on $mux $procmux$5215.
    dead port 1/2 on $mux $procmux$5218.
    dead port 2/2 on $mux $procmux$5220.
    dead port 2/2 on $mux $procmux$5223.
    dead port 1/2 on $mux $procmux$5230.
    dead port 1/2 on $mux $procmux$5233.
    dead port 2/2 on $mux $procmux$5235.
    dead port 2/2 on $mux $procmux$7105.
    dead port 1/2 on $mux $procmux$7108.
    dead port 2/2 on $mux $procmux$7110.
    dead port 2/2 on $mux $procmux$7113.
    dead port 2/2 on $mux $procmux$5238.
    dead port 1/2 on $mux $procmux$5245.
    dead port 1/2 on $mux $procmux$5248.
    dead port 2/2 on $mux $procmux$5250.
    dead port 2/2 on $mux $procmux$5253.
    dead port 1/2 on $mux $procmux$5260.
    dead port 1/2 on $mux $procmux$5263.
    dead port 2/2 on $mux $procmux$5265.
    dead port 2/2 on $mux $procmux$5268.
    dead port 1/2 on $mux $procmux$5275.
    dead port 1/2 on $mux $procmux$5278.
    dead port 2/2 on $mux $procmux$5280.
    dead port 2/2 on $mux $procmux$5283.
    dead port 1/2 on $mux $procmux$5290.
    dead port 1/2 on $mux $procmux$5293.
    dead port 2/2 on $mux $procmux$5295.
    dead port 2/2 on $mux $procmux$5298.
    dead port 1/2 on $mux $procmux$5305.
    dead port 1/2 on $mux $procmux$5308.
    dead port 2/2 on $mux $procmux$5310.
    dead port 2/2 on $mux $procmux$5313.
    dead port 1/2 on $mux $procmux$5320.
    dead port 1/2 on $mux $procmux$5323.
    dead port 2/2 on $mux $procmux$5325.
    dead port 2/2 on $mux $procmux$5328.
    dead port 2/2 on $mux $procmux$7150.
    dead port 1/2 on $mux $procmux$7153.
    dead port 2/2 on $mux $procmux$7155.
    dead port 2/2 on $mux $procmux$7158.
    dead port 1/2 on $mux $procmux$5335.
    dead port 1/2 on $mux $procmux$5338.
    dead port 2/2 on $mux $procmux$5340.
    dead port 2/2 on $mux $procmux$5343.
    dead port 1/2 on $mux $procmux$5350.
    dead port 1/2 on $mux $procmux$5353.
    dead port 2/2 on $mux $procmux$5355.
    dead port 2/2 on $mux $procmux$5358.
    dead port 1/2 on $mux $procmux$5365.
    dead port 1/2 on $mux $procmux$5368.
    dead port 2/2 on $mux $procmux$5370.
    dead port 2/2 on $mux $procmux$5373.
    dead port 1/2 on $mux $procmux$5380.
    dead port 1/2 on $mux $procmux$5383.
    dead port 2/2 on $mux $procmux$5385.
    dead port 2/2 on $mux $procmux$5388.
    dead port 1/2 on $mux $procmux$5395.
    dead port 1/2 on $mux $procmux$5398.
    dead port 2/2 on $mux $procmux$5400.
    dead port 2/2 on $mux $procmux$5403.
    dead port 1/2 on $mux $procmux$5410.
    dead port 1/2 on $mux $procmux$5413.
    dead port 2/2 on $mux $procmux$5415.
    dead port 2/2 on $mux $procmux$5418.
    dead port 1/2 on $mux $procmux$5425.
    dead port 1/2 on $mux $procmux$5428.
    dead port 2/2 on $mux $procmux$7195.
    dead port 1/2 on $mux $procmux$7198.
    dead port 2/2 on $mux $procmux$7200.
    dead port 2/2 on $mux $procmux$7203.
    dead port 2/2 on $mux $procmux$7240.
    dead port 1/2 on $mux $procmux$7243.
    dead port 2/2 on $mux $procmux$7245.
    dead port 2/2 on $mux $procmux$7248.
    dead port 2/2 on $mux $procmux$5430.
    dead port 2/2 on $mux $procmux$5433.
    dead port 1/2 on $mux $procmux$5440.
    dead port 1/2 on $mux $procmux$5443.
    dead port 2/2 on $mux $procmux$5445.
    dead port 2/2 on $mux $procmux$5448.
    dead port 1/2 on $mux $procmux$5455.
    dead port 1/2 on $mux $procmux$5458.
    dead port 2/2 on $mux $procmux$5460.
    dead port 2/2 on $mux $procmux$5463.
    dead port 1/2 on $mux $procmux$5470.
    dead port 1/2 on $mux $procmux$5473.
    dead port 2/2 on $mux $procmux$5475.
    dead port 2/2 on $mux $procmux$5478.
    dead port 1/2 on $mux $procmux$5485.
    dead port 1/2 on $mux $procmux$5488.
    dead port 2/2 on $mux $procmux$5490.
    dead port 2/2 on $mux $procmux$5493.
    dead port 1/2 on $mux $procmux$5500.
    dead port 1/2 on $mux $procmux$5503.
    dead port 2/2 on $mux $procmux$5505.
    dead port 2/2 on $mux $procmux$5508.
    dead port 1/2 on $mux $procmux$5515.
    dead port 1/2 on $mux $procmux$5518.
    dead port 2/2 on $mux $procmux$5520.
    dead port 2/2 on $mux $procmux$5523.
    dead port 1/2 on $mux $procmux$7300.
    dead port 2/2 on $mux $procmux$7302.
    dead port 2/2 on $mux $procmux$7305.
    dead port 1/2 on $mux $procmux$7312.
    dead port 2/2 on $mux $procmux$7314.
    dead port 2/2 on $mux $procmux$7317.
    dead port 1/2 on $mux $procmux$7324.
    dead port 2/2 on $mux $procmux$7326.
    dead port 2/2 on $mux $procmux$7329.
    dead port 1/2 on $mux $procmux$7336.
    dead port 2/2 on $mux $procmux$7338.
    dead port 2/2 on $mux $procmux$7341.
    dead port 1/2 on $mux $procmux$7348.
    dead port 2/2 on $mux $procmux$7350.
    dead port 2/2 on $mux $procmux$7353.
    dead port 1/2 on $mux $procmux$7360.
    dead port 2/2 on $mux $procmux$7362.
    dead port 2/2 on $mux $procmux$7365.
    dead port 1/2 on $mux $procmux$7372.
    dead port 2/2 on $mux $procmux$7374.
    dead port 2/2 on $mux $procmux$7377.
    dead port 1/2 on $mux $procmux$7384.
    dead port 2/2 on $mux $procmux$7386.
    dead port 2/2 on $mux $procmux$7389.
    dead port 1/2 on $mux $procmux$7396.
    dead port 2/2 on $mux $procmux$7398.
    dead port 2/2 on $mux $procmux$7401.
    dead port 1/2 on $mux $procmux$7408.
    dead port 2/2 on $mux $procmux$7410.
    dead port 2/2 on $mux $procmux$7413.
    dead port 1/2 on $mux $procmux$7420.
    dead port 2/2 on $mux $procmux$7422.
    dead port 2/2 on $mux $procmux$7425.
    dead port 1/2 on $mux $procmux$7432.
    dead port 2/2 on $mux $procmux$7434.
    dead port 2/2 on $mux $procmux$7437.
    dead port 1/2 on $mux $procmux$7444.
    dead port 2/2 on $mux $procmux$7446.
    dead port 2/2 on $mux $procmux$7449.
    dead port 1/2 on $mux $procmux$7456.
    dead port 2/2 on $mux $procmux$7458.
    dead port 2/2 on $mux $procmux$7461.
    dead port 1/2 on $mux $procmux$7468.
    dead port 2/2 on $mux $procmux$7470.
    dead port 2/2 on $mux $procmux$7473.
    dead port 1/2 on $mux $procmux$7480.
    dead port 2/2 on $mux $procmux$7482.
    dead port 2/2 on $mux $procmux$7485.
    dead port 1/2 on $mux $procmux$7492.
    dead port 2/2 on $mux $procmux$7494.
    dead port 2/2 on $mux $procmux$7497.
    dead port 1/2 on $mux $procmux$7504.
    dead port 2/2 on $mux $procmux$7506.
    dead port 2/2 on $mux $procmux$7509.
    dead port 1/2 on $mux $procmux$7516.
    dead port 2/2 on $mux $procmux$7518.
    dead port 2/2 on $mux $procmux$7521.
    dead port 1/2 on $mux $procmux$7528.
    dead port 2/2 on $mux $procmux$7530.
    dead port 2/2 on $mux $procmux$7533.
    dead port 1/2 on $mux $procmux$7540.
    dead port 2/2 on $mux $procmux$7542.
    dead port 2/2 on $mux $procmux$7545.
    dead port 1/2 on $mux $procmux$7552.
    dead port 2/2 on $mux $procmux$7554.
    dead port 2/2 on $mux $procmux$7557.
    dead port 1/2 on $mux $procmux$7564.
    dead port 2/2 on $mux $procmux$7566.
    dead port 2/2 on $mux $procmux$7569.
    dead port 1/2 on $mux $procmux$7576.
    dead port 2/2 on $mux $procmux$7578.
    dead port 2/2 on $mux $procmux$7581.
    dead port 1/2 on $mux $procmux$7588.
    dead port 2/2 on $mux $procmux$7590.
    dead port 2/2 on $mux $procmux$7593.
    dead port 1/2 on $mux $procmux$7600.
    dead port 2/2 on $mux $procmux$7602.
    dead port 2/2 on $mux $procmux$7605.
    dead port 1/2 on $mux $procmux$7612.
    dead port 2/2 on $mux $procmux$7614.
    dead port 2/2 on $mux $procmux$7617.
    dead port 1/2 on $mux $procmux$7624.
    dead port 2/2 on $mux $procmux$7626.
    dead port 2/2 on $mux $procmux$7629.
    dead port 1/2 on $mux $procmux$7636.
    dead port 2/2 on $mux $procmux$7638.
    dead port 2/2 on $mux $procmux$7641.
    dead port 1/2 on $mux $procmux$7648.
    dead port 2/2 on $mux $procmux$7650.
    dead port 2/2 on $mux $procmux$7653.
    dead port 1/2 on $mux $procmux$7660.
    dead port 2/2 on $mux $procmux$7662.
    dead port 2/2 on $mux $procmux$7665.
    dead port 1/2 on $mux $procmux$7672.
    dead port 2/2 on $mux $procmux$7674.
    dead port 2/2 on $mux $procmux$7677.
    dead port 1/2 on $mux $procmux$7684.
    dead port 2/2 on $mux $procmux$7686.
    dead port 2/2 on $mux $procmux$7689.
    dead port 1/2 on $mux $procmux$7696.
    dead port 2/2 on $mux $procmux$7698.
    dead port 2/2 on $mux $procmux$7701.
    dead port 1/2 on $mux $procmux$7708.
    dead port 2/2 on $mux $procmux$7710.
    dead port 2/2 on $mux $procmux$7713.
    dead port 1/2 on $mux $procmux$7768.
    dead port 2/2 on $mux $procmux$7770.
    dead port 2/2 on $mux $procmux$7773.
    dead port 2/2 on $mux $procmux$8038.
    dead port 2/2 on $mux $procmux$8040.
    dead port 2/2 on $mux $procmux$8043.
    dead port 1/2 on $mux $procmux$5530.
    dead port 1/2 on $mux $procmux$5533.
    dead port 2/2 on $mux $procmux$5535.
    dead port 2/2 on $mux $procmux$5538.
    dead port 1/2 on $mux $procmux$5545.
    dead port 1/2 on $mux $procmux$5548.
    dead port 2/2 on $mux $procmux$5550.
    dead port 2/2 on $mux $procmux$5553.
    dead port 1/2 on $mux $procmux$5560.
    dead port 1/2 on $mux $procmux$5563.
    dead port 2/2 on $mux $procmux$5565.
    dead port 2/2 on $mux $procmux$5568.
    dead port 2/2 on $mux $procmux$10680.
    dead port 2/2 on $mux $procmux$10686.
    dead port 2/2 on $mux $procmux$10692.
    dead port 2/2 on $mux $procmux$10698.
    dead port 2/2 on $mux $procmux$10704.
    dead port 2/2 on $mux $procmux$10710.
    dead port 2/2 on $mux $procmux$10716.
    dead port 2/2 on $mux $procmux$10722.
    dead port 2/2 on $mux $procmux$8080.
    dead port 2/2 on $mux $procmux$8082.
    dead port 2/2 on $mux $procmux$8085.
    dead port 2/2 on $mux $procmux$10728.
    dead port 2/2 on $mux $procmux$10734.
    dead port 2/2 on $mux $procmux$10740.
    dead port 2/2 on $mux $procmux$10746.
    dead port 2/2 on $mux $procmux$10752.
    dead port 2/2 on $mux $procmux$3958.
    dead port 1/2 on $mux $procmux$3961.
    dead port 1/2 on $mux $procmux$3964.
    dead port 2/2 on $mux $procmux$3966.
    dead port 2/2 on $mux $procmux$3969.
    dead port 2/2 on $mux $procmux$5800.
    dead port 1/2 on $mux $procmux$5803.
    dead port 2/2 on $mux $procmux$5805.
    dead port 2/2 on $mux $procmux$5808.
    dead port 2/2 on $mux $procmux$10758.
    dead port 2/2 on $mux $procmux$10764.
    dead port 2/2 on $mux $procmux$10770.
    dead port 2/2 on $mux $procmux$10776.
    dead port 2/2 on $mux $procmux$10782.
    dead port 2/2 on $mux $procmux$8122.
    dead port 2/2 on $mux $procmux$8124.
    dead port 2/2 on $mux $procmux$8127.
    dead port 2/2 on $mux $procmux$10788.
    dead port 2/2 on $mux $procmux$10794.
    dead port 2/2 on $mux $procmux$10800.
    dead port 2/2 on $mux $procmux$10806.
    dead port 2/2 on $mux $procmux$10812.
    dead port 2/2 on $mux $procmux$10818.
    dead port 2/2 on $mux $procmux$10932.
    dead port 2/2 on $mux $procmux$10938.
    dead port 2/2 on $mux $procmux$10944.
    dead port 2/2 on $mux $procmux$10962.
    dead port 2/2 on $mux $procmux$5845.
    dead port 1/2 on $mux $procmux$5848.
    dead port 2/2 on $mux $procmux$5850.
    dead port 2/2 on $mux $procmux$5853.
    dead port 2/2 on $mux $procmux$4006.
    dead port 1/2 on $mux $procmux$4009.
    dead port 1/2 on $mux $procmux$4012.
    dead port 2/2 on $mux $procmux$4014.
    dead port 2/2 on $mux $procmux$4017.
    dead port 2/2 on $mux $procmux$8164.
    dead port 2/2 on $mux $procmux$8166.
    dead port 2/2 on $mux $procmux$8169.
    dead port 2/2 on $mux $procmux$10980.
    dead port 2/2 on $mux $procmux$10986.
    dead port 2/2 on $mux $procmux$10992.
    dead port 2/2 on $mux $procmux$10998.
    dead port 2/2 on $mux $procmux$5890.
    dead port 1/2 on $mux $procmux$5893.
    dead port 2/2 on $mux $procmux$5895.
    dead port 2/2 on $mux $procmux$5898.
    dead port 2/2 on $mux $procmux$8206.
    dead port 2/2 on $mux $procmux$8208.
    dead port 2/2 on $mux $procmux$8211.
    dead port 2/2 on $mux $procmux$4054.
    dead port 1/2 on $mux $procmux$4057.
    dead port 1/2 on $mux $procmux$4060.
    dead port 2/2 on $mux $procmux$4062.
    dead port 2/2 on $mux $procmux$4065.
    dead port 2/2 on $mux $procmux$5935.
    dead port 2/2 on $mux $procmux$8248.
    dead port 2/2 on $mux $procmux$8250.
    dead port 2/2 on $mux $procmux$8253.
    dead port 1/2 on $mux $procmux$5938.
    dead port 2/2 on $mux $procmux$5940.
    dead port 2/2 on $mux $procmux$5943.
    dead port 2/2 on $mux $procmux$4102.
    dead port 1/2 on $mux $procmux$4105.
    dead port 1/2 on $mux $procmux$4108.
    dead port 2/2 on $mux $procmux$4110.
    dead port 2/2 on $mux $procmux$4113.
    dead port 2/2 on $mux $procmux$8290.
    dead port 2/2 on $mux $procmux$8292.
    dead port 2/2 on $mux $procmux$8295.
    dead port 2/2 on $mux $procmux$5980.
    dead port 1/2 on $mux $procmux$5983.
    dead port 2/2 on $mux $procmux$5985.
    dead port 2/2 on $mux $procmux$5988.
    dead port 1/2 on $mux $procmux$2744.
    dead port 2/2 on $mux $procmux$2747.
    dead port 2/2 on $mux $procmux$2753.
    dead port 2/2 on $mux $procmux$2759.
    dead port 1/2 on $mux $procmux$2765.
    dead port 2/2 on $mux $procmux$4150.
    dead port 1/2 on $mux $procmux$4153.
    dead port 1/2 on $mux $procmux$4156.
    dead port 2/2 on $mux $procmux$4158.
    dead port 2/2 on $mux $procmux$8332.
    dead port 2/2 on $mux $procmux$8334.
    dead port 2/2 on $mux $procmux$8337.
    dead port 2/2 on $mux $procmux$4161.
    dead port 2/2 on $mux $procmux$2768.
    dead port 1/2 on $mux $procmux$2774.
    dead port 2/2 on $mux $procmux$2777.
    dead port 1/2 on $mux $procmux$2784.
    dead port 2/2 on $mux $procmux$2786.
    dead port 2/2 on $mux $procmux$6025.
    dead port 1/2 on $mux $procmux$6028.
    dead port 2/2 on $mux $procmux$6030.
    dead port 2/2 on $mux $procmux$6033.
    dead port 2/2 on $mux $procmux$2789.
    dead port 1/2 on $mux $procmux$2796.
    dead port 2/2 on $mux $procmux$2798.
    dead port 2/2 on $mux $procmux$2801.
    dead port 1/2 on $mux $procmux$2808.
    dead port 2/2 on $mux $procmux$2810.
    dead port 2/2 on $mux $procmux$2813.
    dead port 2/2 on $mux $procmux$2819.
    dead port 2/2 on $mux $procmux$2822.
    dead port 2/2 on $mux $procmux$2828.
    dead port 2/2 on $mux $procmux$2831.
    dead port 2/2 on $mux $procmux$2837.
    dead port 2/2 on $mux $procmux$2840.
    dead port 2/2 on $mux $procmux$8374.
    dead port 2/2 on $mux $procmux$8376.
    dead port 2/2 on $mux $procmux$8379.
    dead port 2/2 on $mux $procmux$2846.
    dead port 2/2 on $mux $procmux$2852.
    dead port 2/2 on $mux $procmux$2858.
    dead port 2/2 on $mux $procmux$4198.
    dead port 1/2 on $mux $procmux$4201.
    dead port 1/2 on $mux $procmux$4204.
    dead port 2/2 on $mux $procmux$4206.
    dead port 2/2 on $mux $procmux$4209.
    dead port 2/2 on $mux $procmux$2865.
    dead port 2/2 on $mux $procmux$6070.
    dead port 1/2 on $mux $procmux$6073.
    dead port 2/2 on $mux $procmux$6075.
    dead port 2/2 on $mux $procmux$6078.
    dead port 1/2 on $mux $procmux$2868.
    dead port 1/2 on $mux $procmux$2871.
    dead port 1/2 on $mux $procmux$2874.
    dead port 1/2 on $mux $procmux$2877.
    dead port 1/2 on $mux $procmux$2879.
    dead port 1/2 on $mux $procmux$2882.
    dead port 2/2 on $mux $procmux$2885.
    dead port 1/2 on $mux $procmux$2892.
    dead port 1/2 on $mux $procmux$2895.
    dead port 1/2 on $mux $procmux$2898.
    dead port 1/2 on $mux $procmux$2901.
    dead port 1/2 on $mux $procmux$2903.
    dead port 2/2 on $mux $procmux$8416.
    dead port 2/2 on $mux $procmux$8418.
    dead port 2/2 on $mux $procmux$8421.
    dead port 1/2 on $mux $procmux$2906.
    dead port 2/2 on $mux $procmux$2909.
    dead port 1/2 on $mux $procmux$2916.
    dead port 1/2 on $mux $procmux$2919.
    dead port 1/2 on $mux $procmux$2922.
    dead port 1/2 on $mux $procmux$2925.
    dead port 1/2 on $mux $procmux$2927.
    dead port 1/2 on $mux $procmux$2930.
    dead port 2/2 on $mux $procmux$2933.
    dead port 2/2 on $mux $procmux$2940.
    dead port 1/2 on $mux $procmux$2943.
    dead port 1/2 on $mux $procmux$2946.
    dead port 1/2 on $mux $procmux$2949.
    dead port 1/2 on $mux $procmux$2951.
    dead port 1/2 on $mux $procmux$2954.
    dead port 2/2 on $mux $procmux$2957.
    dead port 2/2 on $mux $procmux$4246.
    dead port 2/2 on $mux $procmux$6115.
    dead port 1/2 on $mux $procmux$6118.
    dead port 2/2 on $mux $procmux$6120.
    dead port 2/2 on $mux $procmux$6123.
    dead port 1/2 on $mux $procmux$4249.
    dead port 1/2 on $mux $procmux$4252.
    dead port 2/2 on $mux $procmux$4254.
    dead port 2/2 on $mux $procmux$4257.
    dead port 2/2 on $mux $procmux$2964.
    dead port 1/2 on $mux $procmux$2967.
    dead port 2/2 on $mux $procmux$8458.
    dead port 2/2 on $mux $procmux$8460.
    dead port 2/2 on $mux $procmux$8463.
    dead port 1/2 on $mux $procmux$2970.
    dead port 1/2 on $mux $procmux$2973.
    dead port 1/2 on $mux $procmux$2975.
    dead port 1/2 on $mux $procmux$2978.
    dead port 2/2 on $mux $procmux$2981.
    dead port 1/2 on $mux $procmux$2988.
    dead port 1/2 on $mux $procmux$2991.
    dead port 1/2 on $mux $procmux$2994.
    dead port 1/2 on $mux $procmux$2996.
    dead port 1/2 on $mux $procmux$2999.
    dead port 2/2 on $mux $procmux$3002.
    dead port 1/2 on $mux $procmux$3009.
    dead port 1/2 on $mux $procmux$3012.
    dead port 1/2 on $mux $procmux$3015.
    dead port 1/2 on $mux $procmux$3017.
    dead port 1/2 on $mux $procmux$3020.
    dead port 2/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3030.
    dead port 1/2 on $mux $procmux$3033.
    dead port 1/2 on $mux $procmux$3036.
    dead port 1/2 on $mux $procmux$3038.
    dead port 2/2 on $mux $procmux$6160.
    dead port 1/2 on $mux $procmux$6163.
    dead port 2/2 on $mux $procmux$6165.
    dead port 2/2 on $mux $procmux$6168.
    dead port 1/2 on $mux $procmux$3041.
    dead port 2/2 on $mux $procmux$3044.
    dead port 2/2 on $mux $procmux$8500.
    dead port 2/2 on $mux $procmux$8502.
    dead port 2/2 on $mux $procmux$8505.
    dead port 1/2 on $mux $procmux$3051.
    dead port 1/2 on $mux $procmux$3054.
    dead port 2/2 on $mux $procmux$4294.
    dead port 1/2 on $mux $procmux$4297.
    dead port 1/2 on $mux $procmux$4300.
    dead port 2/2 on $mux $procmux$4302.
    dead port 2/2 on $mux $procmux$4305.
    dead port 1/2 on $mux $procmux$3057.
    dead port 1/2 on $mux $procmux$3059.
    dead port 1/2 on $mux $procmux$3062.
    dead port 2/2 on $mux $procmux$3065.
    dead port 1/2 on $mux $procmux$3072.
    dead port 1/2 on $mux $procmux$3075.
    dead port 1/2 on $mux $procmux$3077.
    dead port 1/2 on $mux $procmux$3080.
    dead port 2/2 on $mux $procmux$3083.
    dead port 1/2 on $mux $procmux$3090.
    dead port 1/2 on $mux $procmux$3093.
    dead port 1/2 on $mux $procmux$3095.
    dead port 1/2 on $mux $procmux$3098.
    dead port 2/2 on $mux $procmux$3101.
    dead port 1/2 on $mux $procmux$3108.
    dead port 1/2 on $mux $procmux$3111.
    dead port 1/2 on $mux $procmux$3113.
    dead port 1/2 on $mux $procmux$3116.
    dead port 2/2 on $mux $procmux$6205.
    dead port 1/2 on $mux $procmux$6208.
    dead port 2/2 on $mux $procmux$6210.
    dead port 2/2 on $mux $procmux$8542.
    dead port 2/2 on $mux $procmux$8544.
    dead port 2/2 on $mux $procmux$8547.
    dead port 2/2 on $mux $procmux$6213.
    dead port 2/2 on $mux $procmux$3119.
    dead port 1/2 on $mux $procmux$3126.
    dead port 1/2 on $mux $procmux$3129.
    dead port 1/2 on $mux $procmux$3131.
    dead port 1/2 on $mux $procmux$3134.
    dead port 2/2 on $mux $procmux$3137.
    dead port 1/2 on $mux $procmux$3144.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3149.
    dead port 2/2 on $mux $procmux$4342.
    dead port 1/2 on $mux $procmux$4345.
    dead port 1/2 on $mux $procmux$4348.
    dead port 2/2 on $mux $procmux$4350.
    dead port 2/2 on $mux $procmux$4353.
    dead port 2/2 on $mux $procmux$3152.
    dead port 1/2 on $mux $procmux$3159.
    dead port 1/2 on $mux $procmux$3161.
    dead port 1/2 on $mux $procmux$3164.
    dead port 2/2 on $mux $procmux$3167.
    dead port 1/2 on $mux $procmux$3174.
    dead port 1/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3179.
    dead port 2/2 on $mux $procmux$3182.
    dead port 1/2 on $mux $procmux$3189.
    dead port 2/2 on $mux $procmux$8584.
    dead port 2/2 on $mux $procmux$8586.
    dead port 2/2 on $mux $procmux$8589.
    dead port 1/2 on $mux $procmux$3191.
    dead port 1/2 on $mux $procmux$3194.
    dead port 2/2 on $mux $procmux$6250.
    dead port 1/2 on $mux $procmux$6253.
    dead port 2/2 on $mux $procmux$6255.
    dead port 2/2 on $mux $procmux$6258.
    dead port 2/2 on $mux $procmux$3197.
    dead port 1/2 on $mux $procmux$3204.
    dead port 1/2 on $mux $procmux$3206.
    dead port 1/2 on $mux $procmux$3209.
    dead port 2/2 on $mux $procmux$3212.
    dead port 2/2 on $mux $procmux$3233.
    dead port 1/2 on $mux $procmux$3235.
    dead port 1/2 on $mux $procmux$3238.
    dead port 2/2 on $mux $procmux$3241.
    dead port 2/2 on $mux $procmux$3248.
    dead port 1/2 on $mux $procmux$3250.
    dead port 1/2 on $mux $procmux$3253.
    dead port 2/2 on $mux $procmux$3256.
    dead port 2/2 on $mux $procmux$3262.
    dead port 1/2 on $mux $procmux$3264.
    dead port 2/2 on $mux $procmux$4390.
    dead port 1/2 on $mux $procmux$4393.
    dead port 1/2 on $mux $procmux$4396.
    dead port 2/2 on $mux $procmux$4398.
    dead port 2/2 on $mux $procmux$4401.
    dead port 1/2 on $mux $procmux$3267.
    dead port 2/2 on $mux $procmux$3270.
    dead port 2/2 on $mux $procmux$8626.
    dead port 2/2 on $mux $procmux$8628.
    dead port 2/2 on $mux $procmux$8631.
    dead port 2/2 on $mux $procmux$3277.
    dead port 1/2 on $mux $procmux$3279.
    dead port 1/2 on $mux $procmux$3282.
    dead port 2/2 on $mux $procmux$3285.
    dead port 2/2 on $mux $procmux$3292.
    dead port 2/2 on $mux $procmux$6295.
    dead port 1/2 on $mux $procmux$6298.
    dead port 2/2 on $mux $procmux$6300.
    dead port 2/2 on $mux $procmux$6303.
    dead port 1/2 on $mux $procmux$3294.
    dead port 1/2 on $mux $procmux$3297.
    dead port 2/2 on $mux $procmux$3300.
    dead port 1/2 on $mux $procmux$3306.
    dead port 1/2 on $mux $procmux$3309.
    dead port 2/2 on $mux $procmux$3312.
    dead port 1/2 on $mux $procmux$3318.
    dead port 1/2 on $mux $procmux$3321.
    dead port 2/2 on $mux $procmux$3324.
    dead port 1/2 on $mux $procmux$3330.
    dead port 1/2 on $mux $procmux$3333.
    dead port 2/2 on $mux $procmux$3336.
    dead port 1/2 on $mux $procmux$3354.
    dead port 1/2 on $mux $procmux$3357.
    dead port 2/2 on $mux $procmux$3360.
    dead port 2/2 on $mux $procmux$8668.
    dead port 2/2 on $mux $procmux$8670.
    dead port 2/2 on $mux $procmux$8673.
    dead port 1/2 on $mux $procmux$3366.
    dead port 1/2 on $mux $procmux$3369.
    dead port 2/2 on $mux $procmux$3372.
    dead port 2/2 on $mux $procmux$4438.
    dead port 1/2 on $mux $procmux$4441.
    dead port 1/2 on $mux $procmux$4444.
    dead port 2/2 on $mux $procmux$4446.
    dead port 2/2 on $mux $procmux$4449.
    dead port 1/2 on $mux $procmux$3378.
    dead port 1/2 on $mux $procmux$3381.
    dead port 2/2 on $mux $procmux$6340.
    dead port 1/2 on $mux $procmux$6343.
    dead port 2/2 on $mux $procmux$6345.
    dead port 2/2 on $mux $procmux$6348.
    dead port 2/2 on $mux $procmux$3384.
    dead port 1/2 on $mux $procmux$3390.
    dead port 1/2 on $mux $procmux$3393.
    dead port 2/2 on $mux $procmux$3396.
    dead port 1/2 on $mux $procmux$3402.
    dead port 1/2 on $mux $procmux$3405.
    dead port 2/2 on $mux $procmux$3408.
    dead port 1/2 on $mux $procmux$3414.
    dead port 2/2 on $mux $procmux$3417.
    dead port 1/2 on $mux $procmux$3423.
    dead port 2/2 on $mux $procmux$3426.
    dead port 2/2 on $mux $procmux$8710.
    dead port 2/2 on $mux $procmux$8712.
    dead port 2/2 on $mux $procmux$8715.
    dead port 1/2 on $mux $procmux$3441.
    dead port 2/2 on $mux $procmux$3444.
    dead port 1/2 on $mux $procmux$3450.
    dead port 2/2 on $mux $procmux$3453.
    dead port 1/2 on $mux $procmux$3459.
    dead port 2/2 on $mux $procmux$3462.
    dead port 1/2 on $mux $procmux$3468.
    dead port 2/2 on $mux $procmux$3471.
    dead port 1/2 on $mux $procmux$3477.
    dead port 2/2 on $mux $procmux$4486.
    dead port 1/2 on $mux $procmux$4489.
    dead port 1/2 on $mux $procmux$4492.
    dead port 2/2 on $mux $procmux$6385.
    dead port 1/2 on $mux $procmux$6388.
    dead port 2/2 on $mux $procmux$6390.
    dead port 2/2 on $mux $procmux$6393.
    dead port 2/2 on $mux $procmux$4494.
    dead port 2/2 on $mux $procmux$4497.
    dead port 2/2 on $mux $procmux$3480.
    dead port 1/2 on $mux $procmux$3486.
    dead port 2/2 on $mux $procmux$3489.
    dead port 2/2 on $mux $procmux$8752.
    dead port 2/2 on $mux $procmux$8754.
    dead port 2/2 on $mux $procmux$8757.
    dead port 2/2 on $mux $procmux$6430.
    dead port 1/2 on $mux $procmux$6433.
    dead port 2/2 on $mux $procmux$6435.
    dead port 2/2 on $mux $procmux$6438.
    dead port 2/2 on $mux $procmux$4534.
    dead port 1/2 on $mux $procmux$4537.
    dead port 2/2 on $mux $procmux$8794.
    dead port 2/2 on $mux $procmux$8796.
    dead port 2/2 on $mux $procmux$8799.
    dead port 1/2 on $mux $procmux$4540.
    dead port 2/2 on $mux $procmux$4542.
    dead port 2/2 on $mux $procmux$4545.
    dead port 2/2 on $mux $procmux$3526.
    dead port 1/2 on $mux $procmux$3529.
    dead port 1/2 on $mux $procmux$3532.
    dead port 2/2 on $mux $procmux$3534.
    dead port 2/2 on $mux $procmux$3537.
    dead port 2/2 on $mux $procmux$6475.
    dead port 1/2 on $mux $procmux$6478.
    dead port 2/2 on $mux $procmux$6480.
    dead port 2/2 on $mux $procmux$6483.
    dead port 2/2 on $mux $procmux$8836.
    dead port 2/2 on $mux $procmux$8838.
    dead port 2/2 on $mux $procmux$8841.
    dead port 2/2 on $mux $procmux$4582.
    dead port 1/2 on $mux $procmux$4585.
    dead port 1/2 on $mux $procmux$4588.
    dead port 2/2 on $mux $procmux$4590.
    dead port 2/2 on $mux $procmux$4593.
    dead port 2/2 on $mux $procmux$3574.
    dead port 1/2 on $mux $procmux$3577.
    dead port 1/2 on $mux $procmux$3580.
    dead port 2/2 on $mux $procmux$3582.
    dead port 2/2 on $mux $procmux$3585.
    dead port 2/2 on $mux $procmux$8878.
    dead port 2/2 on $mux $procmux$8880.
    dead port 2/2 on $mux $procmux$8883.
    dead port 2/2 on $mux $procmux$6520.
    dead port 1/2 on $mux $procmux$6523.
    dead port 2/2 on $mux $procmux$6525.
    dead port 2/2 on $mux $procmux$6528.
    dead port 2/2 on $mux $procmux$4630.
    dead port 1/2 on $mux $procmux$4633.
    dead port 1/2 on $mux $procmux$4636.
    dead port 2/2 on $mux $procmux$4638.
    dead port 2/2 on $mux $procmux$4641.
    dead port 2/2 on $mux $procmux$8920.
    dead port 2/2 on $mux $procmux$8922.
    dead port 2/2 on $mux $procmux$8925.
    dead port 2/2 on $mux $procmux$6565.
    dead port 1/2 on $mux $procmux$6568.
    dead port 2/2 on $mux $procmux$6570.
    dead port 2/2 on $mux $procmux$6573.
    dead port 2/2 on $mux $procmux$3622.
    dead port 1/2 on $mux $procmux$3625.
    dead port 1/2 on $mux $procmux$3628.
    dead port 2/2 on $mux $procmux$3630.
    dead port 2/2 on $mux $procmux$3633.
    dead port 2/2 on $mux $procmux$4678.
    dead port 2/2 on $mux $procmux$8962.
    dead port 2/2 on $mux $procmux$8964.
    dead port 2/2 on $mux $procmux$8967.
    dead port 1/2 on $mux $procmux$4681.
    dead port 1/2 on $mux $procmux$4684.
    dead port 2/2 on $mux $procmux$4686.
    dead port 2/2 on $mux $procmux$4689.
    dead port 2/2 on $mux $procmux$6610.
    dead port 1/2 on $mux $procmux$6613.
    dead port 2/2 on $mux $procmux$6615.
    dead port 2/2 on $mux $procmux$6618.
    dead port 2/2 on $mux $procmux$9004.
    dead port 2/2 on $mux $procmux$9006.
    dead port 2/2 on $mux $procmux$9009.
    dead port 2/2 on $mux $procmux$3670.
    dead port 1/2 on $mux $procmux$3673.
    dead port 1/2 on $mux $procmux$3676.
    dead port 2/2 on $mux $procmux$3678.
    dead port 2/2 on $mux $procmux$3681.
    dead port 2/2 on $mux $procmux$4726.
    dead port 1/2 on $mux $procmux$4729.
    dead port 1/2 on $mux $procmux$4732.
    dead port 2/2 on $mux $procmux$4734.
    dead port 2/2 on $mux $procmux$4737.
    dead port 2/2 on $mux $procmux$6655.
    dead port 1/2 on $mux $procmux$6658.
    dead port 2/2 on $mux $procmux$6660.
    dead port 2/2 on $mux $procmux$6663.
    dead port 2/2 on $mux $procmux$9046.
    dead port 2/2 on $mux $procmux$9048.
    dead port 2/2 on $mux $procmux$9051.
    dead port 2/2 on $mux $procmux$10002.
    dead port 2/2 on $mux $procmux$10005.
    dead port 2/2 on $mux $procmux$10011.
    dead port 2/2 on $mux $procmux$10014.
    dead port 2/2 on $mux $procmux$10020.
    dead port 2/2 on $mux $procmux$10023.
    dead port 2/2 on $mux $procmux$10029.
    dead port 2/2 on $mux $procmux$10032.
    dead port 2/2 on $mux $procmux$10038.
    dead port 2/2 on $mux $procmux$10041.
    dead port 2/2 on $mux $procmux$3718.
    dead port 1/2 on $mux $procmux$3721.
    dead port 2/2 on $mux $procmux$6700.
    dead port 1/2 on $mux $procmux$6703.
    dead port 2/2 on $mux $procmux$6705.
    dead port 2/2 on $mux $procmux$6708.
    dead port 1/2 on $mux $procmux$3724.
    dead port 2/2 on $mux $procmux$4774.
    dead port 1/2 on $mux $procmux$4777.
    dead port 1/2 on $mux $procmux$4780.
    dead port 2/2 on $mux $procmux$4782.
    dead port 2/2 on $mux $procmux$4785.
    dead port 2/2 on $mux $procmux$9088.
    dead port 2/2 on $mux $procmux$9090.
    dead port 2/2 on $mux $procmux$9093.
    dead port 2/2 on $mux $procmux$3726.
    dead port 2/2 on $mux $procmux$3729.
    dead port 2/2 on $mux $procmux$10047.
    dead port 2/2 on $mux $procmux$10050.
    dead port 2/2 on $mux $procmux$10056.
    dead port 2/2 on $mux $procmux$10059.
    dead port 2/2 on $mux $procmux$10065.
    dead port 2/2 on $mux $procmux$10068.
    dead port 2/2 on $mux $procmux$10074.
    dead port 2/2 on $mux $procmux$10077.
    dead port 2/2 on $mux $procmux$10083.
    dead port 2/2 on $mux $procmux$10086.
    dead port 2/2 on $mux $procmux$10092.
    dead port 2/2 on $mux $procmux$10095.
    dead port 2/2 on $mux $procmux$10101.
    dead port 2/2 on $mux $procmux$10104.
    dead port 2/2 on $mux $procmux$10110.
    dead port 2/2 on $mux $procmux$6745.
    dead port 1/2 on $mux $procmux$6748.
    dead port 2/2 on $mux $procmux$6750.
    dead port 2/2 on $mux $procmux$6753.
    dead port 2/2 on $mux $procmux$10113.
    dead port 2/2 on $mux $procmux$9130.
    dead port 2/2 on $mux $procmux$9132.
    dead port 2/2 on $mux $procmux$9135.
    dead port 2/2 on $mux $procmux$10119.
    dead port 2/2 on $mux $procmux$10122.
    dead port 2/2 on $mux $procmux$10128.
    dead port 2/2 on $mux $procmux$10131.
    dead port 2/2 on $mux $procmux$4822.
    dead port 1/2 on $mux $procmux$4825.
    dead port 1/2 on $mux $procmux$4828.
    dead port 2/2 on $mux $procmux$4830.
    dead port 2/2 on $mux $procmux$4833.
    dead port 2/2 on $mux $procmux$10137.
    dead port 2/2 on $mux $procmux$10140.
    dead port 2/2 on $mux $procmux$3766.
    dead port 1/2 on $mux $procmux$3769.
    dead port 1/2 on $mux $procmux$3772.
    dead port 2/2 on $mux $procmux$3774.
    dead port 2/2 on $mux $procmux$3777.
    dead port 2/2 on $mux $procmux$10146.
    dead port 2/2 on $mux $procmux$10149.
    dead port 2/2 on $mux $procmux$10155.
    dead port 2/2 on $mux $procmux$10158.
    dead port 2/2 on $mux $procmux$10164.
    dead port 2/2 on $mux $procmux$10167.
    dead port 2/2 on $mux $procmux$6790.
    dead port 1/2 on $mux $procmux$6793.
    dead port 2/2 on $mux $procmux$9172.
    dead port 2/2 on $mux $procmux$9174.
    dead port 2/2 on $mux $procmux$9177.
    dead port 2/2 on $mux $procmux$6795.
    dead port 2/2 on $mux $procmux$6798.
    dead port 2/2 on $mux $procmux$10173.
    dead port 2/2 on $mux $procmux$10176.
    dead port 2/2 on $mux $procmux$10182.
    dead port 2/2 on $mux $procmux$10185.
    dead port 2/2 on $mux $procmux$10191.
    dead port 2/2 on $mux $procmux$10194.
    dead port 2/2 on $mux $procmux$10200.
    dead port 2/2 on $mux $procmux$10203.
    dead port 2/2 on $mux $procmux$10440.
    dead port 2/2 on $mux $procmux$4870.
    dead port 1/2 on $mux $procmux$4873.
    dead port 1/2 on $mux $procmux$4876.
    dead port 2/2 on $mux $procmux$4878.
    dead port 2/2 on $mux $procmux$4881.
    dead port 2/2 on $mux $procmux$10446.
    dead port 2/2 on $mux $procmux$10452.
    dead port 2/2 on $mux $procmux$10458.
    dead port 2/2 on $mux $procmux$10464.
    dead port 2/2 on $mux $procmux$3814.
    dead port 2/2 on $mux $procmux$9214.
    dead port 2/2 on $mux $procmux$9216.
    dead port 2/2 on $mux $procmux$9219.
    dead port 1/2 on $mux $procmux$3817.
    dead port 1/2 on $mux $procmux$3820.
    dead port 2/2 on $mux $procmux$3822.
    dead port 2/2 on $mux $procmux$6835.
    dead port 1/2 on $mux $procmux$6838.
    dead port 2/2 on $mux $procmux$6840.
    dead port 2/2 on $mux $procmux$6843.
    dead port 2/2 on $mux $procmux$3825.
    dead port 2/2 on $mux $procmux$10470.
    dead port 2/2 on $mux $procmux$10476.
    dead port 2/2 on $mux $procmux$10482.
    dead port 2/2 on $mux $procmux$10488.
    dead port 2/2 on $mux $procmux$10494.
    dead port 2/2 on $mux $procmux$10500.
    dead port 2/2 on $mux $procmux$10506.
    dead port 2/2 on $mux $procmux$10512.
    dead port 2/2 on $mux $procmux$10518.
    dead port 2/2 on $mux $procmux$4918.
    dead port 1/2 on $mux $procmux$4921.
    dead port 1/2 on $mux $procmux$4924.
    dead port 2/2 on $mux $procmux$4926.
    dead port 2/2 on $mux $procmux$4929.
    dead port 2/2 on $mux $procmux$9256.
    dead port 2/2 on $mux $procmux$9258.
    dead port 2/2 on $mux $procmux$9261.
    dead port 2/2 on $mux $procmux$10524.
    dead port 2/2 on $mux $procmux$10530.
    dead port 2/2 on $mux $procmux$10536.
    dead port 2/2 on $mux $procmux$6880.
    dead port 1/2 on $mux $procmux$6883.
    dead port 2/2 on $mux $procmux$6885.
    dead port 2/2 on $mux $procmux$6888.
    dead port 2/2 on $mux $procmux$10542.
    dead port 2/2 on $mux $procmux$10548.
    dead port 2/2 on $mux $procmux$10554.
    dead port 2/2 on $mux $procmux$10560.
    dead port 2/2 on $mux $procmux$3862.
    dead port 1/2 on $mux $procmux$3865.
    dead port 1/2 on $mux $procmux$3868.
    dead port 2/2 on $mux $procmux$3870.
    dead port 2/2 on $mux $procmux$3873.
    dead port 2/2 on $mux $procmux$10566.
    dead port 2/2 on $mux $procmux$10572.
    dead port 2/2 on $mux $procmux$10578.
    dead port 2/2 on $mux $procmux$9298.
    dead port 2/2 on $mux $procmux$9300.
    dead port 2/2 on $mux $procmux$9303.
    dead port 2/2 on $mux $procmux$10584.
    dead port 2/2 on $mux $procmux$10590.
    dead port 2/2 on $mux $procmux$10596.
    dead port 2/2 on $mux $procmux$4966.
    dead port 1/2 on $mux $procmux$4969.
    dead port 1/2 on $mux $procmux$4972.
    dead port 2/2 on $mux $procmux$4974.
    dead port 2/2 on $mux $procmux$4977.
    dead port 2/2 on $mux $procmux$6925.
    dead port 1/2 on $mux $procmux$6928.
    dead port 2/2 on $mux $procmux$6930.
    dead port 2/2 on $mux $procmux$6933.
    dead port 2/2 on $mux $procmux$10602.
    dead port 2/2 on $mux $procmux$10608.
    dead port 2/2 on $mux $procmux$10614.
    dead port 2/2 on $mux $procmux$10620.
    dead port 2/2 on $mux $procmux$10626.
    dead port 2/2 on $mux $procmux$10632.
    dead port 2/2 on $mux $procmux$10638.
    dead port 2/2 on $mux $procmux$9340.
    dead port 2/2 on $mux $procmux$9342.
    dead port 2/2 on $mux $procmux$9345.
    dead port 2/2 on $mux $procmux$10644.
    dead port 2/2 on $mux $procmux$10650.
    dead port 2/2 on $mux $procmux$10656.
    dead port 2/2 on $mux $procmux$3910.
    dead port 1/2 on $mux $procmux$3913.
    dead port 1/2 on $mux $procmux$3916.
    dead port 2/2 on $mux $procmux$3918.
    dead port 2/2 on $mux $procmux$3921.
    dead port 2/2 on $mux $procmux$10662.
    dead port 2/2 on $mux $procmux$10668.
    dead port 2/2 on $mux $procmux$10674.
    dead port 2/2 on $mux $procmux$5014.
    dead port 2/2 on $mux $procmux$6970.
    dead port 1/2 on $mux $procmux$6973.
    dead port 2/2 on $mux $procmux$6975.
    dead port 2/2 on $mux $procmux$6978.
    dead port 1/2 on $mux $procmux$5017.
    dead port 1/2 on $mux $procmux$5020.
    dead port 2/2 on $mux $procmux$5022.
    dead port 2/2 on $mux $procmux$5025.
    dead port 2/2 on $mux $procmux$9382.
    dead port 2/2 on $mux $procmux$9384.
    dead port 2/2 on $mux $procmux$9387.
    dead port 2/2 on $mux $procmux$7015.
    dead port 1/2 on $mux $procmux$7018.
    dead port 2/2 on $mux $procmux$7020.
    dead port 2/2 on $mux $procmux$7023.
    dead port 2/2 on $mux $procmux$9435.
    dead port 2/2 on $mux $procmux$9438.
    dead port 2/2 on $mux $procmux$9444.
    dead port 2/2 on $mux $procmux$9447.
    dead port 2/2 on $mux $procmux$9453.
    dead port 2/2 on $mux $procmux$9456.
    dead port 2/2 on $mux $procmux$9462.
    dead port 2/2 on $mux $procmux$9465.
    dead port 2/2 on $mux $procmux$9471.
    dead port 2/2 on $mux $procmux$9474.
    dead port 2/2 on $mux $procmux$9480.
    dead port 2/2 on $mux $procmux$9483.
    dead port 2/2 on $mux $procmux$9489.
    dead port 2/2 on $mux $procmux$9492.
    dead port 2/2 on $mux $procmux$9498.
    dead port 2/2 on $mux $procmux$9501.
    dead port 2/2 on $mux $procmux$9507.
    dead port 2/2 on $mux $procmux$9510.
    dead port 2/2 on $mux $procmux$9516.
    dead port 2/2 on $mux $procmux$9519.
    dead port 2/2 on $mux $procmux$9525.
    dead port 2/2 on $mux $procmux$9528.
    dead port 2/2 on $mux $procmux$9534.
    dead port 2/2 on $mux $procmux$9537.
    dead port 2/2 on $mux $procmux$9543.
    dead port 2/2 on $mux $procmux$9546.
    dead port 2/2 on $mux $procmux$9552.
    dead port 2/2 on $mux $procmux$9555.
    dead port 2/2 on $mux $procmux$9561.
    dead port 2/2 on $mux $procmux$9564.
    dead port 2/2 on $mux $procmux$9570.
    dead port 2/2 on $mux $procmux$9573.
    dead port 2/2 on $mux $procmux$9579.
    dead port 2/2 on $mux $procmux$9582.
    dead port 2/2 on $mux $procmux$9588.
    dead port 2/2 on $mux $procmux$9591.
    dead port 2/2 on $mux $procmux$9597.
    dead port 2/2 on $mux $procmux$9600.
    dead port 2/2 on $mux $procmux$9606.
    dead port 2/2 on $mux $procmux$9609.
    dead port 2/2 on $mux $procmux$9615.
    dead port 2/2 on $mux $procmux$9618.
    dead port 2/2 on $mux $procmux$9624.
    dead port 2/2 on $mux $procmux$9627.
    dead port 2/2 on $mux $procmux$9633.
    dead port 2/2 on $mux $procmux$9636.
    dead port 2/2 on $mux $procmux$9642.
    dead port 2/2 on $mux $procmux$9645.
    dead port 2/2 on $mux $procmux$9651.
    dead port 2/2 on $mux $procmux$9654.
    dead port 2/2 on $mux $procmux$9660.
    dead port 2/2 on $mux $procmux$9663.
    dead port 2/2 on $mux $procmux$9669.
    dead port 2/2 on $mux $procmux$9672.
    dead port 2/2 on $mux $procmux$9678.
    dead port 2/2 on $mux $procmux$9681.
    dead port 2/2 on $mux $procmux$9687.
    dead port 2/2 on $mux $procmux$9690.
    dead port 2/2 on $mux $procmux$9696.
    dead port 2/2 on $mux $procmux$9699.
    dead port 2/2 on $mux $procmux$9705.
    dead port 2/2 on $mux $procmux$9708.
    dead port 2/2 on $mux $procmux$9714.
    dead port 2/2 on $mux $procmux$9717.
    dead port 2/2 on $mux $procmux$9723.
    dead port 2/2 on $mux $procmux$9726.
    dead port 2/2 on $mux $procmux$9732.
    dead port 2/2 on $mux $procmux$9735.
    dead port 2/2 on $mux $procmux$9741.
    dead port 2/2 on $mux $procmux$9744.
    dead port 2/2 on $mux $procmux$9786.
    dead port 2/2 on $mux $procmux$9789.
    dead port 2/2 on $mux $procmux$9921.
    dead port 2/2 on $mux $procmux$9924.
    dead port 2/2 on $mux $procmux$9930.
    dead port 2/2 on $mux $procmux$9933.
    dead port 2/2 on $mux $procmux$9939.
    dead port 2/2 on $mux $procmux$9942.
    dead port 2/2 on $mux $procmux$9948.
    dead port 2/2 on $mux $procmux$9951.
    dead port 2/2 on $mux $procmux$9957.
    dead port 2/2 on $mux $procmux$9960.
    dead port 2/2 on $mux $procmux$9966.
    dead port 2/2 on $mux $procmux$9969.
    dead port 2/2 on $mux $procmux$9975.
    dead port 2/2 on $mux $procmux$9978.
    dead port 2/2 on $mux $procmux$9984.
    dead port 2/2 on $mux $procmux$9987.
    dead port 2/2 on $mux $procmux$9993.
    dead port 2/2 on $mux $procmux$9996.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2204.
    dead port 2/2 on $mux $procmux$2187.
    dead port 2/2 on $mux $procmux$2213.
    dead port 2/2 on $mux $procmux$2195.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1010.
    dead port 2/2 on $mux $procmux$1012.
    dead port 2/2 on $mux $procmux$1030.
    dead port 2/2 on $mux $procmux$1046.
    dead port 2/2 on $mux $procmux$1048.
    dead port 2/2 on $mux $procmux$1066.
    dead port 2/2 on $mux $procmux$1082.
    dead port 2/2 on $mux $procmux$1084.
    dead port 2/2 on $mux $procmux$1132.
    dead port 2/2 on $mux $procmux$1153.
    dead port 2/2 on $mux $procmux$1174.
    dead port 2/2 on $mux $procmux$1225.
    dead port 2/2 on $mux $procmux$1231.
    dead port 2/2 on $mux $procmux$1237.
    dead port 2/2 on $mux $procmux$938.
    dead port 2/2 on $mux $procmux$940.
    dead port 2/2 on $mux $procmux$946.
    dead port 2/2 on $mux $procmux$974.
    dead port 2/2 on $mux $procmux$976.
    dead port 2/2 on $mux $procmux$994.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/9 on $pmux $procmux$1374.
    dead port 2/9 on $pmux $procmux$1374.
    dead port 3/9 on $pmux $procmux$1374.
    dead port 4/9 on $pmux $procmux$1374.
    dead port 2/2 on $mux $procmux$1401.
    dead port 2/2 on $mux $procmux$1407.
    dead port 2/2 on $mux $procmux$1415.
    dead port 2/2 on $mux $procmux$1417.
    dead port 2/2 on $mux $procmux$1425.
    dead port 2/2 on $mux $procmux$1427.
    dead port 2/2 on $mux $procmux$1435.
    dead port 2/2 on $mux $procmux$1437.
    dead port 2/2 on $mux $procmux$1445.
    dead port 2/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$1454.
    dead port 2/2 on $mux $procmux$1461.
    dead port 2/2 on $mux $procmux$1468.
    dead port 2/2 on $mux $procmux$1475.
    dead port 2/2 on $mux $procmux$1484.
    dead port 2/2 on $mux $procmux$1486.
    dead port 2/2 on $mux $procmux$1495.
    dead port 2/2 on $mux $procmux$1497.
    dead port 2/2 on $mux $procmux$1506.
    dead port 2/2 on $mux $procmux$1508.
    dead port 2/2 on $mux $procmux$1517.
    dead port 2/2 on $mux $procmux$1519.
    dead port 2/2 on $mux $procmux$1527.
    dead port 2/2 on $mux $procmux$1535.
    dead port 2/2 on $mux $procmux$1543.
Removed 1229 multiplexer ports.
<suppressed ~211 debug messages>

11.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$1829: $auto$opt_reduce.cc:134:opt_mux$12024
    New ctrl vector for $pmux cell $procmux$2090: { $procmux$1883_CMP $auto$opt_reduce.cc:134:opt_mux$12026 $eq$load_unit.v:251$607_Y }
    New ctrl vector for $pmux cell $procmux$1637: { $eq$load_unit.v:251$607_Y $auto$opt_reduce.cc:134:opt_mux$12028 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$12023: { $procmux$1640_CMP [0] $procmux$1638_CMP $eq$load_unit.v:251$607_Y $eq$load_unit.v:181$589_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$12027: { $procmux$1640_CMP [0] $procmux$1638_CMP $eq$load_unit.v:181$589_Y }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
    New ctrl vector for $mux cell $procmux$2601: { }
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$8341: { $procmux$8013_CMP $auto$opt_reduce.cc:134:opt_mux$12030 }
    New ctrl vector for $pmux cell $procmux$4165: { $procmux$3507_CMP $auto$opt_reduce.cc:134:opt_mux$12032 }
    New ctrl vector for $pmux cell $procmux$6442: { $procmux$3508_CMP $auto$opt_reduce.cc:134:opt_mux$12034 }
    New ctrl vector for $pmux cell $procmux$8803: { $procmux$8024_CMP $auto$opt_reduce.cc:134:opt_mux$12036 }
    New ctrl vector for $pmux cell $procmux$4549: { $procmux$3515_CMP $auto$opt_reduce.cc:134:opt_mux$12038 }
    New ctrl vector for $pmux cell $procmux$6037: { $procmux$3499_CMP $auto$opt_reduce.cc:134:opt_mux$12040 }
    New ctrl vector for $pmux cell $procmux$3541: { $auto$opt_reduce.cc:134:opt_mux$12042 $procmux$3494_CMP }
    New ctrl vector for $pmux cell $procmux$6487: { $procmux$3509_CMP $auto$opt_reduce.cc:134:opt_mux$12044 }
    New ctrl vector for $pmux cell $procmux$8845: { $procmux$8025_CMP $auto$opt_reduce.cc:134:opt_mux$12046 }
    New ctrl vector for $pmux cell $procmux$4597: { $procmux$3516_CMP $auto$opt_reduce.cc:134:opt_mux$12048 }
    New ctrl vector for $pmux cell $procmux$3589: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12050 }
    New ctrl vector for $pmux cell $procmux$8383: { $procmux$8014_CMP $auto$opt_reduce.cc:134:opt_mux$12052 }
    New ctrl vector for $pmux cell $procmux$8887: { $procmux$8026_CMP $auto$opt_reduce.cc:134:opt_mux$12054 }
    New ctrl vector for $pmux cell $procmux$6532: { $procmux$3510_CMP $auto$opt_reduce.cc:134:opt_mux$12056 }
    New ctrl vector for $pmux cell $procmux$4645: { $procmux$3517_CMP $auto$opt_reduce.cc:134:opt_mux$12058 }
    New ctrl vector for $pmux cell $procmux$8047: { $auto$opt_reduce.cc:134:opt_mux$12060 $procmux$8006_CMP }
    New ctrl vector for $pmux cell $procmux$8929: { $procmux$8027_CMP $auto$opt_reduce.cc:134:opt_mux$12062 }
    New ctrl vector for $pmux cell $procmux$4213: { $procmux$3508_CMP $auto$opt_reduce.cc:134:opt_mux$12064 }
    New ctrl vector for $pmux cell $procmux$6577: { $procmux$3511_CMP $auto$opt_reduce.cc:134:opt_mux$12066 }
    New ctrl vector for $pmux cell $procmux$6082: { $procmux$3500_CMP $auto$opt_reduce.cc:134:opt_mux$12068 }
    New ctrl vector for $pmux cell $procmux$3637: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12070 }
    New ctrl vector for $pmux cell $procmux$8971: { $procmux$8028_CMP $auto$opt_reduce.cc:134:opt_mux$12072 }
    New ctrl vector for $pmux cell $procmux$5767: { $procmux$3525_CMP $auto$opt_reduce.cc:134:opt_mux$12074 }
    New ctrl vector for $pmux cell $procmux$4693: { $procmux$3518_CMP $auto$opt_reduce.cc:134:opt_mux$12076 }
    New ctrl vector for $pmux cell $procmux$6622: { $procmux$3512_CMP $auto$opt_reduce.cc:134:opt_mux$12078 }
    New ctrl vector for $pmux cell $procmux$8425: { $procmux$8015_CMP $auto$opt_reduce.cc:134:opt_mux$12080 }
    New ctrl vector for $pmux cell $procmux$9013: { $procmux$8029_CMP $auto$opt_reduce.cc:134:opt_mux$12082 }
    New ctrl vector for $pmux cell $procmux$3685: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12084 }
    New ctrl vector for $pmux cell $procmux$6667: { $procmux$3513_CMP $auto$opt_reduce.cc:134:opt_mux$12086 }
    New ctrl vector for $pmux cell $procmux$4741: { $procmux$3519_CMP $auto$opt_reduce.cc:134:opt_mux$12088 }
    New ctrl vector for $pmux cell $procmux$8089: { $procmux$8007_CMP $auto$opt_reduce.cc:134:opt_mux$12090 }
    New ctrl vector for $pmux cell $procmux$9055: { $procmux$8030_CMP $auto$opt_reduce.cc:134:opt_mux$12092 }
    New ctrl vector for $pmux cell $procmux$6127: { $procmux$3501_CMP $auto$opt_reduce.cc:134:opt_mux$12094 }
    New ctrl vector for $pmux cell $procmux$7117: { $procmux$3523_CMP $auto$opt_reduce.cc:134:opt_mux$12096 }
    New ctrl vector for $pmux cell $procmux$4261: { $procmux$3509_CMP $auto$opt_reduce.cc:134:opt_mux$12098 }
    New ctrl vector for $pmux cell $procmux$6712: { $procmux$3514_CMP $auto$opt_reduce.cc:134:opt_mux$12100 }
    New ctrl vector for $pmux cell $procmux$8467: { $procmux$8016_CMP $auto$opt_reduce.cc:134:opt_mux$12102 }
    New ctrl vector for $pmux cell $procmux$4789: { $procmux$3520_CMP $auto$opt_reduce.cc:134:opt_mux$12104 }
    New ctrl vector for $pmux cell $procmux$5812: { $auto$opt_reduce.cc:134:opt_mux$12106 $procmux$3494_CMP }
    New ctrl vector for $pmux cell $procmux$9097: { $procmux$8031_CMP $auto$opt_reduce.cc:134:opt_mux$12108 }
    New ctrl vector for $pmux cell $procmux$3973: { $procmux$3503_CMP $auto$opt_reduce.cc:134:opt_mux$12110 }
    New ctrl vector for $pmux cell $procmux$3733: { $procmux$3498_CMP $auto$opt_reduce.cc:134:opt_mux$12112 }
    New ctrl vector for $pmux cell $procmux$8131: { $procmux$8008_CMP $auto$opt_reduce.cc:134:opt_mux$12114 }
    New ctrl vector for $pmux cell $procmux$6757: { $procmux$3515_CMP $auto$opt_reduce.cc:134:opt_mux$12116 }
    New ctrl vector for $pmux cell $procmux$6172: { $procmux$3502_CMP $auto$opt_reduce.cc:134:opt_mux$12118 }
    New ctrl vector for $pmux cell $procmux$9139: { $procmux$8032_CMP $auto$opt_reduce.cc:134:opt_mux$12120 }
    New ctrl vector for $pmux cell $procmux$8509: { $procmux$8017_CMP $auto$opt_reduce.cc:134:opt_mux$12122 }
    New ctrl vector for $pmux cell $procmux$4837: { $procmux$3521_CMP $auto$opt_reduce.cc:134:opt_mux$12124 }
    New ctrl vector for $pmux cell $procmux$4309: { $procmux$3510_CMP $auto$opt_reduce.cc:134:opt_mux$12126 }
    New ctrl vector for $pmux cell $procmux$3781: { $procmux$3499_CMP $auto$opt_reduce.cc:134:opt_mux$12128 }
    New ctrl vector for $pmux cell $procmux$7162: { $procmux$3524_CMP $auto$opt_reduce.cc:134:opt_mux$12130 }
    New ctrl vector for $pmux cell $procmux$5857: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12132 }
    New ctrl vector for $pmux cell $procmux$9181: { $procmux$8033_CMP $auto$opt_reduce.cc:134:opt_mux$12134 }
    New ctrl vector for $pmux cell $procmux$6802: { $procmux$3516_CMP $auto$opt_reduce.cc:134:opt_mux$12136 }
    New ctrl vector for $pmux cell $procmux$8173: { $procmux$8009_CMP $auto$opt_reduce.cc:134:opt_mux$12138 }
    New ctrl vector for $pmux cell $procmux$4021: { $procmux$3504_CMP $auto$opt_reduce.cc:134:opt_mux$12140 }
    New ctrl vector for $pmux cell $procmux$8551: { $procmux$8018_CMP $auto$opt_reduce.cc:134:opt_mux$12142 }
    New ctrl vector for $pmux cell $procmux$7072: { $procmux$3522_CMP $auto$opt_reduce.cc:134:opt_mux$12144 }
    New ctrl vector for $pmux cell $procmux$6217: { $procmux$3503_CMP $auto$opt_reduce.cc:134:opt_mux$12146 }
    New ctrl vector for $pmux cell $procmux$4885: { $procmux$3522_CMP $auto$opt_reduce.cc:134:opt_mux$12148 }
    New ctrl vector for $pmux cell $procmux$9223: { $procmux$8034_CMP $auto$opt_reduce.cc:134:opt_mux$12150 }
    New ctrl vector for $pmux cell $procmux$6847: { $procmux$3517_CMP $auto$opt_reduce.cc:134:opt_mux$12152 }
    New ctrl vector for $pmux cell $procmux$3829: { $procmux$3500_CMP $auto$opt_reduce.cc:134:opt_mux$12154 }
    New ctrl vector for $pmux cell $procmux$4357: { $procmux$3511_CMP $auto$opt_reduce.cc:134:opt_mux$12156 }
    New ctrl vector for $pmux cell $procmux$5902: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12158 }
    New ctrl vector for $pmux cell $procmux$9265: { $procmux$8035_CMP $auto$opt_reduce.cc:134:opt_mux$12160 }
    New ctrl vector for $pmux cell $procmux$4933: { $procmux$3523_CMP $auto$opt_reduce.cc:134:opt_mux$12162 }
    New ctrl vector for $pmux cell $procmux$8593: { $procmux$8019_CMP $auto$opt_reduce.cc:134:opt_mux$12164 }
    New ctrl vector for $pmux cell $procmux$8215: { $procmux$8010_CMP $auto$opt_reduce.cc:134:opt_mux$12166 }
    New ctrl vector for $pmux cell $procmux$6892: { $procmux$3518_CMP $auto$opt_reduce.cc:134:opt_mux$12168 }
    New ctrl vector for $pmux cell $procmux$6262: { $procmux$3504_CMP $auto$opt_reduce.cc:134:opt_mux$12170 }
    New ctrl vector for $pmux cell $procmux$3877: { $procmux$3501_CMP $auto$opt_reduce.cc:134:opt_mux$12172 }
    New ctrl vector for $pmux cell $procmux$4069: { $procmux$3505_CMP $auto$opt_reduce.cc:134:opt_mux$12174 }
    New ctrl vector for $pmux cell $procmux$9307: { $procmux$8036_CMP $auto$opt_reduce.cc:134:opt_mux$12176 }
    New ctrl vector for $pmux cell $procmux$4981: { $procmux$3524_CMP $auto$opt_reduce.cc:134:opt_mux$12178 }
    New ctrl vector for $pmux cell $procmux$4405: { $procmux$3512_CMP $auto$opt_reduce.cc:134:opt_mux$12180 }
    New ctrl vector for $pmux cell $procmux$6937: { $procmux$3519_CMP $auto$opt_reduce.cc:134:opt_mux$12182 }
    New ctrl vector for $pmux cell $procmux$8635: { $procmux$8020_CMP $auto$opt_reduce.cc:134:opt_mux$12184 }
    New ctrl vector for $pmux cell $procmux$8257: { $procmux$8011_CMP $auto$opt_reduce.cc:134:opt_mux$12186 }
    New ctrl vector for $pmux cell $procmux$6307: { $procmux$3505_CMP $auto$opt_reduce.cc:134:opt_mux$12188 }
    New ctrl vector for $pmux cell $procmux$5947: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12190 }
    New ctrl vector for $pmux cell $procmux$3925: { $procmux$3502_CMP $auto$opt_reduce.cc:134:opt_mux$12192 }
    New ctrl vector for $pmux cell $procmux$6982: { $procmux$3520_CMP $auto$opt_reduce.cc:134:opt_mux$12194 }
    New ctrl vector for $pmux cell $procmux$7027: { $procmux$3521_CMP $auto$opt_reduce.cc:134:opt_mux$12196 }
    New ctrl vector for $pmux cell $procmux$8677: { $procmux$8021_CMP $auto$opt_reduce.cc:134:opt_mux$12198 }
    New ctrl vector for $pmux cell $procmux$4117: { $procmux$3506_CMP $auto$opt_reduce.cc:134:opt_mux$12200 }
    New ctrl vector for $pmux cell $procmux$4453: { $procmux$3513_CMP $auto$opt_reduce.cc:134:opt_mux$12202 }
    New ctrl vector for $pmux cell $procmux$6352: { $procmux$3506_CMP $auto$opt_reduce.cc:134:opt_mux$12204 }
    New ctrl vector for $pmux cell $procmux$8299: { $procmux$8012_CMP $auto$opt_reduce.cc:134:opt_mux$12206 }
    New ctrl vector for $pmux cell $procmux$5992: { $procmux$3498_CMP $auto$opt_reduce.cc:134:opt_mux$12208 }
    New ctrl vector for $pmux cell $procmux$8719: { $procmux$8022_CMP $auto$opt_reduce.cc:134:opt_mux$12210 }
    New ctrl vector for $pmux cell $procmux$6397: { $procmux$3507_CMP $auto$opt_reduce.cc:134:opt_mux$12212 }
    New ctrl vector for $pmux cell $procmux$4501: { $procmux$3514_CMP $auto$opt_reduce.cc:134:opt_mux$12214 }
    New ctrl vector for $pmux cell $procmux$8005: { $procmux$8037_CMP $auto$opt_reduce.cc:134:opt_mux$12216 }
    New ctrl vector for $pmux cell $procmux$3493: { $procmux$3525_CMP $auto$opt_reduce.cc:134:opt_mux$12218 }
    New ctrl vector for $pmux cell $procmux$8761: { $procmux$8023_CMP $auto$opt_reduce.cc:134:opt_mux$12220 }
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
    New ctrl vector for $pmux cell $procmux$2200: $auto$opt_reduce.cc:134:opt_mux$12222
    New ctrl vector for $pmux cell $procmux$2182: $auto$opt_reduce.cc:134:opt_mux$12224
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
    New ctrl vector for $pmux cell $procmux$1550: { $procmux$1487_CMP $procmux$1418_CMP $auto$opt_reduce.cc:134:opt_mux$12226 }
    New ctrl vector for $pmux cell $procmux$1555: { $procmux$1487_CMP $procmux$1418_CMP $auto$opt_reduce.cc:134:opt_mux$12228 }
    New ctrl vector for $pmux cell $procmux$1560: { $procmux$1418_CMP $auto$opt_reduce.cc:134:opt_mux$12230 }
    New ctrl vector for $pmux cell $procmux$1565: { $procmux$1418_CMP $auto$opt_reduce.cc:134:opt_mux$12232 }
    New ctrl vector for $pmux cell $procmux$1570: { $procmux$1418_CMP $auto$opt_reduce.cc:134:opt_mux$12234 }
  Optimizing cells in module \store_unit.
Performed a total of 109 changes.

11.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~39 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~66 debug messages>
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
<suppressed ~24 debug messages>
Removed a total of 78 cells.

11.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 4574 unused wires.
<suppressed ~8 debug messages>

11.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.8. Rerunning OPT passes. (Maybe there is more to do..)

11.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~206 debug messages>

11.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$2078: { $procmux$1789_CMP $auto$opt_reduce.cc:134:opt_mux$12236 }
    New ctrl vector for $pmux cell $procmux$2084: { $procmux$1789_CMP $auto$opt_reduce.cc:134:opt_mux$12238 }
    New ctrl vector for $pmux cell $procmux$2090: { $auto$opt_reduce.cc:134:opt_mux$12026 $auto$opt_reduce.cc:134:opt_mux$12240 }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 3 changes.

11.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 2 cells.

11.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

11.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.14. Rerunning OPT passes. (Maybe there is more to do..)

11.7.15. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~206 debug messages>

11.7.16. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 0 changes.

11.7.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

11.7.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..

11.7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.20. Finished OPT passes. (There is nothing left to do.)

11.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:181$589 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ne$load_unit.v:248$604 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:251$607 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:261$612 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$616 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$617 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$618 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$620 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$621 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$622 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$632 ($add).
Removed top 29 bits (of 32) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$632 ($add).
Removed top 30 bits (of 32) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ternary$load_unit.v:286$634 ($mux).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1577_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1577_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1577_CMP2 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1578_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1578_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1578_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1638_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1640_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1681 ($mux).
Removed top 3 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1789_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1939 ($mux).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2074_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2109_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2109_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2109_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2109_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2109_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2110_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2110_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2110_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2110_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2110_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2111_CMP15 ($eq).
Removed top 1 bits (of 3) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$632 ($add).
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$11\state_d[3:0].
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$15\state_d[3:0].
Removed top 30 bits (of 32) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$632_Y.
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$26 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$66 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$72 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$73 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$75 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$76 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$78 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$79 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$81 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$82 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:173$90 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:180$100 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:181$102 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:181$103 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:188$105 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:197$108 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:198$110 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:198$111 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:205$113 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11385_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11435_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:347$429 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:356$431 ($eq).
Removed top 2 bits (of 111) from mux cell cva6_lsu_shim.$procmux$2610 ($mux).
Removed top 2 bits (of 111) from wire cva6_lsu_shim.$3\tb_io_fu_data_i[110:0].
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$276 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$313 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$340 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$355 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$358 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$370 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$371 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$372 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$373 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$375 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$376 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$377 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$387 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$387 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$388 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$389 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$390 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$396 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$396 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$399 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$399 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$406 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$406 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3510_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3511_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3512_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3513_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3514_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3515_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3516_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3517_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3518_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3519_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3520_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3521_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3522_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3523_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3524_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5046_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5047_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5048_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5049_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5050_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5051_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5052_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5053_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5054_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5055_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5056_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5057_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5058_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5059_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5060_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7224_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7225_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7226_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7227_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7228_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7229_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7230_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7231_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7232_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7233_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7234_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7235_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7236_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7237_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7238_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8022_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8023_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8024_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8025_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8026_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8027_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8028_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8029_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8030_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8031_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8032_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8033_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8034_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8035_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8036_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$387_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$355_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$372_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$377_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$375_Y.
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2185_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2205_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2226_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2226_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2226_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2226_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2226_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2227_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2227_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2227_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2227_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2227_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2228_CMP15 ($eq).
Removed top 2 bits (of 4) from port B of cell load_store_unit.$procmux$2397_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell load_store_unit.$procmux$2398_CMP0 ($eq).
Removed top 2 bits (of 34) from FF cell load_store_unit.$procdff$11793 ($adff).
Removed top 2 bits (of 22) from wire load_store_unit.dtlb_ppn.
Removed top 2 bits (of 34) from wire load_store_unit.mmu_paddr.
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:47$519 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:47$519 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$520 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$520 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$520 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$521 ($shl).
Removed top 85 bits (of 170) from port Y of cell lsu_bypass.$and$lsu_bypass.v:0$522 ($and).
Removed top 85 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$525 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$525 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:48$529 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:48$529 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:49$530 ($add).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:49$530 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:52$533 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:52$533 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:52$534 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:52$534 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:52$534 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$535 ($shl).
Removed top 169 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$538 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$538 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:53$542 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:53$542 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:54$543 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:54$543 ($sub).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:58$555 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:58$555 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:59$556 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:59$556 ($sub).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$560 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$560 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$560 ($add).
Removed top 22 bits (of 32) from port B of cell lsu_bypass.$shiftx$lsu_bypass.v:0$561 ($shiftx).
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$520_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$560_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:48$529_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:52$534_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:53$542_Y.
Removed top 85 bits (of 170) from wire lsu_bypass.$and$lsu_bypass.v:0$522_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:47$519_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:52$533_Y.
Removed top 30 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:88$724 ($lt).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:94$736 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:94$736 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:94$737 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:94$737 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:94$737 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 258 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$741 ($and).
Removed top 258 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$746 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:95$751 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:95$751 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:95$751 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 260 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$755 ($and).
Removed top 260 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$760 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:96$765 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:96$765 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:96$765 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$766 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$766 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$766 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$767 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$767 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$767 ($sub).
Removed top 288 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$769 ($and).
Removed top 288 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$774 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:97$779 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:97$779 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:97$779 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$780 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$780 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$780 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$781 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$781 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$781 ($sub).
Removed top 290 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$783 ($and).
Removed top 290 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$788 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:98$793 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:98$793 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:98$793 ($add).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$794 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$797 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$797 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:100$802 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:100$802 ($add).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:100$802 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:103$805 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:103$805 ($mul).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$810 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:105$815 ($sub).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:105$815 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:128$819 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:128$819 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:128$820 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:128$820 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:128$820 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$821 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$821 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$821 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$822 ($sub).
Removed top 28 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$822 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$822 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$823 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:131$826 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:131$826 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:131$826 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$827 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$827 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$827 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$828 ($sub).
Removed top 27 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$828 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$828 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$829 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:134$832 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:134$832 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:134$832 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$833 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$833 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$833 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$834 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$834 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$834 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$835 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:137$838 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:137$838 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:137$838 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$839 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$839 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$839 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$840 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$840 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$840 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$841 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:140$844 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:140$844 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:140$844 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$845 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$845 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$845 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$846 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$846 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$846 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$847 ($shiftx).
Removed top 29 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:145$854 ($lt).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:151$857 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:151$857 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:151$857 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$858 ($shiftx).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$865 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$868 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$868 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:156$873 ($sub).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:156$873 ($sub).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:156$873 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:160$876 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:160$876 ($mul).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$877 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$877 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$877 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$878 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$878 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$878 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$879 ($shl).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$881 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$881 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$881 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$882 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$882 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$882 ($add).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$883 ($shiftx).
Removed top 219 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$884 ($and).
Removed top 219 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$888 ($shl).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$888 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:162$893 ($add).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:162$893 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1207 ($mux).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1291 ($mux).
Removed top 1 bits (of 5) from mux cell store_buffer.$procmux$1306 ($mux).
Removed top 1 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:105$815 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$sub$store_buffer.v:105$815 ($sub).
Removed top 1 bits (of 4) from port A of cell store_buffer.$sub$store_buffer.v:105$815 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$add$store_buffer.v:162$893 ($add).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:162$893 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1258 ($mux).
Removed top 1 bits (of 4) from mux cell store_buffer.$procmux$1306 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$add$store_buffer.v:100$802 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1223 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$sub$store_buffer.v:156$873 ($sub).
Removed top 2 bits (of 5) from wire store_buffer.$1\core_if.speculative_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$1\store_if.commit_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$2\store_if.commit_status_cnt[4:0].
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$738_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$752_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$766_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$780_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$821_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$827_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$833_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$839_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$845_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$878_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$882_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:100$802_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:103$806_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:140$844_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:151$857_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:160$877_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:162$893_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:94$737_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:95$751_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:96$765_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:97$779_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:98$793_Y.
Removed top 258 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$741_Y.
Removed top 260 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$755_Y.
Removed top 288 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$769_Y.
Removed top 290 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$783_Y.
Removed top 219 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$884_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:160$876_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:94$736_Y.
Removed top 29 bits (of 32) from wire store_buffer.$sub$store_buffer.v:156$873_Y.
Removed top 2 bits (of 5) from wire store_buffer.core_if.speculative_status_cnt.
Removed top 2 bits (of 8) from port A of cell store_unit.$le$store_unit.v:81$679 ($le).
Removed top 1 bits (of 8) from port A of cell store_unit.$ge$store_unit.v:81$680 ($ge).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1351_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1351_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1352_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1352_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1353_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1353_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1354_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1354_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1355_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1355_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1356_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1356_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1357_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1357_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1358_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1358_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1359_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1359_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1362_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1362_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1362_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1362_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1362_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1363_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1363_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1363_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1363_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1363_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1364_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1364_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1364_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1364_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1364_CMP4 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1381_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1418_CMP0 ($eq).

11.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 54 unused wires.
<suppressed ~6 debug messages>

11.10. Executing MEMORY_COLLECT pass (generating $mem cells).

11.11. Executing OPT pass (performing simple optimizations).

11.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~3 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 1 cells.

11.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

11.11.4. Finished fast OPT passes.

11.12. Printing statistics.

=== $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit ===

   Number of wires:                117
   Number of wire bits:            844
   Number of public wires:          47
   Number of public wire bits:     711
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $add                            1
     $adff                           5
     $and                            1
     $eq                            46
     $logic_and                      5
     $logic_not                      3
     $mux                           34
     $ne                             1
     $or                             1
     $pmux                           7
     $reduce_or                     13
     $shiftx                         1
     $shr                            1

=== amo_buffer ===

   Number of wires:                 17
   Number of wire bits:            425
   Number of public wires:          16
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $and                            2

=== cva6_lsu_formal ===

   Number of wires:                157
   Number of wire bits:           5245
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                152
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                        11
     $dff                           25
     $eq                            24
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      4
     $logic_or                       3
     $lt                             2
     $mux                           49
     $ne                             4
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_shim ===

   Number of wires:                 90
   Number of wire bits:           2490
   Number of public wires:          60
   Number of public wire bits:    2009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $dff                            7
     $eq                             5
     $mux                           28
     load_store_unit                 1

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_shim                   1

=== load_store_unit ===

   Number of wires:                108
   Number of wire bits:           2482
   Number of public wires:          84
   Number of public wire bits:    2423
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $add                            1
     $adff                           1
     $eq                            33
     $logic_not                      3
     $mux                            5
     $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
     $pmux                           6
     $reduce_or                      5
     lsu_bypass                      1
     shift_reg                       2
     store_unit                      1

=== lsu_bypass ===

   Number of wires:                 57
   Number of wire bits:           3651
   Number of public wires:          21
   Number of public wire bits:     530
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            7
     $adff                           4
     $and                            4
     $logic_and                      1
     $logic_not                      1
     $mul                            2
     $mux                           15
     $not                            2
     $or                             3
     $shiftx                         1
     $shl                            4
     $sub                            2

=== shift_reg ===

   Number of wires:                  4
   Number of wire bits:            204
   Number of public wires:           4
   Number of public wire bits:     204
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $adff                           1

=== store_buffer ===

   Number of wires:                215
   Number of wire bits:          15200
   Number of public wires:          48
   Number of public wire bits:    1494
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                202
     $add                           30
     $adff                           8
     $and                           14
     $eq                             9
     $logic_and                      9
     $logic_not                      4
     $logic_or                       5
     $lt                             9
     $mul                            4
     $mux                           59
     $ne                             2
     $not                            8
     $or                             8
     $shiftx                         7
     $shl                           15
     $sub                           11

=== store_unit ===

   Number of wires:                123
   Number of wire bits:           1061
   Number of public wires:          57
   Number of public wire bits:     922
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           6
     $and                            2
     $eq                            43
     $ge                             1
     $le                             1
     $logic_and                      4
     $logic_not                      4
     $mux                           20
     $pmux                           8
     $reduce_bool                    2
     $reduce_or                     16
     amo_buffer                      1
     store_buffer                    1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_shim                 1
         load_store_unit             1
           $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
           lsu_bypass                1
           shift_reg                 2
           store_unit                1
             amo_buffer              1
             store_buffer            1

   Number of wires:               3209
   Number of wire bits:          93039
   Number of public wires:         910
   Number of public wire bits:   30918
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2842
     $add                           89
     $adff                          52
     $and                           48
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                        11
     $dff                          195
     $eq                           572
     $ge                             2
     $gt                             1
     $le                             3
     $logic_and                     58
     $logic_not                     54
     $logic_or                      13
     $lt                            24
     $mul                           12
     $mux                         1101
     $ne                            10
     $not                           20
     $or                            26
     $pmux                         240
     $reduce_bool                    8
     $reduce_or                    196
     $shiftx                        18
     $shl                           40
     $shr                            6
     $sub                           32
     $xor                            2

11.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

12. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

13. Executing ASYNC2SYNC pass.
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11782 ($adff): ARST=\rst_ni, D=\idx_d, Q=\idx_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11783 ($adff): ARST=\rst_ni, D=\signed_d, Q=\signed_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11784 ($adff): ARST=\rst_ni, D=\fp_sign_d, Q=\fp_sign_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11785 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11786 ($adff): ARST=\rst_ni, D=\load_data_d, Q=\load_data_q
Replacing load_store_unit.$procdff$11793 ($adff): ARST=\rst_ni, D=\mmu_vaddr, Q=\mmu_paddr
Replacing lsu_bypass.$procdff$11788 ($adff): ARST=\rst_ni, D=\mem_n, Q=\mem_q
Replacing lsu_bypass.$procdff$11789 ($adff): ARST=\rst_ni, D=\read_pointer, Q=\read_pointer_q
Replacing lsu_bypass.$procdff$11790 ($adff): ARST=\rst_ni, D=\write_pointer, Q=\write_pointer_q
Replacing lsu_bypass.$procdff$11791 ($adff): ARST=\rst_ni, D=\status_cnt, Q=\status_cnt_q
Replacing shift_reg.$procdff$11787 ($adff): ARST=\rst_ni, D=\d_i, Q=\d_o
Replacing store_buffer.$procdff$11768 ($adff): ARST=\rst_ni, D=\commit_queue_n, Q=\commit_queue_q
Replacing store_buffer.$procdff$11769 ($adff): ARST=\rst_ni, D=\commit_status_cnt_n, Q=\commit_status_cnt_q
Replacing store_buffer.$procdff$11770 ($adff): ARST=\rst_ni, D=\commit_read_pointer_n, Q=\commit_read_pointer_q
Replacing store_buffer.$procdff$11771 ($adff): ARST=\rst_ni, D=\commit_write_pointer_n, Q=\commit_write_pointer_q
Replacing store_buffer.$procdff$11772 ($adff): ARST=\rst_ni, D=\speculative_queue_n, Q=\speculative_queue_q
Replacing store_buffer.$procdff$11773 ($adff): ARST=\rst_ni, D=\speculative_status_cnt_n, Q=\speculative_status_cnt_q
Replacing store_buffer.$procdff$11774 ($adff): ARST=\rst_ni, D=\speculative_read_pointer_n, Q=\speculative_read_pointer_q
Replacing store_buffer.$procdff$11775 ($adff): ARST=\rst_ni, D=\speculative_write_pointer_n, Q=\speculative_write_pointer_q
Replacing store_unit.$procdff$11776 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing store_unit.$procdff$11777 ($adff): ARST=\rst_ni, D=\st_data_n, Q=\st_data_q
Replacing store_unit.$procdff$11778 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [18:15], Q=\st_be_q
Replacing store_unit.$procdff$11779 ($adff): ARST=\rst_ni, D=\st_data_size_n, Q=\st_data_size_q
Replacing store_unit.$procdff$11780 ($adff): ARST=\rst_ni, D=\amo_op_d, Q=\amo_op_q
Replacing store_unit.$procdff$11781 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [2:0], Q=\trans_id_q

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 12 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

15. Executing SETUNDEF pass (replace undef values with defined constants).

16. Executing OPT pass (performing simple optimizations).

16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

16.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$11785 ($sdff) from module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit (D = $1\state_d[3:0] [3], Q = $auto$async2sync.cc:140:execute$12300 [3], rval = 1'0).
Adding SRST signal on $procdff$12020 ($dff) from module cva6_lsu_formal (D = $procmux$11640_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12673 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$12019 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$11990 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12676 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$11989 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12678 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$11988 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12680 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:205$113_Y, Q = \pc_2).
Adding SRST signal on $procdff$11987 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12684 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:188$105_Y, Q = \pc_1).
Adding SRST signal on $procdff$11986 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12688 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$11985 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12690 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:178$5_DATA[31:0]$98, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$11984 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12692 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$11983 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12694 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:195$6_DATA[31:0]$106, Q = \tb_io_instr_i_2).
Adding SRST signal on $procdff$11802 ($dff) from module cva6_lsu_shim (D = \load_mem_resp_i, Q = \x_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11801 ($dff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12697 ($sdff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state).
Adding SRST signal on $procdff$11800 ($dff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12705 ($sdff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state).
Adding SRST signal on $procdff$11798 ($dff) from module cva6_lsu_shim (D = { $2\tb_io_dcache_req_ports_i[104:104] \load_mem_resp_i \x_load_mem_resp_i \dummy_data }, Q = { \tb_io_dcache_req_ports_i [104] \tb_io_dcache_req_ports_i [69:36] }, rval = 35'00000000000000000000000000000000000).
Adding EN signal on $procdff$11798 ($dff) from module cva6_lsu_shim (D = 69'000000000000000000000000000000000000000000000000000000000000000000000, Q = { \tb_io_dcache_req_ports_i [103:70] \tb_io_dcache_req_ports_i [34:0] }).
Adding SRST signal on $procdff$11797 ($dff) from module cva6_lsu_shim (D = $2\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$12715 ($sdff) from module cva6_lsu_shim (D = $3\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i).
Adding SRST signal on $procdff$11795 ($dff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12723 ($sdff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i).
Adding SRST signal on $procdff$11794 ($dff) from module cva6_lsu_shim (D = $2\tb_io_fu_data_i[110:0], Q = \tb_io_fu_data_i, rval = 111'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$12727 ($sdff) from module cva6_lsu_shim (D = { 2'00 $3\tb_io_fu_data_i[110:0] }, Q = \tb_io_fu_data_i).
Adding EN signal on $procdff$11966 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$11965 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$11964 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$11963 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$11962 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$11961 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$11960 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$11959 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$11958 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$11957 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$11956 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$11955 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$11954 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$11953 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$11952 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$11951 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$11950 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$11949 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$11948 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$11947 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$11946 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$11945 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$11944 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$11943 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$11942 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$11941 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$11940 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$11939 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$11938 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$11937 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$11936 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$11935 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$11934 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$11933 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$11932 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$11931 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$11930 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$11929 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$11928 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$11927 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$11926 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$11925 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$11924 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$11923 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$11922 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$11921 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$11920 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$11919 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$11918 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$11917 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$11916 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$11915 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$11914 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$11913 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$11912 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$11911 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$11910 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$11909 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$11908 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$11907 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$11906 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$11905 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$11904 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$11903 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$11883 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13241 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$11882 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$11882 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13264 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$406_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$13259 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$11881 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$11880 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$11878 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$11877 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13272 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$11876 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13278 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$11875 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13284 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$11874 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11873 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13303 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$11872 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13311 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$11871 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13321 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$11870 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13329 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$11869 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$13337 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).
Adding SRST signal on $procdff$11791 ($sdff) from module lsu_bypass (D = $3\status_cnt[1:0], Q = $auto$async2sync.cc:140:execute$12312, rval = 2'00).
Adding SRST signal on $procdff$11790 ($sdff) from module lsu_bypass (D = $1\write_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12310, rval = 1'0).
Adding SRST signal on $procdff$11789 ($sdff) from module lsu_bypass (D = $2\read_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12308, rval = 1'0).
Adding SRST signal on $procdff$11788 ($sdff) from module lsu_bypass (D = $3\mem_n[169:0], Q = $auto$async2sync.cc:140:execute$12306, rval = 170'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$11773 ($sdff) from module store_buffer (D = \core_if.speculative_status_cnt, Q = $auto$async2sync.cc:140:execute$12326, rval = 3'000).
Adding SRST signal on $procdff$11772 ($sdff) from module store_buffer (D = { $2\speculative_queue_n[291:0] [219] $2\speculative_queue_n[291:0] [146] $2\speculative_queue_n[291:0] [73] $2\speculative_queue_n[291:0] [0] }, Q = { $auto$async2sync.cc:140:execute$12324 [219] $auto$async2sync.cc:140:execute$12324 [146] $auto$async2sync.cc:140:execute$12324 [73] $auto$async2sync.cc:140:execute$12324 [0] }, rval = 4'0000).
Adding SRST signal on $procdff$11776 ($sdff) from module store_unit (D = $1\state_d[1:0], Q = $auto$async2sync.cc:140:execute$12332, rval = 2'00).

16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 283 unused cells and 295 unused wires.
<suppressed ~315 debug messages>

16.5. Rerunning OPT passes. (Removed registers in this run.)

16.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
<suppressed ~4 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
<suppressed ~15 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 80 cells.

16.8. Executing OPT_DFF pass (perform DFF optimizations).

16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 80 unused wires.
<suppressed ~3 debug messages>

16.10. Finished fast OPT passes.

17. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

18. Executing HIERARCHY pass (managing design hierarchy).

18.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass

18.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

19. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 114 unique messages, 334 total
End of script. Logfile hash: 8b62f113ac, CPU: user 11.75s system 0.10s, MEM: 101.84 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 32% 3x check (3 sec), 25% 9x opt_clean (3 sec), ...
