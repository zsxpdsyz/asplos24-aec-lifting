
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cva6_lsu_model.v
Parsing formal SystemVerilog input from `cva6_lsu_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_model'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

4.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

4.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_model'.
Generating RTLIL representation for module `\cva6_lsu_model'.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_lsu_model.v:98
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_lsu_model.v:94
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_lsu_model.v:90

4.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

4.2.6. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removing unused module `$abstract\cva6_lsu_model'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 3 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
Cleaned up 1 empty switch.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$595 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$595 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$590 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$590 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$585 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$585 in module cva6_lsu_model.
Removed 9 dead cases from process $proc$cva6_lsu_model.v:85$418 in module cva6_lsu_model.
Marked 27 switch rules as full_case in process $proc$cva6_lsu_model.v:85$418 in module cva6_lsu_model.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$151 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$151 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$31 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$31 in module cva6_lsu_formal.
Removed a total of 22 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 250 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
  Set init value: $formal$cva6_lsu_formal.v:207$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
  Set init value: $formal$cva6_lsu_formal.v:172$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
  Set init value: $formal$cva6_lsu_formal.v:170$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
  Set init value: $formal$cva6_lsu_formal.v:166$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
  Set init value: $formal$cva6_lsu_formal.v:164$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
  Set init value: $formal$cva6_lsu_formal.v:162$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
  Set init value: $formal$cva6_lsu_formal.v:161$6_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
  Set init value: $formal$cva6_lsu_formal.v:160$5_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
  Set init value: $formal$cva6_lsu_formal.v:159$4_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
  Set init value: $formal$cva6_lsu_formal.v:156$3_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$595'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$395_DATA[7:0]$597
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$590'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$411_DATA[1:0]$594
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$585'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$410_DATA[31:0]$589
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
     1/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_DATA[1:0]$583
     2/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_ADDR[1:0]$582
     3/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_DATA[1:0]$580
     4/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_DATA[1:0]$579
     5/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_ADDR[1:0]$578
     6/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_DATA[1:0]$577
     7/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_ADDR[1:0]$576
     8/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_DATA[1:0]$574
     9/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_ADDR[1:0]$573
    10/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_DATA[1:0]$571
    11/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_DATA[1:0]$570
    12/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_ADDR[1:0]$569
    13/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_DATA[1:0]$568
    14/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_ADDR[1:0]$567
    15/153: $5$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_DATA[7:0]$560
    16/153: $5$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_DATA[1:0]$559
    17/153: $5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA[31:0]$558
    18/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_DATA[7:0]$557
    19/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_ADDR[1:0]$556
    20/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_DATA[1:0]$555
    21/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_ADDR[1:0]$554
    22/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA[31:0]$553
    23/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_ADDR[1:0]$552
    24/153: $4$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$394[1:0]$551
    25/153: $4$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$393[31:0]$550
    26/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_DATA[7:0]$547
    27/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_ADDR[1:0]$546
    28/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_DATA[1:0]$545
    29/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_ADDR[1:0]$544
    30/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA[31:0]$543
    31/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_ADDR[1:0]$542
    32/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$394[1:0]$541
    33/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$393[31:0]$540
    34/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_DATA[7:0]$533
    35/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_DATA[1:0]$532
    36/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_DATA[31:0]$531
    37/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_DATA[7:0]$530
    38/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_ADDR[1:0]$529
    39/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_DATA[1:0]$528
    40/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_ADDR[1:0]$527
    41/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_DATA[31:0]$526
    42/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_ADDR[1:0]$525
    43/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$392[1:0]$524
    44/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$391[31:0]$523
    45/153: $5\instr_i_pc[7:0]
    46/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_DATA[7:0]$515
    47/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_ADDR[1:0]$514
    48/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_DATA[1:0]$513
    49/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_ADDR[1:0]$512
    50/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_DATA[31:0]$511
    51/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_ADDR[1:0]$510
    52/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$392[1:0]$507
    53/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$391[31:0]$506
    54/153: $4\instr_i_pc[7:0]
    55/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_DATA[7:0]$521
    56/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_ADDR[1:0]$520
    57/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_DATA[1:0]$519
    58/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_ADDR[1:0]$518
    59/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA[31:0]$517
    60/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_ADDR[1:0]$516
    61/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$394[1:0]$509
    62/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$393[31:0]$508
    63/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_DATA[1:0]$502
    64/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_ADDR[1:0]$501
    65/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_DATA[7:0]$500
    66/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_ADDR[1:0]$499
    67/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_DATA[31:0]$498
    68/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_ADDR[1:0]$497
    69/153: $3\instr_i_pc[7:0]
    70/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_DATA[1:0]$495
    71/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_DATA[1:0]$494
    72/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_ADDR[1:0]$493
    73/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_DATA[7:0]$492
    74/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_ADDR[1:0]$491
    75/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_DATA[31:0]$490
    76/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_ADDR[1:0]$489
    77/153: $2\instr_i_pc[7:0]
    78/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_DATA[1:0]$488
    79/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_ADDR[1:0]$487
    80/153: $0\inner_load_mem_resp_i[0:0]
    81/153: $0\x_inner_store_mem_resp_i[0:0]
    82/153: $0\inner_store_mem_resp_i[0:0]
    83/153: $0\x_inner_instr_i[31:0]
    84/153: $0\inner_instr_i[31:0]
    85/153: $0\x_inner_instr_valid_i[0:0]
    86/153: $0\inner_instr_valid_i[0:0]
    87/153: $0\x_inner_is_load_i[0:0]
    88/153: $0\inner_is_load_i[0:0]
    89/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_DATA[1:0]$483
    90/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_ADDR[1:0]$482
    91/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_DATA[1:0]$481
    92/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_ADDR[1:0]$480
    93/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_DATA[1:0]$479
    94/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_ADDR[1:0]$478
    95/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_DATA[1:0]$477
    96/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_ADDR[1:0]$476
    97/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_DATA[7:0]$475
    98/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_ADDR[1:0]$474
    99/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_DATA[1:0]$473
   100/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_ADDR[1:0]$472
   101/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA[31:0]$471
   102/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_ADDR[1:0]$470
   103/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_DATA[7:0]$469
   104/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_ADDR[1:0]$468
   105/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_DATA[1:0]$467
   106/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_ADDR[1:0]$466
   107/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_DATA[31:0]$465
   108/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_ADDR[1:0]$464
   109/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$394[1:0]$455
   110/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$393[31:0]$454
   111/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$392[1:0]$453
   112/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$391[31:0]$452
   113/153: $1\instr_i_pc[7:0]
   114/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_DATA[1:0]$463
   115/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_ADDR[1:0]$462
   116/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_DATA[7:0]$461
   117/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_ADDR[1:0]$460
   118/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_DATA[31:0]$459
   119/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_ADDR[1:0]$458
   120/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_DATA[1:0]$457
   121/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_ADDR[1:0]$456
   122/153: $0\CLK_CYCLE[31:0]
   123/153: $0\store_instr_queue_state[3][1:0]
   124/153: $0\store_instr_queue_state[2][1:0]
   125/153: $0\store_instr_queue_state[1][1:0]
   126/153: $0\store_instr_queue_state[0][1:0]
   127/153: $0\store_instr_i_queue_pc[3][7:0]
   128/153: $0\store_instr_i_queue_pc[2][7:0]
   129/153: $0\store_instr_i_queue_pc[1][7:0]
   130/153: $0\store_instr_i_queue_pc[0][7:0]
   131/153: $0\store_instr_i_queue[3][31:0]
   132/153: $0\store_instr_i_queue[2][31:0]
   133/153: $0\store_instr_i_queue[1][31:0]
   134/153: $0\store_instr_i_queue[0][31:0]
   135/153: $0\ready_flag[0:0]
   136/153: $0\store_instr_queue_state_flatten_3[1:0]
   137/153: $0\store_instr_queue_state_flatten_2[1:0]
   138/153: $0\store_instr_queue_state_flatten_1[1:0]
   139/153: $0\store_instr_queue_state_flatten_0[1:0]
   140/153: $0\store_instr_i_queue_flatten_3_pc[7:0]
   141/153: $0\store_instr_i_queue_flatten_3[31:0]
   142/153: $0\store_instr_i_queue_flatten_2_pc[7:0]
   143/153: $0\store_instr_i_queue_flatten_2[31:0]
   144/153: $0\store_instr_i_queue_flatten_1_pc[7:0]
   145/153: $0\store_instr_i_queue_flatten_1[31:0]
   146/153: $0\store_instr_i_queue_flatten_0_pc[7:0]
   147/153: $0\store_instr_i_queue_flatten_0[31:0]
   148/153: $0\load_instr_queue_state[1:0]
   149/153: $0\load_instr_i_queue_pc[7:0]
   150/153: $0\load_instr_i_queue[31:0]
   151/153: $0\queue_serve_ptr[1:0]
   152/153: $0\queue_commit_ptr[1:0]
   153/153: $0\queue_store_ptr[1:0]
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA[31:0]$336
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_ADDR[4:0]$334
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_DATA[31:0]$335
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$141.$result[31:0]$325
   126/587: $5\sra$func$cva6_processor_shim.v:100$142.$result[31:0]$329
   127/587: $5\sra$func$cva6_processor_shim.v:100$142.shamt[4:0]$331
   128/587: $5\sra$func$cva6_processor_shim.v:100$142.d[63:0]$330
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$141.alu_fun[2:0]$328
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$141.imm_data[31:0]$327
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$141.reg_data[31:0]$326
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA[31:0]$333
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_ADDR[4:0]$332
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$140.$result[31:0]$323
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$140.inst[31:0]$324
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_DATA[31:0]$321
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_DATA[31:0]$319
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_ADDR[4:0]$311
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_DATA[31:0]$312
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_DATA[31:0]$314
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_ADDR[4:0]$313
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_DATA[31:0]$310
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_ADDR[4:0]$309
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$138.$result[31:0]$296
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$138.inst[31:0]$297
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_DATA[31:0]$318
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_ADDR[4:0]$317
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA[31:0]$316
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_ADDR[4:0]$315
   218/587: $4\sra$func$cva6_processor_shim.v:100$142.shamt[4:0]$308
   219/587: $4\sra$func$cva6_processor_shim.v:100$142.d[63:0]$307
   220/587: $4\sra$func$cva6_processor_shim.v:100$142.$result[31:0]$306
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$141.alu_fun[2:0]$305
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$141.imm_data[31:0]$304
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$141.reg_data[31:0]$303
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$141.$result[31:0]$302
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$140.inst[31:0]$301
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$140.$result[31:0]$300
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$139.instr[31:0]$299
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$139.$result[0:0]$298
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_DATA[31:0]$294
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_DATA[31:0]$292
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_ADDR[4:0]$278
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_DATA[31:0]$279
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_DATA[31:0]$281
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_ADDR[4:0]$280
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_DATA[31:0]$277
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_ADDR[4:0]$276
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$136.$result[31:0]$259
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$136.inst[31:0]$260
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_DATA[31:0]$291
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_ADDR[4:0]$290
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA[31:0]$289
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_ADDR[4:0]$288
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_DATA[31:0]$287
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_ADDR[4:0]$286
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_DATA[31:0]$285
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_ADDR[4:0]$284
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_DATA[31:0]$283
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_ADDR[4:0]$282
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$142.shamt[4:0]$275
   350/587: $3\sra$func$cva6_processor_shim.v:100$142.d[63:0]$274
   351/587: $3\sra$func$cva6_processor_shim.v:100$142.$result[31:0]$273
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$141.alu_fun[2:0]$272
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$141.imm_data[31:0]$271
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$141.reg_data[31:0]$270
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$141.$result[31:0]$269
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$140.inst[31:0]$268
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$140.$result[31:0]$267
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$139.instr[31:0]$266
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$139.$result[0:0]$265
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$138.inst[31:0]$264
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$138.$result[31:0]$263
   362/587: $3\is_load$func$cva6_processor_shim.v:232$137.instr[31:0]$262
   363/587: $3\is_load$func$cva6_processor_shim.v:232$137.$result[0:0]$261
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_DATA[31:0]$257
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_ADDR[4:0]$256
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA[31:0]$255
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_ADDR[4:0]$254
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_DATA[31:0]$253
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_ADDR[4:0]$252
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_DATA[31:0]$251
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_ADDR[4:0]$250
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_DATA[31:0]$249
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_ADDR[4:0]$248
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_DATA[31:0]$247
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_ADDR[4:0]$246
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_DATA[31:0]$245
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_ADDR[4:0]$244
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_DATA[31:0]$243
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_ADDR[4:0]$242
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$142.shamt[4:0]$241
   445/587: $2\sra$func$cva6_processor_shim.v:100$142.d[63:0]$240
   446/587: $2\sra$func$cva6_processor_shim.v:100$142.$result[31:0]$239
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$141.alu_fun[2:0]$238
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$141.imm_data[31:0]$237
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$141.reg_data[31:0]$236
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$141.$result[31:0]$235
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$140.inst[31:0]$234
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$140.$result[31:0]$233
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$139.instr[31:0]$232
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$139.$result[0:0]$231
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$138.inst[31:0]$230
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$138.$result[31:0]$229
   457/587: $2\is_load$func$cva6_processor_shim.v:232$137.instr[31:0]$228
   458/587: $2\is_load$func$cva6_processor_shim.v:232$137.$result[0:0]$227
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$136.inst[31:0]$226
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$136.$result[31:0]$225
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$135.$result[0:0]$223
   466/587: $2\is_store$func$cva6_processor_shim.v:226$135.instr[31:0]$224
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_DATA[31:0]$222
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_ADDR[4:0]$221
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA[31:0]$220
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_ADDR[4:0]$219
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_DATA[31:0]$218
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_ADDR[4:0]$217
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_DATA[31:0]$216
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_ADDR[4:0]$215
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_DATA[31:0]$214
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_ADDR[4:0]$213
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_DATA[31:0]$212
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_ADDR[4:0]$211
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_DATA[31:0]$210
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_ADDR[4:0]$209
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_DATA[31:0]$208
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_ADDR[4:0]$207
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$142.shamt[4:0]$206
   570/587: $1\sra$func$cva6_processor_shim.v:100$142.d[63:0]$205
   571/587: $1\sra$func$cva6_processor_shim.v:100$142.$result[31:0]$204
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$141.alu_fun[2:0]$203
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$141.imm_data[31:0]$202
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$141.reg_data[31:0]$201
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$141.$result[31:0]$200
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$140.inst[31:0]$199
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$140.$result[31:0]$198
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$139.instr[31:0]$197
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$139.$result[0:0]$196
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$138.inst[31:0]$195
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$138.$result[31:0]$194
   582/587: $1\is_load$func$cva6_processor_shim.v:232$137.instr[31:0]$193
   583/587: $1\is_load$func$cva6_processor_shim.v:232$137.$result[0:0]$192
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$136.inst[31:0]$191
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$136.$result[31:0]$190
   586/587: $1\is_store$func$cva6_processor_shim.v:226$135.instr[31:0]$189
   587/587: $1\is_store$func$cva6_processor_shim.v:226$135.$result[0:0]$188
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
     1/54: $4\local_ready_2[0:0]
     2/54: $3\tb_io_instr_valid_i_2[0:0]
     3/54: $3\pc_2[31:0]
     4/54: $3\local_ready_2[0:0]
     5/54: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_DATA[31:0]$94
     6/54: $4\local_ready_1[0:0]
     7/54: $3\tb_io_instr_valid_i_1[0:0]
     8/54: $3\pc_1[31:0]
     9/54: $3\local_ready_1[0:0]
    10/54: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_DATA[31:0]$86
    11/54: $2\local_ready_2[0:0]
    12/54: $2\pc_2[31:0]
    13/54: $2\tb_io_instr_valid_i_2[0:0]
    14/54: $2\tb_io_instr_i_2[31:0]
    15/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_DATA[31:0]$83
    16/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_ADDR[1:0]$82
    17/54: $2\local_ready_1[0:0]
    18/54: $2\pc_1[31:0]
    19/54: $2\tb_io_instr_valid_i_1[0:0]
    20/54: $2\tb_io_instr_i_1[31:0]
    21/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_DATA[31:0]$81
    22/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_ADDR[1:0]$80
    23/54: $1\local_ready_2[0:0]
    24/54: $1\local_ready_1[0:0]
    25/54: $1\tb_io_instr_i_2[31:0]
    26/54: $1\tb_io_instr_i_1[31:0]
    27/54: $1\tb_io_instr_valid_i_2[0:0]
    28/54: $1\tb_io_instr_valid_i_1[0:0]
    29/54: $1\pc_2[31:0]
    30/54: $1\pc_1[31:0]
    31/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_DATA[31:0]$61
    32/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_ADDR[1:0]$60
    33/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_DATA[31:0]$59
    34/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_ADDR[1:0]$58
    35/54: $0$formal$cva6_lsu_formal.v:156$3_EN[0:0]$37
    36/54: $0$formal$cva6_lsu_formal.v:156$3_CHECK[0:0]$36
    37/54: $0$formal$cva6_lsu_formal.v:159$4_EN[0:0]$39
    38/54: $0$formal$cva6_lsu_formal.v:159$4_CHECK[0:0]$38
    39/54: $0$formal$cva6_lsu_formal.v:160$5_EN[0:0]$41
    40/54: $0$formal$cva6_lsu_formal.v:160$5_CHECK[0:0]$40
    41/54: $0$formal$cva6_lsu_formal.v:161$6_EN[0:0]$43
    42/54: $0$formal$cva6_lsu_formal.v:161$6_CHECK[0:0]$42
    43/54: $0$formal$cva6_lsu_formal.v:162$7_EN[0:0]$45
    44/54: $0$formal$cva6_lsu_formal.v:162$7_CHECK[0:0]$44
    45/54: $0$formal$cva6_lsu_formal.v:164$8_EN[0:0]$47
    46/54: $0$formal$cva6_lsu_formal.v:164$8_CHECK[0:0]$46
    47/54: $0$formal$cva6_lsu_formal.v:166$9_EN[0:0]$49
    48/54: $0$formal$cva6_lsu_formal.v:166$9_CHECK[0:0]$48
    49/54: $0$formal$cva6_lsu_formal.v:170$10_EN[0:0]$51
    50/54: $0$formal$cva6_lsu_formal.v:170$10_CHECK[0:0]$50
    51/54: $0$formal$cva6_lsu_formal.v:172$11_EN[0:0]$53
    52/54: $0$formal$cva6_lsu_formal.v:172$11_CHECK[0:0]$52
    53/54: $0$formal$cva6_lsu_formal.v:207$12_EN[0:0]$55
    54/54: $0$formal$cva6_lsu_formal.v:207$12_CHECK[0:0]$54
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$395_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$595'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:70$390' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$590'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$411_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$590'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$411_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$590'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:68$389' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$585'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$410_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$585'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$410_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$585'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cva6_lsu_model.\CLK_CYCLE' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10202' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\instr_i_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10203' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_store_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10204' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_commit_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10205' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_serve_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10206' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10207' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10208' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_queue_state' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10209' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10210' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10211' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10212' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10213' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10214' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10215' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10216' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10217' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10218' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10219' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10220' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10221' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\ready_flag' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10222' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10223' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10224' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10225' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10226' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10227' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10228' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10229' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10230' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_load_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10231' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$391' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10232' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$392' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10233' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$393' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10234' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$394' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10235' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10236' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10237' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10238' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10239' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10240' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10241' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10242' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10243' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10244' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10245' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10246' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10247' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10248' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$396_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10249' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10250' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$397_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10251' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10252' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$398_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10253' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10254' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$399_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10255' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10256' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10257' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10258' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$401_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10259' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10260' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$402_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10261' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10262' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10263' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10264' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$404_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10265' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10266' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$405_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10267' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10268' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$406_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10269' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10270' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$407_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10271' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10272' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$408_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10273' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10274' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$409_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
  created $adff cell `$procdff$10275' with positive edge clock and negative level reset.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10276' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10277' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10278' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10279' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10280' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10281' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10282' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10283' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10284' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10285' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10286' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10287' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10288' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10289' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10290' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10291' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10292' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10293' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10294' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10295' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10296' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10297' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10298' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10299' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10300' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10301' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10302' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10303' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10304' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10305' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10306' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10307' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10308' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10309' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10310' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10311' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10312' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10313' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10314' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10315' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10316' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10317' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10318' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10319' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10320' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10321' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10322' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10323' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10324' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10325' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10326' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10327' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10328' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10329' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10330' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10331' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10332' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10333' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10334' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10335' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10336' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10337' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10338' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10339' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10340' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10341' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10342' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10343' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10344' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10345' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10346' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10347' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10348' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10349' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10350' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10351' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10352' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10353' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10354' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$135.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10355' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$135.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10356' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$136.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10357' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$136.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10358' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$137.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10359' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$137.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10360' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$138.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10361' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$138.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10362' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$139.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10363' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$139.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10364' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$140.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10365' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$140.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10366' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$141.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10367' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$141.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10368' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$141.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10369' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$141.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10370' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$142.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10371' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$142.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10372' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$142.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10373' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10374' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10375' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10376' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10377' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10378' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10379' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10380' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10381' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10382' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10383' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10384' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10385' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10386' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10387' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10388' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10389' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10390' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10391' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10392' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10393' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10394' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10395' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10396' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10397' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10398' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10399' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10400' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10401' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10402' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10403' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10404' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10405' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10406' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10407' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10408' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10409' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10410' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10411' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10412' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10413' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10414' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10415' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10416' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10417' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10418' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10419' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10420' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10421' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10422' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10423' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10424' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10425' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10426' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10427' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10428' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10429' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10430' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10431' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10432' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10433' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10434' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10435' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10436' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10437' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10438' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$143_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10439' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10440' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$144_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10441' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10442' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$145_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10443' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10444' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$146_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10445' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10446' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$147_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10447' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10448' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$148_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10449' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10450' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$149_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10451' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10452' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$150_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
  created $dff cell `$procdff$10453' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10454' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10455' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10456' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10457' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10458' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10459' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10460' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10461' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10462' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10463' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10464' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10465' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10466' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10467' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10468' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10469' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10470' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10471' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10472' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10473' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10474' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10475' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10476' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10477' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10478' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10479' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:170$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10480' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:170$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10481' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10482' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10483' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:207$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10484' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:207$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
  created $dff cell `$procdff$10485' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
  created $dff cell `$procdff$10486' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
  created $dff cell `$procdff$10487' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
  created $dff cell `$procdff$10488' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
  created $dff cell `$procdff$10489' with positive edge clock.

4.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$595'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$595'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$590'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$590'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$585'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$585'.
Found and cleaned up 28 empty switches in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:85$418'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$151'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$31'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$13'.
Cleaned up 70 empty switches.

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_model.
<suppressed ~23 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~4 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 674 unused cells and 3789 unused wires.
<suppressed ~771 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~132 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Removed a total of 3149 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10014.
    dead port 1/2 on $mux $procmux$10020.
    dead port 1/2 on $mux $procmux$10026.
    dead port 1/2 on $mux $procmux$10032.
    dead port 1/2 on $mux $procmux$10050.
    dead port 1/2 on $mux $procmux$10056.
    dead port 1/2 on $mux $procmux$10062.
    dead port 1/2 on $mux $procmux$10068.
    dead port 2/2 on $mux $procmux$9915.
    dead port 2/2 on $mux $procmux$9917.
    dead port 1/2 on $mux $procmux$9920.
    dead port 2/2 on $mux $procmux$9926.
    dead port 1/2 on $mux $procmux$9929.
    dead port 2/2 on $mux $procmux$9935.
    dead port 1/2 on $mux $procmux$9938.
    dead port 2/2 on $mux $procmux$9944.
    dead port 1/2 on $mux $procmux$9947.
    dead port 2/2 on $mux $procmux$9965.
    dead port 2/2 on $mux $procmux$9967.
    dead port 1/2 on $mux $procmux$9970.
    dead port 2/2 on $mux $procmux$9976.
    dead port 1/2 on $mux $procmux$9979.
    dead port 2/2 on $mux $procmux$9985.
    dead port 1/2 on $mux $procmux$9988.
    dead port 2/2 on $mux $procmux$9994.
    dead port 1/2 on $mux $procmux$9997.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1017.
    dead port 2/2 on $mux $procmux$924.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1361: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$1339: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$2051: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$1968: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1769: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1691: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1616: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1457: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1431: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6101.
    dead port 1/2 on $mux $procmux$6108.
    dead port 2/2 on $mux $procmux$6110.
    dead port 2/2 on $mux $procmux$6113.
    dead port 1/2 on $mux $procmux$6120.
    dead port 2/2 on $mux $procmux$6122.
    dead port 2/2 on $mux $procmux$6125.
    dead port 1/2 on $mux $procmux$6132.
    dead port 2/2 on $mux $procmux$6134.
    dead port 2/2 on $mux $procmux$6137.
    dead port 1/2 on $mux $procmux$6144.
    dead port 2/2 on $mux $procmux$6146.
    dead port 2/2 on $mux $procmux$6149.
    dead port 1/2 on $mux $procmux$6156.
    dead port 2/2 on $mux $procmux$6158.
    dead port 2/2 on $mux $procmux$6161.
    dead port 1/2 on $mux $procmux$6168.
    dead port 2/2 on $mux $procmux$6170.
    dead port 2/2 on $mux $procmux$6173.
    dead port 1/2 on $mux $procmux$6180.
    dead port 2/2 on $mux $procmux$6182.
    dead port 2/2 on $mux $procmux$6185.
    dead port 1/2 on $mux $procmux$6192.
    dead port 2/2 on $mux $procmux$6194.
    dead port 2/2 on $mux $procmux$6197.
    dead port 1/2 on $mux $procmux$6204.
    dead port 2/2 on $mux $procmux$6206.
    dead port 2/2 on $mux $procmux$6209.
    dead port 1/2 on $mux $procmux$6216.
    dead port 2/2 on $mux $procmux$6218.
    dead port 2/2 on $mux $procmux$6221.
    dead port 1/2 on $mux $procmux$6228.
    dead port 2/2 on $mux $procmux$6230.
    dead port 2/2 on $mux $procmux$6233.
    dead port 1/2 on $mux $procmux$6240.
    dead port 2/2 on $mux $procmux$6242.
    dead port 2/2 on $mux $procmux$6245.
    dead port 1/2 on $mux $procmux$6252.
    dead port 2/2 on $mux $procmux$6254.
    dead port 2/2 on $mux $procmux$6257.
    dead port 1/2 on $mux $procmux$6264.
    dead port 2/2 on $mux $procmux$6266.
    dead port 2/2 on $mux $procmux$6269.
    dead port 1/2 on $mux $procmux$6276.
    dead port 2/2 on $mux $procmux$6278.
    dead port 2/2 on $mux $procmux$6281.
    dead port 1/2 on $mux $procmux$6336.
    dead port 2/2 on $mux $procmux$6338.
    dead port 2/2 on $mux $procmux$6341.
    dead port 2/2 on $mux $procmux$6606.
    dead port 2/2 on $mux $procmux$6608.
    dead port 2/2 on $mux $procmux$6611.
    dead port 1/2 on $mux $procmux$1832.
    dead port 1/2 on $mux $procmux$1835.
    dead port 2/2 on $mux $procmux$1838.
    dead port 2/2 on $mux $procmux$1845.
    dead port 1/2 on $mux $procmux$1847.
    dead port 1/2 on $mux $procmux$1850.
    dead port 2/2 on $mux $procmux$1853.
    dead port 2/2 on $mux $procmux$2526.
    dead port 1/2 on $mux $procmux$2529.
    dead port 1/2 on $mux $procmux$2532.
    dead port 2/2 on $mux $procmux$2534.
    dead port 2/2 on $mux $procmux$4683.
    dead port 1/2 on $mux $procmux$4686.
    dead port 2/2 on $mux $procmux$4688.
    dead port 2/2 on $mux $procmux$4691.
    dead port 2/2 on $mux $procmux$2537.
    dead port 2/2 on $mux $procmux$1860.
    dead port 1/2 on $mux $procmux$1862.
    dead port 1/2 on $mux $procmux$1865.
    dead port 2/2 on $mux $procmux$1868.
    dead port 2/2 on $mux $procmux$3198.
    dead port 1/2 on $mux $procmux$3201.
    dead port 1/2 on $mux $procmux$3204.
    dead port 2/2 on $mux $procmux$3206.
    dead port 2/2 on $mux $procmux$3209.
    dead port 1/2 on $mux $procmux$1874.
    dead port 2/2 on $mux $procmux$6648.
    dead port 2/2 on $mux $procmux$6650.
    dead port 2/2 on $mux $procmux$6653.
    dead port 1/2 on $mux $procmux$1877.
    dead port 2/2 on $mux $procmux$1880.
    dead port 1/2 on $mux $procmux$1886.
    dead port 1/2 on $mux $procmux$1889.
    dead port 2/2 on $mux $procmux$1892.
    dead port 1/2 on $mux $procmux$1898.
    dead port 1/2 on $mux $procmux$1901.
    dead port 2/2 on $mux $procmux$1904.
    dead port 1/2 on $mux $procmux$1922.
    dead port 1/2 on $mux $procmux$1925.
    dead port 2/2 on $mux $procmux$1928.
    dead port 1/2 on $mux $procmux$1934.
    dead port 1/2 on $mux $procmux$1937.
    dead port 2/2 on $mux $procmux$4728.
    dead port 1/2 on $mux $procmux$4731.
    dead port 2/2 on $mux $procmux$4733.
    dead port 2/2 on $mux $procmux$4736.
    dead port 2/2 on $mux $procmux$1940.
    dead port 1/2 on $mux $procmux$1946.
    dead port 1/2 on $mux $procmux$1949.
    dead port 2/2 on $mux $procmux$1952.
    dead port 1/2 on $mux $procmux$1958.
    dead port 1/2 on $mux $procmux$1961.
    dead port 2/2 on $mux $procmux$2574.
    dead port 1/2 on $mux $procmux$2577.
    dead port 2/2 on $mux $procmux$6690.
    dead port 2/2 on $mux $procmux$6692.
    dead port 2/2 on $mux $procmux$6695.
    dead port 1/2 on $mux $procmux$2580.
    dead port 2/2 on $mux $procmux$2582.
    dead port 2/2 on $mux $procmux$2585.
    dead port 2/2 on $mux $procmux$3246.
    dead port 1/2 on $mux $procmux$3249.
    dead port 1/2 on $mux $procmux$3252.
    dead port 2/2 on $mux $procmux$3254.
    dead port 2/2 on $mux $procmux$3257.
    dead port 2/2 on $mux $procmux$1964.
    dead port 1/2 on $mux $procmux$1970.
    dead port 1/2 on $mux $procmux$1973.
    dead port 2/2 on $mux $procmux$1976.
    dead port 1/2 on $mux $procmux$1982.
    dead port 2/2 on $mux $procmux$1985.
    dead port 1/2 on $mux $procmux$1991.
    dead port 2/2 on $mux $procmux$1994.
    dead port 2/2 on $mux $procmux$4773.
    dead port 1/2 on $mux $procmux$4776.
    dead port 2/2 on $mux $procmux$4778.
    dead port 2/2 on $mux $procmux$4781.
    dead port 1/2 on $mux $procmux$2009.
    dead port 2/2 on $mux $procmux$2012.
    dead port 1/2 on $mux $procmux$2018.
    dead port 2/2 on $mux $procmux$2021.
    dead port 2/2 on $mux $procmux$6732.
    dead port 2/2 on $mux $procmux$6734.
    dead port 2/2 on $mux $procmux$6737.
    dead port 1/2 on $mux $procmux$2027.
    dead port 2/2 on $mux $procmux$2030.
    dead port 1/2 on $mux $procmux$2036.
    dead port 2/2 on $mux $procmux$2039.
    dead port 1/2 on $mux $procmux$2045.
    dead port 2/2 on $mux $procmux$2048.
    dead port 1/2 on $mux $procmux$2054.
    dead port 2/2 on $mux $procmux$2057.
    dead port 2/2 on $mux $procmux$3294.
    dead port 1/2 on $mux $procmux$3297.
    dead port 1/2 on $mux $procmux$3300.
    dead port 2/2 on $mux $procmux$3302.
    dead port 2/2 on $mux $procmux$3305.
    dead port 2/2 on $mux $procmux$2622.
    dead port 1/2 on $mux $procmux$2625.
    dead port 1/2 on $mux $procmux$2628.
    dead port 2/2 on $mux $procmux$2630.
    dead port 2/2 on $mux $procmux$2633.
    dead port 2/2 on $mux $procmux$4818.
    dead port 1/2 on $mux $procmux$4821.
    dead port 2/2 on $mux $procmux$4823.
    dead port 2/2 on $mux $procmux$4826.
    dead port 2/2 on $mux $procmux$6774.
    dead port 2/2 on $mux $procmux$6776.
    dead port 2/2 on $mux $procmux$6779.
    dead port 2/2 on $mux $procmux$3342.
    dead port 1/2 on $mux $procmux$3345.
    dead port 1/2 on $mux $procmux$3348.
    dead port 2/2 on $mux $procmux$3350.
    dead port 2/2 on $mux $procmux$3353.
    dead port 2/2 on $mux $procmux$6816.
    dead port 2/2 on $mux $procmux$6818.
    dead port 2/2 on $mux $procmux$6821.
    dead port 2/2 on $mux $procmux$4863.
    dead port 1/2 on $mux $procmux$4866.
    dead port 2/2 on $mux $procmux$4868.
    dead port 2/2 on $mux $procmux$4871.
    dead port 2/2 on $mux $procmux$2094.
    dead port 1/2 on $mux $procmux$2097.
    dead port 2/2 on $mux $procmux$2670.
    dead port 1/2 on $mux $procmux$2673.
    dead port 1/2 on $mux $procmux$2676.
    dead port 2/2 on $mux $procmux$2678.
    dead port 2/2 on $mux $procmux$2681.
    dead port 1/2 on $mux $procmux$2100.
    dead port 2/2 on $mux $procmux$2102.
    dead port 2/2 on $mux $procmux$2105.
    dead port 2/2 on $mux $procmux$6858.
    dead port 2/2 on $mux $procmux$6860.
    dead port 2/2 on $mux $procmux$6863.
    dead port 2/2 on $mux $procmux$4908.
    dead port 1/2 on $mux $procmux$4911.
    dead port 2/2 on $mux $procmux$4913.
    dead port 2/2 on $mux $procmux$4916.
    dead port 2/2 on $mux $procmux$3390.
    dead port 1/2 on $mux $procmux$3393.
    dead port 1/2 on $mux $procmux$3396.
    dead port 2/2 on $mux $procmux$3398.
    dead port 2/2 on $mux $procmux$3401.
    dead port 2/2 on $mux $procmux$2718.
    dead port 1/2 on $mux $procmux$2721.
    dead port 1/2 on $mux $procmux$2724.
    dead port 2/2 on $mux $procmux$2726.
    dead port 2/2 on $mux $procmux$6900.
    dead port 2/2 on $mux $procmux$6902.
    dead port 2/2 on $mux $procmux$6905.
    dead port 2/2 on $mux $procmux$2729.
    dead port 2/2 on $mux $procmux$2142.
    dead port 1/2 on $mux $procmux$2145.
    dead port 1/2 on $mux $procmux$2148.
    dead port 2/2 on $mux $procmux$2150.
    dead port 2/2 on $mux $procmux$4953.
    dead port 1/2 on $mux $procmux$4956.
    dead port 2/2 on $mux $procmux$4958.
    dead port 2/2 on $mux $procmux$4961.
    dead port 2/2 on $mux $procmux$2153.
    dead port 2/2 on $mux $procmux$3438.
    dead port 1/2 on $mux $procmux$3441.
    dead port 1/2 on $mux $procmux$3444.
    dead port 2/2 on $mux $procmux$3446.
    dead port 2/2 on $mux $procmux$3449.
    dead port 2/2 on $mux $procmux$6942.
    dead port 2/2 on $mux $procmux$6944.
    dead port 2/2 on $mux $procmux$6947.
    dead port 2/2 on $mux $procmux$2766.
    dead port 1/2 on $mux $procmux$2769.
    dead port 2/2 on $mux $procmux$4998.
    dead port 1/2 on $mux $procmux$5001.
    dead port 2/2 on $mux $procmux$5003.
    dead port 2/2 on $mux $procmux$5006.
    dead port 1/2 on $mux $procmux$2772.
    dead port 2/2 on $mux $procmux$2774.
    dead port 2/2 on $mux $procmux$2777.
    dead port 2/2 on $mux $procmux$6984.
    dead port 2/2 on $mux $procmux$6986.
    dead port 2/2 on $mux $procmux$6989.
    dead port 2/2 on $mux $procmux$3486.
    dead port 1/2 on $mux $procmux$3489.
    dead port 1/2 on $mux $procmux$3492.
    dead port 2/2 on $mux $procmux$3494.
    dead port 2/2 on $mux $procmux$3497.
    dead port 2/2 on $mux $procmux$2190.
    dead port 1/2 on $mux $procmux$2193.
    dead port 1/2 on $mux $procmux$2196.
    dead port 2/2 on $mux $procmux$2198.
    dead port 2/2 on $mux $procmux$2201.
    dead port 2/2 on $mux $procmux$5043.
    dead port 1/2 on $mux $procmux$5046.
    dead port 2/2 on $mux $procmux$5048.
    dead port 2/2 on $mux $procmux$5051.
    dead port 2/2 on $mux $procmux$7026.
    dead port 2/2 on $mux $procmux$7028.
    dead port 2/2 on $mux $procmux$7031.
    dead port 2/2 on $mux $procmux$2814.
    dead port 1/2 on $mux $procmux$2817.
    dead port 1/2 on $mux $procmux$2820.
    dead port 2/2 on $mux $procmux$2822.
    dead port 2/2 on $mux $procmux$2825.
    dead port 2/2 on $mux $procmux$3534.
    dead port 1/2 on $mux $procmux$3537.
    dead port 1/2 on $mux $procmux$3540.
    dead port 2/2 on $mux $procmux$3542.
    dead port 2/2 on $mux $procmux$3545.
    dead port 2/2 on $mux $procmux$5088.
    dead port 1/2 on $mux $procmux$5091.
    dead port 2/2 on $mux $procmux$5093.
    dead port 2/2 on $mux $procmux$5096.
    dead port 2/2 on $mux $procmux$7068.
    dead port 2/2 on $mux $procmux$7070.
    dead port 2/2 on $mux $procmux$7073.
    dead port 2/2 on $mux $procmux$2238.
    dead port 1/2 on $mux $procmux$2241.
    dead port 1/2 on $mux $procmux$2244.
    dead port 2/2 on $mux $procmux$2246.
    dead port 2/2 on $mux $procmux$2249.
    dead port 2/2 on $mux $procmux$2862.
    dead port 1/2 on $mux $procmux$2865.
    dead port 2/2 on $mux $procmux$3582.
    dead port 1/2 on $mux $procmux$3585.
    dead port 1/2 on $mux $procmux$3588.
    dead port 2/2 on $mux $procmux$3590.
    dead port 2/2 on $mux $procmux$3593.
    dead port 2/2 on $mux $procmux$5133.
    dead port 1/2 on $mux $procmux$5136.
    dead port 2/2 on $mux $procmux$7110.
    dead port 2/2 on $mux $procmux$7112.
    dead port 2/2 on $mux $procmux$7115.
    dead port 2/2 on $mux $procmux$5138.
    dead port 2/2 on $mux $procmux$5141.
    dead port 2/2 on $mux $procmux$7152.
    dead port 2/2 on $mux $procmux$7154.
    dead port 2/2 on $mux $procmux$7157.
    dead port 2/2 on $mux $procmux$5178.
    dead port 1/2 on $mux $procmux$5181.
    dead port 2/2 on $mux $procmux$5183.
    dead port 2/2 on $mux $procmux$5186.
    dead port 1/2 on $mux $procmux$3648.
    dead port 1/2 on $mux $procmux$3651.
    dead port 2/2 on $mux $procmux$3653.
    dead port 2/2 on $mux $procmux$3656.
    dead port 1/2 on $mux $procmux$3663.
    dead port 1/2 on $mux $procmux$3666.
    dead port 2/2 on $mux $procmux$3668.
    dead port 2/2 on $mux $procmux$3671.
    dead port 1/2 on $mux $procmux$3678.
    dead port 1/2 on $mux $procmux$3681.
    dead port 2/2 on $mux $procmux$3683.
    dead port 2/2 on $mux $procmux$3686.
    dead port 1/2 on $mux $procmux$3693.
    dead port 1/2 on $mux $procmux$3696.
    dead port 2/2 on $mux $procmux$3698.
    dead port 2/2 on $mux $procmux$3701.
    dead port 2/2 on $mux $procmux$7194.
    dead port 2/2 on $mux $procmux$7196.
    dead port 2/2 on $mux $procmux$7199.
    dead port 1/2 on $mux $procmux$3708.
    dead port 1/2 on $mux $procmux$3711.
    dead port 2/2 on $mux $procmux$3713.
    dead port 2/2 on $mux $procmux$3716.
    dead port 1/2 on $mux $procmux$3723.
    dead port 1/2 on $mux $procmux$3726.
    dead port 2/2 on $mux $procmux$3728.
    dead port 2/2 on $mux $procmux$5223.
    dead port 1/2 on $mux $procmux$5226.
    dead port 2/2 on $mux $procmux$5228.
    dead port 2/2 on $mux $procmux$5231.
    dead port 2/2 on $mux $procmux$3731.
    dead port 1/2 on $mux $procmux$3738.
    dead port 1/2 on $mux $procmux$3741.
    dead port 2/2 on $mux $procmux$3743.
    dead port 2/2 on $mux $procmux$3746.
    dead port 1/2 on $mux $procmux$3753.
    dead port 1/2 on $mux $procmux$3756.
    dead port 2/2 on $mux $procmux$3758.
    dead port 2/2 on $mux $procmux$3761.
    dead port 1/2 on $mux $procmux$3768.
    dead port 1/2 on $mux $procmux$3771.
    dead port 2/2 on $mux $procmux$3773.
    dead port 2/2 on $mux $procmux$3776.
    dead port 1/2 on $mux $procmux$3783.
    dead port 1/2 on $mux $procmux$3786.
    dead port 2/2 on $mux $procmux$7236.
    dead port 2/2 on $mux $procmux$7238.
    dead port 2/2 on $mux $procmux$7241.
    dead port 2/2 on $mux $procmux$3788.
    dead port 2/2 on $mux $procmux$3791.
    dead port 1/2 on $mux $procmux$3798.
    dead port 1/2 on $mux $procmux$3801.
    dead port 2/2 on $mux $procmux$3803.
    dead port 2/2 on $mux $procmux$3806.
    dead port 1/2 on $mux $procmux$3813.
    dead port 1/2 on $mux $procmux$3816.
    dead port 2/2 on $mux $procmux$3818.
    dead port 2/2 on $mux $procmux$3821.
    dead port 2/2 on $mux $procmux$5268.
    dead port 1/2 on $mux $procmux$5271.
    dead port 2/2 on $mux $procmux$5273.
    dead port 2/2 on $mux $procmux$5276.
    dead port 1/2 on $mux $procmux$3828.
    dead port 1/2 on $mux $procmux$3831.
    dead port 2/2 on $mux $procmux$3833.
    dead port 2/2 on $mux $procmux$3836.
    dead port 1/2 on $mux $procmux$3843.
    dead port 1/2 on $mux $procmux$3846.
    dead port 2/2 on $mux $procmux$3848.
    dead port 2/2 on $mux $procmux$3851.
    dead port 1/2 on $mux $procmux$3858.
    dead port 1/2 on $mux $procmux$3861.
    dead port 2/2 on $mux $procmux$3863.
    dead port 2/2 on $mux $procmux$3866.
    dead port 2/2 on $mux $procmux$7278.
    dead port 2/2 on $mux $procmux$7280.
    dead port 2/2 on $mux $procmux$7283.
    dead port 1/2 on $mux $procmux$3873.
    dead port 1/2 on $mux $procmux$3876.
    dead port 2/2 on $mux $procmux$3878.
    dead port 2/2 on $mux $procmux$3881.
    dead port 1/2 on $mux $procmux$3888.
    dead port 1/2 on $mux $procmux$3891.
    dead port 2/2 on $mux $procmux$3893.
    dead port 2/2 on $mux $procmux$3896.
    dead port 1/2 on $mux $procmux$3903.
    dead port 1/2 on $mux $procmux$3906.
    dead port 2/2 on $mux $procmux$3908.
    dead port 2/2 on $mux $procmux$3911.
    dead port 1/2 on $mux $procmux$3918.
    dead port 1/2 on $mux $procmux$3921.
    dead port 2/2 on $mux $procmux$5313.
    dead port 1/2 on $mux $procmux$5316.
    dead port 2/2 on $mux $procmux$5318.
    dead port 2/2 on $mux $procmux$5321.
    dead port 2/2 on $mux $procmux$3923.
    dead port 2/2 on $mux $procmux$3926.
    dead port 1/2 on $mux $procmux$3933.
    dead port 1/2 on $mux $procmux$3936.
    dead port 2/2 on $mux $procmux$3938.
    dead port 2/2 on $mux $procmux$3941.
    dead port 1/2 on $mux $procmux$3948.
    dead port 2/2 on $mux $procmux$7320.
    dead port 2/2 on $mux $procmux$7322.
    dead port 2/2 on $mux $procmux$7325.
    dead port 1/2 on $mux $procmux$3951.
    dead port 2/2 on $mux $procmux$3953.
    dead port 2/2 on $mux $procmux$3956.
    dead port 1/2 on $mux $procmux$3963.
    dead port 1/2 on $mux $procmux$3966.
    dead port 2/2 on $mux $procmux$3968.
    dead port 2/2 on $mux $procmux$3971.
    dead port 1/2 on $mux $procmux$3978.
    dead port 1/2 on $mux $procmux$3981.
    dead port 2/2 on $mux $procmux$3983.
    dead port 2/2 on $mux $procmux$3986.
    dead port 1/2 on $mux $procmux$3993.
    dead port 1/2 on $mux $procmux$3996.
    dead port 2/2 on $mux $procmux$3998.
    dead port 2/2 on $mux $procmux$4001.
    dead port 1/2 on $mux $procmux$4008.
    dead port 1/2 on $mux $procmux$4011.
    dead port 2/2 on $mux $procmux$4013.
    dead port 2/2 on $mux $procmux$4016.
    dead port 2/2 on $mux $procmux$5358.
    dead port 1/2 on $mux $procmux$5361.
    dead port 2/2 on $mux $procmux$5363.
    dead port 2/2 on $mux $procmux$5366.
    dead port 1/2 on $mux $procmux$4023.
    dead port 1/2 on $mux $procmux$4026.
    dead port 2/2 on $mux $procmux$4028.
    dead port 2/2 on $mux $procmux$7362.
    dead port 2/2 on $mux $procmux$7364.
    dead port 2/2 on $mux $procmux$7367.
    dead port 2/2 on $mux $procmux$4031.
    dead port 1/2 on $mux $procmux$4038.
    dead port 1/2 on $mux $procmux$4041.
    dead port 2/2 on $mux $procmux$4043.
    dead port 2/2 on $mux $procmux$4046.
    dead port 1/2 on $mux $procmux$4053.
    dead port 1/2 on $mux $procmux$4056.
    dead port 2/2 on $mux $procmux$4058.
    dead port 2/2 on $mux $procmux$4061.
    dead port 1/2 on $mux $procmux$4068.
    dead port 1/2 on $mux $procmux$4071.
    dead port 2/2 on $mux $procmux$4073.
    dead port 2/2 on $mux $procmux$4076.
    dead port 1/2 on $mux $procmux$4083.
    dead port 1/2 on $mux $procmux$4086.
    dead port 2/2 on $mux $procmux$4088.
    dead port 2/2 on $mux $procmux$4091.
    dead port 1/2 on $mux $procmux$4098.
    dead port 1/2 on $mux $procmux$4101.
    dead port 2/2 on $mux $procmux$4103.
    dead port 2/2 on $mux $procmux$4106.
    dead port 1/2 on $mux $procmux$4113.
    dead port 2/2 on $mux $procmux$5403.
    dead port 1/2 on $mux $procmux$5406.
    dead port 2/2 on $mux $procmux$5408.
    dead port 2/2 on $mux $procmux$5411.
    dead port 2/2 on $mux $procmux$7404.
    dead port 2/2 on $mux $procmux$7406.
    dead port 2/2 on $mux $procmux$7409.
    dead port 1/2 on $mux $procmux$4116.
    dead port 2/2 on $mux $procmux$4118.
    dead port 2/2 on $mux $procmux$4121.
    dead port 1/2 on $mux $procmux$4128.
    dead port 1/2 on $mux $procmux$4131.
    dead port 2/2 on $mux $procmux$4133.
    dead port 2/2 on $mux $procmux$4136.
    dead port 1/2 on $mux $procmux$2868.
    dead port 2/2 on $mux $procmux$2870.
    dead port 2/2 on $mux $procmux$2873.
    dead port 1/2 on $mux $procmux$1312.
    dead port 2/2 on $mux $procmux$1315.
    dead port 2/2 on $mux $procmux$1321.
    dead port 2/2 on $mux $procmux$1327.
    dead port 1/2 on $mux $procmux$1333.
    dead port 2/2 on $mux $procmux$1336.
    dead port 1/2 on $mux $procmux$1342.
    dead port 2/2 on $mux $procmux$7446.
    dead port 2/2 on $mux $procmux$7448.
    dead port 2/2 on $mux $procmux$7451.
    dead port 2/2 on $mux $procmux$1345.
    dead port 2/2 on $mux $procmux$5448.
    dead port 1/2 on $mux $procmux$5451.
    dead port 2/2 on $mux $procmux$5453.
    dead port 2/2 on $mux $procmux$5456.
    dead port 1/2 on $mux $procmux$1352.
    dead port 2/2 on $mux $procmux$1354.
    dead port 2/2 on $mux $procmux$2286.
    dead port 1/2 on $mux $procmux$2289.
    dead port 1/2 on $mux $procmux$2292.
    dead port 2/2 on $mux $procmux$2294.
    dead port 2/2 on $mux $procmux$2297.
    dead port 2/2 on $mux $procmux$4368.
    dead port 1/2 on $mux $procmux$4371.
    dead port 2/2 on $mux $procmux$4373.
    dead port 2/2 on $mux $procmux$4376.
    dead port 2/2 on $mux $procmux$1357.
    dead port 1/2 on $mux $procmux$1364.
    dead port 2/2 on $mux $procmux$1366.
    dead port 2/2 on $mux $procmux$2910.
    dead port 1/2 on $mux $procmux$2913.
    dead port 1/2 on $mux $procmux$2916.
    dead port 2/2 on $mux $procmux$2918.
    dead port 2/2 on $mux $procmux$2921.
    dead port 2/2 on $mux $procmux$1369.
    dead port 2/2 on $mux $procmux$7488.
    dead port 2/2 on $mux $procmux$7490.
    dead port 2/2 on $mux $procmux$7493.
    dead port 1/2 on $mux $procmux$1376.
    dead port 2/2 on $mux $procmux$1378.
    dead port 2/2 on $mux $procmux$1381.
    dead port 2/2 on $mux $procmux$1387.
    dead port 2/2 on $mux $procmux$1390.
    dead port 2/2 on $mux $procmux$5493.
    dead port 1/2 on $mux $procmux$5496.
    dead port 2/2 on $mux $procmux$5498.
    dead port 2/2 on $mux $procmux$5501.
    dead port 2/2 on $mux $procmux$1396.
    dead port 2/2 on $mux $procmux$1399.
    dead port 2/2 on $mux $procmux$1405.
    dead port 2/2 on $mux $procmux$1408.
    dead port 2/2 on $mux $procmux$1414.
    dead port 2/2 on $mux $procmux$1420.
    dead port 2/2 on $mux $procmux$1426.
    dead port 2/2 on $mux $procmux$1433.
    dead port 2/2 on $mux $procmux$4413.
    dead port 1/2 on $mux $procmux$4416.
    dead port 2/2 on $mux $procmux$4418.
    dead port 2/2 on $mux $procmux$4421.
    dead port 1/2 on $mux $procmux$1436.
    dead port 1/2 on $mux $procmux$1439.
    dead port 2/2 on $mux $procmux$7530.
    dead port 2/2 on $mux $procmux$7532.
    dead port 2/2 on $mux $procmux$7535.
    dead port 1/2 on $mux $procmux$1442.
    dead port 1/2 on $mux $procmux$1445.
    dead port 1/2 on $mux $procmux$1447.
    dead port 1/2 on $mux $procmux$1450.
    dead port 2/2 on $mux $procmux$2334.
    dead port 1/2 on $mux $procmux$2337.
    dead port 1/2 on $mux $procmux$2340.
    dead port 2/2 on $mux $procmux$2342.
    dead port 2/2 on $mux $procmux$2958.
    dead port 1/2 on $mux $procmux$2961.
    dead port 1/2 on $mux $procmux$2964.
    dead port 2/2 on $mux $procmux$5538.
    dead port 1/2 on $mux $procmux$5541.
    dead port 2/2 on $mux $procmux$5543.
    dead port 2/2 on $mux $procmux$5546.
    dead port 2/2 on $mux $procmux$2966.
    dead port 2/2 on $mux $procmux$2969.
    dead port 2/2 on $mux $procmux$2345.
    dead port 2/2 on $mux $procmux$1453.
    dead port 1/2 on $mux $procmux$1460.
    dead port 1/2 on $mux $procmux$1463.
    dead port 1/2 on $mux $procmux$1466.
    dead port 1/2 on $mux $procmux$1469.
    dead port 1/2 on $mux $procmux$1471.
    dead port 1/2 on $mux $procmux$1474.
    dead port 2/2 on $mux $procmux$1477.
    dead port 1/2 on $mux $procmux$1484.
    dead port 2/2 on $mux $procmux$7572.
    dead port 2/2 on $mux $procmux$7574.
    dead port 2/2 on $mux $procmux$7577.
    dead port 1/2 on $mux $procmux$1487.
    dead port 1/2 on $mux $procmux$1490.
    dead port 1/2 on $mux $procmux$1493.
    dead port 2/2 on $mux $procmux$4458.
    dead port 1/2 on $mux $procmux$4461.
    dead port 2/2 on $mux $procmux$4463.
    dead port 2/2 on $mux $procmux$4466.
    dead port 1/2 on $mux $procmux$1495.
    dead port 1/2 on $mux $procmux$1498.
    dead port 2/2 on $mux $procmux$1501.
    dead port 2/2 on $mux $procmux$1508.
    dead port 1/2 on $mux $procmux$1511.
    dead port 1/2 on $mux $procmux$1514.
    dead port 1/2 on $mux $procmux$1517.
    dead port 2/2 on $mux $procmux$5583.
    dead port 1/2 on $mux $procmux$5586.
    dead port 2/2 on $mux $procmux$5588.
    dead port 2/2 on $mux $procmux$5591.
    dead port 1/2 on $mux $procmux$1519.
    dead port 1/2 on $mux $procmux$1522.
    dead port 2/2 on $mux $procmux$1525.
    dead port 2/2 on $mux $procmux$1532.
    dead port 1/2 on $mux $procmux$1535.
    dead port 1/2 on $mux $procmux$1538.
    dead port 1/2 on $mux $procmux$1541.
    dead port 2/2 on $mux $procmux$3006.
    dead port 1/2 on $mux $procmux$3009.
    dead port 1/2 on $mux $procmux$3012.
    dead port 2/2 on $mux $procmux$7614.
    dead port 2/2 on $mux $procmux$7616.
    dead port 2/2 on $mux $procmux$7619.
    dead port 2/2 on $mux $procmux$3014.
    dead port 2/2 on $mux $procmux$3017.
    dead port 1/2 on $mux $procmux$1543.
    dead port 1/2 on $mux $procmux$1546.
    dead port 2/2 on $mux $procmux$2382.
    dead port 1/2 on $mux $procmux$2385.
    dead port 1/2 on $mux $procmux$2388.
    dead port 2/2 on $mux $procmux$2390.
    dead port 2/2 on $mux $procmux$2393.
    dead port 2/2 on $mux $procmux$1549.
    dead port 2/2 on $mux $procmux$4503.
    dead port 1/2 on $mux $procmux$4506.
    dead port 2/2 on $mux $procmux$4508.
    dead port 2/2 on $mux $procmux$4511.
    dead port 1/2 on $mux $procmux$1556.
    dead port 1/2 on $mux $procmux$1559.
    dead port 1/2 on $mux $procmux$1562.
    dead port 2/2 on $mux $procmux$5628.
    dead port 1/2 on $mux $procmux$5631.
    dead port 2/2 on $mux $procmux$5633.
    dead port 2/2 on $mux $procmux$5636.
    dead port 1/2 on $mux $procmux$1564.
    dead port 1/2 on $mux $procmux$1567.
    dead port 2/2 on $mux $procmux$1570.
    dead port 1/2 on $mux $procmux$1577.
    dead port 1/2 on $mux $procmux$1580.
    dead port 2/2 on $mux $procmux$7656.
    dead port 2/2 on $mux $procmux$7658.
    dead port 2/2 on $mux $procmux$7661.
    dead port 1/2 on $mux $procmux$1583.
    dead port 1/2 on $mux $procmux$1585.
    dead port 1/2 on $mux $procmux$1588.
    dead port 2/2 on $mux $procmux$1591.
    dead port 1/2 on $mux $procmux$1598.
    dead port 1/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1604.
    dead port 1/2 on $mux $procmux$1606.
    dead port 1/2 on $mux $procmux$1609.
    dead port 2/2 on $mux $procmux$1612.
    dead port 1/2 on $mux $procmux$1619.
    dead port 2/2 on $mux $procmux$3054.
    dead port 1/2 on $mux $procmux$3057.
    dead port 1/2 on $mux $procmux$3060.
    dead port 2/2 on $mux $procmux$3062.
    dead port 2/2 on $mux $procmux$3065.
    dead port 1/2 on $mux $procmux$1622.
    dead port 1/2 on $mux $procmux$1625.
    dead port 1/2 on $mux $procmux$1627.
    dead port 1/2 on $mux $procmux$1630.
    dead port 2/2 on $mux $procmux$4548.
    dead port 1/2 on $mux $procmux$4551.
    dead port 2/2 on $mux $procmux$4553.
    dead port 2/2 on $mux $procmux$5673.
    dead port 1/2 on $mux $procmux$5676.
    dead port 2/2 on $mux $procmux$5678.
    dead port 2/2 on $mux $procmux$5681.
    dead port 2/2 on $mux $procmux$4556.
    dead port 2/2 on $mux $procmux$7698.
    dead port 2/2 on $mux $procmux$7700.
    dead port 2/2 on $mux $procmux$7703.
    dead port 2/2 on $mux $procmux$1633.
    dead port 1/2 on $mux $procmux$1640.
    dead port 1/2 on $mux $procmux$1643.
    dead port 2/2 on $mux $procmux$2430.
    dead port 1/2 on $mux $procmux$2433.
    dead port 1/2 on $mux $procmux$2436.
    dead port 2/2 on $mux $procmux$2438.
    dead port 2/2 on $mux $procmux$2441.
    dead port 1/2 on $mux $procmux$1645.
    dead port 1/2 on $mux $procmux$1648.
    dead port 2/2 on $mux $procmux$1651.
    dead port 1/2 on $mux $procmux$1658.
    dead port 1/2 on $mux $procmux$1661.
    dead port 1/2 on $mux $procmux$1663.
    dead port 1/2 on $mux $procmux$1666.
    dead port 2/2 on $mux $procmux$1669.
    dead port 1/2 on $mux $procmux$1676.
    dead port 1/2 on $mux $procmux$1679.
    dead port 1/2 on $mux $procmux$1681.
    dead port 1/2 on $mux $procmux$1684.
    dead port 2/2 on $mux $procmux$1687.
    dead port 1/2 on $mux $procmux$1694.
    dead port 1/2 on $mux $procmux$1697.
    dead port 2/2 on $mux $procmux$3102.
    dead port 1/2 on $mux $procmux$3105.
    dead port 2/2 on $mux $procmux$5718.
    dead port 2/2 on $mux $procmux$7740.
    dead port 2/2 on $mux $procmux$7742.
    dead port 2/2 on $mux $procmux$7745.
    dead port 1/2 on $mux $procmux$5721.
    dead port 2/2 on $mux $procmux$5723.
    dead port 2/2 on $mux $procmux$5726.
    dead port 1/2 on $mux $procmux$3108.
    dead port 2/2 on $mux $procmux$3110.
    dead port 2/2 on $mux $procmux$4593.
    dead port 1/2 on $mux $procmux$4596.
    dead port 2/2 on $mux $procmux$4598.
    dead port 2/2 on $mux $procmux$4601.
    dead port 2/2 on $mux $procmux$3113.
    dead port 1/2 on $mux $procmux$1699.
    dead port 1/2 on $mux $procmux$1702.
    dead port 2/2 on $mux $procmux$1705.
    dead port 1/2 on $mux $procmux$1712.
    dead port 1/2 on $mux $procmux$1714.
    dead port 1/2 on $mux $procmux$1717.
    dead port 2/2 on $mux $procmux$1720.
    dead port 1/2 on $mux $procmux$1727.
    dead port 1/2 on $mux $procmux$1729.
    dead port 1/2 on $mux $procmux$1732.
    dead port 2/2 on $mux $procmux$1735.
    dead port 2/2 on $mux $procmux$2478.
    dead port 1/2 on $mux $procmux$2481.
    dead port 1/2 on $mux $procmux$2484.
    dead port 2/2 on $mux $procmux$2486.
    dead port 2/2 on $mux $procmux$2489.
    dead port 2/2 on $mux $procmux$7782.
    dead port 2/2 on $mux $procmux$7784.
    dead port 2/2 on $mux $procmux$7787.
    dead port 1/2 on $mux $procmux$1742.
    dead port 1/2 on $mux $procmux$1744.
    dead port 1/2 on $mux $procmux$1747.
    dead port 2/2 on $mux $procmux$5763.
    dead port 1/2 on $mux $procmux$5766.
    dead port 2/2 on $mux $procmux$5768.
    dead port 2/2 on $mux $procmux$5771.
    dead port 2/2 on $mux $procmux$7824.
    dead port 2/2 on $mux $procmux$7826.
    dead port 2/2 on $mux $procmux$7829.
    dead port 2/2 on $mux $procmux$5808.
    dead port 1/2 on $mux $procmux$5811.
    dead port 2/2 on $mux $procmux$5813.
    dead port 2/2 on $mux $procmux$5816.
    dead port 2/2 on $mux $procmux$1750.
    dead port 1/2 on $mux $procmux$1757.
    dead port 1/2 on $mux $procmux$1759.
    dead port 1/2 on $mux $procmux$1762.
    dead port 2/2 on $mux $procmux$1765.
    dead port 2/2 on $mux $procmux$4638.
    dead port 1/2 on $mux $procmux$4641.
    dead port 2/2 on $mux $procmux$4643.
    dead port 2/2 on $mux $procmux$4646.
    dead port 1/2 on $mux $procmux$1772.
    dead port 1/2 on $mux $procmux$1774.
    dead port 2/2 on $mux $procmux$3150.
    dead port 1/2 on $mux $procmux$3153.
    dead port 1/2 on $mux $procmux$3156.
    dead port 2/2 on $mux $procmux$3158.
    dead port 2/2 on $mux $procmux$7866.
    dead port 2/2 on $mux $procmux$7868.
    dead port 2/2 on $mux $procmux$7871.
    dead port 2/2 on $mux $procmux$3161.
    dead port 1/2 on $mux $procmux$1777.
    dead port 2/2 on $mux $procmux$1780.
    dead port 2/2 on $mux $procmux$1801.
    dead port 1/2 on $mux $procmux$1803.
    dead port 1/2 on $mux $procmux$1806.
    dead port 2/2 on $mux $procmux$1809.
    dead port 2/2 on $mux $procmux$1816.
    dead port 1/2 on $mux $procmux$1818.
    dead port 1/2 on $mux $procmux$1821.
    dead port 2/2 on $mux $procmux$1824.
    dead port 2/2 on $mux $procmux$1830.
    dead port 1/2 on $mux $procmux$5868.
    dead port 2/2 on $mux $procmux$5870.
    dead port 2/2 on $mux $procmux$5873.
    dead port 1/2 on $mux $procmux$5880.
    dead port 2/2 on $mux $procmux$5882.
    dead port 2/2 on $mux $procmux$5885.
    dead port 1/2 on $mux $procmux$5892.
    dead port 2/2 on $mux $procmux$5894.
    dead port 2/2 on $mux $procmux$5897.
    dead port 1/2 on $mux $procmux$5904.
    dead port 2/2 on $mux $procmux$7908.
    dead port 2/2 on $mux $procmux$7910.
    dead port 2/2 on $mux $procmux$7913.
    dead port 2/2 on $mux $procmux$5906.
    dead port 2/2 on $mux $procmux$5909.
    dead port 1/2 on $mux $procmux$5916.
    dead port 2/2 on $mux $procmux$5918.
    dead port 2/2 on $mux $procmux$5921.
    dead port 1/2 on $mux $procmux$5928.
    dead port 2/2 on $mux $procmux$5930.
    dead port 2/2 on $mux $procmux$5933.
    dead port 1/2 on $mux $procmux$5940.
    dead port 2/2 on $mux $procmux$5942.
    dead port 2/2 on $mux $procmux$5945.
    dead port 1/2 on $mux $procmux$5952.
    dead port 2/2 on $mux $procmux$5954.
    dead port 2/2 on $mux $procmux$5957.
    dead port 1/2 on $mux $procmux$5964.
    dead port 2/2 on $mux $procmux$5966.
    dead port 2/2 on $mux $procmux$5969.
    dead port 1/2 on $mux $procmux$5976.
    dead port 2/2 on $mux $procmux$5978.
    dead port 2/2 on $mux $procmux$5981.
    dead port 1/2 on $mux $procmux$5988.
    dead port 2/2 on $mux $procmux$5990.
    dead port 2/2 on $mux $procmux$5993.
    dead port 1/2 on $mux $procmux$6000.
    dead port 2/2 on $mux $procmux$7950.
    dead port 2/2 on $mux $procmux$7952.
    dead port 2/2 on $mux $procmux$7955.
    dead port 2/2 on $mux $procmux$6002.
    dead port 2/2 on $mux $procmux$6005.
    dead port 1/2 on $mux $procmux$6012.
    dead port 2/2 on $mux $procmux$6014.
    dead port 2/2 on $mux $procmux$6017.
    dead port 1/2 on $mux $procmux$6024.
    dead port 2/2 on $mux $procmux$6026.
    dead port 2/2 on $mux $procmux$6029.
    dead port 1/2 on $mux $procmux$6036.
    dead port 2/2 on $mux $procmux$6038.
    dead port 2/2 on $mux $procmux$6041.
    dead port 1/2 on $mux $procmux$6048.
    dead port 2/2 on $mux $procmux$6050.
    dead port 2/2 on $mux $procmux$6053.
    dead port 1/2 on $mux $procmux$6060.
    dead port 2/2 on $mux $procmux$6062.
    dead port 2/2 on $mux $procmux$6065.
    dead port 1/2 on $mux $procmux$6072.
    dead port 2/2 on $mux $procmux$6074.
    dead port 2/2 on $mux $procmux$6077.
    dead port 1/2 on $mux $procmux$6084.
    dead port 2/2 on $mux $procmux$6086.
    dead port 2/2 on $mux $procmux$6089.
    dead port 1/2 on $mux $procmux$6096.
    dead port 2/2 on $mux $procmux$8003.
    dead port 2/2 on $mux $procmux$8006.
    dead port 2/2 on $mux $procmux$8012.
    dead port 2/2 on $mux $procmux$8015.
    dead port 2/2 on $mux $procmux$8021.
    dead port 2/2 on $mux $procmux$8024.
    dead port 2/2 on $mux $procmux$8030.
    dead port 2/2 on $mux $procmux$8033.
    dead port 2/2 on $mux $procmux$8039.
    dead port 2/2 on $mux $procmux$8042.
    dead port 2/2 on $mux $procmux$8048.
    dead port 2/2 on $mux $procmux$8051.
    dead port 2/2 on $mux $procmux$8057.
    dead port 2/2 on $mux $procmux$8060.
    dead port 2/2 on $mux $procmux$8066.
    dead port 2/2 on $mux $procmux$8069.
    dead port 2/2 on $mux $procmux$8075.
    dead port 2/2 on $mux $procmux$8078.
    dead port 2/2 on $mux $procmux$8084.
    dead port 2/2 on $mux $procmux$8087.
    dead port 2/2 on $mux $procmux$8093.
    dead port 2/2 on $mux $procmux$8096.
    dead port 2/2 on $mux $procmux$8102.
    dead port 2/2 on $mux $procmux$8105.
    dead port 2/2 on $mux $procmux$8111.
    dead port 2/2 on $mux $procmux$8114.
    dead port 2/2 on $mux $procmux$8120.
    dead port 2/2 on $mux $procmux$8123.
    dead port 2/2 on $mux $procmux$8129.
    dead port 2/2 on $mux $procmux$8132.
    dead port 2/2 on $mux $procmux$8138.
    dead port 2/2 on $mux $procmux$8141.
    dead port 2/2 on $mux $procmux$8147.
    dead port 2/2 on $mux $procmux$8150.
    dead port 2/2 on $mux $procmux$8156.
    dead port 2/2 on $mux $procmux$8159.
    dead port 2/2 on $mux $procmux$8165.
    dead port 2/2 on $mux $procmux$8168.
    dead port 2/2 on $mux $procmux$8174.
    dead port 2/2 on $mux $procmux$8177.
    dead port 2/2 on $mux $procmux$8183.
    dead port 2/2 on $mux $procmux$8186.
    dead port 2/2 on $mux $procmux$8192.
    dead port 2/2 on $mux $procmux$8195.
    dead port 2/2 on $mux $procmux$8201.
    dead port 2/2 on $mux $procmux$8204.
    dead port 2/2 on $mux $procmux$8210.
    dead port 2/2 on $mux $procmux$8213.
    dead port 2/2 on $mux $procmux$8219.
    dead port 2/2 on $mux $procmux$8222.
    dead port 2/2 on $mux $procmux$8228.
    dead port 2/2 on $mux $procmux$8231.
    dead port 2/2 on $mux $procmux$8237.
    dead port 2/2 on $mux $procmux$8240.
    dead port 2/2 on $mux $procmux$8246.
    dead port 2/2 on $mux $procmux$8249.
    dead port 2/2 on $mux $procmux$8255.
    dead port 2/2 on $mux $procmux$8258.
    dead port 2/2 on $mux $procmux$8264.
    dead port 2/2 on $mux $procmux$8267.
    dead port 2/2 on $mux $procmux$8273.
    dead port 2/2 on $mux $procmux$8276.
    dead port 2/2 on $mux $procmux$8282.
    dead port 2/2 on $mux $procmux$8285.
    dead port 2/2 on $mux $procmux$8291.
    dead port 2/2 on $mux $procmux$8294.
    dead port 2/2 on $mux $procmux$8300.
    dead port 2/2 on $mux $procmux$8303.
    dead port 2/2 on $mux $procmux$8309.
    dead port 2/2 on $mux $procmux$8312.
    dead port 2/2 on $mux $procmux$8354.
    dead port 2/2 on $mux $procmux$8357.
    dead port 2/2 on $mux $procmux$8489.
    dead port 2/2 on $mux $procmux$8492.
    dead port 2/2 on $mux $procmux$8498.
    dead port 2/2 on $mux $procmux$8501.
    dead port 2/2 on $mux $procmux$8507.
    dead port 2/2 on $mux $procmux$8510.
    dead port 2/2 on $mux $procmux$8516.
    dead port 2/2 on $mux $procmux$8519.
    dead port 2/2 on $mux $procmux$8525.
    dead port 2/2 on $mux $procmux$8528.
    dead port 2/2 on $mux $procmux$8534.
    dead port 2/2 on $mux $procmux$8537.
    dead port 2/2 on $mux $procmux$8543.
    dead port 2/2 on $mux $procmux$8546.
    dead port 2/2 on $mux $procmux$8552.
    dead port 2/2 on $mux $procmux$8555.
    dead port 2/2 on $mux $procmux$8561.
    dead port 2/2 on $mux $procmux$8564.
    dead port 2/2 on $mux $procmux$8570.
    dead port 2/2 on $mux $procmux$8573.
    dead port 2/2 on $mux $procmux$8579.
    dead port 2/2 on $mux $procmux$8582.
    dead port 2/2 on $mux $procmux$8588.
    dead port 2/2 on $mux $procmux$8591.
    dead port 2/2 on $mux $procmux$8597.
    dead port 2/2 on $mux $procmux$8600.
    dead port 2/2 on $mux $procmux$8606.
    dead port 2/2 on $mux $procmux$8609.
    dead port 2/2 on $mux $procmux$8615.
    dead port 2/2 on $mux $procmux$8618.
    dead port 2/2 on $mux $procmux$8624.
    dead port 2/2 on $mux $procmux$8627.
    dead port 2/2 on $mux $procmux$8633.
    dead port 2/2 on $mux $procmux$8636.
    dead port 2/2 on $mux $procmux$8642.
    dead port 2/2 on $mux $procmux$8645.
    dead port 2/2 on $mux $procmux$8651.
    dead port 2/2 on $mux $procmux$8654.
    dead port 2/2 on $mux $procmux$8660.
    dead port 2/2 on $mux $procmux$8663.
    dead port 2/2 on $mux $procmux$8669.
    dead port 2/2 on $mux $procmux$8672.
    dead port 2/2 on $mux $procmux$8678.
    dead port 2/2 on $mux $procmux$8681.
    dead port 2/2 on $mux $procmux$8687.
    dead port 2/2 on $mux $procmux$8690.
    dead port 2/2 on $mux $procmux$8696.
    dead port 2/2 on $mux $procmux$8699.
    dead port 2/2 on $mux $procmux$8705.
    dead port 2/2 on $mux $procmux$8708.
    dead port 2/2 on $mux $procmux$8714.
    dead port 2/2 on $mux $procmux$8717.
    dead port 2/2 on $mux $procmux$8723.
    dead port 2/2 on $mux $procmux$8726.
    dead port 2/2 on $mux $procmux$8732.
    dead port 2/2 on $mux $procmux$8735.
    dead port 2/2 on $mux $procmux$8741.
    dead port 2/2 on $mux $procmux$8744.
    dead port 2/2 on $mux $procmux$8750.
    dead port 2/2 on $mux $procmux$8753.
    dead port 2/2 on $mux $procmux$8759.
    dead port 2/2 on $mux $procmux$8762.
    dead port 2/2 on $mux $procmux$8768.
    dead port 2/2 on $mux $procmux$8771.
    dead port 2/2 on $mux $procmux$9008.
    dead port 2/2 on $mux $procmux$9014.
    dead port 2/2 on $mux $procmux$9020.
    dead port 2/2 on $mux $procmux$9026.
    dead port 2/2 on $mux $procmux$9032.
    dead port 2/2 on $mux $procmux$9038.
    dead port 2/2 on $mux $procmux$9044.
    dead port 2/2 on $mux $procmux$9050.
    dead port 2/2 on $mux $procmux$9056.
    dead port 2/2 on $mux $procmux$9062.
    dead port 2/2 on $mux $procmux$9068.
    dead port 2/2 on $mux $procmux$9074.
    dead port 2/2 on $mux $procmux$9080.
    dead port 2/2 on $mux $procmux$9086.
    dead port 2/2 on $mux $procmux$9092.
    dead port 2/2 on $mux $procmux$9098.
    dead port 2/2 on $mux $procmux$9104.
    dead port 2/2 on $mux $procmux$9110.
    dead port 2/2 on $mux $procmux$9116.
    dead port 2/2 on $mux $procmux$9122.
    dead port 2/2 on $mux $procmux$9128.
    dead port 2/2 on $mux $procmux$9134.
    dead port 2/2 on $mux $procmux$9140.
    dead port 2/2 on $mux $procmux$9146.
    dead port 2/2 on $mux $procmux$9152.
    dead port 2/2 on $mux $procmux$9158.
    dead port 2/2 on $mux $procmux$9164.
    dead port 2/2 on $mux $procmux$9170.
    dead port 2/2 on $mux $procmux$9176.
    dead port 2/2 on $mux $procmux$9182.
    dead port 2/2 on $mux $procmux$9188.
    dead port 2/2 on $mux $procmux$9194.
    dead port 2/2 on $mux $procmux$9200.
    dead port 2/2 on $mux $procmux$9206.
    dead port 2/2 on $mux $procmux$9212.
    dead port 2/2 on $mux $procmux$9218.
    dead port 2/2 on $mux $procmux$9224.
    dead port 2/2 on $mux $procmux$9230.
    dead port 2/2 on $mux $procmux$9236.
    dead port 2/2 on $mux $procmux$9242.
    dead port 2/2 on $mux $procmux$9248.
    dead port 2/2 on $mux $procmux$9254.
    dead port 2/2 on $mux $procmux$9260.
    dead port 2/2 on $mux $procmux$9266.
    dead port 2/2 on $mux $procmux$9272.
    dead port 2/2 on $mux $procmux$9278.
    dead port 2/2 on $mux $procmux$9284.
    dead port 2/2 on $mux $procmux$9290.
    dead port 2/2 on $mux $procmux$9296.
    dead port 2/2 on $mux $procmux$9302.
    dead port 2/2 on $mux $procmux$9308.
    dead port 2/2 on $mux $procmux$9314.
    dead port 2/2 on $mux $procmux$9320.
    dead port 2/2 on $mux $procmux$9326.
    dead port 2/2 on $mux $procmux$9332.
    dead port 2/2 on $mux $procmux$9338.
    dead port 2/2 on $mux $procmux$9344.
    dead port 2/2 on $mux $procmux$9350.
    dead port 2/2 on $mux $procmux$9356.
    dead port 2/2 on $mux $procmux$9362.
    dead port 2/2 on $mux $procmux$9368.
    dead port 2/2 on $mux $procmux$9374.
    dead port 2/2 on $mux $procmux$9380.
    dead port 2/2 on $mux $procmux$9386.
    dead port 2/2 on $mux $procmux$9500.
    dead port 2/2 on $mux $procmux$9506.
    dead port 2/2 on $mux $procmux$9512.
    dead port 2/2 on $mux $procmux$9530.
    dead port 2/2 on $mux $procmux$9548.
    dead port 2/2 on $mux $procmux$9554.
    dead port 2/2 on $mux $procmux$9560.
    dead port 2/2 on $mux $procmux$9566.
    dead port 2/2 on $mux $procmux$6098.
Removed 1053 multiplexer ports.
<suppressed ~156 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$7245: { $procmux$6589_CMP $auto$opt_reduce.cc:134:opt_mux$10491 }
    New ctrl vector for $pmux cell $procmux$5685: { $procmux$2091_CMP $auto$opt_reduce.cc:134:opt_mux$10493 }
    New ctrl vector for $pmux cell $procmux$7707: { $procmux$6600_CMP $auto$opt_reduce.cc:134:opt_mux$10495 }
    New ctrl vector for $pmux cell $procmux$4560: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10497 }
    New ctrl vector for $pmux cell $procmux$4785: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10499 }
    New ctrl vector for $pmux cell $procmux$2445: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10501 }
    New ctrl vector for $pmux cell $procmux$6909: { $procmux$6581_CMP $auto$opt_reduce.cc:134:opt_mux$10503 }
    New ctrl vector for $pmux cell $procmux$5280: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10505 }
    New ctrl vector for $pmux cell $procmux$2733: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10507 }
    New ctrl vector for $pmux cell $procmux$3213: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10509 }
    New ctrl vector for $pmux cell $procmux$6741: { $procmux$6577_CMP $auto$opt_reduce.cc:134:opt_mux$10511 }
    New ctrl vector for $pmux cell $procmux$4965: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10513 }
    New ctrl vector for $pmux cell $procmux$7287: { $procmux$6590_CMP $auto$opt_reduce.cc:134:opt_mux$10515 }
    New ctrl vector for $pmux cell $procmux$7749: { $procmux$6601_CMP $auto$opt_reduce.cc:134:opt_mux$10517 }
    New ctrl vector for $pmux cell $procmux$2157: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10519 }
    New ctrl vector for $pmux cell $procmux$5730: { $procmux$2092_CMP $auto$opt_reduce.cc:134:opt_mux$10521 }
    New ctrl vector for $pmux cell $procmux$6657: { $procmux$6575_CMP $auto$opt_reduce.cc:134:opt_mux$10523 }
    New ctrl vector for $pmux cell $procmux$4605: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10525 }
    New ctrl vector for $pmux cell $procmux$3117: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10527 }
    New ctrl vector for $pmux cell $procmux$3453: { $procmux$2090_CMP $auto$opt_reduce.cc:134:opt_mux$10529 }
    New ctrl vector for $pmux cell $procmux$5325: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10531 }
    New ctrl vector for $pmux cell $procmux$6951: { $procmux$6582_CMP $auto$opt_reduce.cc:134:opt_mux$10533 }
    New ctrl vector for $pmux cell $procmux$7791: { $procmux$6602_CMP $auto$opt_reduce.cc:134:opt_mux$10535 }
    New ctrl vector for $pmux cell $procmux$2493: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10537 }
    New ctrl vector for $pmux cell $procmux$7329: { $procmux$6591_CMP $auto$opt_reduce.cc:134:opt_mux$10539 }
    New ctrl vector for $pmux cell $procmux$7833: { $procmux$6603_CMP $auto$opt_reduce.cc:134:opt_mux$10541 }
    New ctrl vector for $pmux cell $procmux$2061: { $procmux$2093_CMP $auto$opt_reduce.cc:134:opt_mux$10543 }
    New ctrl vector for $pmux cell $procmux$5010: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10545 }
    New ctrl vector for $pmux cell $procmux$4650: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10547 }
    New ctrl vector for $pmux cell $procmux$2781: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10549 }
    New ctrl vector for $pmux cell $procmux$7875: { $procmux$6604_CMP $auto$opt_reduce.cc:134:opt_mux$10551 }
    New ctrl vector for $pmux cell $procmux$3165: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10553 }
    New ctrl vector for $pmux cell $procmux$5370: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10555 }
    New ctrl vector for $pmux cell $procmux$3309: { $procmux$2087_CMP $auto$opt_reduce.cc:134:opt_mux$10557 }
    New ctrl vector for $pmux cell $procmux$6993: { $procmux$6583_CMP $auto$opt_reduce.cc:134:opt_mux$10559 }
    New ctrl vector for $pmux cell $procmux$7371: { $procmux$6592_CMP $auto$opt_reduce.cc:134:opt_mux$10561 }
    New ctrl vector for $pmux cell $procmux$2637: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10563 }
    New ctrl vector for $pmux cell $procmux$3501: { $procmux$2091_CMP $auto$opt_reduce.cc:134:opt_mux$10565 }
    New ctrl vector for $pmux cell $procmux$4830: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10567 }
    New ctrl vector for $pmux cell $procmux$2205: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10569 }
    New ctrl vector for $pmux cell $procmux$4740: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10571 }
    New ctrl vector for $pmux cell $procmux$6783: { $procmux$6578_CMP $auto$opt_reduce.cc:134:opt_mux$10573 }
    New ctrl vector for $pmux cell $procmux$5055: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10575 }
    New ctrl vector for $pmux cell $procmux$7413: { $procmux$6593_CMP $auto$opt_reduce.cc:134:opt_mux$10577 }
    New ctrl vector for $pmux cell $procmux$5415: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10579 }
    New ctrl vector for $pmux cell $procmux$7035: { $procmux$6584_CMP $auto$opt_reduce.cc:134:opt_mux$10581 }
    New ctrl vector for $pmux cell $procmux$4335: { $procmux$2093_CMP $auto$opt_reduce.cc:134:opt_mux$10583 }
    New ctrl vector for $pmux cell $procmux$2877: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10585 }
    New ctrl vector for $pmux cell $procmux$2829: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10587 }
    New ctrl vector for $pmux cell $procmux$7455: { $procmux$6594_CMP $auto$opt_reduce.cc:134:opt_mux$10589 }
    New ctrl vector for $pmux cell $procmux$3549: { $procmux$2092_CMP $auto$opt_reduce.cc:134:opt_mux$10591 }
    New ctrl vector for $pmux cell $procmux$5460: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10593 }
    New ctrl vector for $pmux cell $procmux$2301: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10595 }
    New ctrl vector for $pmux cell $procmux$4380: { $auto$opt_reduce.cc:134:opt_mux$10597 $procmux$2062_CMP }
    New ctrl vector for $pmux cell $procmux$5100: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10599 }
    New ctrl vector for $pmux cell $procmux$7077: { $procmux$6585_CMP $auto$opt_reduce.cc:134:opt_mux$10601 }
    New ctrl vector for $pmux cell $procmux$2925: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10603 }
    New ctrl vector for $pmux cell $procmux$7497: { $procmux$6595_CMP $auto$opt_reduce.cc:134:opt_mux$10605 }
    New ctrl vector for $pmux cell $procmux$2253: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10607 }
    New ctrl vector for $pmux cell $procmux$5505: { $procmux$2087_CMP $auto$opt_reduce.cc:134:opt_mux$10609 }
    New ctrl vector for $pmux cell $procmux$6615: { $auto$opt_reduce.cc:134:opt_mux$10611 $procmux$6574_CMP }
    New ctrl vector for $pmux cell $procmux$4425: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10613 }
    New ctrl vector for $pmux cell $procmux$3357: { $procmux$2088_CMP $auto$opt_reduce.cc:134:opt_mux$10615 }
    New ctrl vector for $pmux cell $procmux$7539: { $procmux$6596_CMP $auto$opt_reduce.cc:134:opt_mux$10617 }
    New ctrl vector for $pmux cell $procmux$6825: { $procmux$6579_CMP $auto$opt_reduce.cc:134:opt_mux$10619 }
    New ctrl vector for $pmux cell $procmux$7119: { $procmux$6586_CMP $auto$opt_reduce.cc:134:opt_mux$10621 }
    New ctrl vector for $pmux cell $procmux$5145: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10623 }
    New ctrl vector for $pmux cell $procmux$5550: { $procmux$2088_CMP $auto$opt_reduce.cc:134:opt_mux$10625 }
    New ctrl vector for $pmux cell $procmux$2973: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10627 }
    New ctrl vector for $pmux cell $procmux$2349: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10629 }
    New ctrl vector for $pmux cell $procmux$7581: { $procmux$6597_CMP $auto$opt_reduce.cc:134:opt_mux$10631 }
    New ctrl vector for $pmux cell $procmux$4470: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10633 }
    New ctrl vector for $pmux cell $procmux$4875: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10635 }
    New ctrl vector for $pmux cell $procmux$7161: { $procmux$6587_CMP $auto$opt_reduce.cc:134:opt_mux$10637 }
    New ctrl vector for $pmux cell $procmux$6699: { $procmux$6576_CMP $auto$opt_reduce.cc:134:opt_mux$10639 }
    New ctrl vector for $pmux cell $procmux$5595: { $procmux$2089_CMP $auto$opt_reduce.cc:134:opt_mux$10641 }
    New ctrl vector for $pmux cell $procmux$5190: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10643 }
    New ctrl vector for $pmux cell $procmux$2589: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10645 }
    New ctrl vector for $pmux cell $procmux$2685: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10647 }
    New ctrl vector for $pmux cell $procmux$7623: { $procmux$6598_CMP $auto$opt_reduce.cc:134:opt_mux$10649 }
    New ctrl vector for $pmux cell $procmux$3021: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10651 }
    New ctrl vector for $pmux cell $procmux$6573: { $procmux$6605_CMP $auto$opt_reduce.cc:134:opt_mux$10653 }
    New ctrl vector for $pmux cell $procmux$2109: { $auto$opt_reduce.cc:134:opt_mux$10655 $procmux$2062_CMP }
    New ctrl vector for $pmux cell $procmux$2397: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10657 }
    New ctrl vector for $pmux cell $procmux$4515: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10659 }
    New ctrl vector for $pmux cell $procmux$7203: { $procmux$6588_CMP $auto$opt_reduce.cc:134:opt_mux$10661 }
    New ctrl vector for $pmux cell $procmux$3261: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10663 }
    New ctrl vector for $pmux cell $procmux$5640: { $procmux$2090_CMP $auto$opt_reduce.cc:134:opt_mux$10665 }
    New ctrl vector for $pmux cell $procmux$6867: { $procmux$6580_CMP $auto$opt_reduce.cc:134:opt_mux$10667 }
    New ctrl vector for $pmux cell $procmux$5235: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10669 }
    New ctrl vector for $pmux cell $procmux$7665: { $procmux$6599_CMP $auto$opt_reduce.cc:134:opt_mux$10671 }
    New ctrl vector for $pmux cell $procmux$4695: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10673 }
    New ctrl vector for $pmux cell $procmux$2541: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10675 }
    New ctrl vector for $pmux cell $procmux$4920: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10677 }
    New ctrl vector for $pmux cell $procmux$3405: { $procmux$2089_CMP $auto$opt_reduce.cc:134:opt_mux$10679 }
    New ctrl vector for $pmux cell $procmux$3069: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10681 }
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 96 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~54 debug messages>
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~12 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Removed a total of 57 cells.

4.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 4259 unused wires.
<suppressed ~3 debug messages>

4.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.8. Rerunning OPT passes. (Maybe there is more to do..)

4.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~151 debug messages>

4.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 0 changes.

4.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.14. Finished OPT passes. (There is nothing left to do.)

4.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$20 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$56 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$62 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$63 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$65 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$66 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$68 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$69 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$71 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:170$78 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:177$88 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:178$90 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:178$91 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:185$93 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:194$96 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:195$98 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:195$99 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:202$101 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9953_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$10003_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$eq$cva6_lsu_model.v:72$417 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$503 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$503 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$504 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$504 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$539 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$539 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$ne$cva6_lsu_model.v:193$572 ($ne).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$575 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$575 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$584 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$584 ($add).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$703 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$717 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$859 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$870 ($mux).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1023_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1119_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1129_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$700 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$714 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$857 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$868 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$697 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$711 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$705 ($pmux).
Removed top 20 bits (of 32) from wire cva6_lsu_model.$4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$400_DATA[31:0]$531.
Removed top 20 bits (of 32) from wire cva6_lsu_model.$5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$403_DATA[31:0]$558.
Removed top 30 bits (of 32) from wire cva6_lsu_model.$add$cva6_lsu_model.v:148$503_Y.
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$258 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$295 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$322 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$337 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$340 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$352 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$353 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$354 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$355 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$357 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$358 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$359 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$369 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$369 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$370 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$371 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$372 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$378 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$378 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$381 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$381 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$388 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$388 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2078_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2079_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2080_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2081_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2082_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2083_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2084_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2085_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2086_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2087_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2088_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2089_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2090_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2091_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2092_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3614_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3615_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3616_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3617_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3618_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3619_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3620_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3621_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3622_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3623_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3624_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3625_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3626_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3627_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3628_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5792_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5793_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5794_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5795_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5796_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5797_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5798_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5799_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5800_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5801_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5802_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5803_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5804_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5805_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5806_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6590_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6591_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6592_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6593_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6594_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6595_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6596_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6597_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6598_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6599_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6600_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6601_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6602_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6603_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6604_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$369_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$337_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$354_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$359_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$357_Y.

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

4.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.11.4. Finished fast OPT passes.

4.12. Printing statistics.

=== cva6_lsu_formal ===

   Number of wires:                151
   Number of wire bits:           5239
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                144
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         9
     $dff                           23
     $eq                            23
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $lt                             2
     $mux                           47
     $ne                             2
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_model ===

   Number of wires:                186
   Number of wire bits:           1426
   Number of public wires:          40
   Number of public wire bits:     346
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $add                            5
     $adff                          28
     $eq                            12
     $ge                             2
     $logic_and                      2
     $logic_not                      5
     $logic_or                       4
     $mux                          104
     $ne                             4
     $not                            2
     $pmux                           5
     $reduce_bool                    2

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_model                  1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_model                1

   Number of wires:               2105
   Number of wire bits:          42763
   Number of public wires:         308
   Number of public wire bits:   13768
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2040
     $add                           21
     $adff                          56
     $and                            2
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         9
     $dff                          179
     $eq                           323
     $ge                             4
     $gt                             1
     $le                             1
     $logic_and                     24
     $logic_not                     35
     $logic_or                      11
     $lt                             6
     $mux                          985
     $ne                            10
     $not                            4
     $or                             2
     $pmux                         208
     $reduce_bool                    8
     $reduce_or                    128
     $shl                            2
     $shr                            4
     $sub                            6
     $xor                            2

4.13. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

5. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

6. Executing ASYNC2SYNC pass.
Replacing cva6_lsu_model.$procdff$10203 ($adff): ARST=\rst_ni, D=$0\instr_i_pc[7:0], Q=\instr_i_pc
Replacing cva6_lsu_model.$procdff$10204 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_lsu_model.$procdff$10205 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_lsu_model.$procdff$10206 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_lsu_model.$procdff$10207 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue[31:0], Q=\load_instr_i_queue
Replacing cva6_lsu_model.$procdff$10208 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue_pc[7:0], Q=\load_instr_i_queue_pc
Replacing cva6_lsu_model.$procdff$10209 ($adff): ARST=\rst_ni, D=$0\load_instr_queue_state[1:0], Q=\load_instr_queue_state
Replacing cva6_lsu_model.$procdff$10222 ($adff): ARST=\rst_ni, D=$0\ready_flag[0:0], Q=\ready_flag
Replacing cva6_lsu_model.$procdff$10223 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_lsu_model.$procdff$10224 ($adff): ARST=\rst_ni, D=\inner_instr_i, Q=\x_inner_instr_i
Replacing cva6_lsu_model.$procdff$10225 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10226 ($adff): ARST=\rst_ni, D=\inner_instr_valid_i, Q=\x_inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10227 ($adff): ARST=\rst_ni, D=\is_load_i, Q=\inner_is_load_i
Replacing cva6_lsu_model.$procdff$10228 ($adff): ARST=\rst_ni, D=\inner_is_load_i, Q=\x_inner_is_load_i
Replacing cva6_lsu_model.$procdff$10229 ($adff): ARST=\rst_ni, D=\store_mem_resp_i, Q=\inner_store_mem_resp_i
Replacing cva6_lsu_model.$procdff$10231 ($adff): ARST=\rst_ni, D=\load_mem_resp_i, Q=\inner_load_mem_resp_i
Replacing cva6_lsu_model.$procdff$10236 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_lsu_model.$procdff$10237 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_lsu_model.$procdff$10238 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_lsu_model.$procdff$10239 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_lsu_model.$procdff$10240 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[0][7:0], Q=\store_instr_i_queue_pc[0]
Replacing cva6_lsu_model.$procdff$10241 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[1][7:0], Q=\store_instr_i_queue_pc[1]
Replacing cva6_lsu_model.$procdff$10242 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[2][7:0], Q=\store_instr_i_queue_pc[2]
Replacing cva6_lsu_model.$procdff$10243 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[3][7:0], Q=\store_instr_i_queue_pc[3]
Replacing cva6_lsu_model.$procdff$10244 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_lsu_model.$procdff$10245 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_lsu_model.$procdff$10246 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_lsu_model.$procdff$10247 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

8. Executing SETUNDEF pass (replace undef values with defined constants).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

9.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$10487 ($dff) from module cva6_lsu_formal (D = $procmux$10196_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11072 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$10486 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$10461 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11075 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$10460 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11077 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$10459 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11079 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:202$101_Y, Q = \pc_2).
Adding SRST signal on $procdff$10458 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11083 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:185$93_Y, Q = \pc_1).
Adding SRST signal on $procdff$10457 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11087 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$10456 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11089 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:175$1_DATA[31:0]$86, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$10455 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11091 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$10454 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11093 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:192$2_DATA[31:0]$94, Q = \tb_io_instr_i_2).
Adding EN signal on $procdff$10437 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$10436 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$10435 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$10434 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$10433 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$10432 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$10431 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$10430 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$10429 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$10428 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$10427 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$10426 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$10425 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$10424 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$10423 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$10422 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$10421 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$10420 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$10419 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$10418 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$10417 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$10416 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$10415 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$10414 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$10413 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$10412 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$10411 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$10410 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$10409 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$10408 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$10407 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$10406 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$10405 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$10404 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$10403 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$10402 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$10401 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$10400 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$10399 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$10398 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$10397 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$10396 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$10395 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$10394 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$10393 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$10392 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$10391 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$10390 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$10389 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$10388 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$10387 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$10386 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$10385 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$10384 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$10383 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$10382 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$10381 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$10380 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$10378 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$10377 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$10376 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$10375 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$10374 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$10354 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11607 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$10353 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$10353 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11630 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$388_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$11625 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$10352 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$10351 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$10349 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$10348 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11638 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$10347 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11644 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$10346 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11650 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$10345 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$10344 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11669 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$10343 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11677 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$10342 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11687 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$10341 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11695 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$10340 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11703 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 253 unused cells and 253 unused wires.
<suppressed ~256 debug messages>

9.5. Rerunning OPT passes. (Removed registers in this run.)

9.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>

9.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

9.8. Executing OPT_DFF pass (perform DFF optimizations).

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

9.10. Finished fast OPT passes.

10. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

11.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

12. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 6 unique messages, 11 total
End of script. Logfile hash: ae26ee28d6, CPU: user 7.26s system 0.06s, MEM: 93.86 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 27% 3x check (2 sec), 18% 8x opt_clean (1 sec), ...
