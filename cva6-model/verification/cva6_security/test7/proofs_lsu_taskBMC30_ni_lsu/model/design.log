
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: load_store_unit.v
Parsing formal SystemVerilog input from `load_store_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_store_unit'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: shift_reg.v
Parsing formal SystemVerilog input from `shift_reg.v' to AST representation.
Storing AST representation for module `$abstract\shift_reg'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: store_unit.v
Parsing formal SystemVerilog input from `store_unit.v' to AST representation.
Storing AST representation for module `$abstract\store_unit'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: store_buffer.v
Parsing formal SystemVerilog input from `store_buffer.v' to AST representation.
Storing AST representation for module `$abstract\store_buffer'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: amo_buffer.v
Parsing formal SystemVerilog input from `amo_buffer.v' to AST representation.
Storing AST representation for module `$abstract\amo_buffer'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: load_unit.v
Parsing formal SystemVerilog input from `load_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_unit'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: lsu_bypass.v
Parsing formal SystemVerilog input from `lsu_bypass.v' to AST representation.
Storing AST representation for module `$abstract\lsu_bypass'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: cva6_lsu_shim.v
Parsing formal SystemVerilog input from `cva6_lsu_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_shim'.
Successfully finished Verilog frontend.

11. Executing PREP pass.

11.1. Executing HIERARCHY pass (managing design hierarchy).

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

11.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

11.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

11.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

11.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_shim'.
Generating RTLIL representation for module `\cva6_lsu_shim'.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.

11.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim

11.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\load_store_unit'.
Generating RTLIL representation for module `\load_store_unit'.
Note: Assuming pure combinatorial block at load_store_unit.v:320.2-339.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
load_store_unit.v:205: Warning: Range [33:0] select out of bounds on signal `\icache_areq_i': Setting 1 MSB bits to undef.
load_store_unit.v:218: Warning: Range [33:12] select out of bounds on signal `\mmu_vaddr': Setting 2 MSB bits to undef.

11.2.7. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit

11.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bypass'.
Generating RTLIL representation for module `\lsu_bypass'.

11.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg'.
Generating RTLIL representation for module `\shift_reg'.
Parameter \ArianeCfg

11.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\load_unit'.
Parameter \ArianeCfg
Generating RTLIL representation for module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.

11.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit'.
Generating RTLIL representation for module `\store_unit'.

11.2.12. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit

11.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\amo_buffer'.
Generating RTLIL representation for module `\amo_buffer'.

11.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\store_buffer'.
Generating RTLIL representation for module `\store_buffer'.

11.2.15. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer

11.2.16. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Removing unused module `$abstract\cva6_lsu_shim'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\lsu_bypass'.
Removing unused module `$abstract\load_unit'.
Removing unused module `$abstract\amo_buffer'.
Removing unused module `$abstract\store_buffer'.
Removing unused module `$abstract\store_unit'.
Removing unused module `$abstract\shift_reg'.
Removing unused module `$abstract\load_store_unit'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 10 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

11.3. Executing PROC pass (convert processes to netlists).

11.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
Cleaned up 1 empty switch.

11.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$store_buffer.v:234$917 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_buffer.v:220$915 in module store_buffer.
Marked 23 switch rules as full_case in process $proc$store_buffer.v:166$880 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:142$835 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:85$697 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_unit.v:0$661 in module store_unit.
Marked 1 switch rules as full_case in process $proc$store_unit.v:271$659 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:196$643 in module store_unit.
Marked 3 switch rules as full_case in process $proc$store_unit.v:196$643 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:99$632 in module store_unit.
Marked 12 switch rules as full_case in process $proc$store_unit.v:99$632 in module store_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:301$626 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:294$625 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:264$599 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 5 switch rules as full_case in process $proc$load_unit.v:244$589 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 23 switch rules as full_case in process $proc$load_unit.v:145$565 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$shift_reg.v:19$550 in module shift_reg.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:79$548 in module lsu_bypass.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:73$544 in module lsu_bypass.
Marked 5 switch rules as full_case in process $proc$lsu_bypass.v:41$496 in module lsu_bypass.
Removed 1 dead cases from process $proc$load_store_unit.v:0$474 in module load_store_unit.
Marked 4 switch rules as full_case in process $proc$load_store_unit.v:0$474 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$469 in module load_store_unit.
Removed 2 dead cases from process $proc$load_store_unit.v:0$452 in module load_store_unit.
Marked 5 switch rules as full_case in process $proc$load_store_unit.v:0$452 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$447 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:221$445 in module load_store_unit.
Marked 11 switch rules as full_case in process $proc$load_store_unit.v:519$436 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:320$435 in module load_store_unit.
Marked 10 switch rules as full_case in process $proc$cva6_lsu_shim.v:290$403 in module cva6_lsu_shim.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$155 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$155 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$35 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$35 in module cva6_lsu_formal.
Removed a total of 15 dead cases.

11.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 26 redundant assignments.
Promoted 348 assignments to connections.

11.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
  Set init value: $formal$cva6_lsu_formal.v:207$16_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
  Set init value: $formal$cva6_lsu_formal.v:172$15_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
  Set init value: $formal$cva6_lsu_formal.v:170$14_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
  Set init value: $formal$cva6_lsu_formal.v:166$13_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
  Set init value: $formal$cva6_lsu_formal.v:164$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
  Set init value: $formal$cva6_lsu_formal.v:162$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
  Set init value: $formal$cva6_lsu_formal.v:161$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
  Set init value: $formal$cva6_lsu_formal.v:160$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
  Set init value: $formal$cva6_lsu_formal.v:159$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
  Set init value: $formal$cva6_lsu_formal.v:156$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

11.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:234$917'.
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:220$915'.
Found async reset \rst_ni in `\store_unit.$proc$store_unit.v:271$659'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$626'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$599'.
Found async reset \rst_ni in `\shift_reg.$proc$shift_reg.v:19$550'.
Found async reset \rst_ni in `\lsu_bypass.$proc$lsu_bypass.v:79$548'.
Found async reset \rst_ni in `\load_store_unit.$proc$load_store_unit.v:221$445'.

11.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_buffer.$proc$store_buffer.v:234$917'.
     1/4: $0\commit_status_cnt_q[2:0]
     2/4: $0\commit_write_pointer_q[1:0]
     3/4: $0\commit_read_pointer_q[1:0]
     4/4: $0\commit_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:220$915'.
     1/4: $0\speculative_status_cnt_q[2:0]
     2/4: $0\speculative_write_pointer_q[1:0]
     3/4: $0\speculative_read_pointer_q[1:0]
     4/4: $0\speculative_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:166$880'.
     1/50: $19\page_offset_matches_o[0:0]
     2/50: $18\page_offset_matches_o[0:0]
     3/50: $19\sv2v_autoblock_2._sv2v_jump[1:0]
     4/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
     5/50: $18\sv2v_autoblock_2._sv2v_jump[1:0]
     6/50: $17\page_offset_matches_o[0:0]
     7/50: $5\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
     8/50: $17\sv2v_autoblock_2._sv2v_jump[1:0]
     9/50: $16\page_offset_matches_o[0:0]
    10/50: $16\sv2v_autoblock_2._sv2v_jump[1:0]
    11/50: $15\page_offset_matches_o[0:0]
    12/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    13/50: $15\sv2v_autoblock_2._sv2v_jump[1:0]
    14/50: $14\page_offset_matches_o[0:0]
    15/50: $14\sv2v_autoblock_2._sv2v_jump[1:0]
    16/50: $13\page_offset_matches_o[0:0]
    17/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    18/50: $13\sv2v_autoblock_2._sv2v_jump[1:0]
    19/50: $12\page_offset_matches_o[0:0]
    20/50: $12\sv2v_autoblock_2._sv2v_jump[1:0]
    21/50: $11\page_offset_matches_o[0:0]
    22/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    23/50: $11\sv2v_autoblock_2._sv2v_jump[1:0]
    24/50: $10\page_offset_matches_o[0:0]
    25/50: $9\page_offset_matches_o[0:0]
    26/50: $10\sv2v_autoblock_2._sv2v_jump[1:0]
    27/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
    28/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    29/50: $9\sv2v_autoblock_2._sv2v_jump[1:0]
    30/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i[31:0]
    31/50: $8\sv2v_autoblock_2._sv2v_jump[1:0]
    32/50: $8\page_offset_matches_o[0:0]
    33/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    34/50: $7\sv2v_autoblock_2._sv2v_jump[1:0]
    35/50: $7\page_offset_matches_o[0:0]
    36/50: $6\sv2v_autoblock_2._sv2v_jump[1:0]
    37/50: $6\page_offset_matches_o[0:0]
    38/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    39/50: $5\sv2v_autoblock_2._sv2v_jump[1:0]
    40/50: $5\page_offset_matches_o[0:0]
    41/50: $4\sv2v_autoblock_2._sv2v_jump[1:0]
    42/50: $4\page_offset_matches_o[0:0]
    43/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    44/50: $3\sv2v_autoblock_2._sv2v_jump[1:0]
    45/50: $3\page_offset_matches_o[0:0]
    46/50: $2\sv2v_autoblock_2._sv2v_jump[1:0]
    47/50: $2\page_offset_matches_o[0:0]
    48/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    49/50: $1\sv2v_autoblock_2._sv2v_jump[1:0]
    50/50: $1\page_offset_matches_o[0:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:142$835'.
     1/16: $3\store_if.commit_status_cnt[4:0]
     2/16: $1\commit_write_pointer_n[1:0]
     3/16: $3\commit_queue_n[291:0]
     4/16: $1$bitselwrite$data$store_buffer.v:160$688[291:0]$861
     5/16: $1$bitselwrite$mask$store_buffer.v:160$687[291:0]$860
     6/16: $2\store_if.commit_status_cnt[4:0]
     7/16: $2\commit_read_pointer_n[1:0]
     8/16: $2\commit_queue_n[291:0]
     9/16: $2$bitselwrite$data$store_buffer.v:154$686[291:0]$848
    10/16: $2$bitselwrite$mask$store_buffer.v:154$685[291:0]$847
    11/16: $1$bitselwrite$data$store_buffer.v:154$686[291:0]$846
    12/16: $1$bitselwrite$mask$store_buffer.v:154$685[291:0]$845
    13/16: $1\store_if.commit_status_cnt[4:0]
    14/16: $1\commit_read_pointer_n[1:0]
    15/16: $1\commit_queue_n[291:0]
    16/16: $1\req_port_o[9:9]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:141$834'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:138$828'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:135$822'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:132$816'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:129$810'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:126$804'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:123$803'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:120$802'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:85$697'.
     1/25: $1\speculative_status_cnt_n[2:0]
     2/25: $2\speculative_write_pointer_n[1:0]
     3/25: $1\core_if.sv2v_autoblock_1.i[31:0]
     4/25: $6\speculative_queue_n[219:219]
     5/25: $5\speculative_queue_n[146:146]
     6/25: $4\speculative_queue_n[73:73]
     7/25: $3\speculative_queue_n[0:0]
     8/25: $2\core_if.speculative_status_cnt[4:0]
     9/25: $1\speculative_read_pointer_n[1:0]
    10/25: $2\speculative_queue_n[291:0]
    11/25: $1$bitselwrite$data$store_buffer.v:103$684[291:0]$790
    12/25: $1$bitselwrite$mask$store_buffer.v:103$683[291:0]$789
    13/25: $1\core_if.speculative_status_cnt[4:0]
    14/25: $1\speculative_write_pointer_n[1:0]
    15/25: $1\speculative_queue_n[291:0]
    16/25: $1$bitselwrite$data$store_buffer.v:98$682[291:0]$721
    17/25: $1$bitselwrite$mask$store_buffer.v:98$681[291:0]$720
    18/25: $1$bitselwrite$data$store_buffer.v:97$680[291:0]$719
    19/25: $1$bitselwrite$mask$store_buffer.v:97$679[291:0]$718
    20/25: $1$bitselwrite$data$store_buffer.v:96$678[291:0]$717
    21/25: $1$bitselwrite$mask$store_buffer.v:96$677[291:0]$716
    22/25: $1$bitselwrite$data$store_buffer.v:95$676[291:0]$715
    23/25: $1$bitselwrite$mask$store_buffer.v:95$675[291:0]$714
    24/25: $1$bitselwrite$data$store_buffer.v:94$674[291:0]$713
    25/25: $1$bitselwrite$mask$store_buffer.v:94$673[291:0]$712
Creating decoders for process `\store_unit.$proc$store_unit.v:0$661'.
     1/1: $1\ariane_pkg_is_amo$func$store_unit.v:86$631.$result[0:0]$668
Creating decoders for process `\store_unit.$proc$store_unit.v:271$659'.
     1/6: $0\amo_op_q[3:0]
     2/6: $0\st_data_size_q[1:0]
     3/6: $0\trans_id_q[2:0]
     4/6: $0\st_data_q[31:0]
     5/6: $0\st_be_q[3:0]
     6/6: $0\state_q[1:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:196$643'.
     1/4: $1\amo_op_d[3:0]
     2/4: $1\ariane_pkg_extract_transfer_size$func$store_unit.v:199$630.$result[1:0]$654
     3/4: $1\ariane_pkg_data_align$func$store_unit.v:198$629.data_tmp[63:0]$652 [63:32]
     4/4: $1\ariane_pkg_data_align$func$store_unit.v:198$629.data_tmp[63:0]$652 [31:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:99$632'.
     1/28: $11\state_d[1:0]
     2/28: $2\valid_o[0:0]
     3/28: $10\state_d[1:0]
     4/28: $3\st_valid[0:0]
     5/28: $8\pop_st_o[0:0]
     6/28: $9\state_d[1:0]
     7/28: $8\state_d[1:0]
     8/28: $7\pop_st_o[0:0]
     9/28: $7\state_d[1:0]
    10/28: $6\pop_st_o[0:0]
    11/28: $6\state_d[1:0]
    12/28: $5\state_d[1:0]
    13/28: $5\pop_st_o[0:0]
    14/28: $3\translation_req_o[0:0]
    15/28: $2\st_valid[0:0]
    16/28: $4\pop_st_o[0:0]
    17/28: $4\state_d[1:0]
    18/28: $3\pop_st_o[0:0]
    19/28: $3\state_d[1:0]
    20/28: $2\state_d[1:0]
    21/28: $2\pop_st_o[0:0]
    22/28: $2\translation_req_o[0:0]
    23/28: $1\state_d[1:0]
    24/28: $1\translation_req_o[0:0]
    25/28: $1\pop_st_o[0:0]
    26/28: $1\st_valid_without_flush[0:0]
    27/28: $1\valid_o[0:0]
    28/28: $1\st_valid[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$626'.
     1/3: $0\fp_sign_q[0:0]
     2/3: $0\signed_q[0:0]
     3/3: $0\idx_q[1:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$625'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$599'.
     1/2: $0\load_data_q[12:0]
     2/2: $0\state_q[3:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$589'.
     1/9: $5\valid_o[0:0]
     2/9: $1\trans_id_o[2:0]
     3/9: $3\ex_o[0:0]
     4/9: $4\valid_o[0:0]
     5/9: $2\ex_o[0:0]
     6/9: $3\valid_o[0:0]
     7/9: $2\valid_o[0:0]
     8/9: $1\ex_o[0:0]
     9/9: $1\valid_o[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
     1/45: $19\state_d[3:0]
     2/45: $1\load_data_d[12:0]
     3/45: $13\pop_ld_o[0:0]
     4/45: $12\pop_ld_o[0:0]
     5/45: $18\state_d[3:0]
     6/45: $2\req_port_o[1:0] [1]
     7/45: $17\state_d[3:0]
     8/45: $11\pop_ld_o[0:0]
     9/45: $16\state_d[3:0]
    10/45: $15\state_d[3:0]
    11/45: $10\pop_ld_o[0:0]
    12/45: $14\state_d[3:0]
    13/45: $9\pop_ld_o[0:0]
    14/45: $7\req_port_o[9:9]
    15/45: $13\state_d[3:0]
    16/45: $8\pop_ld_o[0:0]
    17/45: $6\req_port_o[9:9]
    18/45: $3\translation_req_o[0:0]
    19/45: $12\state_d[3:0]
    20/45: $7\pop_ld_o[0:0]
    21/45: $11\state_d[3:0]
    22/45: $10\state_d[3:0]
    23/45: $6\pop_ld_o[0:0]
    24/45: $2\req_port_o[1:0] [0]
    25/45: $8\req_port_o[1:1]
    26/45: $9\state_d[3:0]
    27/45: $8\state_d[3:0]
    28/45: $6\state_d[3:0]
    29/45: $5\pop_ld_o[0:0]
    30/45: $5\state_d[3:0]
    31/45: $4\state_d[3:0]
    32/45: $4\pop_ld_o[0:0]
    33/45: $3\state_d[3:0]
    34/45: $3\pop_ld_o[0:0]
    35/45: $5\req_port_o[9:9]
    36/45: $2\state_d[3:0]
    37/45: $2\pop_ld_o[0:0]
    38/45: $4\req_port_o[9:9]
    39/45: $2\translation_req_o[0:0]
    40/45: $1\state_d[3:0]
    41/45: $1\pop_ld_o[0:0]
    42/45: $3\req_port_o[9:9]
    43/45: $1\translation_req_o[0:0]
    44/45: $7\state_d[3:0]
    45/45: $1\ariane_pkg_extract_transfer_size$func$load_unit.v:153$552.$result[1:0]$568
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$558'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$557'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$556'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$555'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$554'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$553'.
Creating decoders for process `\shift_reg.$proc$shift_reg.v:19$550'.
     1/1: $0\d_o[100:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:79$548'.
     1/4: $0\read_pointer_q[0:0]
     2/4: $0\write_pointer_q[0:0]
     3/4: $0\status_cnt_q[1:0]
     4/4: $0\mem_q[169:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:73$544'.
     1/1: $1\lsu_ctrl_o[84:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
     1/20: $5\mem_n[169:0]
     2/20: $3\read_pointer[0:0]
     3/20: $2\write_pointer[0:0]
     4/20: $4\status_cnt[1:0]
     5/20: $4\mem_n[169:0]
     6/20: $3\status_cnt[1:0]
     7/20: $2\read_pointer[0:0]
     8/20: $3\mem_n[169:0]
     9/20: $1$bitselwrite$data$lsu_bypass.v:57$494[169:0]$531
    10/20: $1$bitselwrite$mask$lsu_bypass.v:57$493[169:0]$530
    11/20: $2\status_cnt[1:0]
    12/20: $1\read_pointer[0:0]
    13/20: $2\mem_n[169:0]
    14/20: $1$bitselwrite$data$lsu_bypass.v:52$492[169:0]$518
    15/20: $1$bitselwrite$mask$lsu_bypass.v:52$491[169:0]$517
    16/20: $1\status_cnt[1:0]
    17/20: $1\write_pointer[0:0]
    18/20: $1\mem_n[169:0]
    19/20: $1$bitselwrite$data$lsu_bypass.v:47$490[169:0]$504
    20/20: $1$bitselwrite$mask$lsu_bypass.v:47$489[169:0]$503
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$474'.
     1/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427._sv2v_jump[1:0]$488
     2/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.$result[3:0]$487
     3/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427._sv2v_jump[1:0]$485
     4/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.$result[3:0]$484
     5/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427._sv2v_jump[1:0]$483
     6/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.$result[3:0]$482
     7/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427._sv2v_jump[1:0]$481
     8/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.$result[3:0]$480
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$469'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$426.$result[1:0]$473
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$452'.
     1/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$425._sv2v_jump[1:0]$468
     2/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$425.$result[7:0]$467
     3/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$425._sv2v_jump[1:0]$465
     4/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$425.$result[7:0]$464
     5/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$425._sv2v_jump[1:0]$463
     6/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$425.$result[7:0]$462
     7/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$425._sv2v_jump[1:0]$461
     8/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$425.$result[7:0]$460
     9/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$425._sv2v_jump[1:0]$459
    10/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$425.$result[7:0]$458
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$447'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$424.$result[1:0]$451
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:221$445'.
     1/2: $0\translation_valid[0:0]
     2/2: $0\mmu_paddr[33:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:519$436'.
     1/11: $6\misaligned_exception[64:0]
     2/11: $5\misaligned_exception[64:0]
     3/11: $4\misaligned_exception[64:0]
     4/11: $3\misaligned_exception[64:0]
     5/11: $2\misaligned_exception[64:0]
     6/11: $1\misaligned_exception[64:0]
     7/11: $5\data_misaligned[0:0]
     8/11: $4\data_misaligned[0:0]
     9/11: $3\data_misaligned[0:0]
    10/11: $2\data_misaligned[0:0]
    11/11: $1\data_misaligned[0:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:320$435'.
     1/4: $1\mmu_vaddr[31:0]
     2/4: $1\translation_req[0:0]
     3/4: $1\ld_valid_i[0:0]
     4/4: $1\st_valid_i[0:0]
Creating decoders for process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
     1/45: $6\store_req_state[1:0]
     2/45: $5\tb_io_commit_i[0:0]
     3/45: $5\store_req_state[1:0]
     4/45: $4\tb_io_commit_i[0:0]
     5/45: $4\store_req_state[1:0]
     6/45: $6\tb_io_lsu_valid_i[0:0]
     7/45: $3\tb_io_commit_i[0:0]
     8/45: $6\load_req_state[1:0]
     9/45: $4\tb_io_commit_tran_id_i[2:0]
    10/45: $5\load_req_state[1:0]
    11/45: $3\tb_io_commit_tran_id_i[2:0]
    12/45: $5\tb_io_lsu_valid_i[0:0]
    13/45: $4\load_req_state[1:0]
    14/45: $4\tb_io_lsu_valid_i[0:0]
    15/45: $4\tb_io_fu_data_i[110:0]
    16/45: $4\raise_load_request$func$cva6_lsu_shim.v:0$396.addr[31:0]$414
    17/45: $3\store_req_state[1:0]
    18/45: $3\tb_io_lsu_valid_i[0:0]
    19/45: $3\tb_io_fu_data_i[110:0]
    20/45: $3\raise_store_request$func$cva6_lsu_shim.v:0$395.addr[31:0]$412
    21/45: $3\raise_load_request$func$cva6_lsu_shim.v:0$396.addr[31:0]$413
    22/45: $3\load_req_state[1:0]
    23/45: $2\raise_load_request$func$cva6_lsu_shim.v:0$396.addr[31:0]$410
    24/45: $2\raise_store_request$func$cva6_lsu_shim.v:0$395.addr[31:0]$409
    25/45: $2\store_req_state[1:0]
    26/45: $2\load_req_state[1:0]
    27/45: $2\tb_io_lsu_valid_i[0:0]
    28/45: $2\tb_io_fu_data_i[110:0]
    29/45: $2\tb_io_commit_tran_id_i[2:0]
    30/45: $2\tb_io_commit_i[0:0]
    31/45: $2\tb_io_dcache_req_ports_i[104:104]
    32/45: $1\tb_io_dcache_req_ports_i[104:0] [104]
    33/45: $1\tb_io_dcache_req_ports_i[104:0] [103:70]
    34/45: $1\tb_io_dcache_req_ports_i[104:0] [69:35]
    35/45: $1\tb_io_dcache_req_ports_i[104:0] [34:0]
    36/45: $1\load_req_state[1:0]
    37/45: $1\load_memreq_state[2:0]
    38/45: $1\x_load_mem_resp_i[0:0]
    39/45: $1\tb_io_lsu_valid_i[0:0]
    40/45: $1\tb_io_fu_data_i[110:0]
    41/45: $1\tb_io_commit_tran_id_i[2:0]
    42/45: $1\tb_io_commit_i[0:0]
    43/45: $1\store_req_state[1:0]
    44/45: $1\raise_load_request$func$cva6_lsu_shim.v:0$396.addr[31:0]$408
    45/45: $1\raise_store_request$func$cva6_lsu_shim.v:0$395.addr[31:0]$407
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA[31:0]$340
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_ADDR[4:0]$338
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_DATA[31:0]$339
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$145.$result[31:0]$329
   126/587: $5\sra$func$cva6_processor_shim.v:100$146.$result[31:0]$333
   127/587: $5\sra$func$cva6_processor_shim.v:100$146.shamt[4:0]$335
   128/587: $5\sra$func$cva6_processor_shim.v:100$146.d[63:0]$334
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$145.alu_fun[2:0]$332
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$145.imm_data[31:0]$331
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$145.reg_data[31:0]$330
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA[31:0]$337
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_ADDR[4:0]$336
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$144.$result[31:0]$327
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$144.inst[31:0]$328
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_DATA[31:0]$325
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_DATA[31:0]$323
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_ADDR[4:0]$315
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_DATA[31:0]$316
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_DATA[31:0]$318
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_ADDR[4:0]$317
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_DATA[31:0]$314
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_ADDR[4:0]$313
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$142.$result[31:0]$300
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$142.inst[31:0]$301
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_DATA[31:0]$322
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_ADDR[4:0]$321
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA[31:0]$320
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_ADDR[4:0]$319
   218/587: $4\sra$func$cva6_processor_shim.v:100$146.shamt[4:0]$312
   219/587: $4\sra$func$cva6_processor_shim.v:100$146.d[63:0]$311
   220/587: $4\sra$func$cva6_processor_shim.v:100$146.$result[31:0]$310
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$145.alu_fun[2:0]$309
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$145.imm_data[31:0]$308
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$145.reg_data[31:0]$307
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$145.$result[31:0]$306
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$144.inst[31:0]$305
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$144.$result[31:0]$304
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$143.instr[31:0]$303
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$143.$result[0:0]$302
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_DATA[31:0]$298
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_DATA[31:0]$296
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_ADDR[4:0]$282
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_DATA[31:0]$283
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_DATA[31:0]$285
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_ADDR[4:0]$284
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_DATA[31:0]$281
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_ADDR[4:0]$280
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$140.$result[31:0]$263
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$140.inst[31:0]$264
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_DATA[31:0]$295
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_ADDR[4:0]$294
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA[31:0]$293
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_ADDR[4:0]$292
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_DATA[31:0]$291
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_ADDR[4:0]$290
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_DATA[31:0]$289
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_ADDR[4:0]$288
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_DATA[31:0]$287
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_ADDR[4:0]$286
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$146.shamt[4:0]$279
   350/587: $3\sra$func$cva6_processor_shim.v:100$146.d[63:0]$278
   351/587: $3\sra$func$cva6_processor_shim.v:100$146.$result[31:0]$277
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$145.alu_fun[2:0]$276
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$145.imm_data[31:0]$275
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$145.reg_data[31:0]$274
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$145.$result[31:0]$273
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$144.inst[31:0]$272
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$144.$result[31:0]$271
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$143.instr[31:0]$270
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$143.$result[0:0]$269
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$142.inst[31:0]$268
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$142.$result[31:0]$267
   362/587: $3\is_load$func$cva6_processor_shim.v:232$141.instr[31:0]$266
   363/587: $3\is_load$func$cva6_processor_shim.v:232$141.$result[0:0]$265
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_DATA[31:0]$261
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_ADDR[4:0]$260
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA[31:0]$259
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_ADDR[4:0]$258
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_DATA[31:0]$257
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_ADDR[4:0]$256
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_DATA[31:0]$255
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_ADDR[4:0]$254
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_DATA[31:0]$253
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_ADDR[4:0]$252
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_DATA[31:0]$251
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_ADDR[4:0]$250
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_DATA[31:0]$249
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_ADDR[4:0]$248
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_DATA[31:0]$247
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_ADDR[4:0]$246
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$146.shamt[4:0]$245
   445/587: $2\sra$func$cva6_processor_shim.v:100$146.d[63:0]$244
   446/587: $2\sra$func$cva6_processor_shim.v:100$146.$result[31:0]$243
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$145.alu_fun[2:0]$242
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$145.imm_data[31:0]$241
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$145.reg_data[31:0]$240
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$145.$result[31:0]$239
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$144.inst[31:0]$238
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$144.$result[31:0]$237
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$143.instr[31:0]$236
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$143.$result[0:0]$235
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$142.inst[31:0]$234
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$142.$result[31:0]$233
   457/587: $2\is_load$func$cva6_processor_shim.v:232$141.instr[31:0]$232
   458/587: $2\is_load$func$cva6_processor_shim.v:232$141.$result[0:0]$231
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$140.inst[31:0]$230
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$140.$result[31:0]$229
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$139.$result[0:0]$227
   466/587: $2\is_store$func$cva6_processor_shim.v:226$139.instr[31:0]$228
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_DATA[31:0]$226
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_ADDR[4:0]$225
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA[31:0]$224
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_ADDR[4:0]$223
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_DATA[31:0]$222
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_ADDR[4:0]$221
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_DATA[31:0]$220
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_ADDR[4:0]$219
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_DATA[31:0]$218
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_ADDR[4:0]$217
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_DATA[31:0]$216
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_ADDR[4:0]$215
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_DATA[31:0]$214
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_ADDR[4:0]$213
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_DATA[31:0]$212
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_ADDR[4:0]$211
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$146.shamt[4:0]$210
   570/587: $1\sra$func$cva6_processor_shim.v:100$146.d[63:0]$209
   571/587: $1\sra$func$cva6_processor_shim.v:100$146.$result[31:0]$208
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$145.alu_fun[2:0]$207
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$145.imm_data[31:0]$206
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$145.reg_data[31:0]$205
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$145.$result[31:0]$204
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$144.inst[31:0]$203
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$144.$result[31:0]$202
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$143.instr[31:0]$201
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$143.$result[0:0]$200
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$142.inst[31:0]$199
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$142.$result[31:0]$198
   582/587: $1\is_load$func$cva6_processor_shim.v:232$141.instr[31:0]$197
   583/587: $1\is_load$func$cva6_processor_shim.v:232$141.$result[0:0]$196
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$140.inst[31:0]$195
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$140.$result[31:0]$194
   586/587: $1\is_store$func$cva6_processor_shim.v:226$139.instr[31:0]$193
   587/587: $1\is_store$func$cva6_processor_shim.v:226$139.$result[0:0]$192
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
     1/54: $4\local_ready_2[0:0]
     2/54: $3\tb_io_instr_valid_i_2[0:0]
     3/54: $3\pc_2[31:0]
     4/54: $3\local_ready_2[0:0]
     5/54: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_DATA[31:0]$98
     6/54: $4\local_ready_1[0:0]
     7/54: $3\tb_io_instr_valid_i_1[0:0]
     8/54: $3\pc_1[31:0]
     9/54: $3\local_ready_1[0:0]
    10/54: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_DATA[31:0]$90
    11/54: $2\local_ready_2[0:0]
    12/54: $2\pc_2[31:0]
    13/54: $2\tb_io_instr_valid_i_2[0:0]
    14/54: $2\tb_io_instr_i_2[31:0]
    15/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_DATA[31:0]$87
    16/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_ADDR[1:0]$86
    17/54: $2\local_ready_1[0:0]
    18/54: $2\pc_1[31:0]
    19/54: $2\tb_io_instr_valid_i_1[0:0]
    20/54: $2\tb_io_instr_i_1[31:0]
    21/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_DATA[31:0]$85
    22/54: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_ADDR[1:0]$84
    23/54: $1\local_ready_2[0:0]
    24/54: $1\local_ready_1[0:0]
    25/54: $1\tb_io_instr_i_2[31:0]
    26/54: $1\tb_io_instr_i_1[31:0]
    27/54: $1\tb_io_instr_valid_i_2[0:0]
    28/54: $1\tb_io_instr_valid_i_1[0:0]
    29/54: $1\pc_2[31:0]
    30/54: $1\pc_1[31:0]
    31/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_DATA[31:0]$65
    32/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_ADDR[1:0]$64
    33/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_DATA[31:0]$63
    34/54: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_ADDR[1:0]$62
    35/54: $0$formal$cva6_lsu_formal.v:156$7_EN[0:0]$41
    36/54: $0$formal$cva6_lsu_formal.v:156$7_CHECK[0:0]$40
    37/54: $0$formal$cva6_lsu_formal.v:159$8_EN[0:0]$43
    38/54: $0$formal$cva6_lsu_formal.v:159$8_CHECK[0:0]$42
    39/54: $0$formal$cva6_lsu_formal.v:160$9_EN[0:0]$45
    40/54: $0$formal$cva6_lsu_formal.v:160$9_CHECK[0:0]$44
    41/54: $0$formal$cva6_lsu_formal.v:161$10_EN[0:0]$47
    42/54: $0$formal$cva6_lsu_formal.v:161$10_CHECK[0:0]$46
    43/54: $0$formal$cva6_lsu_formal.v:162$11_EN[0:0]$49
    44/54: $0$formal$cva6_lsu_formal.v:162$11_CHECK[0:0]$48
    45/54: $0$formal$cva6_lsu_formal.v:164$12_EN[0:0]$51
    46/54: $0$formal$cva6_lsu_formal.v:164$12_CHECK[0:0]$50
    47/54: $0$formal$cva6_lsu_formal.v:166$13_EN[0:0]$53
    48/54: $0$formal$cva6_lsu_formal.v:166$13_CHECK[0:0]$52
    49/54: $0$formal$cva6_lsu_formal.v:170$14_EN[0:0]$55
    50/54: $0$formal$cva6_lsu_formal.v:170$14_CHECK[0:0]$54
    51/54: $0$formal$cva6_lsu_formal.v:172$15_EN[0:0]$57
    52/54: $0$formal$cva6_lsu_formal.v:172$15_CHECK[0:0]$56
    53/54: $0$formal$cva6_lsu_formal.v:207$16_EN[0:0]$59
    54/54: $0$formal$cva6_lsu_formal.v:207$16_CHECK[0:0]$58
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

11.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_buffer.\page_offset_matches_o' from process `\store_buffer.$proc$store_buffer.v:166$880'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2._sv2v_jump' from process `\store_buffer.$proc$store_buffer.v:166$880'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i' from process `\store_buffer.$proc$store_buffer.v:166$880'.
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$880': $auto$proc_dlatch.cc:427:proc_dlatch$11620
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i' from process `\store_buffer.$proc$store_buffer.v:166$880': $auto$proc_dlatch.cc:427:proc_dlatch$11655
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$880': $auto$proc_dlatch.cc:427:proc_dlatch$11666
No latch inferred for signal `\store_buffer.\no_st_pending_o' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\commit_ready_o' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\req_port_o [9]' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\commit_queue_n' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\commit_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\commit_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\commit_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\store_if.commit_status_cnt' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:154$685' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:154$686' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:160$687' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:160$688' from process `\store_buffer.$proc$store_buffer.v:142$835'.
No latch inferred for signal `\store_buffer.\req_port_o [3:2]' from process `\store_buffer.$proc$store_buffer.v:141$834'.
No latch inferred for signal `\store_buffer.\req_port_o [7:4]' from process `\store_buffer.$proc$store_buffer.v:138$828'.
No latch inferred for signal `\store_buffer.\req_port_o [42:11]' from process `\store_buffer.$proc$store_buffer.v:135$822'.
No latch inferred for signal `\store_buffer.\req_port_o [64:43]' from process `\store_buffer.$proc$store_buffer.v:132$816'.
No latch inferred for signal `\store_buffer.\req_port_o [76:65]' from process `\store_buffer.$proc$store_buffer.v:129$810'.
No latch inferred for signal `\store_buffer.\req_port_o [0]' from process `\store_buffer.$proc$store_buffer.v:126$804'.
No latch inferred for signal `\store_buffer.\req_port_o [8]' from process `\store_buffer.$proc$store_buffer.v:123$803'.
No latch inferred for signal `\store_buffer.\req_port_o [1]' from process `\store_buffer.$proc$store_buffer.v:120$802'.
No latch inferred for signal `\store_buffer.\ready_o' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.\speculative_queue_n' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.\speculative_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.\speculative_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.\speculative_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.\core_if.speculative_status_cnt' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:94$673' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:94$674' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:95$675' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:95$676' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:96$677' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:96$678' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:97$679' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:97$680' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:98$681' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:98$682' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:103$683' from process `\store_buffer.$proc$store_buffer.v:85$697'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:103$684' from process `\store_buffer.$proc$store_buffer.v:85$697'.
Latch inferred for signal `\store_buffer.\core_if.sv2v_autoblock_1.i' from process `\store_buffer.$proc$store_buffer.v:85$697': $auto$proc_dlatch.cc:427:proc_dlatch$11731
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$628.$result' from process `\store_unit.$proc$store_unit.v:0$661'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$631.$result' from process `\store_unit.$proc$store_unit.v:0$661'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$631.op' from process `\store_unit.$proc$store_unit.v:0$661'.
No latch inferred for signal `\store_unit.\st_data_n' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\st_be_n' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\st_data_size_n' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\amo_op_d' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$629.$result' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$629.addr' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$629.data' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$629.addr_tmp' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$629.data_tmp' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$630.$result' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$630.op' from process `\store_unit.$proc$store_unit.v:196$643'.
No latch inferred for signal `\store_unit.\st_valid' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\pop_st_o' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\valid_o' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\ex_o' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\translation_req_o' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\state_d' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\st_valid_without_flush' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `\store_unit.\trans_id_n' from process `\store_unit.$proc$store_unit.v:99$632'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\result_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$625'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\valid_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$589'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\trans_id_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$589'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$589'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\translation_req_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [7:0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [9]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\pop_ld_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$552.$result' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$552.op' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [32:1]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$558'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [64:33]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$557'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [64:43]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$556'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [76:65]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$555'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [42:11]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$554'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [8]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$553'.
No latch inferred for signal `\lsu_bypass.\lsu_ctrl_o' from process `\lsu_bypass.$proc$lsu_bypass.v:73$544'.
No latch inferred for signal `\lsu_bypass.\mem_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.\read_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.\write_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.\status_cnt_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.\status_cnt' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.\write_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.\read_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:47$489' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:47$490' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:52$491' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:52$492' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:57$493' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:57$494' from process `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$423.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$474'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$474'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$474'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427.size' from process `\load_store_unit.$proc$load_store_unit.v:0$474'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$427._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$474'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$422.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$469'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$426.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$469'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$426.op' from process `\load_store_unit.$proc$load_store_unit.v:0$469'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$421.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$452'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$425.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$452'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$425.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$452'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$425.size' from process `\load_store_unit.$proc$load_store_unit.v:0$452'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$425._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$452'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$420.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$447'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$424.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$447'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$424.op' from process `\load_store_unit.$proc$load_store_unit.v:0$447'.
No latch inferred for signal `\load_store_unit.\data_misaligned' from process `\load_store_unit.$proc$load_store_unit.v:519$436'.
No latch inferred for signal `\load_store_unit.\misaligned_exception' from process `\load_store_unit.$proc$load_store_unit.v:519$436'.
No latch inferred for signal `\load_store_unit.\st_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$435'.
No latch inferred for signal `\load_store_unit.\ld_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$435'.
No latch inferred for signal `\load_store_unit.\translation_req' from process `\load_store_unit.$proc$load_store_unit.v:320$435'.
No latch inferred for signal `\load_store_unit.\mmu_vaddr' from process `\load_store_unit.$proc$load_store_unit.v:320$435'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.

11.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\store_buffer.\commit_queue_q' using process `\store_buffer.$proc$store_buffer.v:234$917'.
  created $adff cell `$procdff$11742' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:234$917'.
  created $adff cell `$procdff$11743' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$917'.
  created $adff cell `$procdff$11744' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$917'.
  created $adff cell `$procdff$11745' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_queue_q' using process `\store_buffer.$proc$store_buffer.v:220$915'.
  created $adff cell `$procdff$11746' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:220$915'.
  created $adff cell `$procdff$11747' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$915'.
  created $adff cell `$procdff$11748' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$915'.
  created $adff cell `$procdff$11749' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\state_q' using process `\store_unit.$proc$store_unit.v:271$659'.
  created $adff cell `$procdff$11750' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_q' using process `\store_unit.$proc$store_unit.v:271$659'.
  created $adff cell `$procdff$11751' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_be_q' using process `\store_unit.$proc$store_unit.v:271$659'.
  created $adff cell `$procdff$11752' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_size_q' using process `\store_unit.$proc$store_unit.v:271$659'.
  created $adff cell `$procdff$11753' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\amo_op_q' using process `\store_unit.$proc$store_unit.v:271$659'.
  created $adff cell `$procdff$11754' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\trans_id_q' using process `\store_unit.$proc$store_unit.v:271$659'.
  created $adff cell `$procdff$11755' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\idx_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$626'.
  created $adff cell `$procdff$11756' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\signed_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$626'.
  created $adff cell `$procdff$11757' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\fp_sign_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$626'.
  created $adff cell `$procdff$11758' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$599'.
  created $adff cell `$procdff$11759' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$599'.
  created $adff cell `$procdff$11760' with positive edge clock and negative level reset.
Creating register for signal `\shift_reg.\d_o' using process `\shift_reg.$proc$shift_reg.v:19$550'.
  created $adff cell `$procdff$11761' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\mem_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$548'.
  created $adff cell `$procdff$11762' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\read_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$548'.
  created $adff cell `$procdff$11763' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\write_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$548'.
  created $adff cell `$procdff$11764' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\status_cnt_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$548'.
  created $adff cell `$procdff$11765' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\translation_valid' using process `\load_store_unit.$proc$load_store_unit.v:221$445'.
  created $adff cell `$procdff$11766' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\mmu_paddr' using process `\load_store_unit.$proc$load_store_unit.v:221$445'.
  created $adff cell `$procdff$11767' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_shim.\tb_io_fu_data_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11768' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_lsu_valid_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11769' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11770' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_tran_id_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11771' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_dcache_req_ports_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11772' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_memreq_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11773' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11774' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\store_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11775' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\x_load_mem_resp_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11776' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_store_request$func$cva6_lsu_shim.v:0$395.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11777' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_load_request$func$cva6_lsu_shim.v:0$396.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
  created $dff cell `$procdff$11778' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11779' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11780' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11781' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11782' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11783' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11784' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11785' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11786' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11787' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11788' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11789' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11790' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11791' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11792' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11793' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11794' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11795' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11796' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11797' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11798' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11799' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11800' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11801' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11802' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11803' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11804' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11805' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11806' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11807' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11808' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11809' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11810' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11811' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11812' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11813' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11814' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11815' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11816' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11817' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11818' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11819' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11820' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11821' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11822' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11823' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11824' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11825' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11826' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11827' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11828' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11829' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11830' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11831' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11832' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11833' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11834' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11835' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11836' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11837' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11838' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11839' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11840' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11841' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11842' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11843' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11844' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11845' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11846' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11847' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11848' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11849' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11850' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11851' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11852' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11853' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11854' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11855' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11856' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11857' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$139.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11858' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$139.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11859' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$140.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11860' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$140.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11861' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$141.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11862' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$141.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11863' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$142.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11864' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$142.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11865' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$143.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11866' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$143.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11867' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$144.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11868' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$144.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11869' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$145.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11870' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$145.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11871' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$145.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11872' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$145.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11873' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$146.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11874' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$146.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11875' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$146.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11876' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11877' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11878' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11879' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11880' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11881' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11882' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11883' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11884' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11885' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11886' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11887' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11888' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11889' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11890' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11891' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11892' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11893' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11894' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11895' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11896' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11897' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11898' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11899' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11900' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11901' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11902' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11903' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11904' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11905' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11906' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11907' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11908' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11909' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11910' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11911' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11912' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11913' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11914' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11915' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11916' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11917' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11918' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11919' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11920' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11921' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11922' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11923' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11924' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11925' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11926' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11927' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11928' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11929' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11930' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11931' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11932' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11933' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11934' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11935' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11936' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11937' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11938' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11939' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11940' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11941' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$147_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11942' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11943' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$148_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11944' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11945' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$149_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11946' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11947' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$150_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11948' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11949' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$151_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11950' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11951' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$152_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11952' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11953' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$153_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11954' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11955' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$154_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
  created $dff cell `$procdff$11956' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11957' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11958' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11959' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11960' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11961' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11962' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11963' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11964' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11965' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11966' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11967' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11968' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11969' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11970' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11971' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11972' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11973' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11974' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11975' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11976' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11977' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11978' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11979' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11980' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$13_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11981' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$13_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11982' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:170$14_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11983' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:170$14_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11984' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$15_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11985' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:172$15_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11986' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:207$16_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11987' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:207$16_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
  created $dff cell `$procdff$11988' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
  created $dff cell `$procdff$11989' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
  created $dff cell `$procdff$11990' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
  created $dff cell `$procdff$11991' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
  created $dff cell `$procdff$11992' with positive edge clock.

11.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

11.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `store_buffer.$proc$store_buffer.v:234$917'.
Removing empty process `store_buffer.$proc$store_buffer.v:220$915'.
Found and cleaned up 23 empty switches in `\store_buffer.$proc$store_buffer.v:166$880'.
Removing empty process `store_buffer.$proc$store_buffer.v:166$880'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:142$835'.
Removing empty process `store_buffer.$proc$store_buffer.v:142$835'.
Removing empty process `store_buffer.$proc$store_buffer.v:141$834'.
Removing empty process `store_buffer.$proc$store_buffer.v:138$828'.
Removing empty process `store_buffer.$proc$store_buffer.v:135$822'.
Removing empty process `store_buffer.$proc$store_buffer.v:132$816'.
Removing empty process `store_buffer.$proc$store_buffer.v:129$810'.
Removing empty process `store_buffer.$proc$store_buffer.v:126$804'.
Removing empty process `store_buffer.$proc$store_buffer.v:123$803'.
Removing empty process `store_buffer.$proc$store_buffer.v:120$802'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:85$697'.
Removing empty process `store_buffer.$proc$store_buffer.v:85$697'.
Found and cleaned up 1 empty switch in `\store_unit.$proc$store_unit.v:0$661'.
Removing empty process `store_unit.$proc$store_unit.v:0$661'.
Removing empty process `store_unit.$proc$store_unit.v:271$659'.
Found and cleaned up 3 empty switches in `\store_unit.$proc$store_unit.v:196$643'.
Removing empty process `store_unit.$proc$store_unit.v:196$643'.
Found and cleaned up 12 empty switches in `\store_unit.$proc$store_unit.v:99$632'.
Removing empty process `store_unit.$proc$store_unit.v:99$632'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$626'.
Found and cleaned up 1 empty switch in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$625'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$625'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$599'.
Found and cleaned up 5 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$589'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$589'.
Found and cleaned up 23 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$565'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$558'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$557'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$556'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$555'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$554'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$553'.
Removing empty process `shift_reg.$proc$shift_reg.v:19$550'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:79$548'.
Found and cleaned up 1 empty switch in `\lsu_bypass.$proc$lsu_bypass.v:73$544'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:73$544'.
Found and cleaned up 5 empty switches in `\lsu_bypass.$proc$lsu_bypass.v:41$496'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:41$496'.
Found and cleaned up 4 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$474'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$474'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$469'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$469'.
Found and cleaned up 5 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$452'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$452'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$447'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$447'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:221$445'.
Found and cleaned up 11 empty switches in `\load_store_unit.$proc$load_store_unit.v:519$436'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:519$436'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:320$435'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:320$435'.
Found and cleaned up 10 empty switches in `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
Removing empty process `cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$403'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$155'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$137'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$135'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$133'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$131'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$129'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$127'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$125'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$35'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$17'.
Cleaned up 152 empty switches.

11.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_buffer.
<suppressed ~81 debug messages>
Optimizing module amo_buffer.
Optimizing module store_unit.
<suppressed ~28 debug messages>
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
<suppressed ~60 debug messages>
Optimizing module shift_reg.
Optimizing module lsu_bypass.
<suppressed ~1 debug messages>
Optimizing module load_store_unit.
<suppressed ~29 debug messages>
Optimizing module cva6_lsu_shim.
<suppressed ~55 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~4 debug messages>

11.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 855 unused cells and 4550 unused wires.
<suppressed ~981 debug messages>

11.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

11.7. Executing OPT pass (performing simple optimizations).

11.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.
<suppressed ~4 debug messages>

11.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~177 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Finding identical cells in module `\load_store_unit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\lsu_bypass'.
<suppressed ~36 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~114 debug messages>
Finding identical cells in module `\store_unit'.
<suppressed ~144 debug messages>
Removed a total of 3280 cells.

11.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1635.
    dead port 2/2 on $mux $procmux$1638.
    dead port 1/2 on $mux $procmux$1640.
    dead port 2/2 on $mux $procmux$1642.
    dead port 2/2 on $mux $procmux$1644.
    dead port 2/2 on $mux $procmux$1654.
    dead port 1/2 on $mux $procmux$1656.
    dead port 2/2 on $mux $procmux$1658.
    dead port 2/2 on $mux $procmux$1660.
    dead port 2/2 on $mux $procmux$1670.
    dead port 1/2 on $mux $procmux$1672.
    dead port 2/2 on $mux $procmux$1674.
    dead port 2/2 on $mux $procmux$1676.
    dead port 1/2 on $mux $procmux$1685.
    dead port 2/2 on $mux $procmux$1687.
    dead port 2/2 on $mux $procmux$1689.
    dead port 1/2 on $mux $procmux$1698.
    dead port 2/2 on $mux $procmux$1700.
    dead port 2/2 on $mux $procmux$1702.
    dead port 2/2 on $mux $procmux$1710.
    dead port 2/2 on $mux $procmux$1712.
    dead port 2/2 on $mux $procmux$1720.
    dead port 2/2 on $mux $procmux$1722.
    dead port 2/2 on $mux $procmux$1730.
    dead port 2/2 on $mux $procmux$1732.
    dead port 2/2 on $mux $procmux$1739.
    dead port 2/2 on $mux $procmux$1746.
    dead port 2/2 on $mux $procmux$1753.
    dead port 2/2 on $mux $procmux$1760.
    dead port 1/2 on $mux $procmux$1770.
    dead port 2/2 on $mux $procmux$1772.
    dead port 2/2 on $mux $procmux$1774.
    dead port 2/2 on $mux $procmux$1783.
    dead port 2/2 on $mux $procmux$1785.
    dead port 2/2 on $mux $procmux$1794.
    dead port 2/2 on $mux $procmux$1796.
    dead port 2/2 on $mux $procmux$1804.
    dead port 2/2 on $mux $procmux$1812.
    dead port 2/2 on $mux $procmux$1824.
    dead port 2/2 on $mux $procmux$1833.
    dead port 2/2 on $mux $procmux$1843.
    dead port 1/2 on $mux $procmux$1859.
    dead port 2/2 on $mux $procmux$1862.
    dead port 1/2 on $mux $procmux$1864.
    dead port 2/2 on $mux $procmux$1866.
    dead port 2/2 on $mux $procmux$1868.
    dead port 2/2 on $mux $procmux$1884.
    dead port 1/2 on $mux $procmux$1886.
    dead port 2/2 on $mux $procmux$1888.
    dead port 2/2 on $mux $procmux$1890.
    dead port 2/2 on $mux $procmux$1906.
    dead port 1/2 on $mux $procmux$1908.
    dead port 2/2 on $mux $procmux$1910.
    dead port 2/2 on $mux $procmux$1912.
    dead port 1/2 on $mux $procmux$1927.
    dead port 2/2 on $mux $procmux$1929.
    dead port 2/2 on $mux $procmux$1931.
    dead port 1/2 on $mux $procmux$1946.
    dead port 2/2 on $mux $procmux$1948.
    dead port 2/2 on $mux $procmux$1950.
    dead port 2/2 on $mux $procmux$1964.
    dead port 2/2 on $mux $procmux$1966.
    dead port 2/2 on $mux $procmux$1980.
    dead port 2/2 on $mux $procmux$1982.
    dead port 2/2 on $mux $procmux$1996.
    dead port 2/2 on $mux $procmux$1998.
    dead port 2/2 on $mux $procmux$2011.
    dead port 2/2 on $mux $procmux$2024.
    dead port 2/2 on $mux $procmux$2037.
    dead port 2/2 on $mux $procmux$2050.
    dead port 1/2 on $mux $procmux$1569.
    dead port 2/2 on $mux $procmux$1584.
    dead port 2/2 on $mux $procmux$1590.
    dead port 2/2 on $mux $procmux$1596.
    dead port 2/2 on $mux $procmux$1614.
    dead port 2/2 on $mux $procmux$2091.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$11333.
    dead port 2/2 on $mux $procmux$11335.
    dead port 1/2 on $mux $procmux$11338.
    dead port 2/2 on $mux $procmux$11344.
    dead port 1/2 on $mux $procmux$11347.
    dead port 2/2 on $mux $procmux$11353.
    dead port 1/2 on $mux $procmux$11356.
    dead port 2/2 on $mux $procmux$11362.
    dead port 1/2 on $mux $procmux$11365.
    dead port 2/2 on $mux $procmux$11383.
    dead port 2/2 on $mux $procmux$11385.
    dead port 1/2 on $mux $procmux$11388.
    dead port 2/2 on $mux $procmux$11394.
    dead port 1/2 on $mux $procmux$11397.
    dead port 2/2 on $mux $procmux$11403.
    dead port 1/2 on $mux $procmux$11406.
    dead port 2/2 on $mux $procmux$11412.
    dead port 1/2 on $mux $procmux$11415.
    dead port 1/2 on $mux $procmux$11432.
    dead port 1/2 on $mux $procmux$11438.
    dead port 1/2 on $mux $procmux$11444.
    dead port 1/2 on $mux $procmux$11450.
    dead port 1/2 on $mux $procmux$11468.
    dead port 1/2 on $mux $procmux$11474.
    dead port 1/2 on $mux $procmux$11480.
    dead port 1/2 on $mux $procmux$11486.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2400.
    dead port 1/2 on $mux $procmux$2403.
    dead port 1/2 on $mux $procmux$2406.
    dead port 2/2 on $mux $procmux$2409.
    dead port 1/2 on $mux $procmux$2430.
    dead port 1/2 on $mux $procmux$2433.
    dead port 2/2 on $mux $procmux$2436.
    dead port 1/2 on $mux $procmux$2454.
    dead port 2/2 on $mux $procmux$2457.
    dead port 1/2 on $mux $procmux$2463.
    dead port 2/2 on $mux $procmux$2466.
    dead port 1/2 on $mux $procmux$2481.
    dead port 1/2 on $mux $procmux$2484.
    dead port 2/2 on $mux $procmux$2487.
    dead port 1/2 on $mux $procmux$2493.
    dead port 1/2 on $mux $procmux$2496.
    dead port 2/2 on $mux $procmux$2499.
    dead port 1/2 on $mux $procmux$2505.
    dead port 2/2 on $mux $procmux$2508.
    dead port 1/2 on $mux $procmux$2514.
    dead port 2/2 on $mux $procmux$2517.
    dead port 1/2 on $mux $procmux$2523.
    dead port 2/2 on $mux $procmux$2526.
    dead port 2/2 on $mux $procmux$2530.
    dead port 2/2 on $mux $procmux$2533.
    dead port 2/2 on $mux $procmux$2535.
    dead port 2/2 on $mux $procmux$2538.
    dead port 2/2 on $mux $procmux$2542.
    dead port 2/2 on $mux $procmux$2545.
    dead port 2/2 on $mux $procmux$2547.
    dead port 2/2 on $mux $procmux$2550.
    dead port 2/2 on $mux $procmux$2554.
    dead port 2/2 on $mux $procmux$2557.
    dead port 2/2 on $mux $procmux$2559.
    dead port 2/2 on $mux $procmux$2562.
    dead port 2/2 on $mux $procmux$2580.
    dead port 2/2 on $mux $procmux$2583.
    dead port 2/2 on $mux $procmux$2589.
    dead port 2/2 on $mux $procmux$2592.
    dead port 2/2 on $mux $procmux$2598.
    dead port 2/2 on $mux $procmux$2601.
    dead port 2/2 on $mux $procmux$2625.
    dead port 2/2 on $mux $procmux$2628.
    dead port 2/2 on $mux $procmux$2646.
    dead port 2/2 on $mux $procmux$2652.
    dead port 2/2 on $mux $procmux$2658.
    dead port 2/2 on $mux $procmux$2664.
    dead port 2/2 on $mux $procmux$2670.
    dead port 2/2 on $mux $procmux$2682.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$2779: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$2757: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$3469: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$3386: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3187: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3109: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3034: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2875: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2849: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$5081.
    dead port 1/2 on $mux $procmux$5084.
    dead port 2/2 on $mux $procmux$5086.
    dead port 2/2 on $mux $procmux$5089.
    dead port 1/2 on $mux $procmux$5096.
    dead port 1/2 on $mux $procmux$5099.
    dead port 2/2 on $mux $procmux$5101.
    dead port 2/2 on $mux $procmux$5104.
    dead port 1/2 on $mux $procmux$5111.
    dead port 1/2 on $mux $procmux$5114.
    dead port 2/2 on $mux $procmux$5116.
    dead port 2/2 on $mux $procmux$5119.
    dead port 1/2 on $mux $procmux$5126.
    dead port 1/2 on $mux $procmux$5129.
    dead port 2/2 on $mux $procmux$5131.
    dead port 2/2 on $mux $procmux$5134.
    dead port 1/2 on $mux $procmux$5141.
    dead port 2/2 on $mux $procmux$7046.
    dead port 1/2 on $mux $procmux$7049.
    dead port 2/2 on $mux $procmux$7051.
    dead port 2/2 on $mux $procmux$7054.
    dead port 1/2 on $mux $procmux$5144.
    dead port 2/2 on $mux $procmux$5146.
    dead port 2/2 on $mux $procmux$5149.
    dead port 1/2 on $mux $procmux$5156.
    dead port 1/2 on $mux $procmux$5159.
    dead port 2/2 on $mux $procmux$5161.
    dead port 2/2 on $mux $procmux$5164.
    dead port 1/2 on $mux $procmux$5171.
    dead port 1/2 on $mux $procmux$5174.
    dead port 2/2 on $mux $procmux$5176.
    dead port 2/2 on $mux $procmux$5179.
    dead port 1/2 on $mux $procmux$5186.
    dead port 1/2 on $mux $procmux$5189.
    dead port 2/2 on $mux $procmux$5191.
    dead port 2/2 on $mux $procmux$5194.
    dead port 1/2 on $mux $procmux$5201.
    dead port 1/2 on $mux $procmux$5204.
    dead port 2/2 on $mux $procmux$5206.
    dead port 2/2 on $mux $procmux$5209.
    dead port 1/2 on $mux $procmux$5216.
    dead port 1/2 on $mux $procmux$5219.
    dead port 2/2 on $mux $procmux$5221.
    dead port 2/2 on $mux $procmux$5224.
    dead port 1/2 on $mux $procmux$5231.
    dead port 1/2 on $mux $procmux$5234.
    dead port 2/2 on $mux $procmux$5236.
    dead port 2/2 on $mux $procmux$7091.
    dead port 1/2 on $mux $procmux$7094.
    dead port 2/2 on $mux $procmux$7096.
    dead port 2/2 on $mux $procmux$7099.
    dead port 2/2 on $mux $procmux$5239.
    dead port 1/2 on $mux $procmux$5246.
    dead port 1/2 on $mux $procmux$5249.
    dead port 2/2 on $mux $procmux$5251.
    dead port 2/2 on $mux $procmux$5254.
    dead port 1/2 on $mux $procmux$5261.
    dead port 1/2 on $mux $procmux$5264.
    dead port 2/2 on $mux $procmux$5266.
    dead port 2/2 on $mux $procmux$5269.
    dead port 1/2 on $mux $procmux$5276.
    dead port 1/2 on $mux $procmux$5279.
    dead port 2/2 on $mux $procmux$5281.
    dead port 2/2 on $mux $procmux$5284.
    dead port 1/2 on $mux $procmux$5291.
    dead port 1/2 on $mux $procmux$5294.
    dead port 2/2 on $mux $procmux$5296.
    dead port 2/2 on $mux $procmux$5299.
    dead port 1/2 on $mux $procmux$5306.
    dead port 1/2 on $mux $procmux$5309.
    dead port 2/2 on $mux $procmux$5311.
    dead port 2/2 on $mux $procmux$5314.
    dead port 1/2 on $mux $procmux$5321.
    dead port 1/2 on $mux $procmux$5324.
    dead port 2/2 on $mux $procmux$5326.
    dead port 2/2 on $mux $procmux$5329.
    dead port 2/2 on $mux $procmux$7136.
    dead port 1/2 on $mux $procmux$7139.
    dead port 2/2 on $mux $procmux$7141.
    dead port 2/2 on $mux $procmux$7144.
    dead port 1/2 on $mux $procmux$5336.
    dead port 1/2 on $mux $procmux$5339.
    dead port 2/2 on $mux $procmux$5341.
    dead port 2/2 on $mux $procmux$5344.
    dead port 1/2 on $mux $procmux$5351.
    dead port 1/2 on $mux $procmux$5354.
    dead port 2/2 on $mux $procmux$5356.
    dead port 2/2 on $mux $procmux$5359.
    dead port 1/2 on $mux $procmux$5366.
    dead port 1/2 on $mux $procmux$5369.
    dead port 2/2 on $mux $procmux$5371.
    dead port 2/2 on $mux $procmux$5374.
    dead port 1/2 on $mux $procmux$5381.
    dead port 1/2 on $mux $procmux$5384.
    dead port 2/2 on $mux $procmux$5386.
    dead port 2/2 on $mux $procmux$5389.
    dead port 1/2 on $mux $procmux$5396.
    dead port 1/2 on $mux $procmux$5399.
    dead port 2/2 on $mux $procmux$5401.
    dead port 2/2 on $mux $procmux$5404.
    dead port 1/2 on $mux $procmux$5411.
    dead port 1/2 on $mux $procmux$5414.
    dead port 2/2 on $mux $procmux$5416.
    dead port 2/2 on $mux $procmux$5419.
    dead port 1/2 on $mux $procmux$5426.
    dead port 1/2 on $mux $procmux$5429.
    dead port 2/2 on $mux $procmux$7181.
    dead port 1/2 on $mux $procmux$7184.
    dead port 2/2 on $mux $procmux$7186.
    dead port 2/2 on $mux $procmux$7189.
    dead port 2/2 on $mux $procmux$7226.
    dead port 1/2 on $mux $procmux$7229.
    dead port 2/2 on $mux $procmux$7231.
    dead port 2/2 on $mux $procmux$7234.
    dead port 2/2 on $mux $procmux$5431.
    dead port 2/2 on $mux $procmux$5434.
    dead port 1/2 on $mux $procmux$5441.
    dead port 1/2 on $mux $procmux$5444.
    dead port 2/2 on $mux $procmux$5446.
    dead port 2/2 on $mux $procmux$5449.
    dead port 1/2 on $mux $procmux$5456.
    dead port 1/2 on $mux $procmux$5459.
    dead port 2/2 on $mux $procmux$5461.
    dead port 2/2 on $mux $procmux$5464.
    dead port 1/2 on $mux $procmux$5471.
    dead port 1/2 on $mux $procmux$5474.
    dead port 2/2 on $mux $procmux$5476.
    dead port 2/2 on $mux $procmux$5479.
    dead port 1/2 on $mux $procmux$5486.
    dead port 1/2 on $mux $procmux$5489.
    dead port 2/2 on $mux $procmux$5491.
    dead port 2/2 on $mux $procmux$5494.
    dead port 1/2 on $mux $procmux$5501.
    dead port 1/2 on $mux $procmux$5504.
    dead port 2/2 on $mux $procmux$5506.
    dead port 2/2 on $mux $procmux$5509.
    dead port 1/2 on $mux $procmux$5516.
    dead port 1/2 on $mux $procmux$5519.
    dead port 2/2 on $mux $procmux$5521.
    dead port 2/2 on $mux $procmux$5524.
    dead port 1/2 on $mux $procmux$7286.
    dead port 2/2 on $mux $procmux$7288.
    dead port 2/2 on $mux $procmux$7291.
    dead port 1/2 on $mux $procmux$7298.
    dead port 2/2 on $mux $procmux$7300.
    dead port 2/2 on $mux $procmux$7303.
    dead port 1/2 on $mux $procmux$7310.
    dead port 2/2 on $mux $procmux$7312.
    dead port 2/2 on $mux $procmux$7315.
    dead port 1/2 on $mux $procmux$7322.
    dead port 2/2 on $mux $procmux$7324.
    dead port 2/2 on $mux $procmux$7327.
    dead port 1/2 on $mux $procmux$7334.
    dead port 2/2 on $mux $procmux$7336.
    dead port 2/2 on $mux $procmux$7339.
    dead port 1/2 on $mux $procmux$7346.
    dead port 2/2 on $mux $procmux$7348.
    dead port 2/2 on $mux $procmux$7351.
    dead port 1/2 on $mux $procmux$7358.
    dead port 2/2 on $mux $procmux$7360.
    dead port 2/2 on $mux $procmux$7363.
    dead port 1/2 on $mux $procmux$7370.
    dead port 2/2 on $mux $procmux$7372.
    dead port 2/2 on $mux $procmux$7375.
    dead port 1/2 on $mux $procmux$7382.
    dead port 2/2 on $mux $procmux$7384.
    dead port 2/2 on $mux $procmux$7387.
    dead port 1/2 on $mux $procmux$7394.
    dead port 2/2 on $mux $procmux$7396.
    dead port 2/2 on $mux $procmux$7399.
    dead port 1/2 on $mux $procmux$7406.
    dead port 2/2 on $mux $procmux$7408.
    dead port 2/2 on $mux $procmux$7411.
    dead port 1/2 on $mux $procmux$7418.
    dead port 2/2 on $mux $procmux$7420.
    dead port 2/2 on $mux $procmux$7423.
    dead port 1/2 on $mux $procmux$7430.
    dead port 2/2 on $mux $procmux$7432.
    dead port 2/2 on $mux $procmux$7435.
    dead port 1/2 on $mux $procmux$7442.
    dead port 2/2 on $mux $procmux$7444.
    dead port 2/2 on $mux $procmux$7447.
    dead port 1/2 on $mux $procmux$7454.
    dead port 2/2 on $mux $procmux$7456.
    dead port 2/2 on $mux $procmux$7459.
    dead port 1/2 on $mux $procmux$7466.
    dead port 2/2 on $mux $procmux$7468.
    dead port 2/2 on $mux $procmux$7471.
    dead port 1/2 on $mux $procmux$7478.
    dead port 2/2 on $mux $procmux$7480.
    dead port 2/2 on $mux $procmux$7483.
    dead port 1/2 on $mux $procmux$7490.
    dead port 2/2 on $mux $procmux$7492.
    dead port 2/2 on $mux $procmux$7495.
    dead port 1/2 on $mux $procmux$7502.
    dead port 2/2 on $mux $procmux$7504.
    dead port 2/2 on $mux $procmux$7507.
    dead port 1/2 on $mux $procmux$7514.
    dead port 2/2 on $mux $procmux$7516.
    dead port 2/2 on $mux $procmux$7519.
    dead port 1/2 on $mux $procmux$7526.
    dead port 2/2 on $mux $procmux$7528.
    dead port 2/2 on $mux $procmux$7531.
    dead port 1/2 on $mux $procmux$7538.
    dead port 2/2 on $mux $procmux$7540.
    dead port 2/2 on $mux $procmux$7543.
    dead port 1/2 on $mux $procmux$7550.
    dead port 2/2 on $mux $procmux$7552.
    dead port 2/2 on $mux $procmux$7555.
    dead port 1/2 on $mux $procmux$7562.
    dead port 2/2 on $mux $procmux$7564.
    dead port 2/2 on $mux $procmux$7567.
    dead port 1/2 on $mux $procmux$7574.
    dead port 2/2 on $mux $procmux$7576.
    dead port 2/2 on $mux $procmux$7579.
    dead port 1/2 on $mux $procmux$7586.
    dead port 2/2 on $mux $procmux$7588.
    dead port 2/2 on $mux $procmux$7591.
    dead port 1/2 on $mux $procmux$7598.
    dead port 2/2 on $mux $procmux$7600.
    dead port 2/2 on $mux $procmux$7603.
    dead port 1/2 on $mux $procmux$7610.
    dead port 2/2 on $mux $procmux$7612.
    dead port 2/2 on $mux $procmux$7615.
    dead port 1/2 on $mux $procmux$7622.
    dead port 2/2 on $mux $procmux$7624.
    dead port 2/2 on $mux $procmux$7627.
    dead port 1/2 on $mux $procmux$7634.
    dead port 2/2 on $mux $procmux$7636.
    dead port 2/2 on $mux $procmux$7639.
    dead port 1/2 on $mux $procmux$7646.
    dead port 2/2 on $mux $procmux$7648.
    dead port 2/2 on $mux $procmux$7651.
    dead port 1/2 on $mux $procmux$7658.
    dead port 2/2 on $mux $procmux$7660.
    dead port 2/2 on $mux $procmux$7663.
    dead port 1/2 on $mux $procmux$7670.
    dead port 2/2 on $mux $procmux$7672.
    dead port 2/2 on $mux $procmux$7675.
    dead port 1/2 on $mux $procmux$7682.
    dead port 2/2 on $mux $procmux$7684.
    dead port 2/2 on $mux $procmux$7687.
    dead port 1/2 on $mux $procmux$7694.
    dead port 2/2 on $mux $procmux$7696.
    dead port 2/2 on $mux $procmux$7699.
    dead port 1/2 on $mux $procmux$7754.
    dead port 2/2 on $mux $procmux$7756.
    dead port 2/2 on $mux $procmux$7759.
    dead port 2/2 on $mux $procmux$8024.
    dead port 2/2 on $mux $procmux$8026.
    dead port 2/2 on $mux $procmux$8029.
    dead port 1/2 on $mux $procmux$5531.
    dead port 1/2 on $mux $procmux$5534.
    dead port 2/2 on $mux $procmux$5536.
    dead port 2/2 on $mux $procmux$5539.
    dead port 1/2 on $mux $procmux$5546.
    dead port 1/2 on $mux $procmux$5549.
    dead port 2/2 on $mux $procmux$5551.
    dead port 2/2 on $mux $procmux$5554.
    dead port 2/2 on $mux $procmux$10696.
    dead port 2/2 on $mux $procmux$10702.
    dead port 2/2 on $mux $procmux$10708.
    dead port 2/2 on $mux $procmux$10714.
    dead port 2/2 on $mux $procmux$10720.
    dead port 2/2 on $mux $procmux$10726.
    dead port 2/2 on $mux $procmux$10732.
    dead port 2/2 on $mux $procmux$10738.
    dead port 2/2 on $mux $procmux$10744.
    dead port 2/2 on $mux $procmux$10750.
    dead port 2/2 on $mux $procmux$8066.
    dead port 2/2 on $mux $procmux$8068.
    dead port 2/2 on $mux $procmux$8071.
    dead port 2/2 on $mux $procmux$10756.
    dead port 2/2 on $mux $procmux$3944.
    dead port 1/2 on $mux $procmux$3947.
    dead port 1/2 on $mux $procmux$3950.
    dead port 2/2 on $mux $procmux$3952.
    dead port 2/2 on $mux $procmux$3955.
    dead port 2/2 on $mux $procmux$10762.
    dead port 2/2 on $mux $procmux$10768.
    dead port 2/2 on $mux $procmux$5786.
    dead port 1/2 on $mux $procmux$5789.
    dead port 2/2 on $mux $procmux$5791.
    dead port 2/2 on $mux $procmux$5794.
    dead port 2/2 on $mux $procmux$10774.
    dead port 2/2 on $mux $procmux$10780.
    dead port 2/2 on $mux $procmux$10786.
    dead port 2/2 on $mux $procmux$10792.
    dead port 2/2 on $mux $procmux$10798.
    dead port 2/2 on $mux $procmux$10804.
    dead port 2/2 on $mux $procmux$10918.
    dead port 2/2 on $mux $procmux$8108.
    dead port 2/2 on $mux $procmux$8110.
    dead port 2/2 on $mux $procmux$8113.
    dead port 2/2 on $mux $procmux$10924.
    dead port 2/2 on $mux $procmux$10930.
    dead port 2/2 on $mux $procmux$10948.
    dead port 2/2 on $mux $procmux$10966.
    dead port 2/2 on $mux $procmux$10972.
    dead port 2/2 on $mux $procmux$3992.
    dead port 1/2 on $mux $procmux$3995.
    dead port 1/2 on $mux $procmux$3998.
    dead port 2/2 on $mux $procmux$4000.
    dead port 2/2 on $mux $procmux$5831.
    dead port 1/2 on $mux $procmux$5834.
    dead port 2/2 on $mux $procmux$5836.
    dead port 2/2 on $mux $procmux$5839.
    dead port 2/2 on $mux $procmux$4003.
    dead port 2/2 on $mux $procmux$10978.
    dead port 2/2 on $mux $procmux$10984.
    dead port 2/2 on $mux $procmux$8150.
    dead port 2/2 on $mux $procmux$8152.
    dead port 2/2 on $mux $procmux$8155.
    dead port 2/2 on $mux $procmux$5876.
    dead port 1/2 on $mux $procmux$5879.
    dead port 2/2 on $mux $procmux$5881.
    dead port 2/2 on $mux $procmux$5884.
    dead port 2/2 on $mux $procmux$4040.
    dead port 1/2 on $mux $procmux$4043.
    dead port 1/2 on $mux $procmux$4046.
    dead port 2/2 on $mux $procmux$4048.
    dead port 2/2 on $mux $procmux$8192.
    dead port 2/2 on $mux $procmux$8194.
    dead port 2/2 on $mux $procmux$8197.
    dead port 2/2 on $mux $procmux$4051.
    dead port 2/2 on $mux $procmux$5921.
    dead port 1/2 on $mux $procmux$5924.
    dead port 2/2 on $mux $procmux$5926.
    dead port 2/2 on $mux $procmux$5929.
    dead port 2/2 on $mux $procmux$8234.
    dead port 2/2 on $mux $procmux$8236.
    dead port 2/2 on $mux $procmux$8239.
    dead port 2/2 on $mux $procmux$4088.
    dead port 1/2 on $mux $procmux$4091.
    dead port 1/2 on $mux $procmux$4094.
    dead port 2/2 on $mux $procmux$4096.
    dead port 2/2 on $mux $procmux$4099.
    dead port 2/2 on $mux $procmux$5966.
    dead port 2/2 on $mux $procmux$8276.
    dead port 2/2 on $mux $procmux$8278.
    dead port 2/2 on $mux $procmux$8281.
    dead port 1/2 on $mux $procmux$5969.
    dead port 2/2 on $mux $procmux$5971.
    dead port 2/2 on $mux $procmux$5974.
    dead port 1/2 on $mux $procmux$2730.
    dead port 2/2 on $mux $procmux$2733.
    dead port 2/2 on $mux $procmux$2739.
    dead port 2/2 on $mux $procmux$2745.
    dead port 1/2 on $mux $procmux$2751.
    dead port 2/2 on $mux $procmux$2754.
    dead port 1/2 on $mux $procmux$2760.
    dead port 2/2 on $mux $procmux$2763.
    dead port 2/2 on $mux $procmux$4136.
    dead port 1/2 on $mux $procmux$4139.
    dead port 1/2 on $mux $procmux$4142.
    dead port 2/2 on $mux $procmux$4144.
    dead port 2/2 on $mux $procmux$4147.
    dead port 1/2 on $mux $procmux$2770.
    dead port 2/2 on $mux $procmux$2772.
    dead port 2/2 on $mux $procmux$2775.
    dead port 1/2 on $mux $procmux$2782.
    dead port 2/2 on $mux $procmux$2784.
    dead port 2/2 on $mux $procmux$2787.
    dead port 2/2 on $mux $procmux$8318.
    dead port 2/2 on $mux $procmux$8320.
    dead port 2/2 on $mux $procmux$8323.
    dead port 1/2 on $mux $procmux$2794.
    dead port 2/2 on $mux $procmux$2796.
    dead port 2/2 on $mux $procmux$2799.
    dead port 2/2 on $mux $procmux$6011.
    dead port 1/2 on $mux $procmux$6014.
    dead port 2/2 on $mux $procmux$6016.
    dead port 2/2 on $mux $procmux$6019.
    dead port 2/2 on $mux $procmux$2805.
    dead port 2/2 on $mux $procmux$2808.
    dead port 2/2 on $mux $procmux$2814.
    dead port 2/2 on $mux $procmux$2817.
    dead port 2/2 on $mux $procmux$2823.
    dead port 2/2 on $mux $procmux$2826.
    dead port 2/2 on $mux $procmux$2832.
    dead port 2/2 on $mux $procmux$2838.
    dead port 2/2 on $mux $procmux$2844.
    dead port 2/2 on $mux $procmux$2851.
    dead port 1/2 on $mux $procmux$2854.
    dead port 1/2 on $mux $procmux$2857.
    dead port 1/2 on $mux $procmux$2860.
    dead port 1/2 on $mux $procmux$2863.
    dead port 2/2 on $mux $procmux$4184.
    dead port 1/2 on $mux $procmux$4187.
    dead port 1/2 on $mux $procmux$4190.
    dead port 2/2 on $mux $procmux$8360.
    dead port 2/2 on $mux $procmux$8362.
    dead port 2/2 on $mux $procmux$8365.
    dead port 2/2 on $mux $procmux$4192.
    dead port 2/2 on $mux $procmux$4195.
    dead port 1/2 on $mux $procmux$2865.
    dead port 1/2 on $mux $procmux$2868.
    dead port 2/2 on $mux $procmux$2871.
    dead port 1/2 on $mux $procmux$2878.
    dead port 1/2 on $mux $procmux$2881.
    dead port 2/2 on $mux $procmux$6056.
    dead port 1/2 on $mux $procmux$6059.
    dead port 2/2 on $mux $procmux$6061.
    dead port 2/2 on $mux $procmux$6064.
    dead port 1/2 on $mux $procmux$2884.
    dead port 1/2 on $mux $procmux$2887.
    dead port 1/2 on $mux $procmux$2889.
    dead port 1/2 on $mux $procmux$2892.
    dead port 2/2 on $mux $procmux$2895.
    dead port 1/2 on $mux $procmux$2902.
    dead port 1/2 on $mux $procmux$2905.
    dead port 1/2 on $mux $procmux$2908.
    dead port 1/2 on $mux $procmux$2911.
    dead port 1/2 on $mux $procmux$2913.
    dead port 1/2 on $mux $procmux$2916.
    dead port 2/2 on $mux $procmux$2919.
    dead port 2/2 on $mux $procmux$2926.
    dead port 1/2 on $mux $procmux$2929.
    dead port 1/2 on $mux $procmux$2932.
    dead port 1/2 on $mux $procmux$2935.
    dead port 2/2 on $mux $procmux$8402.
    dead port 2/2 on $mux $procmux$8404.
    dead port 2/2 on $mux $procmux$8407.
    dead port 1/2 on $mux $procmux$2937.
    dead port 1/2 on $mux $procmux$2940.
    dead port 2/2 on $mux $procmux$2943.
    dead port 2/2 on $mux $procmux$2950.
    dead port 1/2 on $mux $procmux$2953.
    dead port 1/2 on $mux $procmux$2956.
    dead port 1/2 on $mux $procmux$2959.
    dead port 2/2 on $mux $procmux$4232.
    dead port 1/2 on $mux $procmux$4235.
    dead port 1/2 on $mux $procmux$4238.
    dead port 2/2 on $mux $procmux$4240.
    dead port 2/2 on $mux $procmux$4243.
    dead port 2/2 on $mux $procmux$6101.
    dead port 1/2 on $mux $procmux$6104.
    dead port 2/2 on $mux $procmux$6106.
    dead port 2/2 on $mux $procmux$6109.
    dead port 1/2 on $mux $procmux$2961.
    dead port 1/2 on $mux $procmux$2964.
    dead port 2/2 on $mux $procmux$2967.
    dead port 1/2 on $mux $procmux$2974.
    dead port 1/2 on $mux $procmux$2977.
    dead port 1/2 on $mux $procmux$2980.
    dead port 1/2 on $mux $procmux$2982.
    dead port 1/2 on $mux $procmux$2985.
    dead port 2/2 on $mux $procmux$2988.
    dead port 1/2 on $mux $procmux$2995.
    dead port 1/2 on $mux $procmux$2998.
    dead port 2/2 on $mux $procmux$8444.
    dead port 2/2 on $mux $procmux$8446.
    dead port 2/2 on $mux $procmux$8449.
    dead port 1/2 on $mux $procmux$3001.
    dead port 1/2 on $mux $procmux$3003.
    dead port 1/2 on $mux $procmux$3006.
    dead port 2/2 on $mux $procmux$3009.
    dead port 1/2 on $mux $procmux$3016.
    dead port 1/2 on $mux $procmux$3019.
    dead port 1/2 on $mux $procmux$3022.
    dead port 1/2 on $mux $procmux$3024.
    dead port 1/2 on $mux $procmux$3027.
    dead port 2/2 on $mux $procmux$3030.
    dead port 1/2 on $mux $procmux$3037.
    dead port 1/2 on $mux $procmux$3040.
    dead port 1/2 on $mux $procmux$3043.
    dead port 1/2 on $mux $procmux$3045.
    dead port 1/2 on $mux $procmux$3048.
    dead port 2/2 on $mux $procmux$3051.
    dead port 2/2 on $mux $procmux$6146.
    dead port 1/2 on $mux $procmux$6149.
    dead port 2/2 on $mux $procmux$6151.
    dead port 2/2 on $mux $procmux$6154.
    dead port 2/2 on $mux $procmux$4280.
    dead port 1/2 on $mux $procmux$4283.
    dead port 1/2 on $mux $procmux$4286.
    dead port 2/2 on $mux $procmux$4288.
    dead port 2/2 on $mux $procmux$4291.
    dead port 1/2 on $mux $procmux$3058.
    dead port 1/2 on $mux $procmux$3061.
    dead port 2/2 on $mux $procmux$8486.
    dead port 2/2 on $mux $procmux$8488.
    dead port 2/2 on $mux $procmux$8491.
    dead port 1/2 on $mux $procmux$3063.
    dead port 1/2 on $mux $procmux$3066.
    dead port 2/2 on $mux $procmux$3069.
    dead port 1/2 on $mux $procmux$3076.
    dead port 1/2 on $mux $procmux$3079.
    dead port 1/2 on $mux $procmux$3081.
    dead port 1/2 on $mux $procmux$3084.
    dead port 2/2 on $mux $procmux$3087.
    dead port 1/2 on $mux $procmux$3094.
    dead port 1/2 on $mux $procmux$3097.
    dead port 1/2 on $mux $procmux$3099.
    dead port 1/2 on $mux $procmux$3102.
    dead port 2/2 on $mux $procmux$3105.
    dead port 1/2 on $mux $procmux$3112.
    dead port 1/2 on $mux $procmux$3115.
    dead port 1/2 on $mux $procmux$3117.
    dead port 1/2 on $mux $procmux$3120.
    dead port 2/2 on $mux $procmux$3123.
    dead port 1/2 on $mux $procmux$3130.
    dead port 1/2 on $mux $procmux$3132.
    dead port 2/2 on $mux $procmux$6191.
    dead port 1/2 on $mux $procmux$6194.
    dead port 2/2 on $mux $procmux$6196.
    dead port 2/2 on $mux $procmux$6199.
    dead port 1/2 on $mux $procmux$3135.
    dead port 2/2 on $mux $procmux$3138.
    dead port 2/2 on $mux $procmux$8528.
    dead port 2/2 on $mux $procmux$8530.
    dead port 2/2 on $mux $procmux$8533.
    dead port 1/2 on $mux $procmux$3145.
    dead port 1/2 on $mux $procmux$3147.
    dead port 1/2 on $mux $procmux$3150.
    dead port 2/2 on $mux $procmux$4328.
    dead port 1/2 on $mux $procmux$4331.
    dead port 1/2 on $mux $procmux$4334.
    dead port 2/2 on $mux $procmux$4336.
    dead port 2/2 on $mux $procmux$4339.
    dead port 2/2 on $mux $procmux$3153.
    dead port 1/2 on $mux $procmux$3160.
    dead port 1/2 on $mux $procmux$3162.
    dead port 1/2 on $mux $procmux$3165.
    dead port 2/2 on $mux $procmux$3168.
    dead port 1/2 on $mux $procmux$3175.
    dead port 1/2 on $mux $procmux$3177.
    dead port 1/2 on $mux $procmux$3180.
    dead port 2/2 on $mux $procmux$3183.
    dead port 1/2 on $mux $procmux$3190.
    dead port 1/2 on $mux $procmux$3192.
    dead port 1/2 on $mux $procmux$3195.
    dead port 2/2 on $mux $procmux$3198.
    dead port 2/2 on $mux $procmux$3219.
    dead port 1/2 on $mux $procmux$3221.
    dead port 1/2 on $mux $procmux$3224.
    dead port 2/2 on $mux $procmux$3227.
    dead port 2/2 on $mux $procmux$6236.
    dead port 1/2 on $mux $procmux$6239.
    dead port 2/2 on $mux $procmux$6241.
    dead port 2/2 on $mux $procmux$8570.
    dead port 2/2 on $mux $procmux$8572.
    dead port 2/2 on $mux $procmux$8575.
    dead port 2/2 on $mux $procmux$6244.
    dead port 2/2 on $mux $procmux$3234.
    dead port 1/2 on $mux $procmux$3236.
    dead port 1/2 on $mux $procmux$3239.
    dead port 2/2 on $mux $procmux$3242.
    dead port 2/2 on $mux $procmux$3248.
    dead port 1/2 on $mux $procmux$3250.
    dead port 1/2 on $mux $procmux$3253.
    dead port 2/2 on $mux $procmux$3256.
    dead port 2/2 on $mux $procmux$3263.
    dead port 1/2 on $mux $procmux$3265.
    dead port 2/2 on $mux $procmux$4376.
    dead port 1/2 on $mux $procmux$4379.
    dead port 1/2 on $mux $procmux$4382.
    dead port 2/2 on $mux $procmux$4384.
    dead port 2/2 on $mux $procmux$4387.
    dead port 1/2 on $mux $procmux$3268.
    dead port 2/2 on $mux $procmux$3271.
    dead port 2/2 on $mux $procmux$3278.
    dead port 1/2 on $mux $procmux$3280.
    dead port 1/2 on $mux $procmux$3283.
    dead port 2/2 on $mux $procmux$3286.
    dead port 1/2 on $mux $procmux$3292.
    dead port 1/2 on $mux $procmux$3295.
    dead port 2/2 on $mux $procmux$3298.
    dead port 2/2 on $mux $procmux$8612.
    dead port 2/2 on $mux $procmux$8614.
    dead port 2/2 on $mux $procmux$8617.
    dead port 1/2 on $mux $procmux$3304.
    dead port 1/2 on $mux $procmux$3307.
    dead port 2/2 on $mux $procmux$6281.
    dead port 1/2 on $mux $procmux$6284.
    dead port 2/2 on $mux $procmux$6286.
    dead port 2/2 on $mux $procmux$6289.
    dead port 2/2 on $mux $procmux$3310.
    dead port 1/2 on $mux $procmux$3316.
    dead port 1/2 on $mux $procmux$3319.
    dead port 2/2 on $mux $procmux$3322.
    dead port 1/2 on $mux $procmux$3340.
    dead port 1/2 on $mux $procmux$3343.
    dead port 2/2 on $mux $procmux$3346.
    dead port 1/2 on $mux $procmux$3352.
    dead port 1/2 on $mux $procmux$3355.
    dead port 2/2 on $mux $procmux$3358.
    dead port 1/2 on $mux $procmux$3364.
    dead port 1/2 on $mux $procmux$3367.
    dead port 2/2 on $mux $procmux$3370.
    dead port 2/2 on $mux $procmux$4424.
    dead port 1/2 on $mux $procmux$4427.
    dead port 1/2 on $mux $procmux$4430.
    dead port 2/2 on $mux $procmux$4432.
    dead port 2/2 on $mux $procmux$4435.
    dead port 1/2 on $mux $procmux$3376.
    dead port 2/2 on $mux $procmux$8654.
    dead port 2/2 on $mux $procmux$8656.
    dead port 2/2 on $mux $procmux$8659.
    dead port 1/2 on $mux $procmux$3379.
    dead port 2/2 on $mux $procmux$3382.
    dead port 1/2 on $mux $procmux$3388.
    dead port 1/2 on $mux $procmux$3391.
    dead port 2/2 on $mux $procmux$3394.
    dead port 2/2 on $mux $procmux$6326.
    dead port 1/2 on $mux $procmux$6329.
    dead port 2/2 on $mux $procmux$6331.
    dead port 2/2 on $mux $procmux$6334.
    dead port 1/2 on $mux $procmux$3400.
    dead port 2/2 on $mux $procmux$3403.
    dead port 1/2 on $mux $procmux$3409.
    dead port 2/2 on $mux $procmux$3412.
    dead port 1/2 on $mux $procmux$3427.
    dead port 2/2 on $mux $procmux$3430.
    dead port 1/2 on $mux $procmux$3436.
    dead port 2/2 on $mux $procmux$3439.
    dead port 1/2 on $mux $procmux$3445.
    dead port 2/2 on $mux $procmux$3448.
    dead port 1/2 on $mux $procmux$3454.
    dead port 2/2 on $mux $procmux$3457.
    dead port 1/2 on $mux $procmux$3463.
    dead port 2/2 on $mux $procmux$3466.
    dead port 2/2 on $mux $procmux$8696.
    dead port 2/2 on $mux $procmux$8698.
    dead port 2/2 on $mux $procmux$8701.
    dead port 1/2 on $mux $procmux$3472.
    dead port 2/2 on $mux $procmux$3475.
    dead port 2/2 on $mux $procmux$4472.
    dead port 1/2 on $mux $procmux$4475.
    dead port 1/2 on $mux $procmux$4478.
    dead port 2/2 on $mux $procmux$4480.
    dead port 2/2 on $mux $procmux$4483.
    dead port 2/2 on $mux $procmux$6371.
    dead port 1/2 on $mux $procmux$6374.
    dead port 2/2 on $mux $procmux$6376.
    dead port 2/2 on $mux $procmux$6379.
    dead port 2/2 on $mux $procmux$8738.
    dead port 2/2 on $mux $procmux$8740.
    dead port 2/2 on $mux $procmux$8743.
    dead port 2/2 on $mux $procmux$4520.
    dead port 1/2 on $mux $procmux$4523.
    dead port 2/2 on $mux $procmux$6416.
    dead port 1/2 on $mux $procmux$6419.
    dead port 2/2 on $mux $procmux$6421.
    dead port 2/2 on $mux $procmux$6424.
    dead port 1/2 on $mux $procmux$4526.
    dead port 2/2 on $mux $procmux$4528.
    dead port 2/2 on $mux $procmux$4531.
    dead port 2/2 on $mux $procmux$3512.
    dead port 1/2 on $mux $procmux$3515.
    dead port 1/2 on $mux $procmux$3518.
    dead port 2/2 on $mux $procmux$3520.
    dead port 2/2 on $mux $procmux$3523.
    dead port 2/2 on $mux $procmux$8780.
    dead port 2/2 on $mux $procmux$8782.
    dead port 2/2 on $mux $procmux$8785.
    dead port 2/2 on $mux $procmux$6461.
    dead port 1/2 on $mux $procmux$6464.
    dead port 2/2 on $mux $procmux$6466.
    dead port 2/2 on $mux $procmux$6469.
    dead port 2/2 on $mux $procmux$4568.
    dead port 2/2 on $mux $procmux$8822.
    dead port 2/2 on $mux $procmux$8824.
    dead port 2/2 on $mux $procmux$8827.
    dead port 1/2 on $mux $procmux$4571.
    dead port 1/2 on $mux $procmux$4574.
    dead port 2/2 on $mux $procmux$4576.
    dead port 2/2 on $mux $procmux$4579.
    dead port 2/2 on $mux $procmux$3560.
    dead port 1/2 on $mux $procmux$3563.
    dead port 1/2 on $mux $procmux$3566.
    dead port 2/2 on $mux $procmux$3568.
    dead port 2/2 on $mux $procmux$3571.
    dead port 2/2 on $mux $procmux$6506.
    dead port 1/2 on $mux $procmux$6509.
    dead port 2/2 on $mux $procmux$6511.
    dead port 2/2 on $mux $procmux$6514.
    dead port 2/2 on $mux $procmux$8864.
    dead port 2/2 on $mux $procmux$8866.
    dead port 2/2 on $mux $procmux$8869.
    dead port 2/2 on $mux $procmux$4616.
    dead port 1/2 on $mux $procmux$4619.
    dead port 1/2 on $mux $procmux$4622.
    dead port 2/2 on $mux $procmux$4624.
    dead port 2/2 on $mux $procmux$4627.
    dead port 2/2 on $mux $procmux$3608.
    dead port 1/2 on $mux $procmux$3611.
    dead port 1/2 on $mux $procmux$3614.
    dead port 2/2 on $mux $procmux$3616.
    dead port 2/2 on $mux $procmux$8906.
    dead port 2/2 on $mux $procmux$8908.
    dead port 2/2 on $mux $procmux$8911.
    dead port 2/2 on $mux $procmux$6551.
    dead port 1/2 on $mux $procmux$6554.
    dead port 2/2 on $mux $procmux$6556.
    dead port 2/2 on $mux $procmux$6559.
    dead port 2/2 on $mux $procmux$3619.
    dead port 2/2 on $mux $procmux$4664.
    dead port 1/2 on $mux $procmux$4667.
    dead port 1/2 on $mux $procmux$4670.
    dead port 2/2 on $mux $procmux$4672.
    dead port 2/2 on $mux $procmux$4675.
    dead port 2/2 on $mux $procmux$8948.
    dead port 2/2 on $mux $procmux$8950.
    dead port 2/2 on $mux $procmux$8953.
    dead port 2/2 on $mux $procmux$6596.
    dead port 1/2 on $mux $procmux$6599.
    dead port 2/2 on $mux $procmux$6601.
    dead port 2/2 on $mux $procmux$6604.
    dead port 2/2 on $mux $procmux$3656.
    dead port 1/2 on $mux $procmux$3659.
    dead port 1/2 on $mux $procmux$3662.
    dead port 2/2 on $mux $procmux$3664.
    dead port 2/2 on $mux $procmux$3667.
    dead port 2/2 on $mux $procmux$8990.
    dead port 2/2 on $mux $procmux$8992.
    dead port 2/2 on $mux $procmux$8995.
    dead port 2/2 on $mux $procmux$4712.
    dead port 1/2 on $mux $procmux$4715.
    dead port 1/2 on $mux $procmux$4718.
    dead port 2/2 on $mux $procmux$4720.
    dead port 2/2 on $mux $procmux$4723.
    dead port 2/2 on $mux $procmux$6641.
    dead port 1/2 on $mux $procmux$6644.
    dead port 2/2 on $mux $procmux$6646.
    dead port 2/2 on $mux $procmux$6649.
    dead port 2/2 on $mux $procmux$10000.
    dead port 2/2 on $mux $procmux$10006.
    dead port 2/2 on $mux $procmux$10009.
    dead port 2/2 on $mux $procmux$10015.
    dead port 2/2 on $mux $procmux$10018.
    dead port 2/2 on $mux $procmux$10024.
    dead port 2/2 on $mux $procmux$10027.
    dead port 2/2 on $mux $procmux$10033.
    dead port 2/2 on $mux $procmux$10036.
    dead port 2/2 on $mux $procmux$9032.
    dead port 2/2 on $mux $procmux$9034.
    dead port 2/2 on $mux $procmux$9037.
    dead port 2/2 on $mux $procmux$10042.
    dead port 2/2 on $mux $procmux$10045.
    dead port 2/2 on $mux $procmux$3704.
    dead port 1/2 on $mux $procmux$3707.
    dead port 1/2 on $mux $procmux$3710.
    dead port 2/2 on $mux $procmux$3712.
    dead port 2/2 on $mux $procmux$3715.
    dead port 2/2 on $mux $procmux$10051.
    dead port 2/2 on $mux $procmux$4760.
    dead port 1/2 on $mux $procmux$4763.
    dead port 1/2 on $mux $procmux$4766.
    dead port 2/2 on $mux $procmux$4768.
    dead port 2/2 on $mux $procmux$6686.
    dead port 1/2 on $mux $procmux$6689.
    dead port 2/2 on $mux $procmux$6691.
    dead port 2/2 on $mux $procmux$6694.
    dead port 2/2 on $mux $procmux$4771.
    dead port 2/2 on $mux $procmux$10054.
    dead port 2/2 on $mux $procmux$10060.
    dead port 2/2 on $mux $procmux$10063.
    dead port 2/2 on $mux $procmux$10069.
    dead port 2/2 on $mux $procmux$10072.
    dead port 2/2 on $mux $procmux$10078.
    dead port 2/2 on $mux $procmux$10081.
    dead port 2/2 on $mux $procmux$9074.
    dead port 2/2 on $mux $procmux$9076.
    dead port 2/2 on $mux $procmux$9079.
    dead port 2/2 on $mux $procmux$10087.
    dead port 2/2 on $mux $procmux$10090.
    dead port 2/2 on $mux $procmux$10096.
    dead port 2/2 on $mux $procmux$10099.
    dead port 2/2 on $mux $procmux$10105.
    dead port 2/2 on $mux $procmux$10108.
    dead port 2/2 on $mux $procmux$10114.
    dead port 2/2 on $mux $procmux$10117.
    dead port 2/2 on $mux $procmux$10123.
    dead port 2/2 on $mux $procmux$10126.
    dead port 2/2 on $mux $procmux$10132.
    dead port 2/2 on $mux $procmux$10135.
    dead port 2/2 on $mux $procmux$10141.
    dead port 2/2 on $mux $procmux$6731.
    dead port 1/2 on $mux $procmux$6734.
    dead port 2/2 on $mux $procmux$6736.
    dead port 2/2 on $mux $procmux$6739.
    dead port 2/2 on $mux $procmux$3752.
    dead port 1/2 on $mux $procmux$3755.
    dead port 2/2 on $mux $procmux$4808.
    dead port 1/2 on $mux $procmux$4811.
    dead port 1/2 on $mux $procmux$4814.
    dead port 2/2 on $mux $procmux$4816.
    dead port 2/2 on $mux $procmux$4819.
    dead port 2/2 on $mux $procmux$9116.
    dead port 2/2 on $mux $procmux$9118.
    dead port 2/2 on $mux $procmux$9121.
    dead port 1/2 on $mux $procmux$3758.
    dead port 2/2 on $mux $procmux$3760.
    dead port 2/2 on $mux $procmux$3763.
    dead port 2/2 on $mux $procmux$10144.
    dead port 2/2 on $mux $procmux$10150.
    dead port 2/2 on $mux $procmux$10153.
    dead port 2/2 on $mux $procmux$10159.
    dead port 2/2 on $mux $procmux$10162.
    dead port 2/2 on $mux $procmux$10168.
    dead port 2/2 on $mux $procmux$10171.
    dead port 2/2 on $mux $procmux$10177.
    dead port 2/2 on $mux $procmux$10180.
    dead port 2/2 on $mux $procmux$10186.
    dead port 2/2 on $mux $procmux$10189.
    dead port 2/2 on $mux $procmux$10426.
    dead port 2/2 on $mux $procmux$10432.
    dead port 2/2 on $mux $procmux$6776.
    dead port 1/2 on $mux $procmux$6779.
    dead port 2/2 on $mux $procmux$6781.
    dead port 2/2 on $mux $procmux$6784.
    dead port 2/2 on $mux $procmux$10438.
    dead port 2/2 on $mux $procmux$9158.
    dead port 2/2 on $mux $procmux$9160.
    dead port 2/2 on $mux $procmux$9163.
    dead port 2/2 on $mux $procmux$10444.
    dead port 2/2 on $mux $procmux$10450.
    dead port 2/2 on $mux $procmux$10456.
    dead port 2/2 on $mux $procmux$4856.
    dead port 1/2 on $mux $procmux$4859.
    dead port 1/2 on $mux $procmux$4862.
    dead port 2/2 on $mux $procmux$4864.
    dead port 2/2 on $mux $procmux$4867.
    dead port 2/2 on $mux $procmux$10462.
    dead port 2/2 on $mux $procmux$10468.
    dead port 2/2 on $mux $procmux$3800.
    dead port 1/2 on $mux $procmux$3803.
    dead port 1/2 on $mux $procmux$3806.
    dead port 2/2 on $mux $procmux$3808.
    dead port 2/2 on $mux $procmux$3811.
    dead port 2/2 on $mux $procmux$10474.
    dead port 2/2 on $mux $procmux$10480.
    dead port 2/2 on $mux $procmux$10486.
    dead port 2/2 on $mux $procmux$10492.
    dead port 2/2 on $mux $procmux$6821.
    dead port 1/2 on $mux $procmux$6824.
    dead port 2/2 on $mux $procmux$9200.
    dead port 2/2 on $mux $procmux$9202.
    dead port 2/2 on $mux $procmux$9205.
    dead port 2/2 on $mux $procmux$6826.
    dead port 2/2 on $mux $procmux$6829.
    dead port 2/2 on $mux $procmux$10498.
    dead port 2/2 on $mux $procmux$10504.
    dead port 2/2 on $mux $procmux$10510.
    dead port 2/2 on $mux $procmux$10516.
    dead port 2/2 on $mux $procmux$10522.
    dead port 2/2 on $mux $procmux$10528.
    dead port 2/2 on $mux $procmux$10534.
    dead port 2/2 on $mux $procmux$4904.
    dead port 1/2 on $mux $procmux$4907.
    dead port 1/2 on $mux $procmux$4910.
    dead port 2/2 on $mux $procmux$4912.
    dead port 2/2 on $mux $procmux$4915.
    dead port 2/2 on $mux $procmux$10540.
    dead port 2/2 on $mux $procmux$10546.
    dead port 2/2 on $mux $procmux$10552.
    dead port 2/2 on $mux $procmux$10558.
    dead port 2/2 on $mux $procmux$9242.
    dead port 2/2 on $mux $procmux$9244.
    dead port 2/2 on $mux $procmux$9247.
    dead port 2/2 on $mux $procmux$10564.
    dead port 2/2 on $mux $procmux$3848.
    dead port 1/2 on $mux $procmux$3851.
    dead port 2/2 on $mux $procmux$6866.
    dead port 1/2 on $mux $procmux$6869.
    dead port 2/2 on $mux $procmux$6871.
    dead port 2/2 on $mux $procmux$6874.
    dead port 1/2 on $mux $procmux$3854.
    dead port 2/2 on $mux $procmux$3856.
    dead port 2/2 on $mux $procmux$3859.
    dead port 2/2 on $mux $procmux$10570.
    dead port 2/2 on $mux $procmux$10576.
    dead port 2/2 on $mux $procmux$10582.
    dead port 2/2 on $mux $procmux$10588.
    dead port 2/2 on $mux $procmux$10594.
    dead port 2/2 on $mux $procmux$10600.
    dead port 2/2 on $mux $procmux$10606.
    dead port 2/2 on $mux $procmux$10612.
    dead port 2/2 on $mux $procmux$4952.
    dead port 1/2 on $mux $procmux$4955.
    dead port 1/2 on $mux $procmux$4958.
    dead port 2/2 on $mux $procmux$4960.
    dead port 2/2 on $mux $procmux$9284.
    dead port 2/2 on $mux $procmux$9286.
    dead port 2/2 on $mux $procmux$9289.
    dead port 2/2 on $mux $procmux$4963.
    dead port 2/2 on $mux $procmux$10618.
    dead port 2/2 on $mux $procmux$10624.
    dead port 2/2 on $mux $procmux$10630.
    dead port 2/2 on $mux $procmux$6911.
    dead port 1/2 on $mux $procmux$6914.
    dead port 2/2 on $mux $procmux$6916.
    dead port 2/2 on $mux $procmux$6919.
    dead port 2/2 on $mux $procmux$10636.
    dead port 2/2 on $mux $procmux$10642.
    dead port 2/2 on $mux $procmux$10648.
    dead port 2/2 on $mux $procmux$10654.
    dead port 2/2 on $mux $procmux$10660.
    dead port 2/2 on $mux $procmux$3896.
    dead port 1/2 on $mux $procmux$3899.
    dead port 1/2 on $mux $procmux$3902.
    dead port 2/2 on $mux $procmux$3904.
    dead port 2/2 on $mux $procmux$3907.
    dead port 2/2 on $mux $procmux$10666.
    dead port 2/2 on $mux $procmux$9326.
    dead port 2/2 on $mux $procmux$9328.
    dead port 2/2 on $mux $procmux$9331.
    dead port 2/2 on $mux $procmux$10672.
    dead port 2/2 on $mux $procmux$10678.
    dead port 2/2 on $mux $procmux$10684.
    dead port 2/2 on $mux $procmux$10690.
    dead port 2/2 on $mux $procmux$5000.
    dead port 1/2 on $mux $procmux$5003.
    dead port 1/2 on $mux $procmux$5006.
    dead port 2/2 on $mux $procmux$5008.
    dead port 2/2 on $mux $procmux$5011.
    dead port 2/2 on $mux $procmux$6956.
    dead port 1/2 on $mux $procmux$6959.
    dead port 2/2 on $mux $procmux$6961.
    dead port 2/2 on $mux $procmux$6964.
    dead port 2/2 on $mux $procmux$9368.
    dead port 2/2 on $mux $procmux$9370.
    dead port 2/2 on $mux $procmux$9373.
    dead port 2/2 on $mux $procmux$7001.
    dead port 1/2 on $mux $procmux$7004.
    dead port 2/2 on $mux $procmux$7006.
    dead port 2/2 on $mux $procmux$7009.
    dead port 1/2 on $mux $procmux$5066.
    dead port 1/2 on $mux $procmux$5069.
    dead port 2/2 on $mux $procmux$5071.
    dead port 2/2 on $mux $procmux$9421.
    dead port 2/2 on $mux $procmux$9424.
    dead port 2/2 on $mux $procmux$9430.
    dead port 2/2 on $mux $procmux$9433.
    dead port 2/2 on $mux $procmux$9439.
    dead port 2/2 on $mux $procmux$9442.
    dead port 2/2 on $mux $procmux$9448.
    dead port 2/2 on $mux $procmux$9451.
    dead port 2/2 on $mux $procmux$9457.
    dead port 2/2 on $mux $procmux$9460.
    dead port 2/2 on $mux $procmux$9466.
    dead port 2/2 on $mux $procmux$9469.
    dead port 2/2 on $mux $procmux$9475.
    dead port 2/2 on $mux $procmux$9478.
    dead port 2/2 on $mux $procmux$9484.
    dead port 2/2 on $mux $procmux$9487.
    dead port 2/2 on $mux $procmux$9493.
    dead port 2/2 on $mux $procmux$9496.
    dead port 2/2 on $mux $procmux$9502.
    dead port 2/2 on $mux $procmux$9505.
    dead port 2/2 on $mux $procmux$9511.
    dead port 2/2 on $mux $procmux$9514.
    dead port 2/2 on $mux $procmux$9520.
    dead port 2/2 on $mux $procmux$9523.
    dead port 2/2 on $mux $procmux$9529.
    dead port 2/2 on $mux $procmux$9532.
    dead port 2/2 on $mux $procmux$9538.
    dead port 2/2 on $mux $procmux$9541.
    dead port 2/2 on $mux $procmux$9547.
    dead port 2/2 on $mux $procmux$9550.
    dead port 2/2 on $mux $procmux$9556.
    dead port 2/2 on $mux $procmux$9559.
    dead port 2/2 on $mux $procmux$9565.
    dead port 2/2 on $mux $procmux$9568.
    dead port 2/2 on $mux $procmux$9574.
    dead port 2/2 on $mux $procmux$9577.
    dead port 2/2 on $mux $procmux$9583.
    dead port 2/2 on $mux $procmux$9586.
    dead port 2/2 on $mux $procmux$9592.
    dead port 2/2 on $mux $procmux$9595.
    dead port 2/2 on $mux $procmux$9601.
    dead port 2/2 on $mux $procmux$9604.
    dead port 2/2 on $mux $procmux$9610.
    dead port 2/2 on $mux $procmux$9613.
    dead port 2/2 on $mux $procmux$9619.
    dead port 2/2 on $mux $procmux$9622.
    dead port 2/2 on $mux $procmux$9628.
    dead port 2/2 on $mux $procmux$9631.
    dead port 2/2 on $mux $procmux$9637.
    dead port 2/2 on $mux $procmux$9640.
    dead port 2/2 on $mux $procmux$9646.
    dead port 2/2 on $mux $procmux$9649.
    dead port 2/2 on $mux $procmux$9655.
    dead port 2/2 on $mux $procmux$9658.
    dead port 2/2 on $mux $procmux$9664.
    dead port 2/2 on $mux $procmux$9667.
    dead port 2/2 on $mux $procmux$9673.
    dead port 2/2 on $mux $procmux$9676.
    dead port 2/2 on $mux $procmux$9682.
    dead port 2/2 on $mux $procmux$9685.
    dead port 2/2 on $mux $procmux$9691.
    dead port 2/2 on $mux $procmux$9694.
    dead port 2/2 on $mux $procmux$9700.
    dead port 2/2 on $mux $procmux$9703.
    dead port 2/2 on $mux $procmux$9709.
    dead port 2/2 on $mux $procmux$9712.
    dead port 2/2 on $mux $procmux$9718.
    dead port 2/2 on $mux $procmux$9721.
    dead port 2/2 on $mux $procmux$9727.
    dead port 2/2 on $mux $procmux$9730.
    dead port 2/2 on $mux $procmux$9772.
    dead port 2/2 on $mux $procmux$9775.
    dead port 2/2 on $mux $procmux$9907.
    dead port 2/2 on $mux $procmux$9910.
    dead port 2/2 on $mux $procmux$9916.
    dead port 2/2 on $mux $procmux$9919.
    dead port 2/2 on $mux $procmux$9925.
    dead port 2/2 on $mux $procmux$9928.
    dead port 2/2 on $mux $procmux$9934.
    dead port 2/2 on $mux $procmux$9937.
    dead port 2/2 on $mux $procmux$9943.
    dead port 2/2 on $mux $procmux$9946.
    dead port 2/2 on $mux $procmux$9952.
    dead port 2/2 on $mux $procmux$9955.
    dead port 2/2 on $mux $procmux$9961.
    dead port 2/2 on $mux $procmux$9964.
    dead port 2/2 on $mux $procmux$9970.
    dead port 2/2 on $mux $procmux$9973.
    dead port 2/2 on $mux $procmux$9979.
    dead port 2/2 on $mux $procmux$9982.
    dead port 2/2 on $mux $procmux$9988.
    dead port 2/2 on $mux $procmux$9991.
    dead port 2/2 on $mux $procmux$9997.
    dead port 2/2 on $mux $procmux$5074.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2190.
    dead port 2/2 on $mux $procmux$2173.
    dead port 2/2 on $mux $procmux$2199.
    dead port 2/2 on $mux $procmux$2181.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1016.
    dead port 2/2 on $mux $procmux$1032.
    dead port 2/2 on $mux $procmux$1034.
    dead port 2/2 on $mux $procmux$1052.
    dead port 2/2 on $mux $procmux$1068.
    dead port 2/2 on $mux $procmux$1070.
    dead port 2/2 on $mux $procmux$1118.
    dead port 2/2 on $mux $procmux$1139.
    dead port 2/2 on $mux $procmux$1160.
    dead port 2/2 on $mux $procmux$1211.
    dead port 2/2 on $mux $procmux$1217.
    dead port 2/2 on $mux $procmux$1223.
    dead port 2/2 on $mux $procmux$924.
    dead port 2/2 on $mux $procmux$926.
    dead port 2/2 on $mux $procmux$932.
    dead port 2/2 on $mux $procmux$960.
    dead port 2/2 on $mux $procmux$962.
    dead port 2/2 on $mux $procmux$980.
    dead port 2/2 on $mux $procmux$996.
    dead port 2/2 on $mux $procmux$998.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/9 on $pmux $procmux$1360.
    dead port 2/9 on $pmux $procmux$1360.
    dead port 3/9 on $pmux $procmux$1360.
    dead port 4/9 on $pmux $procmux$1360.
    dead port 2/2 on $mux $procmux$1387.
    dead port 2/2 on $mux $procmux$1393.
    dead port 2/2 on $mux $procmux$1401.
    dead port 2/2 on $mux $procmux$1403.
    dead port 2/2 on $mux $procmux$1411.
    dead port 2/2 on $mux $procmux$1413.
    dead port 2/2 on $mux $procmux$1421.
    dead port 2/2 on $mux $procmux$1423.
    dead port 2/2 on $mux $procmux$1431.
    dead port 2/2 on $mux $procmux$1433.
    dead port 2/2 on $mux $procmux$1440.
    dead port 2/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$1454.
    dead port 2/2 on $mux $procmux$1461.
    dead port 2/2 on $mux $procmux$1470.
    dead port 2/2 on $mux $procmux$1472.
    dead port 2/2 on $mux $procmux$1481.
    dead port 2/2 on $mux $procmux$1483.
    dead port 2/2 on $mux $procmux$1492.
    dead port 2/2 on $mux $procmux$1494.
    dead port 2/2 on $mux $procmux$1503.
    dead port 2/2 on $mux $procmux$1505.
    dead port 2/2 on $mux $procmux$1513.
    dead port 2/2 on $mux $procmux$1521.
    dead port 2/2 on $mux $procmux$1529.
Removed 1229 multiplexer ports.
<suppressed ~207 debug messages>

11.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$1815: $auto$opt_reduce.cc:134:opt_mux$11994
    New ctrl vector for $pmux cell $procmux$2076: { $procmux$1869_CMP $auto$opt_reduce.cc:134:opt_mux$11996 $eq$load_unit.v:251$593_Y }
    New ctrl vector for $pmux cell $procmux$1623: { $eq$load_unit.v:251$593_Y $auto$opt_reduce.cc:134:opt_mux$11998 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11993: { $procmux$1626_CMP [0] $procmux$1624_CMP $eq$load_unit.v:251$593_Y $eq$load_unit.v:181$575_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11997: { $procmux$1626_CMP [0] $procmux$1624_CMP $eq$load_unit.v:181$575_Y }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
    New ctrl vector for $mux cell $procmux$2587: { }
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$6428: { $procmux$3494_CMP $auto$opt_reduce.cc:134:opt_mux$12000 }
    New ctrl vector for $pmux cell $procmux$4535: { $procmux$3501_CMP $auto$opt_reduce.cc:134:opt_mux$12002 }
    New ctrl vector for $pmux cell $procmux$6023: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12004 }
    New ctrl vector for $pmux cell $procmux$3527: { $auto$opt_reduce.cc:134:opt_mux$12006 $procmux$3480_CMP }
    New ctrl vector for $pmux cell $procmux$8789: { $procmux$8010_CMP $auto$opt_reduce.cc:134:opt_mux$12008 }
    New ctrl vector for $pmux cell $procmux$6473: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12010 }
    New ctrl vector for $pmux cell $procmux$8831: { $procmux$8011_CMP $auto$opt_reduce.cc:134:opt_mux$12012 }
    New ctrl vector for $pmux cell $procmux$4583: { $procmux$3502_CMP $auto$opt_reduce.cc:134:opt_mux$12014 }
    New ctrl vector for $pmux cell $procmux$3575: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$12016 }
    New ctrl vector for $pmux cell $procmux$6518: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12018 }
    New ctrl vector for $pmux cell $procmux$8033: { $auto$opt_reduce.cc:134:opt_mux$12020 $procmux$7992_CMP }
    New ctrl vector for $pmux cell $procmux$8369: { $procmux$8000_CMP $auto$opt_reduce.cc:134:opt_mux$12022 }
    New ctrl vector for $pmux cell $procmux$8873: { $procmux$8012_CMP $auto$opt_reduce.cc:134:opt_mux$12024 }
    New ctrl vector for $pmux cell $procmux$4199: { $procmux$3494_CMP $auto$opt_reduce.cc:134:opt_mux$12026 }
    New ctrl vector for $pmux cell $procmux$4631: { $procmux$3503_CMP $auto$opt_reduce.cc:134:opt_mux$12028 }
    New ctrl vector for $pmux cell $procmux$5753: { $procmux$3511_CMP $auto$opt_reduce.cc:134:opt_mux$12030 }
    New ctrl vector for $pmux cell $procmux$8915: { $procmux$8013_CMP $auto$opt_reduce.cc:134:opt_mux$12032 }
    New ctrl vector for $pmux cell $procmux$6068: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12034 }
    New ctrl vector for $pmux cell $procmux$6563: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12036 }
    New ctrl vector for $pmux cell $procmux$3623: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$12038 }
    New ctrl vector for $pmux cell $procmux$4679: { $procmux$3504_CMP $auto$opt_reduce.cc:134:opt_mux$12040 }
    New ctrl vector for $pmux cell $procmux$8957: { $procmux$8014_CMP $auto$opt_reduce.cc:134:opt_mux$12042 }
    New ctrl vector for $pmux cell $procmux$6608: { $procmux$3498_CMP $auto$opt_reduce.cc:134:opt_mux$12044 }
    New ctrl vector for $pmux cell $procmux$3671: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12046 }
    New ctrl vector for $pmux cell $procmux$8411: { $procmux$8001_CMP $auto$opt_reduce.cc:134:opt_mux$12048 }
    New ctrl vector for $pmux cell $procmux$8999: { $procmux$8015_CMP $auto$opt_reduce.cc:134:opt_mux$12050 }
    New ctrl vector for $pmux cell $procmux$8075: { $procmux$7993_CMP $auto$opt_reduce.cc:134:opt_mux$12052 }
    New ctrl vector for $pmux cell $procmux$4727: { $procmux$3505_CMP $auto$opt_reduce.cc:134:opt_mux$12054 }
    New ctrl vector for $pmux cell $procmux$6653: { $procmux$3499_CMP $auto$opt_reduce.cc:134:opt_mux$12056 }
    New ctrl vector for $pmux cell $procmux$7103: { $procmux$3509_CMP $auto$opt_reduce.cc:134:opt_mux$12058 }
    New ctrl vector for $pmux cell $procmux$3959: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$12060 }
    New ctrl vector for $pmux cell $procmux$4247: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12062 }
    New ctrl vector for $pmux cell $procmux$7148: { $procmux$3510_CMP $auto$opt_reduce.cc:134:opt_mux$12064 }
    New ctrl vector for $pmux cell $procmux$6113: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12066 }
    New ctrl vector for $pmux cell $procmux$9041: { $procmux$8016_CMP $auto$opt_reduce.cc:134:opt_mux$12068 }
    New ctrl vector for $pmux cell $procmux$5798: { $auto$opt_reduce.cc:134:opt_mux$12070 $procmux$3480_CMP }
    New ctrl vector for $pmux cell $procmux$3719: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12072 }
    New ctrl vector for $pmux cell $procmux$8453: { $procmux$8002_CMP $auto$opt_reduce.cc:134:opt_mux$12074 }
    New ctrl vector for $pmux cell $procmux$6698: { $procmux$3500_CMP $auto$opt_reduce.cc:134:opt_mux$12076 }
    New ctrl vector for $pmux cell $procmux$4775: { $procmux$3506_CMP $auto$opt_reduce.cc:134:opt_mux$12078 }
    New ctrl vector for $pmux cell $procmux$7058: { $procmux$3508_CMP $auto$opt_reduce.cc:134:opt_mux$12080 }
    New ctrl vector for $pmux cell $procmux$8117: { $procmux$7994_CMP $auto$opt_reduce.cc:134:opt_mux$12082 }
    New ctrl vector for $pmux cell $procmux$9083: { $procmux$8017_CMP $auto$opt_reduce.cc:134:opt_mux$12084 }
    New ctrl vector for $pmux cell $procmux$6158: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$12086 }
    New ctrl vector for $pmux cell $procmux$4295: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12088 }
    New ctrl vector for $pmux cell $procmux$6743: { $procmux$3501_CMP $auto$opt_reduce.cc:134:opt_mux$12090 }
    New ctrl vector for $pmux cell $procmux$8495: { $procmux$8003_CMP $auto$opt_reduce.cc:134:opt_mux$12092 }
    New ctrl vector for $pmux cell $procmux$5843: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$12094 }
    New ctrl vector for $pmux cell $procmux$9125: { $procmux$8018_CMP $auto$opt_reduce.cc:134:opt_mux$12096 }
    New ctrl vector for $pmux cell $procmux$4823: { $procmux$3507_CMP $auto$opt_reduce.cc:134:opt_mux$12098 }
    New ctrl vector for $pmux cell $procmux$4007: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12100 }
    New ctrl vector for $pmux cell $procmux$3767: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12102 }
    New ctrl vector for $pmux cell $procmux$8159: { $procmux$7995_CMP $auto$opt_reduce.cc:134:opt_mux$12104 }
    New ctrl vector for $pmux cell $procmux$6788: { $procmux$3502_CMP $auto$opt_reduce.cc:134:opt_mux$12106 }
    New ctrl vector for $pmux cell $procmux$9167: { $procmux$8019_CMP $auto$opt_reduce.cc:134:opt_mux$12108 }
    New ctrl vector for $pmux cell $procmux$6203: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$12110 }
    New ctrl vector for $pmux cell $procmux$8537: { $procmux$8004_CMP $auto$opt_reduce.cc:134:opt_mux$12112 }
    New ctrl vector for $pmux cell $procmux$4871: { $procmux$3508_CMP $auto$opt_reduce.cc:134:opt_mux$12114 }
    New ctrl vector for $pmux cell $procmux$3815: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12116 }
    New ctrl vector for $pmux cell $procmux$4343: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12118 }
    New ctrl vector for $pmux cell $procmux$9209: { $procmux$8020_CMP $auto$opt_reduce.cc:134:opt_mux$12120 }
    New ctrl vector for $pmux cell $procmux$5888: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$12122 }
    New ctrl vector for $pmux cell $procmux$6833: { $procmux$3503_CMP $auto$opt_reduce.cc:134:opt_mux$12124 }
    New ctrl vector for $pmux cell $procmux$8201: { $procmux$7996_CMP $auto$opt_reduce.cc:134:opt_mux$12126 }
    New ctrl vector for $pmux cell $procmux$4055: { $procmux$3491_CMP $auto$opt_reduce.cc:134:opt_mux$12128 }
    New ctrl vector for $pmux cell $procmux$4919: { $procmux$3509_CMP $auto$opt_reduce.cc:134:opt_mux$12130 }
    New ctrl vector for $pmux cell $procmux$8579: { $procmux$8005_CMP $auto$opt_reduce.cc:134:opt_mux$12132 }
    New ctrl vector for $pmux cell $procmux$9251: { $procmux$8021_CMP $auto$opt_reduce.cc:134:opt_mux$12134 }
    New ctrl vector for $pmux cell $procmux$6248: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12136 }
    New ctrl vector for $pmux cell $procmux$6878: { $procmux$3504_CMP $auto$opt_reduce.cc:134:opt_mux$12138 }
    New ctrl vector for $pmux cell $procmux$3863: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12140 }
    New ctrl vector for $pmux cell $procmux$4391: { $procmux$3498_CMP $auto$opt_reduce.cc:134:opt_mux$12142 }
    New ctrl vector for $pmux cell $procmux$9293: { $procmux$8022_CMP $auto$opt_reduce.cc:134:opt_mux$12144 }
    New ctrl vector for $pmux cell $procmux$4967: { $procmux$3510_CMP $auto$opt_reduce.cc:134:opt_mux$12146 }
    New ctrl vector for $pmux cell $procmux$5933: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12148 }
    New ctrl vector for $pmux cell $procmux$6923: { $procmux$3505_CMP $auto$opt_reduce.cc:134:opt_mux$12150 }
    New ctrl vector for $pmux cell $procmux$8621: { $procmux$8006_CMP $auto$opt_reduce.cc:134:opt_mux$12152 }
    New ctrl vector for $pmux cell $procmux$8243: { $procmux$7997_CMP $auto$opt_reduce.cc:134:opt_mux$12154 }
    New ctrl vector for $pmux cell $procmux$6293: { $procmux$3491_CMP $auto$opt_reduce.cc:134:opt_mux$12156 }
    New ctrl vector for $pmux cell $procmux$3911: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$12158 }
    New ctrl vector for $pmux cell $procmux$4103: { $procmux$3492_CMP $auto$opt_reduce.cc:134:opt_mux$12160 }
    New ctrl vector for $pmux cell $procmux$6968: { $procmux$3506_CMP $auto$opt_reduce.cc:134:opt_mux$12162 }
    New ctrl vector for $pmux cell $procmux$4439: { $procmux$3499_CMP $auto$opt_reduce.cc:134:opt_mux$12164 }
    New ctrl vector for $pmux cell $procmux$7013: { $procmux$3507_CMP $auto$opt_reduce.cc:134:opt_mux$12166 }
    New ctrl vector for $pmux cell $procmux$8663: { $procmux$8007_CMP $auto$opt_reduce.cc:134:opt_mux$12168 }
    New ctrl vector for $pmux cell $procmux$8285: { $procmux$7998_CMP $auto$opt_reduce.cc:134:opt_mux$12170 }
    New ctrl vector for $pmux cell $procmux$6338: { $procmux$3492_CMP $auto$opt_reduce.cc:134:opt_mux$12172 }
    New ctrl vector for $pmux cell $procmux$5978: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12174 }
    New ctrl vector for $pmux cell $procmux$8705: { $procmux$8008_CMP $auto$opt_reduce.cc:134:opt_mux$12176 }
    New ctrl vector for $pmux cell $procmux$3479: { $procmux$3511_CMP $auto$opt_reduce.cc:134:opt_mux$12178 }
    New ctrl vector for $pmux cell $procmux$7991: { $procmux$8023_CMP $auto$opt_reduce.cc:134:opt_mux$12180 }
    New ctrl vector for $pmux cell $procmux$4151: { $procmux$3493_CMP $auto$opt_reduce.cc:134:opt_mux$12182 }
    New ctrl vector for $pmux cell $procmux$4487: { $procmux$3500_CMP $auto$opt_reduce.cc:134:opt_mux$12184 }
    New ctrl vector for $pmux cell $procmux$6383: { $procmux$3493_CMP $auto$opt_reduce.cc:134:opt_mux$12186 }
    New ctrl vector for $pmux cell $procmux$8747: { $procmux$8009_CMP $auto$opt_reduce.cc:134:opt_mux$12188 }
    New ctrl vector for $pmux cell $procmux$8327: { $procmux$7999_CMP $auto$opt_reduce.cc:134:opt_mux$12190 }
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
    New ctrl vector for $pmux cell $procmux$2186: $auto$opt_reduce.cc:134:opt_mux$12192
    New ctrl vector for $pmux cell $procmux$2168: $auto$opt_reduce.cc:134:opt_mux$12194
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
    New ctrl vector for $pmux cell $procmux$1536: { $procmux$1473_CMP $procmux$1404_CMP $auto$opt_reduce.cc:134:opt_mux$12196 }
    New ctrl vector for $pmux cell $procmux$1541: { $procmux$1473_CMP $procmux$1404_CMP $auto$opt_reduce.cc:134:opt_mux$12198 }
    New ctrl vector for $pmux cell $procmux$1546: { $procmux$1404_CMP $auto$opt_reduce.cc:134:opt_mux$12200 }
    New ctrl vector for $pmux cell $procmux$1551: { $procmux$1404_CMP $auto$opt_reduce.cc:134:opt_mux$12202 }
    New ctrl vector for $pmux cell $procmux$1556: { $procmux$1404_CMP $auto$opt_reduce.cc:134:opt_mux$12204 }
  Optimizing cells in module \store_unit.
Performed a total of 109 changes.

11.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~39 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~54 debug messages>
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
<suppressed ~24 debug messages>
Removed a total of 74 cells.

11.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 4570 unused wires.
<suppressed ~8 debug messages>

11.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.8. Rerunning OPT passes. (Maybe there is more to do..)

11.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~204 debug messages>

11.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$2064: { $procmux$1775_CMP $auto$opt_reduce.cc:134:opt_mux$12206 }
    New ctrl vector for $pmux cell $procmux$2070: { $procmux$1775_CMP $auto$opt_reduce.cc:134:opt_mux$12208 }
    New ctrl vector for $pmux cell $procmux$2076: { $auto$opt_reduce.cc:134:opt_mux$11996 $auto$opt_reduce.cc:134:opt_mux$12210 }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 3 changes.

11.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 2 cells.

11.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

11.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.14. Rerunning OPT passes. (Maybe there is more to do..)

11.7.15. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~204 debug messages>

11.7.16. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 0 changes.

11.7.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

11.7.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..

11.7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.20. Finished OPT passes. (There is nothing left to do.)

11.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:181$575 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ne$load_unit.v:248$590 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:251$593 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:261$598 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$602 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$603 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$604 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$606 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$607 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$608 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$618 ($add).
Removed top 29 bits (of 32) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$618 ($add).
Removed top 30 bits (of 32) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ternary$load_unit.v:286$620 ($mux).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1563_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1563_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1563_CMP2 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1564_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1564_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1564_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1624_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1626_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1667 ($mux).
Removed top 3 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1775_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1925 ($mux).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2060_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2095_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2095_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2095_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2095_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2095_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2096_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2096_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2096_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2096_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2096_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2097_CMP15 ($eq).
Removed top 1 bits (of 3) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$618 ($add).
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$11\state_d[3:0].
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$15\state_d[3:0].
Removed top 30 bits (of 32) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$618_Y.
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$24 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$60 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$66 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$67 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$69 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$70 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$72 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$73 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$75 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:170$82 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:177$92 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:178$94 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:178$95 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:185$97 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:194$100 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:195$102 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:195$103 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:202$105 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11371_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11421_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:347$415 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:356$417 ($eq).
Removed top 2 bits (of 111) from mux cell cva6_lsu_shim.$procmux$2596 ($mux).
Removed top 2 bits (of 111) from wire cva6_lsu_shim.$3\tb_io_fu_data_i[110:0].
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$262 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$299 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$326 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$341 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$344 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$356 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$357 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$358 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$359 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$361 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$362 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$363 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$373 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$373 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$374 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$375 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$376 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$382 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$382 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$385 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$385 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$392 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$392 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3496_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3497_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3498_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3499_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3500_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3501_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3502_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3503_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3504_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3505_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3506_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3507_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3508_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3509_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3510_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5032_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5033_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5034_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5035_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5036_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5037_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5038_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5039_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5040_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5041_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5042_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5043_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5044_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5045_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5046_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7210_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7211_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7212_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7213_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7214_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7215_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7216_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7217_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7218_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7219_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7220_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7221_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7222_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7223_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7224_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8008_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8009_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8010_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8011_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8012_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8013_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8014_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8015_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8016_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8017_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8018_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8019_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8020_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8021_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8022_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$373_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$341_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$358_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$363_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$361_Y.
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2171_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2191_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2212_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2212_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2212_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2212_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2212_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2213_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2213_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2213_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2213_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2213_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2214_CMP15 ($eq).
Removed top 2 bits (of 4) from port B of cell load_store_unit.$procmux$2383_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell load_store_unit.$procmux$2384_CMP0 ($eq).
Removed top 2 bits (of 34) from FF cell load_store_unit.$procdff$11767 ($adff).
Removed top 2 bits (of 22) from wire load_store_unit.dtlb_ppn.
Removed top 2 bits (of 34) from wire load_store_unit.mmu_paddr.
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:47$505 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:47$505 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$506 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$506 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$506 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$507 ($shl).
Removed top 85 bits (of 170) from port Y of cell lsu_bypass.$and$lsu_bypass.v:0$508 ($and).
Removed top 85 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$511 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$511 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:48$515 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:48$515 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:49$516 ($add).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:49$516 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:52$519 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:52$519 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:52$520 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:52$520 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:52$520 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$521 ($shl).
Removed top 169 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$524 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$524 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:53$528 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:53$528 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:54$529 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:54$529 ($sub).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:58$541 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:58$541 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:59$542 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:59$542 ($sub).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$546 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$546 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$546 ($add).
Removed top 22 bits (of 32) from port B of cell lsu_bypass.$shiftx$lsu_bypass.v:0$547 ($shiftx).
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$506_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$546_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:48$515_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:52$520_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:53$528_Y.
Removed top 85 bits (of 170) from wire lsu_bypass.$and$lsu_bypass.v:0$508_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:47$505_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:52$519_Y.
Removed top 30 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:88$710 ($lt).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:94$722 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:94$722 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:94$723 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:94$723 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:94$723 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$724 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$724 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$724 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$725 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$725 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$725 ($sub).
Removed top 258 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$727 ($and).
Removed top 258 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$732 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:95$737 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:95$737 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:95$737 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 260 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$741 ($and).
Removed top 260 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$746 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:96$751 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:96$751 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:96$751 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 288 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$755 ($and).
Removed top 288 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$760 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:97$765 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:97$765 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:97$765 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$766 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$766 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$766 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$767 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$767 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$767 ($sub).
Removed top 290 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$769 ($and).
Removed top 290 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$774 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:98$779 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:98$779 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:98$779 ($add).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$780 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$783 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$783 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:100$788 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:100$788 ($add).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:100$788 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:103$791 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:103$791 ($mul).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$796 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:105$801 ($sub).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:105$801 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:128$805 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:128$805 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:128$806 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:128$806 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:128$806 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$807 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$807 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$807 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$808 ($sub).
Removed top 28 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$808 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$808 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$809 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:131$812 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:131$812 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:131$812 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$813 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$813 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$813 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$814 ($sub).
Removed top 27 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$814 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$814 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$815 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:134$818 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:134$818 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:134$818 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$819 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$819 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$819 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$820 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$820 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$820 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$821 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:137$824 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:137$824 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:137$824 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$825 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$825 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$825 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$826 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$826 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$826 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$827 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:140$830 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:140$830 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:140$830 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$831 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$831 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$831 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$832 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$832 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$832 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$833 ($shiftx).
Removed top 29 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:145$840 ($lt).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:151$843 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:151$843 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:151$843 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$844 ($shiftx).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$851 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$854 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$854 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:156$859 ($sub).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:156$859 ($sub).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:156$859 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:160$862 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:160$862 ($mul).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$863 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$863 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$863 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$864 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$864 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$864 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$865 ($shl).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$867 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$867 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$867 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$868 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$868 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$868 ($add).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$869 ($shiftx).
Removed top 219 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$870 ($and).
Removed top 219 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$874 ($shl).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$874 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:162$879 ($add).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:162$879 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1193 ($mux).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1277 ($mux).
Removed top 1 bits (of 5) from mux cell store_buffer.$procmux$1292 ($mux).
Removed top 1 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:105$801 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$sub$store_buffer.v:105$801 ($sub).
Removed top 1 bits (of 4) from port A of cell store_buffer.$sub$store_buffer.v:105$801 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$add$store_buffer.v:162$879 ($add).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:162$879 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1244 ($mux).
Removed top 1 bits (of 4) from mux cell store_buffer.$procmux$1292 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$add$store_buffer.v:100$788 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1209 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$sub$store_buffer.v:156$859 ($sub).
Removed top 2 bits (of 5) from wire store_buffer.$1\core_if.speculative_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$1\store_if.commit_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$2\store_if.commit_status_cnt[4:0].
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$724_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$738_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$752_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$766_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$807_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$813_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$819_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$825_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$831_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$864_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$868_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:100$788_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:103$792_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:140$830_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:151$843_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:160$863_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:162$879_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:94$723_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:95$737_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:96$751_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:97$765_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:98$779_Y.
Removed top 258 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$727_Y.
Removed top 260 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$741_Y.
Removed top 288 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$755_Y.
Removed top 290 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$769_Y.
Removed top 219 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$870_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:160$862_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:94$722_Y.
Removed top 29 bits (of 32) from wire store_buffer.$sub$store_buffer.v:156$859_Y.
Removed top 2 bits (of 5) from wire store_buffer.core_if.speculative_status_cnt.
Removed top 2 bits (of 8) from port A of cell store_unit.$le$store_unit.v:81$665 ($le).
Removed top 1 bits (of 8) from port A of cell store_unit.$ge$store_unit.v:81$666 ($ge).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1337_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1337_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1338_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1338_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1339_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1339_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1340_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1340_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1341_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1342_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1343_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1344_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1344_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1345_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1345_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1348_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1348_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1348_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1348_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1348_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1349_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1350_CMP4 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1367_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1404_CMP0 ($eq).

11.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 54 unused wires.
<suppressed ~6 debug messages>

11.10. Executing MEMORY_COLLECT pass (generating $mem cells).

11.11. Executing OPT pass (performing simple optimizations).

11.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~3 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 1 cells.

11.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

11.11.4. Finished fast OPT passes.

11.12. Printing statistics.

=== $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit ===

   Number of wires:                117
   Number of wire bits:            844
   Number of public wires:          47
   Number of public wire bits:     711
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $add                            1
     $adff                           5
     $and                            1
     $eq                            46
     $logic_and                      5
     $logic_not                      3
     $mux                           34
     $ne                             1
     $or                             1
     $pmux                           7
     $reduce_or                     13
     $shiftx                         1
     $shr                            1

=== amo_buffer ===

   Number of wires:                 17
   Number of wire bits:            425
   Number of public wires:          16
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $and                            2

=== cva6_lsu_formal ===

   Number of wires:                151
   Number of wire bits:           5239
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                144
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         9
     $dff                           23
     $eq                            23
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $lt                             2
     $mux                           47
     $ne                             2
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_shim ===

   Number of wires:                 90
   Number of wire bits:           2490
   Number of public wires:          60
   Number of public wire bits:    2009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $dff                            7
     $eq                             5
     $mux                           28
     load_store_unit                 1

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_shim                   1

=== load_store_unit ===

   Number of wires:                108
   Number of wire bits:           2482
   Number of public wires:          84
   Number of public wire bits:    2423
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $add                            1
     $adff                           1
     $eq                            33
     $logic_not                      3
     $mux                            5
     $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
     $pmux                           6
     $reduce_or                      5
     lsu_bypass                      1
     shift_reg                       2
     store_unit                      1

=== lsu_bypass ===

   Number of wires:                 57
   Number of wire bits:           3651
   Number of public wires:          21
   Number of public wire bits:     530
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            7
     $adff                           4
     $and                            4
     $logic_and                      1
     $logic_not                      1
     $mul                            2
     $mux                           15
     $not                            2
     $or                             3
     $shiftx                         1
     $shl                            4
     $sub                            2

=== shift_reg ===

   Number of wires:                  4
   Number of wire bits:            204
   Number of public wires:           4
   Number of public wire bits:     204
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $adff                           1

=== store_buffer ===

   Number of wires:                215
   Number of wire bits:          15200
   Number of public wires:          48
   Number of public wire bits:    1494
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                202
     $add                           30
     $adff                           8
     $and                           14
     $eq                             9
     $logic_and                      9
     $logic_not                      4
     $logic_or                       5
     $lt                             9
     $mul                            4
     $mux                           59
     $ne                             2
     $not                            8
     $or                             8
     $shiftx                         7
     $shl                           15
     $sub                           11

=== store_unit ===

   Number of wires:                123
   Number of wire bits:           1061
   Number of public wires:          57
   Number of public wire bits:     922
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           6
     $and                            2
     $eq                            43
     $ge                             1
     $le                             1
     $logic_and                      4
     $logic_not                      4
     $mux                           20
     $pmux                           8
     $reduce_bool                    2
     $reduce_or                     16
     amo_buffer                      1
     store_buffer                    1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_shim                 1
         load_store_unit             1
           $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
           lsu_bypass                1
           shift_reg                 2
           store_unit                1
             amo_buffer              1
             store_buffer            1

   Number of wires:               3203
   Number of wire bits:          93033
   Number of public wires:         910
   Number of public wire bits:   30918
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2834
     $add                           89
     $adff                          52
     $and                           48
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         9
     $dff                          193
     $eq                           571
     $ge                             2
     $gt                             1
     $le                             3
     $logic_and                     58
     $logic_not                     55
     $logic_or                      13
     $lt                            24
     $mul                           12
     $mux                         1099
     $ne                             8
     $not                           20
     $or                            26
     $pmux                         240
     $reduce_bool                    8
     $reduce_or                    196
     $shiftx                        18
     $shl                           40
     $shr                            6
     $sub                           32
     $xor                            2

11.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

12. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

13. Executing ASYNC2SYNC pass.
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11756 ($adff): ARST=\rst_ni, D=\idx_d, Q=\idx_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11757 ($adff): ARST=\rst_ni, D=\signed_d, Q=\signed_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11758 ($adff): ARST=\rst_ni, D=\fp_sign_d, Q=\fp_sign_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11759 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11760 ($adff): ARST=\rst_ni, D=\load_data_d, Q=\load_data_q
Replacing load_store_unit.$procdff$11767 ($adff): ARST=\rst_ni, D=\mmu_vaddr, Q=\mmu_paddr
Replacing lsu_bypass.$procdff$11762 ($adff): ARST=\rst_ni, D=\mem_n, Q=\mem_q
Replacing lsu_bypass.$procdff$11763 ($adff): ARST=\rst_ni, D=\read_pointer, Q=\read_pointer_q
Replacing lsu_bypass.$procdff$11764 ($adff): ARST=\rst_ni, D=\write_pointer, Q=\write_pointer_q
Replacing lsu_bypass.$procdff$11765 ($adff): ARST=\rst_ni, D=\status_cnt, Q=\status_cnt_q
Replacing shift_reg.$procdff$11761 ($adff): ARST=\rst_ni, D=\d_i, Q=\d_o
Replacing store_buffer.$procdff$11742 ($adff): ARST=\rst_ni, D=\commit_queue_n, Q=\commit_queue_q
Replacing store_buffer.$procdff$11743 ($adff): ARST=\rst_ni, D=\commit_status_cnt_n, Q=\commit_status_cnt_q
Replacing store_buffer.$procdff$11744 ($adff): ARST=\rst_ni, D=\commit_read_pointer_n, Q=\commit_read_pointer_q
Replacing store_buffer.$procdff$11745 ($adff): ARST=\rst_ni, D=\commit_write_pointer_n, Q=\commit_write_pointer_q
Replacing store_buffer.$procdff$11746 ($adff): ARST=\rst_ni, D=\speculative_queue_n, Q=\speculative_queue_q
Replacing store_buffer.$procdff$11747 ($adff): ARST=\rst_ni, D=\speculative_status_cnt_n, Q=\speculative_status_cnt_q
Replacing store_buffer.$procdff$11748 ($adff): ARST=\rst_ni, D=\speculative_read_pointer_n, Q=\speculative_read_pointer_q
Replacing store_buffer.$procdff$11749 ($adff): ARST=\rst_ni, D=\speculative_write_pointer_n, Q=\speculative_write_pointer_q
Replacing store_unit.$procdff$11750 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing store_unit.$procdff$11751 ($adff): ARST=\rst_ni, D=\st_data_n, Q=\st_data_q
Replacing store_unit.$procdff$11752 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [18:15], Q=\st_be_q
Replacing store_unit.$procdff$11753 ($adff): ARST=\rst_ni, D=\st_data_size_n, Q=\st_data_size_q
Replacing store_unit.$procdff$11754 ($adff): ARST=\rst_ni, D=\amo_op_d, Q=\amo_op_q
Replacing store_unit.$procdff$11755 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [2:0], Q=\trans_id_q

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

15. Executing SETUNDEF pass (replace undef values with defined constants).

16. Executing OPT pass (performing simple optimizations).

16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

16.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$11759 ($sdff) from module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit (D = $1\state_d[3:0] [3], Q = $auto$async2sync.cc:140:execute$12270 [3], rval = 1'0).
Adding SRST signal on $procdff$11990 ($dff) from module cva6_lsu_formal (D = $procmux$11614_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12639 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$11989 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$11964 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12642 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$11963 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12644 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$11962 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12646 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:202$105_Y, Q = \pc_2).
Adding SRST signal on $procdff$11961 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12650 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:185$97_Y, Q = \pc_1).
Adding SRST signal on $procdff$11960 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12654 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$11959 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12656 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:175$5_DATA[31:0]$90, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$11958 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12658 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$11957 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12660 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:192$6_DATA[31:0]$98, Q = \tb_io_instr_i_2).
Adding SRST signal on $procdff$11776 ($dff) from module cva6_lsu_shim (D = \load_mem_resp_i, Q = \x_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11775 ($dff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12663 ($sdff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state).
Adding SRST signal on $procdff$11774 ($dff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12671 ($sdff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state).
Adding SRST signal on $procdff$11772 ($dff) from module cva6_lsu_shim (D = { $2\tb_io_dcache_req_ports_i[104:104] \load_mem_resp_i \x_load_mem_resp_i \dummy_data }, Q = { \tb_io_dcache_req_ports_i [104] \tb_io_dcache_req_ports_i [69:36] }, rval = 35'00000000000000000000000000000000000).
Adding EN signal on $procdff$11772 ($dff) from module cva6_lsu_shim (D = 69'000000000000000000000000000000000000000000000000000000000000000000000, Q = { \tb_io_dcache_req_ports_i [103:70] \tb_io_dcache_req_ports_i [34:0] }).
Adding SRST signal on $procdff$11771 ($dff) from module cva6_lsu_shim (D = $2\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$12681 ($sdff) from module cva6_lsu_shim (D = $3\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i).
Adding SRST signal on $procdff$11769 ($dff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12689 ($sdff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i).
Adding SRST signal on $procdff$11768 ($dff) from module cva6_lsu_shim (D = $2\tb_io_fu_data_i[110:0], Q = \tb_io_fu_data_i, rval = 111'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$12693 ($sdff) from module cva6_lsu_shim (D = { 2'00 $3\tb_io_fu_data_i[110:0] }, Q = \tb_io_fu_data_i).
Adding EN signal on $procdff$11940 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$11939 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$11938 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$11937 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$11936 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$11935 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$11934 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$11933 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$11932 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$11931 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$11930 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$11929 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$11928 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$11927 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$11926 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$11925 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$11924 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$11923 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$11922 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$11921 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$11920 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$11919 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$11918 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$11917 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$11916 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$11915 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$11914 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$11913 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$11912 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$11911 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$11910 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$11909 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$11908 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$11907 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$11906 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$11905 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$11904 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$11903 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$11902 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$11901 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$11900 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$11899 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$11898 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$11897 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$11896 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$11895 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$11894 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$11893 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$11892 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$11891 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$11890 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$11889 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$11888 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$11887 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$11886 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$11885 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$11884 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$11883 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$11882 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$11881 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$11880 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$11879 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$11878 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$11877 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$11857 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13207 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$11856 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$11856 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13230 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$392_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$13225 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$11855 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$11854 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$11852 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$11851 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13238 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$11850 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13244 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$11849 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13250 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$11848 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11847 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13269 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$11846 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13277 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$11845 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13287 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$11844 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13295 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$11843 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$13303 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).
Adding SRST signal on $procdff$11765 ($sdff) from module lsu_bypass (D = $3\status_cnt[1:0], Q = $auto$async2sync.cc:140:execute$12282, rval = 2'00).
Adding SRST signal on $procdff$11764 ($sdff) from module lsu_bypass (D = $1\write_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12280, rval = 1'0).
Adding SRST signal on $procdff$11763 ($sdff) from module lsu_bypass (D = $2\read_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12278, rval = 1'0).
Adding SRST signal on $procdff$11762 ($sdff) from module lsu_bypass (D = $3\mem_n[169:0], Q = $auto$async2sync.cc:140:execute$12276, rval = 170'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$11747 ($sdff) from module store_buffer (D = \core_if.speculative_status_cnt, Q = $auto$async2sync.cc:140:execute$12296, rval = 3'000).
Adding SRST signal on $procdff$11746 ($sdff) from module store_buffer (D = { $2\speculative_queue_n[291:0] [219] $2\speculative_queue_n[291:0] [146] $2\speculative_queue_n[291:0] [73] $2\speculative_queue_n[291:0] [0] }, Q = { $auto$async2sync.cc:140:execute$12294 [219] $auto$async2sync.cc:140:execute$12294 [146] $auto$async2sync.cc:140:execute$12294 [73] $auto$async2sync.cc:140:execute$12294 [0] }, rval = 4'0000).
Adding SRST signal on $procdff$11750 ($sdff) from module store_unit (D = $1\state_d[1:0], Q = $auto$async2sync.cc:140:execute$12302, rval = 2'00).

16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 283 unused cells and 295 unused wires.
<suppressed ~315 debug messages>

16.5. Rerunning OPT passes. (Removed registers in this run.)

16.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
<suppressed ~4 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
<suppressed ~15 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 80 cells.

16.8. Executing OPT_DFF pass (perform DFF optimizations).

16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 80 unused wires.
<suppressed ~3 debug messages>

16.10. Finished fast OPT passes.

17. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

18. Executing HIERARCHY pass (managing design hierarchy).

18.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass

18.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

19. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 114 unique messages, 334 total
End of script. Logfile hash: c7831d4156, CPU: user 11.80s system 0.07s, MEM: 100.61 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 35% 3x check (4 sec), 22% 9x opt_clean (2 sec), ...
