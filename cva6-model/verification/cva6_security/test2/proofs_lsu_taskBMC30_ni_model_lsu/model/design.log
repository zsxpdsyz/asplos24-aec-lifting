
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cva6_lsu_model.v
Parsing formal SystemVerilog input from `cva6_lsu_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_model'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

4.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

4.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_model'.
Generating RTLIL representation for module `\cva6_lsu_model'.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_lsu_model.v:98
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_lsu_model.v:94
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_lsu_model.v:90

4.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

4.2.6. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removing unused module `$abstract\cva6_lsu_model'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 3 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
Cleaned up 1 empty switch.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$592 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$592 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$587 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$587 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$582 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$582 in module cva6_lsu_model.
Removed 9 dead cases from process $proc$cva6_lsu_model.v:85$415 in module cva6_lsu_model.
Marked 27 switch rules as full_case in process $proc$cva6_lsu_model.v:85$415 in module cva6_lsu_model.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$148 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$148 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$30 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$30 in module cva6_lsu_formal.
Removed a total of 22 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 249 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$130'.
  Set init value: $formal$cva6_lsu_formal.v:206$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
  Set init value: $formal$cva6_lsu_formal.v:171$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
  Set init value: $formal$cva6_lsu_formal.v:169$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
  Set init value: $formal$cva6_lsu_formal.v:164$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
  Set init value: $formal$cva6_lsu_formal.v:162$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
  Set init value: $formal$cva6_lsu_formal.v:161$6_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
  Set init value: $formal$cva6_lsu_formal.v:160$5_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
  Set init value: $formal$cva6_lsu_formal.v:159$4_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
  Set init value: $formal$cva6_lsu_formal.v:156$3_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$592'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$392_DATA[7:0]$594
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$587'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$408_DATA[1:0]$591
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$582'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$407_DATA[31:0]$586
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
     1/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_DATA[1:0]$580
     2/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_ADDR[1:0]$579
     3/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_DATA[1:0]$577
     4/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_DATA[1:0]$576
     5/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_ADDR[1:0]$575
     6/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_DATA[1:0]$574
     7/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_ADDR[1:0]$573
     8/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_DATA[1:0]$571
     9/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_ADDR[1:0]$570
    10/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_DATA[1:0]$568
    11/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_DATA[1:0]$567
    12/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_ADDR[1:0]$566
    13/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_DATA[1:0]$565
    14/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_ADDR[1:0]$564
    15/153: $5$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_DATA[7:0]$557
    16/153: $5$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_DATA[1:0]$556
    17/153: $5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA[31:0]$555
    18/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_DATA[7:0]$554
    19/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_ADDR[1:0]$553
    20/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_DATA[1:0]$552
    21/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_ADDR[1:0]$551
    22/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA[31:0]$550
    23/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_ADDR[1:0]$549
    24/153: $4$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$391[1:0]$548
    25/153: $4$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$390[31:0]$547
    26/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_DATA[7:0]$544
    27/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_ADDR[1:0]$543
    28/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_DATA[1:0]$542
    29/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_ADDR[1:0]$541
    30/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA[31:0]$540
    31/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_ADDR[1:0]$539
    32/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$391[1:0]$538
    33/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$390[31:0]$537
    34/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_DATA[7:0]$530
    35/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_DATA[1:0]$529
    36/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_DATA[31:0]$528
    37/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_DATA[7:0]$527
    38/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_ADDR[1:0]$526
    39/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_DATA[1:0]$525
    40/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_ADDR[1:0]$524
    41/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_DATA[31:0]$523
    42/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_ADDR[1:0]$522
    43/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$389[1:0]$521
    44/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$388[31:0]$520
    45/153: $5\instr_i_pc[7:0]
    46/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_DATA[7:0]$512
    47/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_ADDR[1:0]$511
    48/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_DATA[1:0]$510
    49/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_ADDR[1:0]$509
    50/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_DATA[31:0]$508
    51/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_ADDR[1:0]$507
    52/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$389[1:0]$504
    53/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$388[31:0]$503
    54/153: $4\instr_i_pc[7:0]
    55/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_DATA[7:0]$518
    56/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_ADDR[1:0]$517
    57/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_DATA[1:0]$516
    58/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_ADDR[1:0]$515
    59/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA[31:0]$514
    60/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_ADDR[1:0]$513
    61/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$391[1:0]$506
    62/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$390[31:0]$505
    63/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_DATA[1:0]$499
    64/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_ADDR[1:0]$498
    65/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_DATA[7:0]$497
    66/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_ADDR[1:0]$496
    67/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_DATA[31:0]$495
    68/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_ADDR[1:0]$494
    69/153: $3\instr_i_pc[7:0]
    70/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_DATA[1:0]$492
    71/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_DATA[1:0]$491
    72/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_ADDR[1:0]$490
    73/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_DATA[7:0]$489
    74/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_ADDR[1:0]$488
    75/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_DATA[31:0]$487
    76/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_ADDR[1:0]$486
    77/153: $2\instr_i_pc[7:0]
    78/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_DATA[1:0]$485
    79/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_ADDR[1:0]$484
    80/153: $0\inner_load_mem_resp_i[0:0]
    81/153: $0\x_inner_store_mem_resp_i[0:0]
    82/153: $0\inner_store_mem_resp_i[0:0]
    83/153: $0\x_inner_instr_i[31:0]
    84/153: $0\inner_instr_i[31:0]
    85/153: $0\x_inner_instr_valid_i[0:0]
    86/153: $0\inner_instr_valid_i[0:0]
    87/153: $0\x_inner_is_load_i[0:0]
    88/153: $0\inner_is_load_i[0:0]
    89/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_DATA[1:0]$480
    90/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_ADDR[1:0]$479
    91/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_DATA[1:0]$478
    92/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_ADDR[1:0]$477
    93/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_DATA[1:0]$476
    94/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_ADDR[1:0]$475
    95/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_DATA[1:0]$474
    96/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_ADDR[1:0]$473
    97/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_DATA[7:0]$472
    98/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_ADDR[1:0]$471
    99/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_DATA[1:0]$470
   100/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_ADDR[1:0]$469
   101/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA[31:0]$468
   102/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_ADDR[1:0]$467
   103/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_DATA[7:0]$466
   104/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_ADDR[1:0]$465
   105/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_DATA[1:0]$464
   106/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_ADDR[1:0]$463
   107/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_DATA[31:0]$462
   108/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_ADDR[1:0]$461
   109/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$391[1:0]$452
   110/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$390[31:0]$451
   111/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$389[1:0]$450
   112/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$388[31:0]$449
   113/153: $1\instr_i_pc[7:0]
   114/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_DATA[1:0]$460
   115/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_ADDR[1:0]$459
   116/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_DATA[7:0]$458
   117/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_ADDR[1:0]$457
   118/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_DATA[31:0]$456
   119/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_ADDR[1:0]$455
   120/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_DATA[1:0]$454
   121/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_ADDR[1:0]$453
   122/153: $0\CLK_CYCLE[31:0]
   123/153: $0\store_instr_queue_state[3][1:0]
   124/153: $0\store_instr_queue_state[2][1:0]
   125/153: $0\store_instr_queue_state[1][1:0]
   126/153: $0\store_instr_queue_state[0][1:0]
   127/153: $0\store_instr_i_queue_pc[3][7:0]
   128/153: $0\store_instr_i_queue_pc[2][7:0]
   129/153: $0\store_instr_i_queue_pc[1][7:0]
   130/153: $0\store_instr_i_queue_pc[0][7:0]
   131/153: $0\store_instr_i_queue[3][31:0]
   132/153: $0\store_instr_i_queue[2][31:0]
   133/153: $0\store_instr_i_queue[1][31:0]
   134/153: $0\store_instr_i_queue[0][31:0]
   135/153: $0\ready_flag[0:0]
   136/153: $0\store_instr_queue_state_flatten_3[1:0]
   137/153: $0\store_instr_queue_state_flatten_2[1:0]
   138/153: $0\store_instr_queue_state_flatten_1[1:0]
   139/153: $0\store_instr_queue_state_flatten_0[1:0]
   140/153: $0\store_instr_i_queue_flatten_3_pc[7:0]
   141/153: $0\store_instr_i_queue_flatten_3[31:0]
   142/153: $0\store_instr_i_queue_flatten_2_pc[7:0]
   143/153: $0\store_instr_i_queue_flatten_2[31:0]
   144/153: $0\store_instr_i_queue_flatten_1_pc[7:0]
   145/153: $0\store_instr_i_queue_flatten_1[31:0]
   146/153: $0\store_instr_i_queue_flatten_0_pc[7:0]
   147/153: $0\store_instr_i_queue_flatten_0[31:0]
   148/153: $0\load_instr_queue_state[1:0]
   149/153: $0\load_instr_i_queue_pc[7:0]
   150/153: $0\load_instr_i_queue[31:0]
   151/153: $0\queue_serve_ptr[1:0]
   152/153: $0\queue_commit_ptr[1:0]
   153/153: $0\queue_store_ptr[1:0]
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$333
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$331
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$332
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$322
   126/587: $5\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$326
   127/587: $5\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$328
   128/587: $5\sra$func$cva6_processor_shim.v:100$139.d[63:0]$327
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$325
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$324
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$323
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$330
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$329
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$320
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$321
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$318
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$316
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$308
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$309
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$311
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$310
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$307
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$306
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$293
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$294
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$315
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$314
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$313
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$312
   218/587: $4\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$305
   219/587: $4\sra$func$cva6_processor_shim.v:100$139.d[63:0]$304
   220/587: $4\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$303
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$302
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$301
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$300
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$299
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$298
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$297
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$296
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$295
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$291
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$289
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR[4:0]$275
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA[31:0]$276
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$278
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR[4:0]$277
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$274
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR[4:0]$273
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$133.$result[31:0]$256
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$133.inst[31:0]$257
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$288
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$287
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$286
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$285
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$284
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$283
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$282
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$281
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$280
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$279
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$272
   350/587: $3\sra$func$cva6_processor_shim.v:100$139.d[63:0]$271
   351/587: $3\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$270
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$269
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$268
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$267
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$266
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$265
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$264
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$263
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$262
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$261
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$260
   362/587: $3\is_load$func$cva6_processor_shim.v:232$134.instr[31:0]$259
   363/587: $3\is_load$func$cva6_processor_shim.v:232$134.$result[0:0]$258
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$254
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$253
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$252
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$251
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$250
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$249
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$248
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$247
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$246
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$245
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$244
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR[4:0]$243
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA[31:0]$242
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR[4:0]$241
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$240
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR[4:0]$239
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$238
   445/587: $2\sra$func$cva6_processor_shim.v:100$139.d[63:0]$237
   446/587: $2\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$236
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$235
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$234
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$233
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$232
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$231
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$230
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$229
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$228
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$227
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$226
   457/587: $2\is_load$func$cva6_processor_shim.v:232$134.instr[31:0]$225
   458/587: $2\is_load$func$cva6_processor_shim.v:232$134.$result[0:0]$224
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$133.inst[31:0]$223
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$133.$result[31:0]$222
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$132.$result[0:0]$220
   466/587: $2\is_store$func$cva6_processor_shim.v:226$132.instr[31:0]$221
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA[31:0]$219
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR[4:0]$218
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA[31:0]$217
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR[4:0]$216
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA[31:0]$215
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR[4:0]$214
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA[31:0]$213
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR[4:0]$212
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA[31:0]$211
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR[4:0]$210
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA[31:0]$209
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR[4:0]$208
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA[31:0]$207
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR[4:0]$206
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA[31:0]$205
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR[4:0]$204
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$139.shamt[4:0]$203
   570/587: $1\sra$func$cva6_processor_shim.v:100$139.d[63:0]$202
   571/587: $1\sra$func$cva6_processor_shim.v:100$139.$result[31:0]$201
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun[2:0]$200
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data[31:0]$199
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data[31:0]$198
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$138.$result[31:0]$197
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$137.inst[31:0]$196
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$137.$result[31:0]$195
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$136.instr[31:0]$194
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$136.$result[0:0]$193
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$135.inst[31:0]$192
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$135.$result[31:0]$191
   582/587: $1\is_load$func$cva6_processor_shim.v:232$134.instr[31:0]$190
   583/587: $1\is_load$func$cva6_processor_shim.v:232$134.$result[0:0]$189
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$133.inst[31:0]$188
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$133.$result[31:0]$187
   586/587: $1\is_store$func$cva6_processor_shim.v:226$132.instr[31:0]$186
   587/587: $1\is_store$func$cva6_processor_shim.v:226$132.$result[0:0]$185
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$130'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
     1/52: $4\local_ready_2[0:0]
     2/52: $3\tb_io_instr_valid_i_2[0:0]
     3/52: $3\pc_2[31:0]
     4/52: $3\local_ready_2[0:0]
     5/52: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$94
     6/52: $4\local_ready_1[0:0]
     7/52: $3\tb_io_instr_valid_i_1[0:0]
     8/52: $3\pc_1[31:0]
     9/52: $3\local_ready_1[0:0]
    10/52: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$86
    11/52: $2\local_ready_2[0:0]
    12/52: $2\pc_2[31:0]
    13/52: $2\tb_io_instr_valid_i_2[0:0]
    14/52: $2\tb_io_instr_i_2[31:0]
    15/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$83
    16/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_ADDR[1:0]$82
    17/52: $2\local_ready_1[0:0]
    18/52: $2\pc_1[31:0]
    19/52: $2\tb_io_instr_valid_i_1[0:0]
    20/52: $2\tb_io_instr_i_1[31:0]
    21/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$81
    22/52: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_ADDR[1:0]$80
    23/52: $1\local_ready_2[0:0]
    24/52: $1\local_ready_1[0:0]
    25/52: $1\tb_io_instr_i_2[31:0]
    26/52: $1\tb_io_instr_i_1[31:0]
    27/52: $1\tb_io_instr_valid_i_2[0:0]
    28/52: $1\tb_io_instr_valid_i_1[0:0]
    29/52: $1\pc_2[31:0]
    30/52: $1\pc_1[31:0]
    31/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$58
    32/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_ADDR[1:0]$57
    33/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$56
    34/52: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_ADDR[1:0]$55
    35/52: $0$formal$cva6_lsu_formal.v:156$3_EN[0:0]$36
    36/52: $0$formal$cva6_lsu_formal.v:156$3_CHECK[0:0]$35
    37/52: $0$formal$cva6_lsu_formal.v:159$4_EN[0:0]$38
    38/52: $0$formal$cva6_lsu_formal.v:159$4_CHECK[0:0]$37
    39/52: $0$formal$cva6_lsu_formal.v:160$5_EN[0:0]$40
    40/52: $0$formal$cva6_lsu_formal.v:160$5_CHECK[0:0]$39
    41/52: $0$formal$cva6_lsu_formal.v:161$6_EN[0:0]$42
    42/52: $0$formal$cva6_lsu_formal.v:161$6_CHECK[0:0]$41
    43/52: $0$formal$cva6_lsu_formal.v:162$7_EN[0:0]$44
    44/52: $0$formal$cva6_lsu_formal.v:162$7_CHECK[0:0]$43
    45/52: $0$formal$cva6_lsu_formal.v:164$8_EN[0:0]$46
    46/52: $0$formal$cva6_lsu_formal.v:164$8_CHECK[0:0]$45
    47/52: $0$formal$cva6_lsu_formal.v:169$9_EN[0:0]$48
    48/52: $0$formal$cva6_lsu_formal.v:169$9_CHECK[0:0]$47
    49/52: $0$formal$cva6_lsu_formal.v:171$10_EN[0:0]$50
    50/52: $0$formal$cva6_lsu_formal.v:171$10_CHECK[0:0]$49
    51/52: $0$formal$cva6_lsu_formal.v:206$11_EN[0:0]$52
    52/52: $0$formal$cva6_lsu_formal.v:206$11_CHECK[0:0]$51
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$392_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$592'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:70$387' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$587'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$408_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$587'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$408_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$587'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:68$386' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$582'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$407_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$582'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$407_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$582'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cva6_lsu_model.\CLK_CYCLE' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10193' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\instr_i_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10194' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_store_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10195' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_commit_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10196' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_serve_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10197' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10198' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10199' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_queue_state' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10200' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10201' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10202' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10203' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10204' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10205' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10206' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10207' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10208' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10209' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10210' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10211' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10212' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\ready_flag' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10213' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10214' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10215' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10216' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10217' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10218' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10219' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10220' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10221' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_load_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10222' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$388' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10223' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$389' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10224' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$390' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10225' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$391' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10226' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10227' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10228' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10229' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10230' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10231' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10232' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10233' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10234' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10235' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10236' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10237' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10238' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10239' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$393_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10240' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10241' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$394_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10242' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10243' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$395_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10244' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10245' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$396_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10246' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10247' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10248' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10249' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$398_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10250' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10251' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$399_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10252' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10253' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10254' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10255' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$401_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10256' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10257' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$402_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10258' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10259' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$403_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10260' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10261' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$404_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10262' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10263' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$405_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10264' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10265' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$406_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
  created $adff cell `$procdff$10266' with positive edge clock and negative level reset.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10267' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10268' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10269' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10270' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10271' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10272' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10273' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10274' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10275' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10276' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10277' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10278' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10279' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10280' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10281' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10282' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10283' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10284' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10285' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10286' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10287' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10288' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10289' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10290' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10291' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10292' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10293' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10294' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10295' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10296' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10297' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10298' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10299' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10300' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10301' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10302' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10303' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10304' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10305' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10306' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10307' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10308' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10309' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10310' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10311' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10312' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10313' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10314' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10315' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10316' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10317' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10318' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10319' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10320' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10321' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10322' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10323' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10324' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10325' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10326' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10327' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10328' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10329' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10330' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10331' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10332' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10333' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10334' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10335' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10336' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10337' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10338' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10339' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10340' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10341' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10342' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10343' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10344' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10345' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$132.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10346' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$132.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10347' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$133.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10348' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$133.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10349' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$134.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10350' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$134.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10351' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$135.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10352' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$135.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10353' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$136.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10354' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$136.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10355' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$137.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10356' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$137.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10357' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10358' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10359' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10360' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$138.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10361' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$139.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10362' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$139.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10363' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$139.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10364' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10365' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10366' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10367' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10368' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10369' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10370' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10371' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10372' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10373' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10374' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10375' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10376' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10377' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10378' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10379' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10380' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10381' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10382' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10383' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10384' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10385' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10386' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10387' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10388' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10389' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10390' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10391' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10392' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10393' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10394' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10395' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10396' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10397' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10398' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10399' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10400' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10401' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10402' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10403' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10404' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10405' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10406' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10407' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10408' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10409' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10410' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10411' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10412' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10413' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10414' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10415' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10416' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10417' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10418' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10419' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10420' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10421' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10422' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10423' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10424' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10425' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10426' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10427' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10428' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10429' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$140_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10430' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10431' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$141_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10432' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10433' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$142_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10434' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10435' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$143_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10436' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10437' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$144_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10438' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10439' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$145_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10440' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10441' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$146_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10442' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10443' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$147_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
  created $dff cell `$procdff$10444' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10445' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10446' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10447' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10448' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10449' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10450' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10451' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10452' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10453' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10454' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10455' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10456' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10457' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10458' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10459' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10460' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10461' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10462' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10463' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10464' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10465' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10466' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10467' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:164$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10468' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10469' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10470' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:171$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10471' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:171$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10472' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:206$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10473' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:206$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
  created $dff cell `$procdff$10474' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10475' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10476' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10477' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
  created $dff cell `$procdff$10478' with positive edge clock.

4.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$592'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$592'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$587'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$587'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$582'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$582'.
Found and cleaned up 28 empty switches in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:85$415'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$148'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$130'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$128'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$126'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$124'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$122'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$120'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$118'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$30'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$12'.
Cleaned up 70 empty switches.

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_model.
<suppressed ~23 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~8 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 674 unused cells and 3784 unused wires.
<suppressed ~771 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~132 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Removed a total of 3149 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10011.
    dead port 1/2 on $mux $procmux$10017.
    dead port 1/2 on $mux $procmux$10023.
    dead port 1/2 on $mux $procmux$10029.
    dead port 1/2 on $mux $procmux$10047.
    dead port 1/2 on $mux $procmux$10053.
    dead port 1/2 on $mux $procmux$10059.
    dead port 1/2 on $mux $procmux$10065.
    dead port 2/2 on $mux $procmux$9912.
    dead port 2/2 on $mux $procmux$9914.
    dead port 1/2 on $mux $procmux$9917.
    dead port 2/2 on $mux $procmux$9923.
    dead port 1/2 on $mux $procmux$9926.
    dead port 2/2 on $mux $procmux$9932.
    dead port 1/2 on $mux $procmux$9935.
    dead port 2/2 on $mux $procmux$9941.
    dead port 1/2 on $mux $procmux$9944.
    dead port 2/2 on $mux $procmux$9962.
    dead port 2/2 on $mux $procmux$9964.
    dead port 1/2 on $mux $procmux$9967.
    dead port 2/2 on $mux $procmux$9973.
    dead port 1/2 on $mux $procmux$9976.
    dead port 2/2 on $mux $procmux$9982.
    dead port 1/2 on $mux $procmux$9985.
    dead port 2/2 on $mux $procmux$9991.
    dead port 1/2 on $mux $procmux$9994.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1014.
    dead port 2/2 on $mux $procmux$921.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1358: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$1336: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$2048: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$1965: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1766: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1688: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1613: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1454: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1428: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6098.
    dead port 1/2 on $mux $procmux$6105.
    dead port 2/2 on $mux $procmux$6107.
    dead port 2/2 on $mux $procmux$6110.
    dead port 1/2 on $mux $procmux$6117.
    dead port 2/2 on $mux $procmux$6119.
    dead port 2/2 on $mux $procmux$6122.
    dead port 1/2 on $mux $procmux$6129.
    dead port 2/2 on $mux $procmux$6131.
    dead port 2/2 on $mux $procmux$6134.
    dead port 1/2 on $mux $procmux$6141.
    dead port 2/2 on $mux $procmux$6143.
    dead port 2/2 on $mux $procmux$6146.
    dead port 1/2 on $mux $procmux$6153.
    dead port 2/2 on $mux $procmux$6155.
    dead port 2/2 on $mux $procmux$6158.
    dead port 1/2 on $mux $procmux$6165.
    dead port 2/2 on $mux $procmux$6167.
    dead port 2/2 on $mux $procmux$6170.
    dead port 1/2 on $mux $procmux$6177.
    dead port 2/2 on $mux $procmux$6179.
    dead port 2/2 on $mux $procmux$6182.
    dead port 1/2 on $mux $procmux$6189.
    dead port 2/2 on $mux $procmux$6191.
    dead port 2/2 on $mux $procmux$6194.
    dead port 1/2 on $mux $procmux$6201.
    dead port 2/2 on $mux $procmux$6203.
    dead port 2/2 on $mux $procmux$6206.
    dead port 1/2 on $mux $procmux$6213.
    dead port 2/2 on $mux $procmux$6215.
    dead port 2/2 on $mux $procmux$6218.
    dead port 1/2 on $mux $procmux$6225.
    dead port 2/2 on $mux $procmux$6227.
    dead port 2/2 on $mux $procmux$6230.
    dead port 1/2 on $mux $procmux$6237.
    dead port 2/2 on $mux $procmux$6239.
    dead port 2/2 on $mux $procmux$6242.
    dead port 1/2 on $mux $procmux$6249.
    dead port 2/2 on $mux $procmux$6251.
    dead port 2/2 on $mux $procmux$6254.
    dead port 1/2 on $mux $procmux$6261.
    dead port 2/2 on $mux $procmux$6263.
    dead port 2/2 on $mux $procmux$6266.
    dead port 1/2 on $mux $procmux$6273.
    dead port 2/2 on $mux $procmux$6275.
    dead port 2/2 on $mux $procmux$6278.
    dead port 1/2 on $mux $procmux$6333.
    dead port 2/2 on $mux $procmux$6335.
    dead port 2/2 on $mux $procmux$6338.
    dead port 2/2 on $mux $procmux$6603.
    dead port 2/2 on $mux $procmux$6605.
    dead port 2/2 on $mux $procmux$6608.
    dead port 1/2 on $mux $procmux$1829.
    dead port 1/2 on $mux $procmux$1832.
    dead port 2/2 on $mux $procmux$1835.
    dead port 2/2 on $mux $procmux$1842.
    dead port 1/2 on $mux $procmux$1844.
    dead port 1/2 on $mux $procmux$1847.
    dead port 2/2 on $mux $procmux$1850.
    dead port 2/2 on $mux $procmux$2523.
    dead port 1/2 on $mux $procmux$2526.
    dead port 1/2 on $mux $procmux$2529.
    dead port 2/2 on $mux $procmux$2531.
    dead port 2/2 on $mux $procmux$4680.
    dead port 1/2 on $mux $procmux$4683.
    dead port 2/2 on $mux $procmux$4685.
    dead port 2/2 on $mux $procmux$4688.
    dead port 2/2 on $mux $procmux$2534.
    dead port 2/2 on $mux $procmux$1857.
    dead port 1/2 on $mux $procmux$1859.
    dead port 1/2 on $mux $procmux$1862.
    dead port 2/2 on $mux $procmux$1865.
    dead port 2/2 on $mux $procmux$3195.
    dead port 1/2 on $mux $procmux$3198.
    dead port 1/2 on $mux $procmux$3201.
    dead port 2/2 on $mux $procmux$3203.
    dead port 2/2 on $mux $procmux$3206.
    dead port 1/2 on $mux $procmux$1871.
    dead port 2/2 on $mux $procmux$6645.
    dead port 2/2 on $mux $procmux$6647.
    dead port 2/2 on $mux $procmux$6650.
    dead port 1/2 on $mux $procmux$1874.
    dead port 2/2 on $mux $procmux$1877.
    dead port 1/2 on $mux $procmux$1883.
    dead port 1/2 on $mux $procmux$1886.
    dead port 2/2 on $mux $procmux$1889.
    dead port 1/2 on $mux $procmux$1895.
    dead port 1/2 on $mux $procmux$1898.
    dead port 2/2 on $mux $procmux$1901.
    dead port 1/2 on $mux $procmux$1919.
    dead port 1/2 on $mux $procmux$1922.
    dead port 2/2 on $mux $procmux$1925.
    dead port 1/2 on $mux $procmux$1931.
    dead port 1/2 on $mux $procmux$1934.
    dead port 2/2 on $mux $procmux$4725.
    dead port 1/2 on $mux $procmux$4728.
    dead port 2/2 on $mux $procmux$4730.
    dead port 2/2 on $mux $procmux$4733.
    dead port 2/2 on $mux $procmux$1937.
    dead port 1/2 on $mux $procmux$1943.
    dead port 1/2 on $mux $procmux$1946.
    dead port 2/2 on $mux $procmux$1949.
    dead port 1/2 on $mux $procmux$1955.
    dead port 1/2 on $mux $procmux$1958.
    dead port 2/2 on $mux $procmux$2571.
    dead port 1/2 on $mux $procmux$2574.
    dead port 2/2 on $mux $procmux$6687.
    dead port 2/2 on $mux $procmux$6689.
    dead port 2/2 on $mux $procmux$6692.
    dead port 1/2 on $mux $procmux$2577.
    dead port 2/2 on $mux $procmux$2579.
    dead port 2/2 on $mux $procmux$2582.
    dead port 2/2 on $mux $procmux$3243.
    dead port 1/2 on $mux $procmux$3246.
    dead port 1/2 on $mux $procmux$3249.
    dead port 2/2 on $mux $procmux$3251.
    dead port 2/2 on $mux $procmux$3254.
    dead port 2/2 on $mux $procmux$1961.
    dead port 1/2 on $mux $procmux$1967.
    dead port 1/2 on $mux $procmux$1970.
    dead port 2/2 on $mux $procmux$1973.
    dead port 1/2 on $mux $procmux$1979.
    dead port 2/2 on $mux $procmux$1982.
    dead port 1/2 on $mux $procmux$1988.
    dead port 2/2 on $mux $procmux$1991.
    dead port 2/2 on $mux $procmux$4770.
    dead port 1/2 on $mux $procmux$4773.
    dead port 2/2 on $mux $procmux$4775.
    dead port 2/2 on $mux $procmux$4778.
    dead port 1/2 on $mux $procmux$2006.
    dead port 2/2 on $mux $procmux$2009.
    dead port 1/2 on $mux $procmux$2015.
    dead port 2/2 on $mux $procmux$2018.
    dead port 2/2 on $mux $procmux$6729.
    dead port 2/2 on $mux $procmux$6731.
    dead port 2/2 on $mux $procmux$6734.
    dead port 1/2 on $mux $procmux$2024.
    dead port 2/2 on $mux $procmux$2027.
    dead port 1/2 on $mux $procmux$2033.
    dead port 2/2 on $mux $procmux$2036.
    dead port 1/2 on $mux $procmux$2042.
    dead port 2/2 on $mux $procmux$2045.
    dead port 1/2 on $mux $procmux$2051.
    dead port 2/2 on $mux $procmux$2054.
    dead port 2/2 on $mux $procmux$3291.
    dead port 1/2 on $mux $procmux$3294.
    dead port 1/2 on $mux $procmux$3297.
    dead port 2/2 on $mux $procmux$3299.
    dead port 2/2 on $mux $procmux$3302.
    dead port 2/2 on $mux $procmux$2619.
    dead port 1/2 on $mux $procmux$2622.
    dead port 1/2 on $mux $procmux$2625.
    dead port 2/2 on $mux $procmux$2627.
    dead port 2/2 on $mux $procmux$2630.
    dead port 2/2 on $mux $procmux$4815.
    dead port 1/2 on $mux $procmux$4818.
    dead port 2/2 on $mux $procmux$4820.
    dead port 2/2 on $mux $procmux$4823.
    dead port 2/2 on $mux $procmux$6771.
    dead port 2/2 on $mux $procmux$6773.
    dead port 2/2 on $mux $procmux$6776.
    dead port 2/2 on $mux $procmux$3339.
    dead port 1/2 on $mux $procmux$3342.
    dead port 1/2 on $mux $procmux$3345.
    dead port 2/2 on $mux $procmux$3347.
    dead port 2/2 on $mux $procmux$3350.
    dead port 2/2 on $mux $procmux$6813.
    dead port 2/2 on $mux $procmux$6815.
    dead port 2/2 on $mux $procmux$6818.
    dead port 2/2 on $mux $procmux$4860.
    dead port 1/2 on $mux $procmux$4863.
    dead port 2/2 on $mux $procmux$4865.
    dead port 2/2 on $mux $procmux$4868.
    dead port 2/2 on $mux $procmux$2091.
    dead port 1/2 on $mux $procmux$2094.
    dead port 2/2 on $mux $procmux$2667.
    dead port 1/2 on $mux $procmux$2670.
    dead port 1/2 on $mux $procmux$2673.
    dead port 2/2 on $mux $procmux$2675.
    dead port 2/2 on $mux $procmux$2678.
    dead port 1/2 on $mux $procmux$2097.
    dead port 2/2 on $mux $procmux$2099.
    dead port 2/2 on $mux $procmux$2102.
    dead port 2/2 on $mux $procmux$6855.
    dead port 2/2 on $mux $procmux$6857.
    dead port 2/2 on $mux $procmux$6860.
    dead port 2/2 on $mux $procmux$4905.
    dead port 1/2 on $mux $procmux$4908.
    dead port 2/2 on $mux $procmux$4910.
    dead port 2/2 on $mux $procmux$4913.
    dead port 2/2 on $mux $procmux$3387.
    dead port 1/2 on $mux $procmux$3390.
    dead port 1/2 on $mux $procmux$3393.
    dead port 2/2 on $mux $procmux$3395.
    dead port 2/2 on $mux $procmux$3398.
    dead port 2/2 on $mux $procmux$2715.
    dead port 1/2 on $mux $procmux$2718.
    dead port 1/2 on $mux $procmux$2721.
    dead port 2/2 on $mux $procmux$2723.
    dead port 2/2 on $mux $procmux$6897.
    dead port 2/2 on $mux $procmux$6899.
    dead port 2/2 on $mux $procmux$6902.
    dead port 2/2 on $mux $procmux$2726.
    dead port 2/2 on $mux $procmux$2139.
    dead port 1/2 on $mux $procmux$2142.
    dead port 1/2 on $mux $procmux$2145.
    dead port 2/2 on $mux $procmux$2147.
    dead port 2/2 on $mux $procmux$4950.
    dead port 1/2 on $mux $procmux$4953.
    dead port 2/2 on $mux $procmux$4955.
    dead port 2/2 on $mux $procmux$4958.
    dead port 2/2 on $mux $procmux$2150.
    dead port 2/2 on $mux $procmux$3435.
    dead port 1/2 on $mux $procmux$3438.
    dead port 1/2 on $mux $procmux$3441.
    dead port 2/2 on $mux $procmux$3443.
    dead port 2/2 on $mux $procmux$3446.
    dead port 2/2 on $mux $procmux$6939.
    dead port 2/2 on $mux $procmux$6941.
    dead port 2/2 on $mux $procmux$6944.
    dead port 2/2 on $mux $procmux$2763.
    dead port 1/2 on $mux $procmux$2766.
    dead port 2/2 on $mux $procmux$4995.
    dead port 1/2 on $mux $procmux$4998.
    dead port 2/2 on $mux $procmux$5000.
    dead port 2/2 on $mux $procmux$5003.
    dead port 1/2 on $mux $procmux$2769.
    dead port 2/2 on $mux $procmux$2771.
    dead port 2/2 on $mux $procmux$2774.
    dead port 2/2 on $mux $procmux$6981.
    dead port 2/2 on $mux $procmux$6983.
    dead port 2/2 on $mux $procmux$6986.
    dead port 2/2 on $mux $procmux$3483.
    dead port 1/2 on $mux $procmux$3486.
    dead port 1/2 on $mux $procmux$3489.
    dead port 2/2 on $mux $procmux$3491.
    dead port 2/2 on $mux $procmux$3494.
    dead port 2/2 on $mux $procmux$2187.
    dead port 1/2 on $mux $procmux$2190.
    dead port 1/2 on $mux $procmux$2193.
    dead port 2/2 on $mux $procmux$2195.
    dead port 2/2 on $mux $procmux$2198.
    dead port 2/2 on $mux $procmux$5040.
    dead port 1/2 on $mux $procmux$5043.
    dead port 2/2 on $mux $procmux$5045.
    dead port 2/2 on $mux $procmux$5048.
    dead port 2/2 on $mux $procmux$7023.
    dead port 2/2 on $mux $procmux$7025.
    dead port 2/2 on $mux $procmux$7028.
    dead port 2/2 on $mux $procmux$2811.
    dead port 1/2 on $mux $procmux$2814.
    dead port 1/2 on $mux $procmux$2817.
    dead port 2/2 on $mux $procmux$2819.
    dead port 2/2 on $mux $procmux$2822.
    dead port 2/2 on $mux $procmux$3531.
    dead port 1/2 on $mux $procmux$3534.
    dead port 1/2 on $mux $procmux$3537.
    dead port 2/2 on $mux $procmux$3539.
    dead port 2/2 on $mux $procmux$3542.
    dead port 2/2 on $mux $procmux$5085.
    dead port 1/2 on $mux $procmux$5088.
    dead port 2/2 on $mux $procmux$5090.
    dead port 2/2 on $mux $procmux$5093.
    dead port 2/2 on $mux $procmux$7065.
    dead port 2/2 on $mux $procmux$7067.
    dead port 2/2 on $mux $procmux$7070.
    dead port 2/2 on $mux $procmux$2235.
    dead port 1/2 on $mux $procmux$2238.
    dead port 1/2 on $mux $procmux$2241.
    dead port 2/2 on $mux $procmux$2243.
    dead port 2/2 on $mux $procmux$2246.
    dead port 2/2 on $mux $procmux$2859.
    dead port 1/2 on $mux $procmux$2862.
    dead port 2/2 on $mux $procmux$3579.
    dead port 1/2 on $mux $procmux$3582.
    dead port 1/2 on $mux $procmux$3585.
    dead port 2/2 on $mux $procmux$3587.
    dead port 2/2 on $mux $procmux$3590.
    dead port 2/2 on $mux $procmux$5130.
    dead port 1/2 on $mux $procmux$5133.
    dead port 2/2 on $mux $procmux$7107.
    dead port 2/2 on $mux $procmux$7109.
    dead port 2/2 on $mux $procmux$7112.
    dead port 2/2 on $mux $procmux$5135.
    dead port 2/2 on $mux $procmux$5138.
    dead port 2/2 on $mux $procmux$7149.
    dead port 2/2 on $mux $procmux$7151.
    dead port 2/2 on $mux $procmux$7154.
    dead port 2/2 on $mux $procmux$5175.
    dead port 1/2 on $mux $procmux$5178.
    dead port 2/2 on $mux $procmux$5180.
    dead port 2/2 on $mux $procmux$5183.
    dead port 1/2 on $mux $procmux$3645.
    dead port 1/2 on $mux $procmux$3648.
    dead port 2/2 on $mux $procmux$3650.
    dead port 2/2 on $mux $procmux$3653.
    dead port 1/2 on $mux $procmux$3660.
    dead port 1/2 on $mux $procmux$3663.
    dead port 2/2 on $mux $procmux$3665.
    dead port 2/2 on $mux $procmux$3668.
    dead port 1/2 on $mux $procmux$3675.
    dead port 1/2 on $mux $procmux$3678.
    dead port 2/2 on $mux $procmux$3680.
    dead port 2/2 on $mux $procmux$3683.
    dead port 1/2 on $mux $procmux$3690.
    dead port 1/2 on $mux $procmux$3693.
    dead port 2/2 on $mux $procmux$3695.
    dead port 2/2 on $mux $procmux$3698.
    dead port 2/2 on $mux $procmux$7191.
    dead port 2/2 on $mux $procmux$7193.
    dead port 2/2 on $mux $procmux$7196.
    dead port 1/2 on $mux $procmux$3705.
    dead port 1/2 on $mux $procmux$3708.
    dead port 2/2 on $mux $procmux$3710.
    dead port 2/2 on $mux $procmux$3713.
    dead port 1/2 on $mux $procmux$3720.
    dead port 1/2 on $mux $procmux$3723.
    dead port 2/2 on $mux $procmux$3725.
    dead port 2/2 on $mux $procmux$5220.
    dead port 1/2 on $mux $procmux$5223.
    dead port 2/2 on $mux $procmux$5225.
    dead port 2/2 on $mux $procmux$5228.
    dead port 2/2 on $mux $procmux$3728.
    dead port 1/2 on $mux $procmux$3735.
    dead port 1/2 on $mux $procmux$3738.
    dead port 2/2 on $mux $procmux$3740.
    dead port 2/2 on $mux $procmux$3743.
    dead port 1/2 on $mux $procmux$3750.
    dead port 1/2 on $mux $procmux$3753.
    dead port 2/2 on $mux $procmux$3755.
    dead port 2/2 on $mux $procmux$3758.
    dead port 1/2 on $mux $procmux$3765.
    dead port 1/2 on $mux $procmux$3768.
    dead port 2/2 on $mux $procmux$3770.
    dead port 2/2 on $mux $procmux$3773.
    dead port 1/2 on $mux $procmux$3780.
    dead port 1/2 on $mux $procmux$3783.
    dead port 2/2 on $mux $procmux$7233.
    dead port 2/2 on $mux $procmux$7235.
    dead port 2/2 on $mux $procmux$7238.
    dead port 2/2 on $mux $procmux$3785.
    dead port 2/2 on $mux $procmux$3788.
    dead port 1/2 on $mux $procmux$3795.
    dead port 1/2 on $mux $procmux$3798.
    dead port 2/2 on $mux $procmux$3800.
    dead port 2/2 on $mux $procmux$3803.
    dead port 1/2 on $mux $procmux$3810.
    dead port 1/2 on $mux $procmux$3813.
    dead port 2/2 on $mux $procmux$3815.
    dead port 2/2 on $mux $procmux$3818.
    dead port 2/2 on $mux $procmux$5265.
    dead port 1/2 on $mux $procmux$5268.
    dead port 2/2 on $mux $procmux$5270.
    dead port 2/2 on $mux $procmux$5273.
    dead port 1/2 on $mux $procmux$3825.
    dead port 1/2 on $mux $procmux$3828.
    dead port 2/2 on $mux $procmux$3830.
    dead port 2/2 on $mux $procmux$3833.
    dead port 1/2 on $mux $procmux$3840.
    dead port 1/2 on $mux $procmux$3843.
    dead port 2/2 on $mux $procmux$3845.
    dead port 2/2 on $mux $procmux$3848.
    dead port 1/2 on $mux $procmux$3855.
    dead port 1/2 on $mux $procmux$3858.
    dead port 2/2 on $mux $procmux$3860.
    dead port 2/2 on $mux $procmux$3863.
    dead port 2/2 on $mux $procmux$7275.
    dead port 2/2 on $mux $procmux$7277.
    dead port 2/2 on $mux $procmux$7280.
    dead port 1/2 on $mux $procmux$3870.
    dead port 1/2 on $mux $procmux$3873.
    dead port 2/2 on $mux $procmux$3875.
    dead port 2/2 on $mux $procmux$3878.
    dead port 1/2 on $mux $procmux$3885.
    dead port 1/2 on $mux $procmux$3888.
    dead port 2/2 on $mux $procmux$3890.
    dead port 2/2 on $mux $procmux$3893.
    dead port 1/2 on $mux $procmux$3900.
    dead port 1/2 on $mux $procmux$3903.
    dead port 2/2 on $mux $procmux$3905.
    dead port 2/2 on $mux $procmux$3908.
    dead port 1/2 on $mux $procmux$3915.
    dead port 1/2 on $mux $procmux$3918.
    dead port 2/2 on $mux $procmux$5310.
    dead port 1/2 on $mux $procmux$5313.
    dead port 2/2 on $mux $procmux$5315.
    dead port 2/2 on $mux $procmux$5318.
    dead port 2/2 on $mux $procmux$3920.
    dead port 2/2 on $mux $procmux$3923.
    dead port 1/2 on $mux $procmux$3930.
    dead port 1/2 on $mux $procmux$3933.
    dead port 2/2 on $mux $procmux$3935.
    dead port 2/2 on $mux $procmux$3938.
    dead port 1/2 on $mux $procmux$3945.
    dead port 2/2 on $mux $procmux$7317.
    dead port 2/2 on $mux $procmux$7319.
    dead port 2/2 on $mux $procmux$7322.
    dead port 1/2 on $mux $procmux$3948.
    dead port 2/2 on $mux $procmux$3950.
    dead port 2/2 on $mux $procmux$3953.
    dead port 1/2 on $mux $procmux$3960.
    dead port 1/2 on $mux $procmux$3963.
    dead port 2/2 on $mux $procmux$3965.
    dead port 2/2 on $mux $procmux$3968.
    dead port 1/2 on $mux $procmux$3975.
    dead port 1/2 on $mux $procmux$3978.
    dead port 2/2 on $mux $procmux$3980.
    dead port 2/2 on $mux $procmux$3983.
    dead port 1/2 on $mux $procmux$3990.
    dead port 1/2 on $mux $procmux$3993.
    dead port 2/2 on $mux $procmux$3995.
    dead port 2/2 on $mux $procmux$3998.
    dead port 1/2 on $mux $procmux$4005.
    dead port 1/2 on $mux $procmux$4008.
    dead port 2/2 on $mux $procmux$4010.
    dead port 2/2 on $mux $procmux$4013.
    dead port 2/2 on $mux $procmux$5355.
    dead port 1/2 on $mux $procmux$5358.
    dead port 2/2 on $mux $procmux$5360.
    dead port 2/2 on $mux $procmux$5363.
    dead port 1/2 on $mux $procmux$4020.
    dead port 1/2 on $mux $procmux$4023.
    dead port 2/2 on $mux $procmux$4025.
    dead port 2/2 on $mux $procmux$7359.
    dead port 2/2 on $mux $procmux$7361.
    dead port 2/2 on $mux $procmux$7364.
    dead port 2/2 on $mux $procmux$4028.
    dead port 1/2 on $mux $procmux$4035.
    dead port 1/2 on $mux $procmux$4038.
    dead port 2/2 on $mux $procmux$4040.
    dead port 2/2 on $mux $procmux$4043.
    dead port 1/2 on $mux $procmux$4050.
    dead port 1/2 on $mux $procmux$4053.
    dead port 2/2 on $mux $procmux$4055.
    dead port 2/2 on $mux $procmux$4058.
    dead port 1/2 on $mux $procmux$4065.
    dead port 1/2 on $mux $procmux$4068.
    dead port 2/2 on $mux $procmux$4070.
    dead port 2/2 on $mux $procmux$4073.
    dead port 1/2 on $mux $procmux$4080.
    dead port 1/2 on $mux $procmux$4083.
    dead port 2/2 on $mux $procmux$4085.
    dead port 2/2 on $mux $procmux$4088.
    dead port 1/2 on $mux $procmux$4095.
    dead port 1/2 on $mux $procmux$4098.
    dead port 2/2 on $mux $procmux$4100.
    dead port 2/2 on $mux $procmux$4103.
    dead port 1/2 on $mux $procmux$4110.
    dead port 2/2 on $mux $procmux$5400.
    dead port 1/2 on $mux $procmux$5403.
    dead port 2/2 on $mux $procmux$5405.
    dead port 2/2 on $mux $procmux$5408.
    dead port 2/2 on $mux $procmux$7401.
    dead port 2/2 on $mux $procmux$7403.
    dead port 2/2 on $mux $procmux$7406.
    dead port 1/2 on $mux $procmux$4113.
    dead port 2/2 on $mux $procmux$4115.
    dead port 2/2 on $mux $procmux$4118.
    dead port 1/2 on $mux $procmux$4125.
    dead port 1/2 on $mux $procmux$4128.
    dead port 2/2 on $mux $procmux$4130.
    dead port 2/2 on $mux $procmux$4133.
    dead port 1/2 on $mux $procmux$2865.
    dead port 2/2 on $mux $procmux$2867.
    dead port 2/2 on $mux $procmux$2870.
    dead port 1/2 on $mux $procmux$1309.
    dead port 2/2 on $mux $procmux$1312.
    dead port 2/2 on $mux $procmux$1318.
    dead port 2/2 on $mux $procmux$1324.
    dead port 1/2 on $mux $procmux$1330.
    dead port 2/2 on $mux $procmux$1333.
    dead port 1/2 on $mux $procmux$1339.
    dead port 2/2 on $mux $procmux$7443.
    dead port 2/2 on $mux $procmux$7445.
    dead port 2/2 on $mux $procmux$7448.
    dead port 2/2 on $mux $procmux$1342.
    dead port 2/2 on $mux $procmux$5445.
    dead port 1/2 on $mux $procmux$5448.
    dead port 2/2 on $mux $procmux$5450.
    dead port 2/2 on $mux $procmux$5453.
    dead port 1/2 on $mux $procmux$1349.
    dead port 2/2 on $mux $procmux$1351.
    dead port 2/2 on $mux $procmux$2283.
    dead port 1/2 on $mux $procmux$2286.
    dead port 1/2 on $mux $procmux$2289.
    dead port 2/2 on $mux $procmux$2291.
    dead port 2/2 on $mux $procmux$2294.
    dead port 2/2 on $mux $procmux$4365.
    dead port 1/2 on $mux $procmux$4368.
    dead port 2/2 on $mux $procmux$4370.
    dead port 2/2 on $mux $procmux$4373.
    dead port 2/2 on $mux $procmux$1354.
    dead port 1/2 on $mux $procmux$1361.
    dead port 2/2 on $mux $procmux$1363.
    dead port 2/2 on $mux $procmux$2907.
    dead port 1/2 on $mux $procmux$2910.
    dead port 1/2 on $mux $procmux$2913.
    dead port 2/2 on $mux $procmux$2915.
    dead port 2/2 on $mux $procmux$2918.
    dead port 2/2 on $mux $procmux$1366.
    dead port 2/2 on $mux $procmux$7485.
    dead port 2/2 on $mux $procmux$7487.
    dead port 2/2 on $mux $procmux$7490.
    dead port 1/2 on $mux $procmux$1373.
    dead port 2/2 on $mux $procmux$1375.
    dead port 2/2 on $mux $procmux$1378.
    dead port 2/2 on $mux $procmux$1384.
    dead port 2/2 on $mux $procmux$1387.
    dead port 2/2 on $mux $procmux$5490.
    dead port 1/2 on $mux $procmux$5493.
    dead port 2/2 on $mux $procmux$5495.
    dead port 2/2 on $mux $procmux$5498.
    dead port 2/2 on $mux $procmux$1393.
    dead port 2/2 on $mux $procmux$1396.
    dead port 2/2 on $mux $procmux$1402.
    dead port 2/2 on $mux $procmux$1405.
    dead port 2/2 on $mux $procmux$1411.
    dead port 2/2 on $mux $procmux$1417.
    dead port 2/2 on $mux $procmux$1423.
    dead port 2/2 on $mux $procmux$1430.
    dead port 2/2 on $mux $procmux$4410.
    dead port 1/2 on $mux $procmux$4413.
    dead port 2/2 on $mux $procmux$4415.
    dead port 2/2 on $mux $procmux$4418.
    dead port 1/2 on $mux $procmux$1433.
    dead port 1/2 on $mux $procmux$1436.
    dead port 2/2 on $mux $procmux$7527.
    dead port 2/2 on $mux $procmux$7529.
    dead port 2/2 on $mux $procmux$7532.
    dead port 1/2 on $mux $procmux$1439.
    dead port 1/2 on $mux $procmux$1442.
    dead port 1/2 on $mux $procmux$1444.
    dead port 1/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$2331.
    dead port 1/2 on $mux $procmux$2334.
    dead port 1/2 on $mux $procmux$2337.
    dead port 2/2 on $mux $procmux$2339.
    dead port 2/2 on $mux $procmux$2955.
    dead port 1/2 on $mux $procmux$2958.
    dead port 1/2 on $mux $procmux$2961.
    dead port 2/2 on $mux $procmux$5535.
    dead port 1/2 on $mux $procmux$5538.
    dead port 2/2 on $mux $procmux$5540.
    dead port 2/2 on $mux $procmux$5543.
    dead port 2/2 on $mux $procmux$2963.
    dead port 2/2 on $mux $procmux$2966.
    dead port 2/2 on $mux $procmux$2342.
    dead port 2/2 on $mux $procmux$1450.
    dead port 1/2 on $mux $procmux$1457.
    dead port 1/2 on $mux $procmux$1460.
    dead port 1/2 on $mux $procmux$1463.
    dead port 1/2 on $mux $procmux$1466.
    dead port 1/2 on $mux $procmux$1468.
    dead port 1/2 on $mux $procmux$1471.
    dead port 2/2 on $mux $procmux$1474.
    dead port 1/2 on $mux $procmux$1481.
    dead port 2/2 on $mux $procmux$7569.
    dead port 2/2 on $mux $procmux$7571.
    dead port 2/2 on $mux $procmux$7574.
    dead port 1/2 on $mux $procmux$1484.
    dead port 1/2 on $mux $procmux$1487.
    dead port 1/2 on $mux $procmux$1490.
    dead port 2/2 on $mux $procmux$4455.
    dead port 1/2 on $mux $procmux$4458.
    dead port 2/2 on $mux $procmux$4460.
    dead port 2/2 on $mux $procmux$4463.
    dead port 1/2 on $mux $procmux$1492.
    dead port 1/2 on $mux $procmux$1495.
    dead port 2/2 on $mux $procmux$1498.
    dead port 2/2 on $mux $procmux$1505.
    dead port 1/2 on $mux $procmux$1508.
    dead port 1/2 on $mux $procmux$1511.
    dead port 1/2 on $mux $procmux$1514.
    dead port 2/2 on $mux $procmux$5580.
    dead port 1/2 on $mux $procmux$5583.
    dead port 2/2 on $mux $procmux$5585.
    dead port 2/2 on $mux $procmux$5588.
    dead port 1/2 on $mux $procmux$1516.
    dead port 1/2 on $mux $procmux$1519.
    dead port 2/2 on $mux $procmux$1522.
    dead port 2/2 on $mux $procmux$1529.
    dead port 1/2 on $mux $procmux$1532.
    dead port 1/2 on $mux $procmux$1535.
    dead port 1/2 on $mux $procmux$1538.
    dead port 2/2 on $mux $procmux$3003.
    dead port 1/2 on $mux $procmux$3006.
    dead port 1/2 on $mux $procmux$3009.
    dead port 2/2 on $mux $procmux$7611.
    dead port 2/2 on $mux $procmux$7613.
    dead port 2/2 on $mux $procmux$7616.
    dead port 2/2 on $mux $procmux$3011.
    dead port 2/2 on $mux $procmux$3014.
    dead port 1/2 on $mux $procmux$1540.
    dead port 1/2 on $mux $procmux$1543.
    dead port 2/2 on $mux $procmux$2379.
    dead port 1/2 on $mux $procmux$2382.
    dead port 1/2 on $mux $procmux$2385.
    dead port 2/2 on $mux $procmux$2387.
    dead port 2/2 on $mux $procmux$2390.
    dead port 2/2 on $mux $procmux$1546.
    dead port 2/2 on $mux $procmux$4500.
    dead port 1/2 on $mux $procmux$4503.
    dead port 2/2 on $mux $procmux$4505.
    dead port 2/2 on $mux $procmux$4508.
    dead port 1/2 on $mux $procmux$1553.
    dead port 1/2 on $mux $procmux$1556.
    dead port 1/2 on $mux $procmux$1559.
    dead port 2/2 on $mux $procmux$5625.
    dead port 1/2 on $mux $procmux$5628.
    dead port 2/2 on $mux $procmux$5630.
    dead port 2/2 on $mux $procmux$5633.
    dead port 1/2 on $mux $procmux$1561.
    dead port 1/2 on $mux $procmux$1564.
    dead port 2/2 on $mux $procmux$1567.
    dead port 1/2 on $mux $procmux$1574.
    dead port 1/2 on $mux $procmux$1577.
    dead port 2/2 on $mux $procmux$7653.
    dead port 2/2 on $mux $procmux$7655.
    dead port 2/2 on $mux $procmux$7658.
    dead port 1/2 on $mux $procmux$1580.
    dead port 1/2 on $mux $procmux$1582.
    dead port 1/2 on $mux $procmux$1585.
    dead port 2/2 on $mux $procmux$1588.
    dead port 1/2 on $mux $procmux$1595.
    dead port 1/2 on $mux $procmux$1598.
    dead port 1/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1603.
    dead port 1/2 on $mux $procmux$1606.
    dead port 2/2 on $mux $procmux$1609.
    dead port 1/2 on $mux $procmux$1616.
    dead port 2/2 on $mux $procmux$3051.
    dead port 1/2 on $mux $procmux$3054.
    dead port 1/2 on $mux $procmux$3057.
    dead port 2/2 on $mux $procmux$3059.
    dead port 2/2 on $mux $procmux$3062.
    dead port 1/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1622.
    dead port 1/2 on $mux $procmux$1624.
    dead port 1/2 on $mux $procmux$1627.
    dead port 2/2 on $mux $procmux$4545.
    dead port 1/2 on $mux $procmux$4548.
    dead port 2/2 on $mux $procmux$4550.
    dead port 2/2 on $mux $procmux$5670.
    dead port 1/2 on $mux $procmux$5673.
    dead port 2/2 on $mux $procmux$5675.
    dead port 2/2 on $mux $procmux$5678.
    dead port 2/2 on $mux $procmux$4553.
    dead port 2/2 on $mux $procmux$7695.
    dead port 2/2 on $mux $procmux$7697.
    dead port 2/2 on $mux $procmux$7700.
    dead port 2/2 on $mux $procmux$1630.
    dead port 1/2 on $mux $procmux$1637.
    dead port 1/2 on $mux $procmux$1640.
    dead port 2/2 on $mux $procmux$2427.
    dead port 1/2 on $mux $procmux$2430.
    dead port 1/2 on $mux $procmux$2433.
    dead port 2/2 on $mux $procmux$2435.
    dead port 2/2 on $mux $procmux$2438.
    dead port 1/2 on $mux $procmux$1642.
    dead port 1/2 on $mux $procmux$1645.
    dead port 2/2 on $mux $procmux$1648.
    dead port 1/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1658.
    dead port 1/2 on $mux $procmux$1660.
    dead port 1/2 on $mux $procmux$1663.
    dead port 2/2 on $mux $procmux$1666.
    dead port 1/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1676.
    dead port 1/2 on $mux $procmux$1678.
    dead port 1/2 on $mux $procmux$1681.
    dead port 2/2 on $mux $procmux$1684.
    dead port 1/2 on $mux $procmux$1691.
    dead port 1/2 on $mux $procmux$1694.
    dead port 2/2 on $mux $procmux$3099.
    dead port 1/2 on $mux $procmux$3102.
    dead port 2/2 on $mux $procmux$5715.
    dead port 2/2 on $mux $procmux$7737.
    dead port 2/2 on $mux $procmux$7739.
    dead port 2/2 on $mux $procmux$7742.
    dead port 1/2 on $mux $procmux$5718.
    dead port 2/2 on $mux $procmux$5720.
    dead port 2/2 on $mux $procmux$5723.
    dead port 1/2 on $mux $procmux$3105.
    dead port 2/2 on $mux $procmux$3107.
    dead port 2/2 on $mux $procmux$4590.
    dead port 1/2 on $mux $procmux$4593.
    dead port 2/2 on $mux $procmux$4595.
    dead port 2/2 on $mux $procmux$4598.
    dead port 2/2 on $mux $procmux$3110.
    dead port 1/2 on $mux $procmux$1696.
    dead port 1/2 on $mux $procmux$1699.
    dead port 2/2 on $mux $procmux$1702.
    dead port 1/2 on $mux $procmux$1709.
    dead port 1/2 on $mux $procmux$1711.
    dead port 1/2 on $mux $procmux$1714.
    dead port 2/2 on $mux $procmux$1717.
    dead port 1/2 on $mux $procmux$1724.
    dead port 1/2 on $mux $procmux$1726.
    dead port 1/2 on $mux $procmux$1729.
    dead port 2/2 on $mux $procmux$1732.
    dead port 2/2 on $mux $procmux$2475.
    dead port 1/2 on $mux $procmux$2478.
    dead port 1/2 on $mux $procmux$2481.
    dead port 2/2 on $mux $procmux$2483.
    dead port 2/2 on $mux $procmux$2486.
    dead port 2/2 on $mux $procmux$7779.
    dead port 2/2 on $mux $procmux$7781.
    dead port 2/2 on $mux $procmux$7784.
    dead port 1/2 on $mux $procmux$1739.
    dead port 1/2 on $mux $procmux$1741.
    dead port 1/2 on $mux $procmux$1744.
    dead port 2/2 on $mux $procmux$5760.
    dead port 1/2 on $mux $procmux$5763.
    dead port 2/2 on $mux $procmux$5765.
    dead port 2/2 on $mux $procmux$5768.
    dead port 2/2 on $mux $procmux$7821.
    dead port 2/2 on $mux $procmux$7823.
    dead port 2/2 on $mux $procmux$7826.
    dead port 2/2 on $mux $procmux$5805.
    dead port 1/2 on $mux $procmux$5808.
    dead port 2/2 on $mux $procmux$5810.
    dead port 2/2 on $mux $procmux$5813.
    dead port 2/2 on $mux $procmux$1747.
    dead port 1/2 on $mux $procmux$1754.
    dead port 1/2 on $mux $procmux$1756.
    dead port 1/2 on $mux $procmux$1759.
    dead port 2/2 on $mux $procmux$1762.
    dead port 2/2 on $mux $procmux$4635.
    dead port 1/2 on $mux $procmux$4638.
    dead port 2/2 on $mux $procmux$4640.
    dead port 2/2 on $mux $procmux$4643.
    dead port 1/2 on $mux $procmux$1769.
    dead port 1/2 on $mux $procmux$1771.
    dead port 2/2 on $mux $procmux$3147.
    dead port 1/2 on $mux $procmux$3150.
    dead port 1/2 on $mux $procmux$3153.
    dead port 2/2 on $mux $procmux$3155.
    dead port 2/2 on $mux $procmux$7863.
    dead port 2/2 on $mux $procmux$7865.
    dead port 2/2 on $mux $procmux$7868.
    dead port 2/2 on $mux $procmux$3158.
    dead port 1/2 on $mux $procmux$1774.
    dead port 2/2 on $mux $procmux$1777.
    dead port 2/2 on $mux $procmux$1798.
    dead port 1/2 on $mux $procmux$1800.
    dead port 1/2 on $mux $procmux$1803.
    dead port 2/2 on $mux $procmux$1806.
    dead port 2/2 on $mux $procmux$1813.
    dead port 1/2 on $mux $procmux$1815.
    dead port 1/2 on $mux $procmux$1818.
    dead port 2/2 on $mux $procmux$1821.
    dead port 2/2 on $mux $procmux$1827.
    dead port 1/2 on $mux $procmux$5865.
    dead port 2/2 on $mux $procmux$5867.
    dead port 2/2 on $mux $procmux$5870.
    dead port 1/2 on $mux $procmux$5877.
    dead port 2/2 on $mux $procmux$5879.
    dead port 2/2 on $mux $procmux$5882.
    dead port 1/2 on $mux $procmux$5889.
    dead port 2/2 on $mux $procmux$5891.
    dead port 2/2 on $mux $procmux$5894.
    dead port 1/2 on $mux $procmux$5901.
    dead port 2/2 on $mux $procmux$7905.
    dead port 2/2 on $mux $procmux$7907.
    dead port 2/2 on $mux $procmux$7910.
    dead port 2/2 on $mux $procmux$5903.
    dead port 2/2 on $mux $procmux$5906.
    dead port 1/2 on $mux $procmux$5913.
    dead port 2/2 on $mux $procmux$5915.
    dead port 2/2 on $mux $procmux$5918.
    dead port 1/2 on $mux $procmux$5925.
    dead port 2/2 on $mux $procmux$5927.
    dead port 2/2 on $mux $procmux$5930.
    dead port 1/2 on $mux $procmux$5937.
    dead port 2/2 on $mux $procmux$5939.
    dead port 2/2 on $mux $procmux$5942.
    dead port 1/2 on $mux $procmux$5949.
    dead port 2/2 on $mux $procmux$5951.
    dead port 2/2 on $mux $procmux$5954.
    dead port 1/2 on $mux $procmux$5961.
    dead port 2/2 on $mux $procmux$5963.
    dead port 2/2 on $mux $procmux$5966.
    dead port 1/2 on $mux $procmux$5973.
    dead port 2/2 on $mux $procmux$5975.
    dead port 2/2 on $mux $procmux$5978.
    dead port 1/2 on $mux $procmux$5985.
    dead port 2/2 on $mux $procmux$5987.
    dead port 2/2 on $mux $procmux$5990.
    dead port 1/2 on $mux $procmux$5997.
    dead port 2/2 on $mux $procmux$7947.
    dead port 2/2 on $mux $procmux$7949.
    dead port 2/2 on $mux $procmux$7952.
    dead port 2/2 on $mux $procmux$5999.
    dead port 2/2 on $mux $procmux$6002.
    dead port 1/2 on $mux $procmux$6009.
    dead port 2/2 on $mux $procmux$6011.
    dead port 2/2 on $mux $procmux$6014.
    dead port 1/2 on $mux $procmux$6021.
    dead port 2/2 on $mux $procmux$6023.
    dead port 2/2 on $mux $procmux$6026.
    dead port 1/2 on $mux $procmux$6033.
    dead port 2/2 on $mux $procmux$6035.
    dead port 2/2 on $mux $procmux$6038.
    dead port 1/2 on $mux $procmux$6045.
    dead port 2/2 on $mux $procmux$6047.
    dead port 2/2 on $mux $procmux$6050.
    dead port 1/2 on $mux $procmux$6057.
    dead port 2/2 on $mux $procmux$6059.
    dead port 2/2 on $mux $procmux$6062.
    dead port 1/2 on $mux $procmux$6069.
    dead port 2/2 on $mux $procmux$6071.
    dead port 2/2 on $mux $procmux$6074.
    dead port 1/2 on $mux $procmux$6081.
    dead port 2/2 on $mux $procmux$6083.
    dead port 2/2 on $mux $procmux$6086.
    dead port 1/2 on $mux $procmux$6093.
    dead port 2/2 on $mux $procmux$8000.
    dead port 2/2 on $mux $procmux$8003.
    dead port 2/2 on $mux $procmux$8009.
    dead port 2/2 on $mux $procmux$8012.
    dead port 2/2 on $mux $procmux$8018.
    dead port 2/2 on $mux $procmux$8021.
    dead port 2/2 on $mux $procmux$8027.
    dead port 2/2 on $mux $procmux$8030.
    dead port 2/2 on $mux $procmux$8036.
    dead port 2/2 on $mux $procmux$8039.
    dead port 2/2 on $mux $procmux$8045.
    dead port 2/2 on $mux $procmux$8048.
    dead port 2/2 on $mux $procmux$8054.
    dead port 2/2 on $mux $procmux$8057.
    dead port 2/2 on $mux $procmux$8063.
    dead port 2/2 on $mux $procmux$8066.
    dead port 2/2 on $mux $procmux$8072.
    dead port 2/2 on $mux $procmux$8075.
    dead port 2/2 on $mux $procmux$8081.
    dead port 2/2 on $mux $procmux$8084.
    dead port 2/2 on $mux $procmux$8090.
    dead port 2/2 on $mux $procmux$8093.
    dead port 2/2 on $mux $procmux$8099.
    dead port 2/2 on $mux $procmux$8102.
    dead port 2/2 on $mux $procmux$8108.
    dead port 2/2 on $mux $procmux$8111.
    dead port 2/2 on $mux $procmux$8117.
    dead port 2/2 on $mux $procmux$8120.
    dead port 2/2 on $mux $procmux$8126.
    dead port 2/2 on $mux $procmux$8129.
    dead port 2/2 on $mux $procmux$8135.
    dead port 2/2 on $mux $procmux$8138.
    dead port 2/2 on $mux $procmux$8144.
    dead port 2/2 on $mux $procmux$8147.
    dead port 2/2 on $mux $procmux$8153.
    dead port 2/2 on $mux $procmux$8156.
    dead port 2/2 on $mux $procmux$8162.
    dead port 2/2 on $mux $procmux$8165.
    dead port 2/2 on $mux $procmux$8171.
    dead port 2/2 on $mux $procmux$8174.
    dead port 2/2 on $mux $procmux$8180.
    dead port 2/2 on $mux $procmux$8183.
    dead port 2/2 on $mux $procmux$8189.
    dead port 2/2 on $mux $procmux$8192.
    dead port 2/2 on $mux $procmux$8198.
    dead port 2/2 on $mux $procmux$8201.
    dead port 2/2 on $mux $procmux$8207.
    dead port 2/2 on $mux $procmux$8210.
    dead port 2/2 on $mux $procmux$8216.
    dead port 2/2 on $mux $procmux$8219.
    dead port 2/2 on $mux $procmux$8225.
    dead port 2/2 on $mux $procmux$8228.
    dead port 2/2 on $mux $procmux$8234.
    dead port 2/2 on $mux $procmux$8237.
    dead port 2/2 on $mux $procmux$8243.
    dead port 2/2 on $mux $procmux$8246.
    dead port 2/2 on $mux $procmux$8252.
    dead port 2/2 on $mux $procmux$8255.
    dead port 2/2 on $mux $procmux$8261.
    dead port 2/2 on $mux $procmux$8264.
    dead port 2/2 on $mux $procmux$8270.
    dead port 2/2 on $mux $procmux$8273.
    dead port 2/2 on $mux $procmux$8279.
    dead port 2/2 on $mux $procmux$8282.
    dead port 2/2 on $mux $procmux$8288.
    dead port 2/2 on $mux $procmux$8291.
    dead port 2/2 on $mux $procmux$8297.
    dead port 2/2 on $mux $procmux$8300.
    dead port 2/2 on $mux $procmux$8306.
    dead port 2/2 on $mux $procmux$8309.
    dead port 2/2 on $mux $procmux$8351.
    dead port 2/2 on $mux $procmux$8354.
    dead port 2/2 on $mux $procmux$8486.
    dead port 2/2 on $mux $procmux$8489.
    dead port 2/2 on $mux $procmux$8495.
    dead port 2/2 on $mux $procmux$8498.
    dead port 2/2 on $mux $procmux$8504.
    dead port 2/2 on $mux $procmux$8507.
    dead port 2/2 on $mux $procmux$8513.
    dead port 2/2 on $mux $procmux$8516.
    dead port 2/2 on $mux $procmux$8522.
    dead port 2/2 on $mux $procmux$8525.
    dead port 2/2 on $mux $procmux$8531.
    dead port 2/2 on $mux $procmux$8534.
    dead port 2/2 on $mux $procmux$8540.
    dead port 2/2 on $mux $procmux$8543.
    dead port 2/2 on $mux $procmux$8549.
    dead port 2/2 on $mux $procmux$8552.
    dead port 2/2 on $mux $procmux$8558.
    dead port 2/2 on $mux $procmux$8561.
    dead port 2/2 on $mux $procmux$8567.
    dead port 2/2 on $mux $procmux$8570.
    dead port 2/2 on $mux $procmux$8576.
    dead port 2/2 on $mux $procmux$8579.
    dead port 2/2 on $mux $procmux$8585.
    dead port 2/2 on $mux $procmux$8588.
    dead port 2/2 on $mux $procmux$8594.
    dead port 2/2 on $mux $procmux$8597.
    dead port 2/2 on $mux $procmux$8603.
    dead port 2/2 on $mux $procmux$8606.
    dead port 2/2 on $mux $procmux$8612.
    dead port 2/2 on $mux $procmux$8615.
    dead port 2/2 on $mux $procmux$8621.
    dead port 2/2 on $mux $procmux$8624.
    dead port 2/2 on $mux $procmux$8630.
    dead port 2/2 on $mux $procmux$8633.
    dead port 2/2 on $mux $procmux$8639.
    dead port 2/2 on $mux $procmux$8642.
    dead port 2/2 on $mux $procmux$8648.
    dead port 2/2 on $mux $procmux$8651.
    dead port 2/2 on $mux $procmux$8657.
    dead port 2/2 on $mux $procmux$8660.
    dead port 2/2 on $mux $procmux$8666.
    dead port 2/2 on $mux $procmux$8669.
    dead port 2/2 on $mux $procmux$8675.
    dead port 2/2 on $mux $procmux$8678.
    dead port 2/2 on $mux $procmux$8684.
    dead port 2/2 on $mux $procmux$8687.
    dead port 2/2 on $mux $procmux$8693.
    dead port 2/2 on $mux $procmux$8696.
    dead port 2/2 on $mux $procmux$8702.
    dead port 2/2 on $mux $procmux$8705.
    dead port 2/2 on $mux $procmux$8711.
    dead port 2/2 on $mux $procmux$8714.
    dead port 2/2 on $mux $procmux$8720.
    dead port 2/2 on $mux $procmux$8723.
    dead port 2/2 on $mux $procmux$8729.
    dead port 2/2 on $mux $procmux$8732.
    dead port 2/2 on $mux $procmux$8738.
    dead port 2/2 on $mux $procmux$8741.
    dead port 2/2 on $mux $procmux$8747.
    dead port 2/2 on $mux $procmux$8750.
    dead port 2/2 on $mux $procmux$8756.
    dead port 2/2 on $mux $procmux$8759.
    dead port 2/2 on $mux $procmux$8765.
    dead port 2/2 on $mux $procmux$8768.
    dead port 2/2 on $mux $procmux$9005.
    dead port 2/2 on $mux $procmux$9011.
    dead port 2/2 on $mux $procmux$9017.
    dead port 2/2 on $mux $procmux$9023.
    dead port 2/2 on $mux $procmux$9029.
    dead port 2/2 on $mux $procmux$9035.
    dead port 2/2 on $mux $procmux$9041.
    dead port 2/2 on $mux $procmux$9047.
    dead port 2/2 on $mux $procmux$9053.
    dead port 2/2 on $mux $procmux$9059.
    dead port 2/2 on $mux $procmux$9065.
    dead port 2/2 on $mux $procmux$9071.
    dead port 2/2 on $mux $procmux$9077.
    dead port 2/2 on $mux $procmux$9083.
    dead port 2/2 on $mux $procmux$9089.
    dead port 2/2 on $mux $procmux$9095.
    dead port 2/2 on $mux $procmux$9101.
    dead port 2/2 on $mux $procmux$9107.
    dead port 2/2 on $mux $procmux$9113.
    dead port 2/2 on $mux $procmux$9119.
    dead port 2/2 on $mux $procmux$9125.
    dead port 2/2 on $mux $procmux$9131.
    dead port 2/2 on $mux $procmux$9137.
    dead port 2/2 on $mux $procmux$9143.
    dead port 2/2 on $mux $procmux$9149.
    dead port 2/2 on $mux $procmux$9155.
    dead port 2/2 on $mux $procmux$9161.
    dead port 2/2 on $mux $procmux$9167.
    dead port 2/2 on $mux $procmux$9173.
    dead port 2/2 on $mux $procmux$9179.
    dead port 2/2 on $mux $procmux$9185.
    dead port 2/2 on $mux $procmux$9191.
    dead port 2/2 on $mux $procmux$9197.
    dead port 2/2 on $mux $procmux$9203.
    dead port 2/2 on $mux $procmux$9209.
    dead port 2/2 on $mux $procmux$9215.
    dead port 2/2 on $mux $procmux$9221.
    dead port 2/2 on $mux $procmux$9227.
    dead port 2/2 on $mux $procmux$9233.
    dead port 2/2 on $mux $procmux$9239.
    dead port 2/2 on $mux $procmux$9245.
    dead port 2/2 on $mux $procmux$9251.
    dead port 2/2 on $mux $procmux$9257.
    dead port 2/2 on $mux $procmux$9263.
    dead port 2/2 on $mux $procmux$9269.
    dead port 2/2 on $mux $procmux$9275.
    dead port 2/2 on $mux $procmux$9281.
    dead port 2/2 on $mux $procmux$9287.
    dead port 2/2 on $mux $procmux$9293.
    dead port 2/2 on $mux $procmux$9299.
    dead port 2/2 on $mux $procmux$9305.
    dead port 2/2 on $mux $procmux$9311.
    dead port 2/2 on $mux $procmux$9317.
    dead port 2/2 on $mux $procmux$9323.
    dead port 2/2 on $mux $procmux$9329.
    dead port 2/2 on $mux $procmux$9335.
    dead port 2/2 on $mux $procmux$9341.
    dead port 2/2 on $mux $procmux$9347.
    dead port 2/2 on $mux $procmux$9353.
    dead port 2/2 on $mux $procmux$9359.
    dead port 2/2 on $mux $procmux$9365.
    dead port 2/2 on $mux $procmux$9371.
    dead port 2/2 on $mux $procmux$9377.
    dead port 2/2 on $mux $procmux$9383.
    dead port 2/2 on $mux $procmux$9497.
    dead port 2/2 on $mux $procmux$9503.
    dead port 2/2 on $mux $procmux$9509.
    dead port 2/2 on $mux $procmux$9527.
    dead port 2/2 on $mux $procmux$9545.
    dead port 2/2 on $mux $procmux$9551.
    dead port 2/2 on $mux $procmux$9557.
    dead port 2/2 on $mux $procmux$9563.
    dead port 2/2 on $mux $procmux$6095.
Removed 1053 multiplexer ports.
<suppressed ~154 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$7242: { $procmux$6586_CMP $auto$opt_reduce.cc:134:opt_mux$10480 }
    New ctrl vector for $pmux cell $procmux$5682: { $procmux$2088_CMP $auto$opt_reduce.cc:134:opt_mux$10482 }
    New ctrl vector for $pmux cell $procmux$7704: { $procmux$6597_CMP $auto$opt_reduce.cc:134:opt_mux$10484 }
    New ctrl vector for $pmux cell $procmux$4557: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10486 }
    New ctrl vector for $pmux cell $procmux$4782: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10488 }
    New ctrl vector for $pmux cell $procmux$2442: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10490 }
    New ctrl vector for $pmux cell $procmux$6906: { $procmux$6578_CMP $auto$opt_reduce.cc:134:opt_mux$10492 }
    New ctrl vector for $pmux cell $procmux$5277: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10494 }
    New ctrl vector for $pmux cell $procmux$2730: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10496 }
    New ctrl vector for $pmux cell $procmux$3210: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10498 }
    New ctrl vector for $pmux cell $procmux$6738: { $procmux$6574_CMP $auto$opt_reduce.cc:134:opt_mux$10500 }
    New ctrl vector for $pmux cell $procmux$4962: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10502 }
    New ctrl vector for $pmux cell $procmux$7284: { $procmux$6587_CMP $auto$opt_reduce.cc:134:opt_mux$10504 }
    New ctrl vector for $pmux cell $procmux$7746: { $procmux$6598_CMP $auto$opt_reduce.cc:134:opt_mux$10506 }
    New ctrl vector for $pmux cell $procmux$2154: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10508 }
    New ctrl vector for $pmux cell $procmux$5727: { $procmux$2089_CMP $auto$opt_reduce.cc:134:opt_mux$10510 }
    New ctrl vector for $pmux cell $procmux$6654: { $procmux$6572_CMP $auto$opt_reduce.cc:134:opt_mux$10512 }
    New ctrl vector for $pmux cell $procmux$4602: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10514 }
    New ctrl vector for $pmux cell $procmux$3114: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10516 }
    New ctrl vector for $pmux cell $procmux$3450: { $procmux$2087_CMP $auto$opt_reduce.cc:134:opt_mux$10518 }
    New ctrl vector for $pmux cell $procmux$5322: { $procmux$2080_CMP $auto$opt_reduce.cc:134:opt_mux$10520 }
    New ctrl vector for $pmux cell $procmux$6948: { $procmux$6579_CMP $auto$opt_reduce.cc:134:opt_mux$10522 }
    New ctrl vector for $pmux cell $procmux$7788: { $procmux$6599_CMP $auto$opt_reduce.cc:134:opt_mux$10524 }
    New ctrl vector for $pmux cell $procmux$2490: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10526 }
    New ctrl vector for $pmux cell $procmux$7326: { $procmux$6588_CMP $auto$opt_reduce.cc:134:opt_mux$10528 }
    New ctrl vector for $pmux cell $procmux$7830: { $procmux$6600_CMP $auto$opt_reduce.cc:134:opt_mux$10530 }
    New ctrl vector for $pmux cell $procmux$2058: { $procmux$2090_CMP $auto$opt_reduce.cc:134:opt_mux$10532 }
    New ctrl vector for $pmux cell $procmux$5007: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10534 }
    New ctrl vector for $pmux cell $procmux$4647: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10536 }
    New ctrl vector for $pmux cell $procmux$2778: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10538 }
    New ctrl vector for $pmux cell $procmux$7872: { $procmux$6601_CMP $auto$opt_reduce.cc:134:opt_mux$10540 }
    New ctrl vector for $pmux cell $procmux$3162: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10542 }
    New ctrl vector for $pmux cell $procmux$5367: { $procmux$2081_CMP $auto$opt_reduce.cc:134:opt_mux$10544 }
    New ctrl vector for $pmux cell $procmux$3306: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10546 }
    New ctrl vector for $pmux cell $procmux$6990: { $procmux$6580_CMP $auto$opt_reduce.cc:134:opt_mux$10548 }
    New ctrl vector for $pmux cell $procmux$7368: { $procmux$6589_CMP $auto$opt_reduce.cc:134:opt_mux$10550 }
    New ctrl vector for $pmux cell $procmux$2634: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10552 }
    New ctrl vector for $pmux cell $procmux$3498: { $procmux$2088_CMP $auto$opt_reduce.cc:134:opt_mux$10554 }
    New ctrl vector for $pmux cell $procmux$4827: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10556 }
    New ctrl vector for $pmux cell $procmux$2202: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10558 }
    New ctrl vector for $pmux cell $procmux$4737: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10560 }
    New ctrl vector for $pmux cell $procmux$6780: { $procmux$6575_CMP $auto$opt_reduce.cc:134:opt_mux$10562 }
    New ctrl vector for $pmux cell $procmux$5052: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10564 }
    New ctrl vector for $pmux cell $procmux$7410: { $procmux$6590_CMP $auto$opt_reduce.cc:134:opt_mux$10566 }
    New ctrl vector for $pmux cell $procmux$5412: { $procmux$2082_CMP $auto$opt_reduce.cc:134:opt_mux$10568 }
    New ctrl vector for $pmux cell $procmux$7032: { $procmux$6581_CMP $auto$opt_reduce.cc:134:opt_mux$10570 }
    New ctrl vector for $pmux cell $procmux$4332: { $procmux$2090_CMP $auto$opt_reduce.cc:134:opt_mux$10572 }
    New ctrl vector for $pmux cell $procmux$2874: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10574 }
    New ctrl vector for $pmux cell $procmux$2826: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10576 }
    New ctrl vector for $pmux cell $procmux$7452: { $procmux$6591_CMP $auto$opt_reduce.cc:134:opt_mux$10578 }
    New ctrl vector for $pmux cell $procmux$3546: { $procmux$2089_CMP $auto$opt_reduce.cc:134:opt_mux$10580 }
    New ctrl vector for $pmux cell $procmux$5457: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10582 }
    New ctrl vector for $pmux cell $procmux$2298: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10584 }
    New ctrl vector for $pmux cell $procmux$4377: { $auto$opt_reduce.cc:134:opt_mux$10586 $procmux$2059_CMP }
    New ctrl vector for $pmux cell $procmux$5097: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10588 }
    New ctrl vector for $pmux cell $procmux$7074: { $procmux$6582_CMP $auto$opt_reduce.cc:134:opt_mux$10590 }
    New ctrl vector for $pmux cell $procmux$2922: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10592 }
    New ctrl vector for $pmux cell $procmux$7494: { $procmux$6592_CMP $auto$opt_reduce.cc:134:opt_mux$10594 }
    New ctrl vector for $pmux cell $procmux$2250: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10596 }
    New ctrl vector for $pmux cell $procmux$5502: { $procmux$2084_CMP $auto$opt_reduce.cc:134:opt_mux$10598 }
    New ctrl vector for $pmux cell $procmux$6612: { $auto$opt_reduce.cc:134:opt_mux$10600 $procmux$6571_CMP }
    New ctrl vector for $pmux cell $procmux$4422: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10602 }
    New ctrl vector for $pmux cell $procmux$3354: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10604 }
    New ctrl vector for $pmux cell $procmux$7536: { $procmux$6593_CMP $auto$opt_reduce.cc:134:opt_mux$10606 }
    New ctrl vector for $pmux cell $procmux$6822: { $procmux$6576_CMP $auto$opt_reduce.cc:134:opt_mux$10608 }
    New ctrl vector for $pmux cell $procmux$7116: { $procmux$6583_CMP $auto$opt_reduce.cc:134:opt_mux$10610 }
    New ctrl vector for $pmux cell $procmux$5142: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10612 }
    New ctrl vector for $pmux cell $procmux$5547: { $procmux$2085_CMP $auto$opt_reduce.cc:134:opt_mux$10614 }
    New ctrl vector for $pmux cell $procmux$2970: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10616 }
    New ctrl vector for $pmux cell $procmux$2346: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10618 }
    New ctrl vector for $pmux cell $procmux$7578: { $procmux$6594_CMP $auto$opt_reduce.cc:134:opt_mux$10620 }
    New ctrl vector for $pmux cell $procmux$4467: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10622 }
    New ctrl vector for $pmux cell $procmux$4872: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10624 }
    New ctrl vector for $pmux cell $procmux$7158: { $procmux$6584_CMP $auto$opt_reduce.cc:134:opt_mux$10626 }
    New ctrl vector for $pmux cell $procmux$6696: { $procmux$6573_CMP $auto$opt_reduce.cc:134:opt_mux$10628 }
    New ctrl vector for $pmux cell $procmux$5592: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10630 }
    New ctrl vector for $pmux cell $procmux$5187: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10632 }
    New ctrl vector for $pmux cell $procmux$2586: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10634 }
    New ctrl vector for $pmux cell $procmux$2682: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10636 }
    New ctrl vector for $pmux cell $procmux$7620: { $procmux$6595_CMP $auto$opt_reduce.cc:134:opt_mux$10638 }
    New ctrl vector for $pmux cell $procmux$3018: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10640 }
    New ctrl vector for $pmux cell $procmux$6570: { $procmux$6602_CMP $auto$opt_reduce.cc:134:opt_mux$10642 }
    New ctrl vector for $pmux cell $procmux$2106: { $auto$opt_reduce.cc:134:opt_mux$10644 $procmux$2059_CMP }
    New ctrl vector for $pmux cell $procmux$2394: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10646 }
    New ctrl vector for $pmux cell $procmux$4512: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10648 }
    New ctrl vector for $pmux cell $procmux$7200: { $procmux$6585_CMP $auto$opt_reduce.cc:134:opt_mux$10650 }
    New ctrl vector for $pmux cell $procmux$3258: { $procmux$2083_CMP $auto$opt_reduce.cc:134:opt_mux$10652 }
    New ctrl vector for $pmux cell $procmux$5637: { $procmux$2087_CMP $auto$opt_reduce.cc:134:opt_mux$10654 }
    New ctrl vector for $pmux cell $procmux$6864: { $procmux$6577_CMP $auto$opt_reduce.cc:134:opt_mux$10656 }
    New ctrl vector for $pmux cell $procmux$5232: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10658 }
    New ctrl vector for $pmux cell $procmux$7662: { $procmux$6596_CMP $auto$opt_reduce.cc:134:opt_mux$10660 }
    New ctrl vector for $pmux cell $procmux$4692: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10662 }
    New ctrl vector for $pmux cell $procmux$2538: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10664 }
    New ctrl vector for $pmux cell $procmux$4917: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10666 }
    New ctrl vector for $pmux cell $procmux$3402: { $procmux$2086_CMP $auto$opt_reduce.cc:134:opt_mux$10668 }
    New ctrl vector for $pmux cell $procmux$3066: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10670 }
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 96 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~48 debug messages>
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~12 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Removed a total of 55 cells.

4.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 4257 unused wires.
<suppressed ~3 debug messages>

4.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.8. Rerunning OPT passes. (Maybe there is more to do..)

4.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~150 debug messages>

4.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 0 changes.

4.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.14. Finished OPT passes. (There is nothing left to do.)

4.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$19 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$53 ($le).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$59 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$62 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$63 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$65 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$66 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$68 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:169$78 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:176$88 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:177$90 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:177$91 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:184$93 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:193$96 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:194$98 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:194$99 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:201$101 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9950_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$10000_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$eq$cva6_lsu_model.v:72$414 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$500 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$500 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$501 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$501 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$536 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$536 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$ne$cva6_lsu_model.v:193$569 ($ne).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$572 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$572 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$581 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$581 ($add).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$700 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$714 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$856 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$867 ($mux).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1020_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1116_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1126_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$697 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$711 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$854 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$865 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$694 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$708 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$702 ($pmux).
Removed top 20 bits (of 32) from wire cva6_lsu_model.$4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$397_DATA[31:0]$528.
Removed top 20 bits (of 32) from wire cva6_lsu_model.$5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$400_DATA[31:0]$555.
Removed top 30 bits (of 32) from wire cva6_lsu_model.$add$cva6_lsu_model.v:148$500_Y.
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$255 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$292 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$319 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$334 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$337 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$349 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$350 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$351 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$352 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$354 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$355 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$356 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$366 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$366 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$367 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$368 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$369 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$375 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$375 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$378 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$378 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$385 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$385 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2075_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2076_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2077_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2078_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2079_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2080_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2081_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2082_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2083_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2084_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2085_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2086_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2087_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2088_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2089_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3611_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3612_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3613_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3614_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3615_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3616_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3617_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3618_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3619_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3620_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3621_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3622_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3623_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3624_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3625_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5789_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5790_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5791_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5792_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5793_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5794_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5795_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5796_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5797_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5798_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5799_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5800_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5801_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5802_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5803_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6587_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6588_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6589_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6590_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6591_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6592_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6593_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6594_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6595_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6596_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6597_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6598_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6599_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6600_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6601_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$366_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$334_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$351_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$356_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$354_Y.

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

4.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.11.4. Finished fast OPT passes.

4.12. Printing statistics.

=== cva6_lsu_formal ===

   Number of wires:                152
   Number of wire bits:           5240
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                144
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         8
     $dff                           22
     $eq                            22
     $gt                             1
     $le                             1
     $logic_and                     14
     $logic_not                      9
     $logic_or                       3
     $lt                             2
     $mux                           46
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_model ===

   Number of wires:                186
   Number of wire bits:           1426
   Number of public wires:          40
   Number of public wire bits:     346
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $add                            5
     $adff                          28
     $eq                            12
     $ge                             2
     $logic_and                      2
     $logic_not                      5
     $logic_or                       4
     $mux                          104
     $ne                             4
     $not                            2
     $pmux                           5
     $reduce_bool                    2

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_model                  1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_model                1

   Number of wires:               2106
   Number of wire bits:          42764
   Number of public wires:         308
   Number of public wire bits:   13768
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2040
     $add                           21
     $adff                          56
     $and                            2
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         8
     $dff                          178
     $eq                           322
     $ge                             4
     $gt                             1
     $le                             1
     $logic_and                     26
     $logic_not                     39
     $logic_or                      11
     $lt                             6
     $mux                          984
     $ne                             8
     $not                            4
     $or                             2
     $pmux                         208
     $reduce_bool                    8
     $reduce_or                    128
     $shl                            2
     $shr                            4
     $sub                            6
     $xor                            2

4.13. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

5. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

6. Executing ASYNC2SYNC pass.
Replacing cva6_lsu_model.$procdff$10194 ($adff): ARST=\rst_ni, D=$0\instr_i_pc[7:0], Q=\instr_i_pc
Replacing cva6_lsu_model.$procdff$10195 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_lsu_model.$procdff$10196 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_lsu_model.$procdff$10197 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_lsu_model.$procdff$10198 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue[31:0], Q=\load_instr_i_queue
Replacing cva6_lsu_model.$procdff$10199 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue_pc[7:0], Q=\load_instr_i_queue_pc
Replacing cva6_lsu_model.$procdff$10200 ($adff): ARST=\rst_ni, D=$0\load_instr_queue_state[1:0], Q=\load_instr_queue_state
Replacing cva6_lsu_model.$procdff$10213 ($adff): ARST=\rst_ni, D=$0\ready_flag[0:0], Q=\ready_flag
Replacing cva6_lsu_model.$procdff$10214 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_lsu_model.$procdff$10215 ($adff): ARST=\rst_ni, D=\inner_instr_i, Q=\x_inner_instr_i
Replacing cva6_lsu_model.$procdff$10216 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10217 ($adff): ARST=\rst_ni, D=\inner_instr_valid_i, Q=\x_inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10218 ($adff): ARST=\rst_ni, D=\is_load_i, Q=\inner_is_load_i
Replacing cva6_lsu_model.$procdff$10219 ($adff): ARST=\rst_ni, D=\inner_is_load_i, Q=\x_inner_is_load_i
Replacing cva6_lsu_model.$procdff$10220 ($adff): ARST=\rst_ni, D=\store_mem_resp_i, Q=\inner_store_mem_resp_i
Replacing cva6_lsu_model.$procdff$10222 ($adff): ARST=\rst_ni, D=\load_mem_resp_i, Q=\inner_load_mem_resp_i
Replacing cva6_lsu_model.$procdff$10227 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_lsu_model.$procdff$10228 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_lsu_model.$procdff$10229 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_lsu_model.$procdff$10230 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_lsu_model.$procdff$10231 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[0][7:0], Q=\store_instr_i_queue_pc[0]
Replacing cva6_lsu_model.$procdff$10232 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[1][7:0], Q=\store_instr_i_queue_pc[1]
Replacing cva6_lsu_model.$procdff$10233 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[2][7:0], Q=\store_instr_i_queue_pc[2]
Replacing cva6_lsu_model.$procdff$10234 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[3][7:0], Q=\store_instr_i_queue_pc[3]
Replacing cva6_lsu_model.$procdff$10235 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_lsu_model.$procdff$10236 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_lsu_model.$procdff$10237 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_lsu_model.$procdff$10238 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

8. Executing SETUNDEF pass (replace undef values with defined constants).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

9.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$10476 ($dff) from module cva6_lsu_formal (D = $procmux$10187_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11059 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$10475 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$10452 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11062 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$10451 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11064 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$10450 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11066 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:201$101_Y, Q = \pc_2).
Adding SRST signal on $procdff$10449 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11070 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:184$93_Y, Q = \pc_1).
Adding SRST signal on $procdff$10448 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11074 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$10447 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11076 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$86, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$10446 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11078 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$10445 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11080 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$94, Q = \tb_io_instr_i_2).
Adding EN signal on $procdff$10428 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$10427 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$10426 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$10425 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$10424 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$10423 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$10422 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$10421 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$10420 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$10419 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$10418 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$10417 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$10416 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$10415 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$10414 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$10413 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$10412 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$10411 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$10410 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$10409 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$10408 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$10407 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$10406 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$10405 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$10404 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$10403 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$10402 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$10401 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$10400 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$10399 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$10398 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$10397 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$10396 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$10395 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$10394 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$10393 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$10392 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$10391 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$10390 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$10389 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$10388 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$10387 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$10386 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$10385 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$10384 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$10383 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$10382 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$10381 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$10380 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$10378 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$10377 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$10376 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$10375 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$10374 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$10373 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$10372 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$10371 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$10370 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$10369 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$10368 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$10367 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$10366 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$10365 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$10345 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11594 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$10344 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$10344 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11617 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$385_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$11612 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$10343 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$10342 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$10340 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$10339 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11625 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$10338 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11631 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$10337 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11637 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$10336 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$10335 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11656 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$10334 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11664 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$10333 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11674 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$10332 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11682 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$10331 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11690 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 253 unused cells and 253 unused wires.
<suppressed ~256 debug messages>

9.5. Rerunning OPT passes. (Removed registers in this run.)

9.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>

9.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

9.8. Executing OPT_DFF pass (perform DFF optimizations).

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

9.10. Finished fast OPT passes.

10. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

11.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

12. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 6 unique messages, 11 total
End of script. Logfile hash: 2ea2ce1ac3, CPU: user 6.56s system 0.11s, MEM: 95.16 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 27% 3x check (1 sec), 18% 8x opt_clean (1 sec), ...
