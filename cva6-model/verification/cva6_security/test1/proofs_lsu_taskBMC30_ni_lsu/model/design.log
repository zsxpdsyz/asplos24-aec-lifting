
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: load_store_unit.v
Parsing formal SystemVerilog input from `load_store_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_store_unit'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: shift_reg.v
Parsing formal SystemVerilog input from `shift_reg.v' to AST representation.
Storing AST representation for module `$abstract\shift_reg'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: store_unit.v
Parsing formal SystemVerilog input from `store_unit.v' to AST representation.
Storing AST representation for module `$abstract\store_unit'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: store_buffer.v
Parsing formal SystemVerilog input from `store_buffer.v' to AST representation.
Storing AST representation for module `$abstract\store_buffer'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: amo_buffer.v
Parsing formal SystemVerilog input from `amo_buffer.v' to AST representation.
Storing AST representation for module `$abstract\amo_buffer'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: load_unit.v
Parsing formal SystemVerilog input from `load_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_unit'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: lsu_bypass.v
Parsing formal SystemVerilog input from `lsu_bypass.v' to AST representation.
Storing AST representation for module `$abstract\lsu_bypass'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: cva6_lsu_shim.v
Parsing formal SystemVerilog input from `cva6_lsu_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_shim'.
Successfully finished Verilog frontend.

11. Executing PREP pass.

11.1. Executing HIERARCHY pass (managing design hierarchy).

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

11.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

11.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

11.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

11.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_shim'.
Generating RTLIL representation for module `\cva6_lsu_shim'.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.

11.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim

11.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\load_store_unit'.
Generating RTLIL representation for module `\load_store_unit'.
Note: Assuming pure combinatorial block at load_store_unit.v:320.2-339.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
load_store_unit.v:205: Warning: Range [33:0] select out of bounds on signal `\icache_areq_i': Setting 1 MSB bits to undef.
load_store_unit.v:218: Warning: Range [33:12] select out of bounds on signal `\mmu_vaddr': Setting 2 MSB bits to undef.

11.2.7. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit

11.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bypass'.
Generating RTLIL representation for module `\lsu_bypass'.

11.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg'.
Generating RTLIL representation for module `\shift_reg'.
Parameter \ArianeCfg

11.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\load_unit'.
Parameter \ArianeCfg
Generating RTLIL representation for module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.

11.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit'.
Generating RTLIL representation for module `\store_unit'.

11.2.12. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit

11.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\amo_buffer'.
Generating RTLIL representation for module `\amo_buffer'.

11.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\store_buffer'.
Generating RTLIL representation for module `\store_buffer'.

11.2.15. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer

11.2.16. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Removing unused module `$abstract\cva6_lsu_shim'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\lsu_bypass'.
Removing unused module `$abstract\load_unit'.
Removing unused module `$abstract\amo_buffer'.
Removing unused module `$abstract\store_buffer'.
Removing unused module `$abstract\store_unit'.
Removing unused module `$abstract\shift_reg'.
Removing unused module `$abstract\load_store_unit'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 10 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

11.3. Executing PROC pass (convert processes to netlists).

11.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
Cleaned up 1 empty switch.

11.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$store_buffer.v:234$903 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_buffer.v:220$901 in module store_buffer.
Marked 23 switch rules as full_case in process $proc$store_buffer.v:166$866 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:142$821 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:85$683 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_unit.v:0$647 in module store_unit.
Marked 1 switch rules as full_case in process $proc$store_unit.v:271$645 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:196$629 in module store_unit.
Marked 3 switch rules as full_case in process $proc$store_unit.v:196$629 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:99$618 in module store_unit.
Marked 12 switch rules as full_case in process $proc$store_unit.v:99$618 in module store_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:301$612 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:294$611 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:264$585 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 5 switch rules as full_case in process $proc$load_unit.v:244$575 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 23 switch rules as full_case in process $proc$load_unit.v:145$551 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$shift_reg.v:19$536 in module shift_reg.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:79$534 in module lsu_bypass.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:73$530 in module lsu_bypass.
Marked 5 switch rules as full_case in process $proc$lsu_bypass.v:41$482 in module lsu_bypass.
Removed 1 dead cases from process $proc$load_store_unit.v:0$460 in module load_store_unit.
Marked 4 switch rules as full_case in process $proc$load_store_unit.v:0$460 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$455 in module load_store_unit.
Removed 2 dead cases from process $proc$load_store_unit.v:0$438 in module load_store_unit.
Marked 5 switch rules as full_case in process $proc$load_store_unit.v:0$438 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$433 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:221$431 in module load_store_unit.
Marked 11 switch rules as full_case in process $proc$load_store_unit.v:519$422 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:320$421 in module load_store_unit.
Marked 10 switch rules as full_case in process $proc$cva6_lsu_shim.v:290$389 in module cva6_lsu_shim.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$141 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$141 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$33 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$33 in module cva6_lsu_formal.
Removed a total of 15 dead cases.

11.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 26 redundant assignments.
Promoted 346 assignments to connections.

11.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
  Set init value: $formal$cva6_lsu_formal.v:203$14_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
  Set init value: $formal$cva6_lsu_formal.v:168$13_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
  Set init value: $formal$cva6_lsu_formal.v:166$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
  Set init value: $formal$cva6_lsu_formal.v:162$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
  Set init value: $formal$cva6_lsu_formal.v:161$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
  Set init value: $formal$cva6_lsu_formal.v:160$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
  Set init value: $formal$cva6_lsu_formal.v:159$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
  Set init value: $formal$cva6_lsu_formal.v:156$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

11.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:234$903'.
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:220$901'.
Found async reset \rst_ni in `\store_unit.$proc$store_unit.v:271$645'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$612'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$585'.
Found async reset \rst_ni in `\shift_reg.$proc$shift_reg.v:19$536'.
Found async reset \rst_ni in `\lsu_bypass.$proc$lsu_bypass.v:79$534'.
Found async reset \rst_ni in `\load_store_unit.$proc$load_store_unit.v:221$431'.

11.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_buffer.$proc$store_buffer.v:234$903'.
     1/4: $0\commit_status_cnt_q[2:0]
     2/4: $0\commit_write_pointer_q[1:0]
     3/4: $0\commit_read_pointer_q[1:0]
     4/4: $0\commit_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:220$901'.
     1/4: $0\speculative_status_cnt_q[2:0]
     2/4: $0\speculative_write_pointer_q[1:0]
     3/4: $0\speculative_read_pointer_q[1:0]
     4/4: $0\speculative_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:166$866'.
     1/50: $19\page_offset_matches_o[0:0]
     2/50: $18\page_offset_matches_o[0:0]
     3/50: $19\sv2v_autoblock_2._sv2v_jump[1:0]
     4/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
     5/50: $18\sv2v_autoblock_2._sv2v_jump[1:0]
     6/50: $17\page_offset_matches_o[0:0]
     7/50: $5\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
     8/50: $17\sv2v_autoblock_2._sv2v_jump[1:0]
     9/50: $16\page_offset_matches_o[0:0]
    10/50: $16\sv2v_autoblock_2._sv2v_jump[1:0]
    11/50: $15\page_offset_matches_o[0:0]
    12/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    13/50: $15\sv2v_autoblock_2._sv2v_jump[1:0]
    14/50: $14\page_offset_matches_o[0:0]
    15/50: $14\sv2v_autoblock_2._sv2v_jump[1:0]
    16/50: $13\page_offset_matches_o[0:0]
    17/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    18/50: $13\sv2v_autoblock_2._sv2v_jump[1:0]
    19/50: $12\page_offset_matches_o[0:0]
    20/50: $12\sv2v_autoblock_2._sv2v_jump[1:0]
    21/50: $11\page_offset_matches_o[0:0]
    22/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    23/50: $11\sv2v_autoblock_2._sv2v_jump[1:0]
    24/50: $10\page_offset_matches_o[0:0]
    25/50: $9\page_offset_matches_o[0:0]
    26/50: $10\sv2v_autoblock_2._sv2v_jump[1:0]
    27/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
    28/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    29/50: $9\sv2v_autoblock_2._sv2v_jump[1:0]
    30/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i[31:0]
    31/50: $8\sv2v_autoblock_2._sv2v_jump[1:0]
    32/50: $8\page_offset_matches_o[0:0]
    33/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    34/50: $7\sv2v_autoblock_2._sv2v_jump[1:0]
    35/50: $7\page_offset_matches_o[0:0]
    36/50: $6\sv2v_autoblock_2._sv2v_jump[1:0]
    37/50: $6\page_offset_matches_o[0:0]
    38/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    39/50: $5\sv2v_autoblock_2._sv2v_jump[1:0]
    40/50: $5\page_offset_matches_o[0:0]
    41/50: $4\sv2v_autoblock_2._sv2v_jump[1:0]
    42/50: $4\page_offset_matches_o[0:0]
    43/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    44/50: $3\sv2v_autoblock_2._sv2v_jump[1:0]
    45/50: $3\page_offset_matches_o[0:0]
    46/50: $2\sv2v_autoblock_2._sv2v_jump[1:0]
    47/50: $2\page_offset_matches_o[0:0]
    48/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    49/50: $1\sv2v_autoblock_2._sv2v_jump[1:0]
    50/50: $1\page_offset_matches_o[0:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:142$821'.
     1/16: $3\store_if.commit_status_cnt[4:0]
     2/16: $1\commit_write_pointer_n[1:0]
     3/16: $3\commit_queue_n[291:0]
     4/16: $1$bitselwrite$data$store_buffer.v:160$674[291:0]$847
     5/16: $1$bitselwrite$mask$store_buffer.v:160$673[291:0]$846
     6/16: $2\store_if.commit_status_cnt[4:0]
     7/16: $2\commit_read_pointer_n[1:0]
     8/16: $2\commit_queue_n[291:0]
     9/16: $2$bitselwrite$data$store_buffer.v:154$672[291:0]$834
    10/16: $2$bitselwrite$mask$store_buffer.v:154$671[291:0]$833
    11/16: $1$bitselwrite$data$store_buffer.v:154$672[291:0]$832
    12/16: $1$bitselwrite$mask$store_buffer.v:154$671[291:0]$831
    13/16: $1\store_if.commit_status_cnt[4:0]
    14/16: $1\commit_read_pointer_n[1:0]
    15/16: $1\commit_queue_n[291:0]
    16/16: $1\req_port_o[9:9]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:141$820'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:138$814'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:135$808'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:132$802'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:129$796'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:126$790'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:123$789'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:120$788'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:85$683'.
     1/25: $1\speculative_status_cnt_n[2:0]
     2/25: $2\speculative_write_pointer_n[1:0]
     3/25: $1\core_if.sv2v_autoblock_1.i[31:0]
     4/25: $6\speculative_queue_n[219:219]
     5/25: $5\speculative_queue_n[146:146]
     6/25: $4\speculative_queue_n[73:73]
     7/25: $3\speculative_queue_n[0:0]
     8/25: $2\core_if.speculative_status_cnt[4:0]
     9/25: $1\speculative_read_pointer_n[1:0]
    10/25: $2\speculative_queue_n[291:0]
    11/25: $1$bitselwrite$data$store_buffer.v:103$670[291:0]$776
    12/25: $1$bitselwrite$mask$store_buffer.v:103$669[291:0]$775
    13/25: $1\core_if.speculative_status_cnt[4:0]
    14/25: $1\speculative_write_pointer_n[1:0]
    15/25: $1\speculative_queue_n[291:0]
    16/25: $1$bitselwrite$data$store_buffer.v:98$668[291:0]$707
    17/25: $1$bitselwrite$mask$store_buffer.v:98$667[291:0]$706
    18/25: $1$bitselwrite$data$store_buffer.v:97$666[291:0]$705
    19/25: $1$bitselwrite$mask$store_buffer.v:97$665[291:0]$704
    20/25: $1$bitselwrite$data$store_buffer.v:96$664[291:0]$703
    21/25: $1$bitselwrite$mask$store_buffer.v:96$663[291:0]$702
    22/25: $1$bitselwrite$data$store_buffer.v:95$662[291:0]$701
    23/25: $1$bitselwrite$mask$store_buffer.v:95$661[291:0]$700
    24/25: $1$bitselwrite$data$store_buffer.v:94$660[291:0]$699
    25/25: $1$bitselwrite$mask$store_buffer.v:94$659[291:0]$698
Creating decoders for process `\store_unit.$proc$store_unit.v:0$647'.
     1/1: $1\ariane_pkg_is_amo$func$store_unit.v:86$617.$result[0:0]$654
Creating decoders for process `\store_unit.$proc$store_unit.v:271$645'.
     1/6: $0\amo_op_q[3:0]
     2/6: $0\st_data_size_q[1:0]
     3/6: $0\trans_id_q[2:0]
     4/6: $0\st_data_q[31:0]
     5/6: $0\st_be_q[3:0]
     6/6: $0\state_q[1:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:196$629'.
     1/4: $1\amo_op_d[3:0]
     2/4: $1\ariane_pkg_extract_transfer_size$func$store_unit.v:199$616.$result[1:0]$640
     3/4: $1\ariane_pkg_data_align$func$store_unit.v:198$615.data_tmp[63:0]$638 [63:32]
     4/4: $1\ariane_pkg_data_align$func$store_unit.v:198$615.data_tmp[63:0]$638 [31:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:99$618'.
     1/28: $11\state_d[1:0]
     2/28: $2\valid_o[0:0]
     3/28: $10\state_d[1:0]
     4/28: $3\st_valid[0:0]
     5/28: $8\pop_st_o[0:0]
     6/28: $9\state_d[1:0]
     7/28: $8\state_d[1:0]
     8/28: $7\pop_st_o[0:0]
     9/28: $7\state_d[1:0]
    10/28: $6\pop_st_o[0:0]
    11/28: $6\state_d[1:0]
    12/28: $5\state_d[1:0]
    13/28: $5\pop_st_o[0:0]
    14/28: $3\translation_req_o[0:0]
    15/28: $2\st_valid[0:0]
    16/28: $4\pop_st_o[0:0]
    17/28: $4\state_d[1:0]
    18/28: $3\pop_st_o[0:0]
    19/28: $3\state_d[1:0]
    20/28: $2\state_d[1:0]
    21/28: $2\pop_st_o[0:0]
    22/28: $2\translation_req_o[0:0]
    23/28: $1\state_d[1:0]
    24/28: $1\translation_req_o[0:0]
    25/28: $1\pop_st_o[0:0]
    26/28: $1\st_valid_without_flush[0:0]
    27/28: $1\valid_o[0:0]
    28/28: $1\st_valid[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$612'.
     1/3: $0\fp_sign_q[0:0]
     2/3: $0\signed_q[0:0]
     3/3: $0\idx_q[1:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$611'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$585'.
     1/2: $0\load_data_q[12:0]
     2/2: $0\state_q[3:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$575'.
     1/9: $5\valid_o[0:0]
     2/9: $1\trans_id_o[2:0]
     3/9: $3\ex_o[0:0]
     4/9: $4\valid_o[0:0]
     5/9: $2\ex_o[0:0]
     6/9: $3\valid_o[0:0]
     7/9: $2\valid_o[0:0]
     8/9: $1\ex_o[0:0]
     9/9: $1\valid_o[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
     1/45: $19\state_d[3:0]
     2/45: $1\load_data_d[12:0]
     3/45: $13\pop_ld_o[0:0]
     4/45: $12\pop_ld_o[0:0]
     5/45: $18\state_d[3:0]
     6/45: $2\req_port_o[1:0] [1]
     7/45: $17\state_d[3:0]
     8/45: $11\pop_ld_o[0:0]
     9/45: $16\state_d[3:0]
    10/45: $15\state_d[3:0]
    11/45: $10\pop_ld_o[0:0]
    12/45: $14\state_d[3:0]
    13/45: $9\pop_ld_o[0:0]
    14/45: $7\req_port_o[9:9]
    15/45: $13\state_d[3:0]
    16/45: $8\pop_ld_o[0:0]
    17/45: $6\req_port_o[9:9]
    18/45: $3\translation_req_o[0:0]
    19/45: $12\state_d[3:0]
    20/45: $7\pop_ld_o[0:0]
    21/45: $11\state_d[3:0]
    22/45: $10\state_d[3:0]
    23/45: $6\pop_ld_o[0:0]
    24/45: $2\req_port_o[1:0] [0]
    25/45: $8\req_port_o[1:1]
    26/45: $9\state_d[3:0]
    27/45: $8\state_d[3:0]
    28/45: $6\state_d[3:0]
    29/45: $5\pop_ld_o[0:0]
    30/45: $5\state_d[3:0]
    31/45: $4\state_d[3:0]
    32/45: $4\pop_ld_o[0:0]
    33/45: $3\state_d[3:0]
    34/45: $3\pop_ld_o[0:0]
    35/45: $5\req_port_o[9:9]
    36/45: $2\state_d[3:0]
    37/45: $2\pop_ld_o[0:0]
    38/45: $4\req_port_o[9:9]
    39/45: $2\translation_req_o[0:0]
    40/45: $1\state_d[3:0]
    41/45: $1\pop_ld_o[0:0]
    42/45: $3\req_port_o[9:9]
    43/45: $1\translation_req_o[0:0]
    44/45: $7\state_d[3:0]
    45/45: $1\ariane_pkg_extract_transfer_size$func$load_unit.v:153$538.$result[1:0]$554
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$544'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$543'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$542'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$541'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$540'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$539'.
Creating decoders for process `\shift_reg.$proc$shift_reg.v:19$536'.
     1/1: $0\d_o[100:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:79$534'.
     1/4: $0\read_pointer_q[0:0]
     2/4: $0\write_pointer_q[0:0]
     3/4: $0\status_cnt_q[1:0]
     4/4: $0\mem_q[169:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:73$530'.
     1/1: $1\lsu_ctrl_o[84:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
     1/20: $5\mem_n[169:0]
     2/20: $3\read_pointer[0:0]
     3/20: $2\write_pointer[0:0]
     4/20: $4\status_cnt[1:0]
     5/20: $4\mem_n[169:0]
     6/20: $3\status_cnt[1:0]
     7/20: $2\read_pointer[0:0]
     8/20: $3\mem_n[169:0]
     9/20: $1$bitselwrite$data$lsu_bypass.v:57$480[169:0]$517
    10/20: $1$bitselwrite$mask$lsu_bypass.v:57$479[169:0]$516
    11/20: $2\status_cnt[1:0]
    12/20: $1\read_pointer[0:0]
    13/20: $2\mem_n[169:0]
    14/20: $1$bitselwrite$data$lsu_bypass.v:52$478[169:0]$504
    15/20: $1$bitselwrite$mask$lsu_bypass.v:52$477[169:0]$503
    16/20: $1\status_cnt[1:0]
    17/20: $1\write_pointer[0:0]
    18/20: $1\mem_n[169:0]
    19/20: $1$bitselwrite$data$lsu_bypass.v:47$476[169:0]$490
    20/20: $1$bitselwrite$mask$lsu_bypass.v:47$475[169:0]$489
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$460'.
     1/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413._sv2v_jump[1:0]$474
     2/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.$result[3:0]$473
     3/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413._sv2v_jump[1:0]$471
     4/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.$result[3:0]$470
     5/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413._sv2v_jump[1:0]$469
     6/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.$result[3:0]$468
     7/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413._sv2v_jump[1:0]$467
     8/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.$result[3:0]$466
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$455'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$412.$result[1:0]$459
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$438'.
     1/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$411._sv2v_jump[1:0]$454
     2/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$411.$result[7:0]$453
     3/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$411._sv2v_jump[1:0]$451
     4/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$411.$result[7:0]$450
     5/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$411._sv2v_jump[1:0]$449
     6/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$411.$result[7:0]$448
     7/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$411._sv2v_jump[1:0]$447
     8/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$411.$result[7:0]$446
     9/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$411._sv2v_jump[1:0]$445
    10/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$411.$result[7:0]$444
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$433'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$410.$result[1:0]$437
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:221$431'.
     1/2: $0\translation_valid[0:0]
     2/2: $0\mmu_paddr[33:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:519$422'.
     1/11: $6\misaligned_exception[64:0]
     2/11: $5\misaligned_exception[64:0]
     3/11: $4\misaligned_exception[64:0]
     4/11: $3\misaligned_exception[64:0]
     5/11: $2\misaligned_exception[64:0]
     6/11: $1\misaligned_exception[64:0]
     7/11: $5\data_misaligned[0:0]
     8/11: $4\data_misaligned[0:0]
     9/11: $3\data_misaligned[0:0]
    10/11: $2\data_misaligned[0:0]
    11/11: $1\data_misaligned[0:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:320$421'.
     1/4: $1\mmu_vaddr[31:0]
     2/4: $1\translation_req[0:0]
     3/4: $1\ld_valid_i[0:0]
     4/4: $1\st_valid_i[0:0]
Creating decoders for process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
     1/45: $6\store_req_state[1:0]
     2/45: $5\tb_io_commit_i[0:0]
     3/45: $5\store_req_state[1:0]
     4/45: $4\tb_io_commit_i[0:0]
     5/45: $4\store_req_state[1:0]
     6/45: $6\tb_io_lsu_valid_i[0:0]
     7/45: $3\tb_io_commit_i[0:0]
     8/45: $6\load_req_state[1:0]
     9/45: $4\tb_io_commit_tran_id_i[2:0]
    10/45: $5\load_req_state[1:0]
    11/45: $3\tb_io_commit_tran_id_i[2:0]
    12/45: $5\tb_io_lsu_valid_i[0:0]
    13/45: $4\load_req_state[1:0]
    14/45: $4\tb_io_lsu_valid_i[0:0]
    15/45: $4\tb_io_fu_data_i[110:0]
    16/45: $4\raise_load_request$func$cva6_lsu_shim.v:0$382.addr[31:0]$400
    17/45: $3\store_req_state[1:0]
    18/45: $3\tb_io_lsu_valid_i[0:0]
    19/45: $3\tb_io_fu_data_i[110:0]
    20/45: $3\raise_store_request$func$cva6_lsu_shim.v:0$381.addr[31:0]$398
    21/45: $3\raise_load_request$func$cva6_lsu_shim.v:0$382.addr[31:0]$399
    22/45: $3\load_req_state[1:0]
    23/45: $2\raise_load_request$func$cva6_lsu_shim.v:0$382.addr[31:0]$396
    24/45: $2\raise_store_request$func$cva6_lsu_shim.v:0$381.addr[31:0]$395
    25/45: $2\store_req_state[1:0]
    26/45: $2\load_req_state[1:0]
    27/45: $2\tb_io_lsu_valid_i[0:0]
    28/45: $2\tb_io_fu_data_i[110:0]
    29/45: $2\tb_io_commit_tran_id_i[2:0]
    30/45: $2\tb_io_commit_i[0:0]
    31/45: $2\tb_io_dcache_req_ports_i[104:104]
    32/45: $1\tb_io_dcache_req_ports_i[104:0] [104]
    33/45: $1\tb_io_dcache_req_ports_i[104:0] [103:70]
    34/45: $1\tb_io_dcache_req_ports_i[104:0] [69:35]
    35/45: $1\tb_io_dcache_req_ports_i[104:0] [34:0]
    36/45: $1\load_req_state[1:0]
    37/45: $1\load_memreq_state[2:0]
    38/45: $1\x_load_mem_resp_i[0:0]
    39/45: $1\tb_io_lsu_valid_i[0:0]
    40/45: $1\tb_io_fu_data_i[110:0]
    41/45: $1\tb_io_commit_tran_id_i[2:0]
    42/45: $1\tb_io_commit_i[0:0]
    43/45: $1\store_req_state[1:0]
    44/45: $1\raise_load_request$func$cva6_lsu_shim.v:0$382.addr[31:0]$394
    45/45: $1\raise_store_request$func$cva6_lsu_shim.v:0$381.addr[31:0]$393
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA[31:0]$326
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_ADDR[4:0]$324
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_DATA[31:0]$325
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$131.$result[31:0]$315
   126/587: $5\sra$func$cva6_processor_shim.v:100$132.$result[31:0]$319
   127/587: $5\sra$func$cva6_processor_shim.v:100$132.shamt[4:0]$321
   128/587: $5\sra$func$cva6_processor_shim.v:100$132.d[63:0]$320
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$131.alu_fun[2:0]$318
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$131.imm_data[31:0]$317
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$131.reg_data[31:0]$316
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA[31:0]$323
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_ADDR[4:0]$322
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$130.$result[31:0]$313
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$130.inst[31:0]$314
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_DATA[31:0]$311
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_DATA[31:0]$309
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_ADDR[4:0]$301
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_DATA[31:0]$302
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_DATA[31:0]$304
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_ADDR[4:0]$303
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_DATA[31:0]$300
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_ADDR[4:0]$299
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$128.$result[31:0]$286
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$128.inst[31:0]$287
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_DATA[31:0]$308
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_ADDR[4:0]$307
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA[31:0]$306
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_ADDR[4:0]$305
   218/587: $4\sra$func$cva6_processor_shim.v:100$132.shamt[4:0]$298
   219/587: $4\sra$func$cva6_processor_shim.v:100$132.d[63:0]$297
   220/587: $4\sra$func$cva6_processor_shim.v:100$132.$result[31:0]$296
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$131.alu_fun[2:0]$295
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$131.imm_data[31:0]$294
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$131.reg_data[31:0]$293
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$131.$result[31:0]$292
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$130.inst[31:0]$291
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$130.$result[31:0]$290
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$129.instr[31:0]$289
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$129.$result[0:0]$288
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_DATA[31:0]$284
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_DATA[31:0]$282
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_ADDR[4:0]$268
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_DATA[31:0]$269
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_DATA[31:0]$271
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_ADDR[4:0]$270
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_DATA[31:0]$267
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_ADDR[4:0]$266
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$126.$result[31:0]$249
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$126.inst[31:0]$250
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_DATA[31:0]$281
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_ADDR[4:0]$280
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA[31:0]$279
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_ADDR[4:0]$278
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_DATA[31:0]$277
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_ADDR[4:0]$276
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_DATA[31:0]$275
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_ADDR[4:0]$274
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_DATA[31:0]$273
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_ADDR[4:0]$272
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$132.shamt[4:0]$265
   350/587: $3\sra$func$cva6_processor_shim.v:100$132.d[63:0]$264
   351/587: $3\sra$func$cva6_processor_shim.v:100$132.$result[31:0]$263
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$131.alu_fun[2:0]$262
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$131.imm_data[31:0]$261
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$131.reg_data[31:0]$260
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$131.$result[31:0]$259
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$130.inst[31:0]$258
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$130.$result[31:0]$257
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$129.instr[31:0]$256
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$129.$result[0:0]$255
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$128.inst[31:0]$254
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$128.$result[31:0]$253
   362/587: $3\is_load$func$cva6_processor_shim.v:232$127.instr[31:0]$252
   363/587: $3\is_load$func$cva6_processor_shim.v:232$127.$result[0:0]$251
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_DATA[31:0]$247
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_ADDR[4:0]$246
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA[31:0]$245
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_ADDR[4:0]$244
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_DATA[31:0]$243
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_ADDR[4:0]$242
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_DATA[31:0]$241
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_ADDR[4:0]$240
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_DATA[31:0]$239
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_ADDR[4:0]$238
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_DATA[31:0]$237
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_ADDR[4:0]$236
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_DATA[31:0]$235
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_ADDR[4:0]$234
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_DATA[31:0]$233
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_ADDR[4:0]$232
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$132.shamt[4:0]$231
   445/587: $2\sra$func$cva6_processor_shim.v:100$132.d[63:0]$230
   446/587: $2\sra$func$cva6_processor_shim.v:100$132.$result[31:0]$229
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$131.alu_fun[2:0]$228
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$131.imm_data[31:0]$227
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$131.reg_data[31:0]$226
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$131.$result[31:0]$225
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$130.inst[31:0]$224
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$130.$result[31:0]$223
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$129.instr[31:0]$222
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$129.$result[0:0]$221
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$128.inst[31:0]$220
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$128.$result[31:0]$219
   457/587: $2\is_load$func$cva6_processor_shim.v:232$127.instr[31:0]$218
   458/587: $2\is_load$func$cva6_processor_shim.v:232$127.$result[0:0]$217
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$126.inst[31:0]$216
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$126.$result[31:0]$215
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$125.$result[0:0]$213
   466/587: $2\is_store$func$cva6_processor_shim.v:226$125.instr[31:0]$214
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_DATA[31:0]$212
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_ADDR[4:0]$211
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA[31:0]$210
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_ADDR[4:0]$209
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_DATA[31:0]$208
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_ADDR[4:0]$207
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_DATA[31:0]$206
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_ADDR[4:0]$205
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_DATA[31:0]$204
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_ADDR[4:0]$203
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_DATA[31:0]$202
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_ADDR[4:0]$201
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_DATA[31:0]$200
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_ADDR[4:0]$199
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_DATA[31:0]$198
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_ADDR[4:0]$197
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$132.shamt[4:0]$196
   570/587: $1\sra$func$cva6_processor_shim.v:100$132.d[63:0]$195
   571/587: $1\sra$func$cva6_processor_shim.v:100$132.$result[31:0]$194
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$131.alu_fun[2:0]$193
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$131.imm_data[31:0]$192
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$131.reg_data[31:0]$191
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$131.$result[31:0]$190
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$130.inst[31:0]$189
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$130.$result[31:0]$188
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$129.instr[31:0]$187
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$129.$result[0:0]$186
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$128.inst[31:0]$185
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$128.$result[31:0]$184
   582/587: $1\is_load$func$cva6_processor_shim.v:232$127.instr[31:0]$183
   583/587: $1\is_load$func$cva6_processor_shim.v:232$127.$result[0:0]$182
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$126.inst[31:0]$181
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$126.$result[31:0]$180
   586/587: $1\is_store$func$cva6_processor_shim.v:226$125.instr[31:0]$179
   587/587: $1\is_store$func$cva6_processor_shim.v:226$125.$result[0:0]$178
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
     1/50: $4\local_ready_2[0:0]
     2/50: $3\tb_io_instr_valid_i_2[0:0]
     3/50: $3\pc_2[31:0]
     4/50: $3\local_ready_2[0:0]
     5/50: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_DATA[31:0]$90
     6/50: $4\local_ready_1[0:0]
     7/50: $3\tb_io_instr_valid_i_1[0:0]
     8/50: $3\pc_1[31:0]
     9/50: $3\local_ready_1[0:0]
    10/50: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_DATA[31:0]$82
    11/50: $2\local_ready_2[0:0]
    12/50: $2\pc_2[31:0]
    13/50: $2\tb_io_instr_valid_i_2[0:0]
    14/50: $2\tb_io_instr_i_2[31:0]
    15/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_DATA[31:0]$79
    16/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_ADDR[1:0]$78
    17/50: $2\local_ready_1[0:0]
    18/50: $2\pc_1[31:0]
    19/50: $2\tb_io_instr_valid_i_1[0:0]
    20/50: $2\tb_io_instr_i_1[31:0]
    21/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_DATA[31:0]$77
    22/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_ADDR[1:0]$76
    23/50: $1\local_ready_2[0:0]
    24/50: $1\local_ready_1[0:0]
    25/50: $1\tb_io_instr_i_2[31:0]
    26/50: $1\tb_io_instr_i_1[31:0]
    27/50: $1\tb_io_instr_valid_i_2[0:0]
    28/50: $1\tb_io_instr_valid_i_1[0:0]
    29/50: $1\pc_2[31:0]
    30/50: $1\pc_1[31:0]
    31/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_DATA[31:0]$59
    32/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_ADDR[1:0]$58
    33/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_DATA[31:0]$57
    34/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_ADDR[1:0]$56
    35/50: $0$formal$cva6_lsu_formal.v:156$7_EN[0:0]$39
    36/50: $0$formal$cva6_lsu_formal.v:156$7_CHECK[0:0]$38
    37/50: $0$formal$cva6_lsu_formal.v:159$8_EN[0:0]$41
    38/50: $0$formal$cva6_lsu_formal.v:159$8_CHECK[0:0]$40
    39/50: $0$formal$cva6_lsu_formal.v:160$9_EN[0:0]$43
    40/50: $0$formal$cva6_lsu_formal.v:160$9_CHECK[0:0]$42
    41/50: $0$formal$cva6_lsu_formal.v:161$10_EN[0:0]$45
    42/50: $0$formal$cva6_lsu_formal.v:161$10_CHECK[0:0]$44
    43/50: $0$formal$cva6_lsu_formal.v:162$11_EN[0:0]$47
    44/50: $0$formal$cva6_lsu_formal.v:162$11_CHECK[0:0]$46
    45/50: $0$formal$cva6_lsu_formal.v:166$12_EN[0:0]$49
    46/50: $0$formal$cva6_lsu_formal.v:166$12_CHECK[0:0]$48
    47/50: $0$formal$cva6_lsu_formal.v:168$13_EN[0:0]$51
    48/50: $0$formal$cva6_lsu_formal.v:168$13_CHECK[0:0]$50
    49/50: $0$formal$cva6_lsu_formal.v:203$14_EN[0:0]$53
    50/50: $0$formal$cva6_lsu_formal.v:203$14_CHECK[0:0]$52
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

11.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_buffer.\page_offset_matches_o' from process `\store_buffer.$proc$store_buffer.v:166$866'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2._sv2v_jump' from process `\store_buffer.$proc$store_buffer.v:166$866'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i' from process `\store_buffer.$proc$store_buffer.v:166$866'.
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$866': $auto$proc_dlatch.cc:427:proc_dlatch$11594
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i' from process `\store_buffer.$proc$store_buffer.v:166$866': $auto$proc_dlatch.cc:427:proc_dlatch$11629
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$866': $auto$proc_dlatch.cc:427:proc_dlatch$11640
No latch inferred for signal `\store_buffer.\no_st_pending_o' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\commit_ready_o' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\req_port_o [9]' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\commit_queue_n' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\commit_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\commit_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\commit_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\store_if.commit_status_cnt' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:154$671' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:154$672' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:160$673' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:160$674' from process `\store_buffer.$proc$store_buffer.v:142$821'.
No latch inferred for signal `\store_buffer.\req_port_o [3:2]' from process `\store_buffer.$proc$store_buffer.v:141$820'.
No latch inferred for signal `\store_buffer.\req_port_o [7:4]' from process `\store_buffer.$proc$store_buffer.v:138$814'.
No latch inferred for signal `\store_buffer.\req_port_o [42:11]' from process `\store_buffer.$proc$store_buffer.v:135$808'.
No latch inferred for signal `\store_buffer.\req_port_o [64:43]' from process `\store_buffer.$proc$store_buffer.v:132$802'.
No latch inferred for signal `\store_buffer.\req_port_o [76:65]' from process `\store_buffer.$proc$store_buffer.v:129$796'.
No latch inferred for signal `\store_buffer.\req_port_o [0]' from process `\store_buffer.$proc$store_buffer.v:126$790'.
No latch inferred for signal `\store_buffer.\req_port_o [8]' from process `\store_buffer.$proc$store_buffer.v:123$789'.
No latch inferred for signal `\store_buffer.\req_port_o [1]' from process `\store_buffer.$proc$store_buffer.v:120$788'.
No latch inferred for signal `\store_buffer.\ready_o' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.\speculative_queue_n' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.\speculative_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.\speculative_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.\speculative_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.\core_if.speculative_status_cnt' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:94$659' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:94$660' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:95$661' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:95$662' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:96$663' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:96$664' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:97$665' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:97$666' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:98$667' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:98$668' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:103$669' from process `\store_buffer.$proc$store_buffer.v:85$683'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:103$670' from process `\store_buffer.$proc$store_buffer.v:85$683'.
Latch inferred for signal `\store_buffer.\core_if.sv2v_autoblock_1.i' from process `\store_buffer.$proc$store_buffer.v:85$683': $auto$proc_dlatch.cc:427:proc_dlatch$11705
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$614.$result' from process `\store_unit.$proc$store_unit.v:0$647'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$617.$result' from process `\store_unit.$proc$store_unit.v:0$647'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$617.op' from process `\store_unit.$proc$store_unit.v:0$647'.
No latch inferred for signal `\store_unit.\st_data_n' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\st_be_n' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\st_data_size_n' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\amo_op_d' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$615.$result' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$615.addr' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$615.data' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$615.addr_tmp' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$615.data_tmp' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$616.$result' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$616.op' from process `\store_unit.$proc$store_unit.v:196$629'.
No latch inferred for signal `\store_unit.\st_valid' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\pop_st_o' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\valid_o' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\ex_o' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\translation_req_o' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\state_d' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\st_valid_without_flush' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `\store_unit.\trans_id_n' from process `\store_unit.$proc$store_unit.v:99$618'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\result_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$611'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\valid_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$575'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\trans_id_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$575'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$575'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\translation_req_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [7:0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [9]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\pop_ld_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$538.$result' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$538.op' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [32:1]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [64:33]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$543'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [64:43]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$542'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [76:65]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$541'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [42:11]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$540'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [8]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$539'.
No latch inferred for signal `\lsu_bypass.\lsu_ctrl_o' from process `\lsu_bypass.$proc$lsu_bypass.v:73$530'.
No latch inferred for signal `\lsu_bypass.\mem_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.\read_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.\write_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.\status_cnt_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.\status_cnt' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.\write_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.\read_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:47$475' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:47$476' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:52$477' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:52$478' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:57$479' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:57$480' from process `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$409.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$460'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$460'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$460'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413.size' from process `\load_store_unit.$proc$load_store_unit.v:0$460'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$413._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$460'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$408.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$455'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$412.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$455'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$412.op' from process `\load_store_unit.$proc$load_store_unit.v:0$455'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$407.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$438'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$411.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$438'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$411.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$438'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$411.size' from process `\load_store_unit.$proc$load_store_unit.v:0$438'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$411._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$438'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$406.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$433'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$410.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$433'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$410.op' from process `\load_store_unit.$proc$load_store_unit.v:0$433'.
No latch inferred for signal `\load_store_unit.\data_misaligned' from process `\load_store_unit.$proc$load_store_unit.v:519$422'.
No latch inferred for signal `\load_store_unit.\misaligned_exception' from process `\load_store_unit.$proc$load_store_unit.v:519$422'.
No latch inferred for signal `\load_store_unit.\st_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$421'.
No latch inferred for signal `\load_store_unit.\ld_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$421'.
No latch inferred for signal `\load_store_unit.\translation_req' from process `\load_store_unit.$proc$load_store_unit.v:320$421'.
No latch inferred for signal `\load_store_unit.\mmu_vaddr' from process `\load_store_unit.$proc$load_store_unit.v:320$421'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.

11.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\store_buffer.\commit_queue_q' using process `\store_buffer.$proc$store_buffer.v:234$903'.
  created $adff cell `$procdff$11716' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:234$903'.
  created $adff cell `$procdff$11717' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$903'.
  created $adff cell `$procdff$11718' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$903'.
  created $adff cell `$procdff$11719' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_queue_q' using process `\store_buffer.$proc$store_buffer.v:220$901'.
  created $adff cell `$procdff$11720' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:220$901'.
  created $adff cell `$procdff$11721' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$901'.
  created $adff cell `$procdff$11722' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$901'.
  created $adff cell `$procdff$11723' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\state_q' using process `\store_unit.$proc$store_unit.v:271$645'.
  created $adff cell `$procdff$11724' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_q' using process `\store_unit.$proc$store_unit.v:271$645'.
  created $adff cell `$procdff$11725' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_be_q' using process `\store_unit.$proc$store_unit.v:271$645'.
  created $adff cell `$procdff$11726' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_size_q' using process `\store_unit.$proc$store_unit.v:271$645'.
  created $adff cell `$procdff$11727' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\amo_op_q' using process `\store_unit.$proc$store_unit.v:271$645'.
  created $adff cell `$procdff$11728' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\trans_id_q' using process `\store_unit.$proc$store_unit.v:271$645'.
  created $adff cell `$procdff$11729' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\idx_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$612'.
  created $adff cell `$procdff$11730' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\signed_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$612'.
  created $adff cell `$procdff$11731' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\fp_sign_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$612'.
  created $adff cell `$procdff$11732' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$585'.
  created $adff cell `$procdff$11733' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$585'.
  created $adff cell `$procdff$11734' with positive edge clock and negative level reset.
Creating register for signal `\shift_reg.\d_o' using process `\shift_reg.$proc$shift_reg.v:19$536'.
  created $adff cell `$procdff$11735' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\mem_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$534'.
  created $adff cell `$procdff$11736' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\read_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$534'.
  created $adff cell `$procdff$11737' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\write_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$534'.
  created $adff cell `$procdff$11738' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\status_cnt_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$534'.
  created $adff cell `$procdff$11739' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\translation_valid' using process `\load_store_unit.$proc$load_store_unit.v:221$431'.
  created $adff cell `$procdff$11740' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\mmu_paddr' using process `\load_store_unit.$proc$load_store_unit.v:221$431'.
  created $adff cell `$procdff$11741' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_shim.\tb_io_fu_data_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11742' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_lsu_valid_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11743' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11744' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_tran_id_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11745' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_dcache_req_ports_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11746' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_memreq_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11747' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11748' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\store_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11749' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\x_load_mem_resp_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11750' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_store_request$func$cva6_lsu_shim.v:0$381.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11751' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_load_request$func$cva6_lsu_shim.v:0$382.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
  created $dff cell `$procdff$11752' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11753' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11754' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11755' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11756' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11757' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11758' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11759' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11760' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11761' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11762' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11763' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11764' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11765' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11766' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11767' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11768' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11769' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11770' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11771' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11772' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11773' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11774' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11775' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11776' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11777' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11778' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11779' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11780' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11781' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11782' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11783' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11784' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11785' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11786' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11787' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11788' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11789' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11790' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11791' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11792' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11793' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11794' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11795' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11796' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11797' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11798' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11799' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11800' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11801' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11802' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11803' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11804' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11805' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11806' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11807' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11808' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11809' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11810' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11811' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11812' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11813' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11814' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11815' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11816' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11817' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11818' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11819' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11820' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11821' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11822' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11823' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11824' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11825' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11826' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11827' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11828' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11829' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11830' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11831' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$125.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11832' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$125.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11833' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$126.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11834' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$126.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11835' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$127.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11836' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$127.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11837' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$128.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11838' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$128.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11839' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$129.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11840' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$129.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11841' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$130.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11842' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$130.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11843' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$131.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11844' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$131.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11845' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$131.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11846' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$131.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11847' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$132.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11848' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$132.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11849' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$132.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11850' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11851' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11852' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11853' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11854' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11855' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11856' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11857' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11858' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11859' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11860' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11861' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11862' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11863' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11864' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11865' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11866' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11867' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11868' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11869' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11870' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11871' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11872' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11873' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11874' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11875' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11876' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11877' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11878' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11879' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11880' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11881' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11882' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11883' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11884' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11885' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11886' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11887' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11888' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11889' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11890' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11891' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11892' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11893' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11894' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11895' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11896' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11897' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11898' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11899' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11900' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11901' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11902' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11903' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11904' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11905' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11906' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11907' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11908' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11909' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11910' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11911' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11912' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11913' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11914' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11915' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$133_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11916' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11917' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$134_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11918' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11919' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$135_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11920' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11921' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$136_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11922' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11923' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$137_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11924' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11925' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$138_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11926' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11927' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$139_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11928' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11929' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$140_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
  created $dff cell `$procdff$11930' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11931' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11932' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11933' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11934' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11935' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11936' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11937' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11938' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11939' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11940' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11941' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11942' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11943' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11944' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11945' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11946' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11947' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11948' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11949' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11950' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11951' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11952' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11953' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11954' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$13_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11955' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$13_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11956' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:203$14_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11957' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:203$14_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
  created $dff cell `$procdff$11958' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$11959' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$11960' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$11961' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
  created $dff cell `$procdff$11962' with positive edge clock.

11.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

11.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `store_buffer.$proc$store_buffer.v:234$903'.
Removing empty process `store_buffer.$proc$store_buffer.v:220$901'.
Found and cleaned up 23 empty switches in `\store_buffer.$proc$store_buffer.v:166$866'.
Removing empty process `store_buffer.$proc$store_buffer.v:166$866'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:142$821'.
Removing empty process `store_buffer.$proc$store_buffer.v:142$821'.
Removing empty process `store_buffer.$proc$store_buffer.v:141$820'.
Removing empty process `store_buffer.$proc$store_buffer.v:138$814'.
Removing empty process `store_buffer.$proc$store_buffer.v:135$808'.
Removing empty process `store_buffer.$proc$store_buffer.v:132$802'.
Removing empty process `store_buffer.$proc$store_buffer.v:129$796'.
Removing empty process `store_buffer.$proc$store_buffer.v:126$790'.
Removing empty process `store_buffer.$proc$store_buffer.v:123$789'.
Removing empty process `store_buffer.$proc$store_buffer.v:120$788'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:85$683'.
Removing empty process `store_buffer.$proc$store_buffer.v:85$683'.
Found and cleaned up 1 empty switch in `\store_unit.$proc$store_unit.v:0$647'.
Removing empty process `store_unit.$proc$store_unit.v:0$647'.
Removing empty process `store_unit.$proc$store_unit.v:271$645'.
Found and cleaned up 3 empty switches in `\store_unit.$proc$store_unit.v:196$629'.
Removing empty process `store_unit.$proc$store_unit.v:196$629'.
Found and cleaned up 12 empty switches in `\store_unit.$proc$store_unit.v:99$618'.
Removing empty process `store_unit.$proc$store_unit.v:99$618'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$612'.
Found and cleaned up 1 empty switch in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$611'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$611'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$585'.
Found and cleaned up 5 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$575'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$575'.
Found and cleaned up 23 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$551'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$544'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$543'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$542'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$541'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$540'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$539'.
Removing empty process `shift_reg.$proc$shift_reg.v:19$536'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:79$534'.
Found and cleaned up 1 empty switch in `\lsu_bypass.$proc$lsu_bypass.v:73$530'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:73$530'.
Found and cleaned up 5 empty switches in `\lsu_bypass.$proc$lsu_bypass.v:41$482'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:41$482'.
Found and cleaned up 4 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$460'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$460'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$455'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$455'.
Found and cleaned up 5 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$438'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$438'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$433'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$433'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:221$431'.
Found and cleaned up 11 empty switches in `\load_store_unit.$proc$load_store_unit.v:519$422'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:519$422'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:320$421'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:320$421'.
Found and cleaned up 10 empty switches in `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
Removing empty process `cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$389'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$141'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$123'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$121'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$33'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$15'.
Cleaned up 152 empty switches.

11.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_buffer.
<suppressed ~81 debug messages>
Optimizing module amo_buffer.
Optimizing module store_unit.
<suppressed ~28 debug messages>
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
<suppressed ~60 debug messages>
Optimizing module shift_reg.
Optimizing module lsu_bypass.
<suppressed ~1 debug messages>
Optimizing module load_store_unit.
<suppressed ~29 debug messages>
Optimizing module cva6_lsu_shim.
<suppressed ~55 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~5 debug messages>

11.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 855 unused cells and 4540 unused wires.
<suppressed ~981 debug messages>

11.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

11.7. Executing OPT pass (performing simple optimizations).

11.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.
<suppressed ~4 debug messages>

11.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~177 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Finding identical cells in module `\load_store_unit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\lsu_bypass'.
<suppressed ~36 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~114 debug messages>
Finding identical cells in module `\store_unit'.
<suppressed ~144 debug messages>
Removed a total of 3280 cells.

11.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1621.
    dead port 2/2 on $mux $procmux$1624.
    dead port 1/2 on $mux $procmux$1626.
    dead port 2/2 on $mux $procmux$1628.
    dead port 2/2 on $mux $procmux$1630.
    dead port 2/2 on $mux $procmux$1640.
    dead port 1/2 on $mux $procmux$1642.
    dead port 2/2 on $mux $procmux$1644.
    dead port 2/2 on $mux $procmux$1646.
    dead port 2/2 on $mux $procmux$1656.
    dead port 1/2 on $mux $procmux$1658.
    dead port 2/2 on $mux $procmux$1660.
    dead port 2/2 on $mux $procmux$1662.
    dead port 1/2 on $mux $procmux$1671.
    dead port 2/2 on $mux $procmux$1673.
    dead port 2/2 on $mux $procmux$1675.
    dead port 1/2 on $mux $procmux$1684.
    dead port 2/2 on $mux $procmux$1686.
    dead port 2/2 on $mux $procmux$1688.
    dead port 2/2 on $mux $procmux$1696.
    dead port 2/2 on $mux $procmux$1698.
    dead port 2/2 on $mux $procmux$1706.
    dead port 2/2 on $mux $procmux$1708.
    dead port 2/2 on $mux $procmux$1716.
    dead port 2/2 on $mux $procmux$1718.
    dead port 2/2 on $mux $procmux$1725.
    dead port 2/2 on $mux $procmux$1732.
    dead port 2/2 on $mux $procmux$1739.
    dead port 2/2 on $mux $procmux$1746.
    dead port 1/2 on $mux $procmux$1756.
    dead port 2/2 on $mux $procmux$1758.
    dead port 2/2 on $mux $procmux$1760.
    dead port 2/2 on $mux $procmux$1769.
    dead port 2/2 on $mux $procmux$1771.
    dead port 2/2 on $mux $procmux$1780.
    dead port 2/2 on $mux $procmux$1782.
    dead port 2/2 on $mux $procmux$1790.
    dead port 2/2 on $mux $procmux$1798.
    dead port 2/2 on $mux $procmux$1810.
    dead port 2/2 on $mux $procmux$1819.
    dead port 2/2 on $mux $procmux$1829.
    dead port 1/2 on $mux $procmux$1845.
    dead port 2/2 on $mux $procmux$1848.
    dead port 1/2 on $mux $procmux$1850.
    dead port 2/2 on $mux $procmux$1852.
    dead port 2/2 on $mux $procmux$1854.
    dead port 2/2 on $mux $procmux$1870.
    dead port 1/2 on $mux $procmux$1872.
    dead port 2/2 on $mux $procmux$1874.
    dead port 2/2 on $mux $procmux$1876.
    dead port 2/2 on $mux $procmux$1892.
    dead port 1/2 on $mux $procmux$1894.
    dead port 2/2 on $mux $procmux$1896.
    dead port 2/2 on $mux $procmux$1898.
    dead port 1/2 on $mux $procmux$1913.
    dead port 2/2 on $mux $procmux$1915.
    dead port 2/2 on $mux $procmux$1917.
    dead port 1/2 on $mux $procmux$1932.
    dead port 2/2 on $mux $procmux$1934.
    dead port 2/2 on $mux $procmux$1936.
    dead port 2/2 on $mux $procmux$1950.
    dead port 2/2 on $mux $procmux$1952.
    dead port 2/2 on $mux $procmux$1966.
    dead port 2/2 on $mux $procmux$1968.
    dead port 2/2 on $mux $procmux$1982.
    dead port 2/2 on $mux $procmux$1984.
    dead port 2/2 on $mux $procmux$1997.
    dead port 2/2 on $mux $procmux$2010.
    dead port 2/2 on $mux $procmux$2023.
    dead port 2/2 on $mux $procmux$2036.
    dead port 1/2 on $mux $procmux$1555.
    dead port 2/2 on $mux $procmux$1570.
    dead port 2/2 on $mux $procmux$1576.
    dead port 2/2 on $mux $procmux$1582.
    dead port 2/2 on $mux $procmux$1600.
    dead port 2/2 on $mux $procmux$2077.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$11319.
    dead port 2/2 on $mux $procmux$11321.
    dead port 1/2 on $mux $procmux$11324.
    dead port 2/2 on $mux $procmux$11330.
    dead port 1/2 on $mux $procmux$11333.
    dead port 2/2 on $mux $procmux$11339.
    dead port 1/2 on $mux $procmux$11342.
    dead port 2/2 on $mux $procmux$11348.
    dead port 1/2 on $mux $procmux$11351.
    dead port 2/2 on $mux $procmux$11369.
    dead port 2/2 on $mux $procmux$11371.
    dead port 1/2 on $mux $procmux$11374.
    dead port 2/2 on $mux $procmux$11380.
    dead port 1/2 on $mux $procmux$11383.
    dead port 2/2 on $mux $procmux$11389.
    dead port 1/2 on $mux $procmux$11392.
    dead port 2/2 on $mux $procmux$11398.
    dead port 1/2 on $mux $procmux$11401.
    dead port 1/2 on $mux $procmux$11418.
    dead port 1/2 on $mux $procmux$11424.
    dead port 1/2 on $mux $procmux$11430.
    dead port 1/2 on $mux $procmux$11436.
    dead port 1/2 on $mux $procmux$11454.
    dead port 1/2 on $mux $procmux$11460.
    dead port 1/2 on $mux $procmux$11466.
    dead port 1/2 on $mux $procmux$11472.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2386.
    dead port 1/2 on $mux $procmux$2389.
    dead port 1/2 on $mux $procmux$2392.
    dead port 2/2 on $mux $procmux$2395.
    dead port 1/2 on $mux $procmux$2416.
    dead port 1/2 on $mux $procmux$2419.
    dead port 2/2 on $mux $procmux$2422.
    dead port 1/2 on $mux $procmux$2440.
    dead port 2/2 on $mux $procmux$2443.
    dead port 1/2 on $mux $procmux$2449.
    dead port 2/2 on $mux $procmux$2452.
    dead port 1/2 on $mux $procmux$2467.
    dead port 1/2 on $mux $procmux$2470.
    dead port 2/2 on $mux $procmux$2473.
    dead port 1/2 on $mux $procmux$2479.
    dead port 1/2 on $mux $procmux$2482.
    dead port 2/2 on $mux $procmux$2485.
    dead port 1/2 on $mux $procmux$2491.
    dead port 2/2 on $mux $procmux$2494.
    dead port 1/2 on $mux $procmux$2500.
    dead port 2/2 on $mux $procmux$2503.
    dead port 1/2 on $mux $procmux$2509.
    dead port 2/2 on $mux $procmux$2512.
    dead port 2/2 on $mux $procmux$2516.
    dead port 2/2 on $mux $procmux$2519.
    dead port 2/2 on $mux $procmux$2521.
    dead port 2/2 on $mux $procmux$2524.
    dead port 2/2 on $mux $procmux$2528.
    dead port 2/2 on $mux $procmux$2531.
    dead port 2/2 on $mux $procmux$2533.
    dead port 2/2 on $mux $procmux$2536.
    dead port 2/2 on $mux $procmux$2540.
    dead port 2/2 on $mux $procmux$2543.
    dead port 2/2 on $mux $procmux$2545.
    dead port 2/2 on $mux $procmux$2548.
    dead port 2/2 on $mux $procmux$2566.
    dead port 2/2 on $mux $procmux$2569.
    dead port 2/2 on $mux $procmux$2575.
    dead port 2/2 on $mux $procmux$2578.
    dead port 2/2 on $mux $procmux$2584.
    dead port 2/2 on $mux $procmux$2587.
    dead port 2/2 on $mux $procmux$2611.
    dead port 2/2 on $mux $procmux$2614.
    dead port 2/2 on $mux $procmux$2632.
    dead port 2/2 on $mux $procmux$2638.
    dead port 2/2 on $mux $procmux$2644.
    dead port 2/2 on $mux $procmux$2650.
    dead port 2/2 on $mux $procmux$2656.
    dead port 2/2 on $mux $procmux$2668.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$2765: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$2743: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$3455: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$3372: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3173: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3095: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3020: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2861: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2835: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$5097.
    dead port 1/2 on $mux $procmux$5100.
    dead port 2/2 on $mux $procmux$5102.
    dead port 2/2 on $mux $procmux$5105.
    dead port 1/2 on $mux $procmux$5112.
    dead port 1/2 on $mux $procmux$5115.
    dead port 2/2 on $mux $procmux$5117.
    dead port 2/2 on $mux $procmux$5120.
    dead port 1/2 on $mux $procmux$5127.
    dead port 1/2 on $mux $procmux$5130.
    dead port 2/2 on $mux $procmux$5132.
    dead port 2/2 on $mux $procmux$5135.
    dead port 1/2 on $mux $procmux$5142.
    dead port 2/2 on $mux $procmux$7032.
    dead port 1/2 on $mux $procmux$7035.
    dead port 2/2 on $mux $procmux$7037.
    dead port 2/2 on $mux $procmux$7040.
    dead port 1/2 on $mux $procmux$5145.
    dead port 2/2 on $mux $procmux$5147.
    dead port 2/2 on $mux $procmux$5150.
    dead port 1/2 on $mux $procmux$5157.
    dead port 1/2 on $mux $procmux$5160.
    dead port 2/2 on $mux $procmux$5162.
    dead port 2/2 on $mux $procmux$5165.
    dead port 1/2 on $mux $procmux$5172.
    dead port 1/2 on $mux $procmux$5175.
    dead port 2/2 on $mux $procmux$5177.
    dead port 2/2 on $mux $procmux$5180.
    dead port 1/2 on $mux $procmux$5187.
    dead port 1/2 on $mux $procmux$5190.
    dead port 2/2 on $mux $procmux$5192.
    dead port 2/2 on $mux $procmux$5195.
    dead port 1/2 on $mux $procmux$5202.
    dead port 1/2 on $mux $procmux$5205.
    dead port 2/2 on $mux $procmux$5207.
    dead port 2/2 on $mux $procmux$5210.
    dead port 1/2 on $mux $procmux$5217.
    dead port 1/2 on $mux $procmux$5220.
    dead port 2/2 on $mux $procmux$5222.
    dead port 2/2 on $mux $procmux$5225.
    dead port 1/2 on $mux $procmux$5232.
    dead port 1/2 on $mux $procmux$5235.
    dead port 2/2 on $mux $procmux$5237.
    dead port 2/2 on $mux $procmux$7077.
    dead port 1/2 on $mux $procmux$7080.
    dead port 2/2 on $mux $procmux$7082.
    dead port 2/2 on $mux $procmux$7085.
    dead port 2/2 on $mux $procmux$5240.
    dead port 1/2 on $mux $procmux$5247.
    dead port 1/2 on $mux $procmux$5250.
    dead port 2/2 on $mux $procmux$5252.
    dead port 2/2 on $mux $procmux$5255.
    dead port 1/2 on $mux $procmux$5262.
    dead port 1/2 on $mux $procmux$5265.
    dead port 2/2 on $mux $procmux$5267.
    dead port 2/2 on $mux $procmux$5270.
    dead port 1/2 on $mux $procmux$5277.
    dead port 1/2 on $mux $procmux$5280.
    dead port 2/2 on $mux $procmux$5282.
    dead port 2/2 on $mux $procmux$5285.
    dead port 1/2 on $mux $procmux$5292.
    dead port 1/2 on $mux $procmux$5295.
    dead port 2/2 on $mux $procmux$5297.
    dead port 2/2 on $mux $procmux$5300.
    dead port 1/2 on $mux $procmux$5307.
    dead port 1/2 on $mux $procmux$5310.
    dead port 2/2 on $mux $procmux$5312.
    dead port 2/2 on $mux $procmux$5315.
    dead port 1/2 on $mux $procmux$5322.
    dead port 1/2 on $mux $procmux$5325.
    dead port 2/2 on $mux $procmux$5327.
    dead port 2/2 on $mux $procmux$5330.
    dead port 2/2 on $mux $procmux$7122.
    dead port 1/2 on $mux $procmux$7125.
    dead port 2/2 on $mux $procmux$7127.
    dead port 2/2 on $mux $procmux$7130.
    dead port 1/2 on $mux $procmux$5337.
    dead port 1/2 on $mux $procmux$5340.
    dead port 2/2 on $mux $procmux$5342.
    dead port 2/2 on $mux $procmux$5345.
    dead port 1/2 on $mux $procmux$5352.
    dead port 1/2 on $mux $procmux$5355.
    dead port 2/2 on $mux $procmux$5357.
    dead port 2/2 on $mux $procmux$5360.
    dead port 1/2 on $mux $procmux$5367.
    dead port 1/2 on $mux $procmux$5370.
    dead port 2/2 on $mux $procmux$5372.
    dead port 2/2 on $mux $procmux$5375.
    dead port 1/2 on $mux $procmux$5382.
    dead port 1/2 on $mux $procmux$5385.
    dead port 2/2 on $mux $procmux$5387.
    dead port 2/2 on $mux $procmux$5390.
    dead port 1/2 on $mux $procmux$5397.
    dead port 1/2 on $mux $procmux$5400.
    dead port 2/2 on $mux $procmux$5402.
    dead port 2/2 on $mux $procmux$5405.
    dead port 1/2 on $mux $procmux$5412.
    dead port 1/2 on $mux $procmux$5415.
    dead port 2/2 on $mux $procmux$5417.
    dead port 2/2 on $mux $procmux$5420.
    dead port 1/2 on $mux $procmux$5427.
    dead port 1/2 on $mux $procmux$5430.
    dead port 2/2 on $mux $procmux$7167.
    dead port 1/2 on $mux $procmux$7170.
    dead port 2/2 on $mux $procmux$7172.
    dead port 2/2 on $mux $procmux$7175.
    dead port 2/2 on $mux $procmux$7212.
    dead port 1/2 on $mux $procmux$7215.
    dead port 2/2 on $mux $procmux$7217.
    dead port 2/2 on $mux $procmux$7220.
    dead port 2/2 on $mux $procmux$5432.
    dead port 2/2 on $mux $procmux$5435.
    dead port 1/2 on $mux $procmux$5442.
    dead port 1/2 on $mux $procmux$5445.
    dead port 2/2 on $mux $procmux$5447.
    dead port 2/2 on $mux $procmux$5450.
    dead port 1/2 on $mux $procmux$5457.
    dead port 1/2 on $mux $procmux$5460.
    dead port 2/2 on $mux $procmux$5462.
    dead port 2/2 on $mux $procmux$5465.
    dead port 1/2 on $mux $procmux$5472.
    dead port 1/2 on $mux $procmux$5475.
    dead port 2/2 on $mux $procmux$5477.
    dead port 2/2 on $mux $procmux$5480.
    dead port 1/2 on $mux $procmux$5487.
    dead port 1/2 on $mux $procmux$5490.
    dead port 2/2 on $mux $procmux$5492.
    dead port 2/2 on $mux $procmux$5495.
    dead port 1/2 on $mux $procmux$5502.
    dead port 1/2 on $mux $procmux$5505.
    dead port 2/2 on $mux $procmux$5507.
    dead port 2/2 on $mux $procmux$5510.
    dead port 1/2 on $mux $procmux$5517.
    dead port 1/2 on $mux $procmux$5520.
    dead port 2/2 on $mux $procmux$5522.
    dead port 2/2 on $mux $procmux$5525.
    dead port 1/2 on $mux $procmux$7272.
    dead port 2/2 on $mux $procmux$7274.
    dead port 2/2 on $mux $procmux$7277.
    dead port 1/2 on $mux $procmux$7284.
    dead port 2/2 on $mux $procmux$7286.
    dead port 2/2 on $mux $procmux$7289.
    dead port 1/2 on $mux $procmux$7296.
    dead port 2/2 on $mux $procmux$7298.
    dead port 2/2 on $mux $procmux$7301.
    dead port 1/2 on $mux $procmux$7308.
    dead port 2/2 on $mux $procmux$7310.
    dead port 2/2 on $mux $procmux$7313.
    dead port 1/2 on $mux $procmux$7320.
    dead port 2/2 on $mux $procmux$7322.
    dead port 2/2 on $mux $procmux$7325.
    dead port 1/2 on $mux $procmux$7332.
    dead port 2/2 on $mux $procmux$7334.
    dead port 2/2 on $mux $procmux$7337.
    dead port 1/2 on $mux $procmux$7344.
    dead port 2/2 on $mux $procmux$7346.
    dead port 2/2 on $mux $procmux$7349.
    dead port 1/2 on $mux $procmux$7356.
    dead port 2/2 on $mux $procmux$7358.
    dead port 2/2 on $mux $procmux$7361.
    dead port 1/2 on $mux $procmux$7368.
    dead port 2/2 on $mux $procmux$7370.
    dead port 2/2 on $mux $procmux$7373.
    dead port 1/2 on $mux $procmux$7380.
    dead port 2/2 on $mux $procmux$7382.
    dead port 2/2 on $mux $procmux$7385.
    dead port 1/2 on $mux $procmux$7392.
    dead port 2/2 on $mux $procmux$7394.
    dead port 2/2 on $mux $procmux$7397.
    dead port 1/2 on $mux $procmux$7404.
    dead port 2/2 on $mux $procmux$7406.
    dead port 2/2 on $mux $procmux$7409.
    dead port 1/2 on $mux $procmux$7416.
    dead port 2/2 on $mux $procmux$7418.
    dead port 2/2 on $mux $procmux$7421.
    dead port 1/2 on $mux $procmux$7428.
    dead port 2/2 on $mux $procmux$7430.
    dead port 2/2 on $mux $procmux$7433.
    dead port 1/2 on $mux $procmux$7440.
    dead port 2/2 on $mux $procmux$7442.
    dead port 2/2 on $mux $procmux$7445.
    dead port 1/2 on $mux $procmux$7452.
    dead port 2/2 on $mux $procmux$7454.
    dead port 2/2 on $mux $procmux$7457.
    dead port 1/2 on $mux $procmux$7464.
    dead port 2/2 on $mux $procmux$7466.
    dead port 2/2 on $mux $procmux$7469.
    dead port 1/2 on $mux $procmux$7476.
    dead port 2/2 on $mux $procmux$7478.
    dead port 2/2 on $mux $procmux$7481.
    dead port 1/2 on $mux $procmux$7488.
    dead port 2/2 on $mux $procmux$7490.
    dead port 2/2 on $mux $procmux$7493.
    dead port 1/2 on $mux $procmux$7500.
    dead port 2/2 on $mux $procmux$7502.
    dead port 2/2 on $mux $procmux$7505.
    dead port 1/2 on $mux $procmux$7512.
    dead port 2/2 on $mux $procmux$7514.
    dead port 2/2 on $mux $procmux$7517.
    dead port 1/2 on $mux $procmux$7524.
    dead port 2/2 on $mux $procmux$7526.
    dead port 2/2 on $mux $procmux$7529.
    dead port 1/2 on $mux $procmux$7536.
    dead port 2/2 on $mux $procmux$7538.
    dead port 2/2 on $mux $procmux$7541.
    dead port 1/2 on $mux $procmux$7548.
    dead port 2/2 on $mux $procmux$7550.
    dead port 2/2 on $mux $procmux$7553.
    dead port 1/2 on $mux $procmux$7560.
    dead port 2/2 on $mux $procmux$7562.
    dead port 2/2 on $mux $procmux$7565.
    dead port 1/2 on $mux $procmux$7572.
    dead port 2/2 on $mux $procmux$7574.
    dead port 2/2 on $mux $procmux$7577.
    dead port 1/2 on $mux $procmux$7584.
    dead port 2/2 on $mux $procmux$7586.
    dead port 2/2 on $mux $procmux$7589.
    dead port 1/2 on $mux $procmux$7596.
    dead port 2/2 on $mux $procmux$7598.
    dead port 2/2 on $mux $procmux$7601.
    dead port 1/2 on $mux $procmux$7608.
    dead port 2/2 on $mux $procmux$7610.
    dead port 2/2 on $mux $procmux$7613.
    dead port 1/2 on $mux $procmux$7620.
    dead port 2/2 on $mux $procmux$7622.
    dead port 2/2 on $mux $procmux$7625.
    dead port 1/2 on $mux $procmux$7632.
    dead port 2/2 on $mux $procmux$7634.
    dead port 2/2 on $mux $procmux$7637.
    dead port 1/2 on $mux $procmux$7644.
    dead port 2/2 on $mux $procmux$7646.
    dead port 2/2 on $mux $procmux$7649.
    dead port 1/2 on $mux $procmux$7656.
    dead port 2/2 on $mux $procmux$7658.
    dead port 2/2 on $mux $procmux$7661.
    dead port 1/2 on $mux $procmux$7668.
    dead port 2/2 on $mux $procmux$7670.
    dead port 2/2 on $mux $procmux$7673.
    dead port 1/2 on $mux $procmux$7680.
    dead port 2/2 on $mux $procmux$7682.
    dead port 2/2 on $mux $procmux$7685.
    dead port 1/2 on $mux $procmux$7740.
    dead port 2/2 on $mux $procmux$7742.
    dead port 2/2 on $mux $procmux$7745.
    dead port 2/2 on $mux $procmux$8010.
    dead port 2/2 on $mux $procmux$8012.
    dead port 2/2 on $mux $procmux$8015.
    dead port 1/2 on $mux $procmux$5532.
    dead port 1/2 on $mux $procmux$5535.
    dead port 2/2 on $mux $procmux$5537.
    dead port 2/2 on $mux $procmux$5540.
    dead port 2/2 on $mux $procmux$10712.
    dead port 2/2 on $mux $procmux$10718.
    dead port 2/2 on $mux $procmux$10724.
    dead port 2/2 on $mux $procmux$10730.
    dead port 2/2 on $mux $procmux$10736.
    dead port 2/2 on $mux $procmux$10742.
    dead port 2/2 on $mux $procmux$10748.
    dead port 2/2 on $mux $procmux$10754.
    dead port 2/2 on $mux $procmux$3930.
    dead port 1/2 on $mux $procmux$3933.
    dead port 1/2 on $mux $procmux$3936.
    dead port 2/2 on $mux $procmux$3938.
    dead port 2/2 on $mux $procmux$3941.
    dead port 2/2 on $mux $procmux$10760.
    dead port 2/2 on $mux $procmux$10766.
    dead port 2/2 on $mux $procmux$8052.
    dead port 2/2 on $mux $procmux$8054.
    dead port 2/2 on $mux $procmux$8057.
    dead port 2/2 on $mux $procmux$10772.
    dead port 2/2 on $mux $procmux$10778.
    dead port 2/2 on $mux $procmux$10784.
    dead port 2/2 on $mux $procmux$5772.
    dead port 1/2 on $mux $procmux$5775.
    dead port 2/2 on $mux $procmux$5777.
    dead port 2/2 on $mux $procmux$5780.
    dead port 2/2 on $mux $procmux$10790.
    dead port 2/2 on $mux $procmux$10904.
    dead port 2/2 on $mux $procmux$10910.
    dead port 2/2 on $mux $procmux$10916.
    dead port 2/2 on $mux $procmux$10934.
    dead port 2/2 on $mux $procmux$10952.
    dead port 2/2 on $mux $procmux$10958.
    dead port 2/2 on $mux $procmux$10964.
    dead port 2/2 on $mux $procmux$8094.
    dead port 2/2 on $mux $procmux$8096.
    dead port 2/2 on $mux $procmux$8099.
    dead port 2/2 on $mux $procmux$10970.
    dead port 2/2 on $mux $procmux$3978.
    dead port 1/2 on $mux $procmux$3981.
    dead port 1/2 on $mux $procmux$3984.
    dead port 2/2 on $mux $procmux$3986.
    dead port 2/2 on $mux $procmux$3989.
    dead port 2/2 on $mux $procmux$5817.
    dead port 1/2 on $mux $procmux$5820.
    dead port 2/2 on $mux $procmux$5822.
    dead port 2/2 on $mux $procmux$5825.
    dead port 2/2 on $mux $procmux$8136.
    dead port 2/2 on $mux $procmux$8138.
    dead port 2/2 on $mux $procmux$8141.
    dead port 2/2 on $mux $procmux$4026.
    dead port 1/2 on $mux $procmux$4029.
    dead port 1/2 on $mux $procmux$4032.
    dead port 2/2 on $mux $procmux$5862.
    dead port 1/2 on $mux $procmux$5865.
    dead port 2/2 on $mux $procmux$5867.
    dead port 2/2 on $mux $procmux$5870.
    dead port 2/2 on $mux $procmux$4034.
    dead port 2/2 on $mux $procmux$4037.
    dead port 2/2 on $mux $procmux$8178.
    dead port 2/2 on $mux $procmux$8180.
    dead port 2/2 on $mux $procmux$8183.
    dead port 2/2 on $mux $procmux$5907.
    dead port 1/2 on $mux $procmux$5910.
    dead port 2/2 on $mux $procmux$5912.
    dead port 2/2 on $mux $procmux$5915.
    dead port 2/2 on $mux $procmux$4074.
    dead port 1/2 on $mux $procmux$4077.
    dead port 1/2 on $mux $procmux$4080.
    dead port 2/2 on $mux $procmux$8220.
    dead port 2/2 on $mux $procmux$8222.
    dead port 2/2 on $mux $procmux$8225.
    dead port 2/2 on $mux $procmux$4082.
    dead port 2/2 on $mux $procmux$4085.
    dead port 1/2 on $mux $procmux$2716.
    dead port 2/2 on $mux $procmux$2719.
    dead port 2/2 on $mux $procmux$2725.
    dead port 2/2 on $mux $procmux$2731.
    dead port 1/2 on $mux $procmux$2737.
    dead port 2/2 on $mux $procmux$2740.
    dead port 2/2 on $mux $procmux$5952.
    dead port 1/2 on $mux $procmux$5955.
    dead port 2/2 on $mux $procmux$5957.
    dead port 2/2 on $mux $procmux$5960.
    dead port 2/2 on $mux $procmux$8262.
    dead port 2/2 on $mux $procmux$8264.
    dead port 2/2 on $mux $procmux$8267.
    dead port 1/2 on $mux $procmux$2746.
    dead port 2/2 on $mux $procmux$2749.
    dead port 1/2 on $mux $procmux$2756.
    dead port 2/2 on $mux $procmux$2758.
    dead port 2/2 on $mux $procmux$2761.
    dead port 1/2 on $mux $procmux$2768.
    dead port 2/2 on $mux $procmux$4122.
    dead port 1/2 on $mux $procmux$4125.
    dead port 1/2 on $mux $procmux$4128.
    dead port 2/2 on $mux $procmux$4130.
    dead port 2/2 on $mux $procmux$4133.
    dead port 2/2 on $mux $procmux$2770.
    dead port 2/2 on $mux $procmux$2773.
    dead port 1/2 on $mux $procmux$2780.
    dead port 2/2 on $mux $procmux$2782.
    dead port 2/2 on $mux $procmux$2785.
    dead port 2/2 on $mux $procmux$2791.
    dead port 2/2 on $mux $procmux$2794.
    dead port 2/2 on $mux $procmux$2800.
    dead port 2/2 on $mux $procmux$2803.
    dead port 2/2 on $mux $procmux$2809.
    dead port 2/2 on $mux $procmux$2812.
    dead port 2/2 on $mux $procmux$2818.
    dead port 2/2 on $mux $procmux$5997.
    dead port 2/2 on $mux $procmux$8304.
    dead port 2/2 on $mux $procmux$8306.
    dead port 2/2 on $mux $procmux$8309.
    dead port 1/2 on $mux $procmux$6000.
    dead port 2/2 on $mux $procmux$6002.
    dead port 2/2 on $mux $procmux$6005.
    dead port 2/2 on $mux $procmux$2824.
    dead port 2/2 on $mux $procmux$2830.
    dead port 2/2 on $mux $procmux$2837.
    dead port 1/2 on $mux $procmux$2840.
    dead port 1/2 on $mux $procmux$2843.
    dead port 1/2 on $mux $procmux$2846.
    dead port 1/2 on $mux $procmux$2849.
    dead port 1/2 on $mux $procmux$2851.
    dead port 1/2 on $mux $procmux$2854.
    dead port 2/2 on $mux $procmux$2857.
    dead port 1/2 on $mux $procmux$2864.
    dead port 2/2 on $mux $procmux$4170.
    dead port 1/2 on $mux $procmux$4173.
    dead port 1/2 on $mux $procmux$4176.
    dead port 2/2 on $mux $procmux$4178.
    dead port 2/2 on $mux $procmux$4181.
    dead port 1/2 on $mux $procmux$2867.
    dead port 1/2 on $mux $procmux$2870.
    dead port 1/2 on $mux $procmux$2873.
    dead port 1/2 on $mux $procmux$2875.
    dead port 1/2 on $mux $procmux$2878.
    dead port 2/2 on $mux $procmux$2881.
    dead port 2/2 on $mux $procmux$8346.
    dead port 2/2 on $mux $procmux$8348.
    dead port 2/2 on $mux $procmux$8351.
    dead port 1/2 on $mux $procmux$2888.
    dead port 1/2 on $mux $procmux$2891.
    dead port 1/2 on $mux $procmux$2894.
    dead port 1/2 on $mux $procmux$2897.
    dead port 2/2 on $mux $procmux$6042.
    dead port 1/2 on $mux $procmux$6045.
    dead port 2/2 on $mux $procmux$6047.
    dead port 2/2 on $mux $procmux$6050.
    dead port 1/2 on $mux $procmux$2899.
    dead port 1/2 on $mux $procmux$2902.
    dead port 2/2 on $mux $procmux$2905.
    dead port 2/2 on $mux $procmux$2912.
    dead port 1/2 on $mux $procmux$2915.
    dead port 1/2 on $mux $procmux$2918.
    dead port 1/2 on $mux $procmux$2921.
    dead port 1/2 on $mux $procmux$2923.
    dead port 1/2 on $mux $procmux$2926.
    dead port 2/2 on $mux $procmux$2929.
    dead port 2/2 on $mux $procmux$2936.
    dead port 1/2 on $mux $procmux$2939.
    dead port 1/2 on $mux $procmux$2942.
    dead port 1/2 on $mux $procmux$2945.
    dead port 1/2 on $mux $procmux$2947.
    dead port 1/2 on $mux $procmux$2950.
    dead port 2/2 on $mux $procmux$2953.
    dead port 1/2 on $mux $procmux$2960.
    dead port 2/2 on $mux $procmux$4218.
    dead port 1/2 on $mux $procmux$4221.
    dead port 2/2 on $mux $procmux$8388.
    dead port 2/2 on $mux $procmux$8390.
    dead port 2/2 on $mux $procmux$8393.
    dead port 1/2 on $mux $procmux$4224.
    dead port 2/2 on $mux $procmux$4226.
    dead port 2/2 on $mux $procmux$4229.
    dead port 1/2 on $mux $procmux$2963.
    dead port 1/2 on $mux $procmux$2966.
    dead port 1/2 on $mux $procmux$2968.
    dead port 1/2 on $mux $procmux$2971.
    dead port 2/2 on $mux $procmux$2974.
    dead port 2/2 on $mux $procmux$6087.
    dead port 1/2 on $mux $procmux$6090.
    dead port 2/2 on $mux $procmux$6092.
    dead port 2/2 on $mux $procmux$6095.
    dead port 1/2 on $mux $procmux$2981.
    dead port 1/2 on $mux $procmux$2984.
    dead port 1/2 on $mux $procmux$2987.
    dead port 1/2 on $mux $procmux$2989.
    dead port 1/2 on $mux $procmux$2992.
    dead port 2/2 on $mux $procmux$2995.
    dead port 1/2 on $mux $procmux$3002.
    dead port 1/2 on $mux $procmux$3005.
    dead port 1/2 on $mux $procmux$3008.
    dead port 1/2 on $mux $procmux$3010.
    dead port 1/2 on $mux $procmux$3013.
    dead port 2/2 on $mux $procmux$3016.
    dead port 1/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3026.
    dead port 1/2 on $mux $procmux$3029.
    dead port 2/2 on $mux $procmux$8430.
    dead port 2/2 on $mux $procmux$8432.
    dead port 2/2 on $mux $procmux$8435.
    dead port 1/2 on $mux $procmux$3031.
    dead port 1/2 on $mux $procmux$3034.
    dead port 2/2 on $mux $procmux$3037.
    dead port 1/2 on $mux $procmux$3044.
    dead port 1/2 on $mux $procmux$3047.
    dead port 1/2 on $mux $procmux$3049.
    dead port 1/2 on $mux $procmux$3052.
    dead port 2/2 on $mux $procmux$3055.
    dead port 2/2 on $mux $procmux$4266.
    dead port 1/2 on $mux $procmux$4269.
    dead port 1/2 on $mux $procmux$4272.
    dead port 2/2 on $mux $procmux$4274.
    dead port 2/2 on $mux $procmux$4277.
    dead port 2/2 on $mux $procmux$6132.
    dead port 1/2 on $mux $procmux$6135.
    dead port 2/2 on $mux $procmux$6137.
    dead port 2/2 on $mux $procmux$6140.
    dead port 1/2 on $mux $procmux$3062.
    dead port 1/2 on $mux $procmux$3065.
    dead port 1/2 on $mux $procmux$3067.
    dead port 1/2 on $mux $procmux$3070.
    dead port 2/2 on $mux $procmux$3073.
    dead port 1/2 on $mux $procmux$3080.
    dead port 1/2 on $mux $procmux$3083.
    dead port 1/2 on $mux $procmux$3085.
    dead port 1/2 on $mux $procmux$3088.
    dead port 2/2 on $mux $procmux$3091.
    dead port 2/2 on $mux $procmux$8472.
    dead port 2/2 on $mux $procmux$8474.
    dead port 2/2 on $mux $procmux$8477.
    dead port 1/2 on $mux $procmux$3098.
    dead port 1/2 on $mux $procmux$3101.
    dead port 1/2 on $mux $procmux$3103.
    dead port 1/2 on $mux $procmux$3106.
    dead port 2/2 on $mux $procmux$3109.
    dead port 1/2 on $mux $procmux$3116.
    dead port 1/2 on $mux $procmux$3118.
    dead port 1/2 on $mux $procmux$3121.
    dead port 2/2 on $mux $procmux$3124.
    dead port 1/2 on $mux $procmux$3131.
    dead port 1/2 on $mux $procmux$3133.
    dead port 1/2 on $mux $procmux$3136.
    dead port 2/2 on $mux $procmux$3139.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3148.
    dead port 2/2 on $mux $procmux$6177.
    dead port 1/2 on $mux $procmux$6180.
    dead port 2/2 on $mux $procmux$6182.
    dead port 2/2 on $mux $procmux$6185.
    dead port 1/2 on $mux $procmux$3151.
    dead port 2/2 on $mux $procmux$4314.
    dead port 1/2 on $mux $procmux$4317.
    dead port 1/2 on $mux $procmux$4320.
    dead port 2/2 on $mux $procmux$4322.
    dead port 2/2 on $mux $procmux$4325.
    dead port 2/2 on $mux $procmux$3154.
    dead port 2/2 on $mux $procmux$8514.
    dead port 2/2 on $mux $procmux$8516.
    dead port 2/2 on $mux $procmux$8519.
    dead port 1/2 on $mux $procmux$3161.
    dead port 1/2 on $mux $procmux$3163.
    dead port 1/2 on $mux $procmux$3166.
    dead port 2/2 on $mux $procmux$3169.
    dead port 1/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3178.
    dead port 1/2 on $mux $procmux$3181.
    dead port 2/2 on $mux $procmux$3184.
    dead port 2/2 on $mux $procmux$3205.
    dead port 1/2 on $mux $procmux$3207.
    dead port 1/2 on $mux $procmux$3210.
    dead port 2/2 on $mux $procmux$3213.
    dead port 2/2 on $mux $procmux$3220.
    dead port 1/2 on $mux $procmux$3222.
    dead port 1/2 on $mux $procmux$3225.
    dead port 2/2 on $mux $procmux$3228.
    dead port 2/2 on $mux $procmux$3234.
    dead port 1/2 on $mux $procmux$3236.
    dead port 1/2 on $mux $procmux$3239.
    dead port 2/2 on $mux $procmux$3242.
    dead port 2/2 on $mux $procmux$6222.
    dead port 1/2 on $mux $procmux$6225.
    dead port 2/2 on $mux $procmux$6227.
    dead port 2/2 on $mux $procmux$6230.
    dead port 2/2 on $mux $procmux$3249.
    dead port 1/2 on $mux $procmux$3251.
    dead port 1/2 on $mux $procmux$3254.
    dead port 2/2 on $mux $procmux$8556.
    dead port 2/2 on $mux $procmux$8558.
    dead port 2/2 on $mux $procmux$8561.
    dead port 2/2 on $mux $procmux$3257.
    dead port 2/2 on $mux $procmux$3264.
    dead port 1/2 on $mux $procmux$3266.
    dead port 2/2 on $mux $procmux$4362.
    dead port 1/2 on $mux $procmux$4365.
    dead port 1/2 on $mux $procmux$4368.
    dead port 2/2 on $mux $procmux$4370.
    dead port 2/2 on $mux $procmux$4373.
    dead port 1/2 on $mux $procmux$3269.
    dead port 2/2 on $mux $procmux$3272.
    dead port 1/2 on $mux $procmux$3278.
    dead port 1/2 on $mux $procmux$3281.
    dead port 2/2 on $mux $procmux$3284.
    dead port 1/2 on $mux $procmux$3290.
    dead port 1/2 on $mux $procmux$3293.
    dead port 2/2 on $mux $procmux$3296.
    dead port 1/2 on $mux $procmux$3302.
    dead port 1/2 on $mux $procmux$3305.
    dead port 2/2 on $mux $procmux$3308.
    dead port 1/2 on $mux $procmux$3326.
    dead port 1/2 on $mux $procmux$3329.
    dead port 2/2 on $mux $procmux$3332.
    dead port 2/2 on $mux $procmux$6267.
    dead port 1/2 on $mux $procmux$6270.
    dead port 2/2 on $mux $procmux$6272.
    dead port 2/2 on $mux $procmux$8598.
    dead port 2/2 on $mux $procmux$8600.
    dead port 2/2 on $mux $procmux$8603.
    dead port 2/2 on $mux $procmux$6275.
    dead port 1/2 on $mux $procmux$3338.
    dead port 1/2 on $mux $procmux$3341.
    dead port 2/2 on $mux $procmux$3344.
    dead port 1/2 on $mux $procmux$3350.
    dead port 1/2 on $mux $procmux$3353.
    dead port 2/2 on $mux $procmux$3356.
    dead port 1/2 on $mux $procmux$3362.
    dead port 1/2 on $mux $procmux$3365.
    dead port 2/2 on $mux $procmux$3368.
    dead port 1/2 on $mux $procmux$3374.
    dead port 2/2 on $mux $procmux$4410.
    dead port 1/2 on $mux $procmux$4413.
    dead port 1/2 on $mux $procmux$4416.
    dead port 2/2 on $mux $procmux$4418.
    dead port 2/2 on $mux $procmux$4421.
    dead port 1/2 on $mux $procmux$3377.
    dead port 2/2 on $mux $procmux$3380.
    dead port 1/2 on $mux $procmux$3386.
    dead port 2/2 on $mux $procmux$3389.
    dead port 1/2 on $mux $procmux$3395.
    dead port 2/2 on $mux $procmux$3398.
    dead port 1/2 on $mux $procmux$3413.
    dead port 2/2 on $mux $procmux$3416.
    dead port 2/2 on $mux $procmux$8640.
    dead port 2/2 on $mux $procmux$8642.
    dead port 2/2 on $mux $procmux$8645.
    dead port 1/2 on $mux $procmux$3422.
    dead port 2/2 on $mux $procmux$6312.
    dead port 1/2 on $mux $procmux$6315.
    dead port 2/2 on $mux $procmux$6317.
    dead port 2/2 on $mux $procmux$6320.
    dead port 2/2 on $mux $procmux$3425.
    dead port 1/2 on $mux $procmux$3431.
    dead port 2/2 on $mux $procmux$3434.
    dead port 1/2 on $mux $procmux$3440.
    dead port 2/2 on $mux $procmux$3443.
    dead port 1/2 on $mux $procmux$3449.
    dead port 2/2 on $mux $procmux$3452.
    dead port 1/2 on $mux $procmux$3458.
    dead port 2/2 on $mux $procmux$3461.
    dead port 2/2 on $mux $procmux$4458.
    dead port 1/2 on $mux $procmux$4461.
    dead port 1/2 on $mux $procmux$4464.
    dead port 2/2 on $mux $procmux$4466.
    dead port 2/2 on $mux $procmux$4469.
    dead port 2/2 on $mux $procmux$8682.
    dead port 2/2 on $mux $procmux$8684.
    dead port 2/2 on $mux $procmux$8687.
    dead port 2/2 on $mux $procmux$6357.
    dead port 1/2 on $mux $procmux$6360.
    dead port 2/2 on $mux $procmux$6362.
    dead port 2/2 on $mux $procmux$6365.
    dead port 2/2 on $mux $procmux$8724.
    dead port 2/2 on $mux $procmux$8726.
    dead port 2/2 on $mux $procmux$8729.
    dead port 2/2 on $mux $procmux$3498.
    dead port 1/2 on $mux $procmux$3501.
    dead port 1/2 on $mux $procmux$3504.
    dead port 2/2 on $mux $procmux$3506.
    dead port 2/2 on $mux $procmux$3509.
    dead port 2/2 on $mux $procmux$4506.
    dead port 1/2 on $mux $procmux$4509.
    dead port 1/2 on $mux $procmux$4512.
    dead port 2/2 on $mux $procmux$4514.
    dead port 2/2 on $mux $procmux$4517.
    dead port 2/2 on $mux $procmux$6402.
    dead port 1/2 on $mux $procmux$6405.
    dead port 2/2 on $mux $procmux$6407.
    dead port 2/2 on $mux $procmux$6410.
    dead port 2/2 on $mux $procmux$8766.
    dead port 2/2 on $mux $procmux$8768.
    dead port 2/2 on $mux $procmux$8771.
    dead port 2/2 on $mux $procmux$4554.
    dead port 2/2 on $mux $procmux$6447.
    dead port 1/2 on $mux $procmux$6450.
    dead port 2/2 on $mux $procmux$6452.
    dead port 2/2 on $mux $procmux$6455.
    dead port 1/2 on $mux $procmux$4557.
    dead port 1/2 on $mux $procmux$4560.
    dead port 2/2 on $mux $procmux$4562.
    dead port 2/2 on $mux $procmux$4565.
    dead port 2/2 on $mux $procmux$3546.
    dead port 1/2 on $mux $procmux$3549.
    dead port 1/2 on $mux $procmux$3552.
    dead port 2/2 on $mux $procmux$3554.
    dead port 2/2 on $mux $procmux$8808.
    dead port 2/2 on $mux $procmux$8810.
    dead port 2/2 on $mux $procmux$8813.
    dead port 2/2 on $mux $procmux$3557.
    dead port 2/2 on $mux $procmux$6492.
    dead port 1/2 on $mux $procmux$6495.
    dead port 2/2 on $mux $procmux$6497.
    dead port 2/2 on $mux $procmux$6500.
    dead port 2/2 on $mux $procmux$8850.
    dead port 2/2 on $mux $procmux$8852.
    dead port 2/2 on $mux $procmux$8855.
    dead port 2/2 on $mux $procmux$4602.
    dead port 1/2 on $mux $procmux$4605.
    dead port 1/2 on $mux $procmux$4608.
    dead port 2/2 on $mux $procmux$4610.
    dead port 2/2 on $mux $procmux$4613.
    dead port 2/2 on $mux $procmux$3594.
    dead port 1/2 on $mux $procmux$3597.
    dead port 1/2 on $mux $procmux$3600.
    dead port 2/2 on $mux $procmux$3602.
    dead port 2/2 on $mux $procmux$3605.
    dead port 2/2 on $mux $procmux$6537.
    dead port 1/2 on $mux $procmux$6540.
    dead port 2/2 on $mux $procmux$6542.
    dead port 2/2 on $mux $procmux$6545.
    dead port 2/2 on $mux $procmux$8892.
    dead port 2/2 on $mux $procmux$8894.
    dead port 2/2 on $mux $procmux$8897.
    dead port 2/2 on $mux $procmux$4650.
    dead port 1/2 on $mux $procmux$4653.
    dead port 1/2 on $mux $procmux$4656.
    dead port 2/2 on $mux $procmux$4658.
    dead port 2/2 on $mux $procmux$4661.
    dead port 2/2 on $mux $procmux$3642.
    dead port 1/2 on $mux $procmux$3645.
    dead port 2/2 on $mux $procmux$8934.
    dead port 2/2 on $mux $procmux$8936.
    dead port 2/2 on $mux $procmux$8939.
    dead port 2/2 on $mux $procmux$6582.
    dead port 1/2 on $mux $procmux$6585.
    dead port 2/2 on $mux $procmux$6587.
    dead port 2/2 on $mux $procmux$6590.
    dead port 1/2 on $mux $procmux$3648.
    dead port 2/2 on $mux $procmux$3650.
    dead port 2/2 on $mux $procmux$3653.
    dead port 2/2 on $mux $procmux$4698.
    dead port 1/2 on $mux $procmux$4701.
    dead port 1/2 on $mux $procmux$4704.
    dead port 2/2 on $mux $procmux$4706.
    dead port 2/2 on $mux $procmux$4709.
    dead port 2/2 on $mux $procmux$10001.
    dead port 2/2 on $mux $procmux$8976.
    dead port 2/2 on $mux $procmux$8978.
    dead port 2/2 on $mux $procmux$8981.
    dead port 2/2 on $mux $procmux$10004.
    dead port 2/2 on $mux $procmux$10010.
    dead port 2/2 on $mux $procmux$10013.
    dead port 2/2 on $mux $procmux$6627.
    dead port 1/2 on $mux $procmux$6630.
    dead port 2/2 on $mux $procmux$6632.
    dead port 2/2 on $mux $procmux$6635.
    dead port 2/2 on $mux $procmux$10019.
    dead port 2/2 on $mux $procmux$10022.
    dead port 2/2 on $mux $procmux$10028.
    dead port 2/2 on $mux $procmux$10031.
    dead port 2/2 on $mux $procmux$10037.
    dead port 2/2 on $mux $procmux$10040.
    dead port 2/2 on $mux $procmux$10046.
    dead port 2/2 on $mux $procmux$3690.
    dead port 1/2 on $mux $procmux$3693.
    dead port 1/2 on $mux $procmux$3696.
    dead port 2/2 on $mux $procmux$3698.
    dead port 2/2 on $mux $procmux$3701.
    dead port 2/2 on $mux $procmux$10049.
    dead port 2/2 on $mux $procmux$10055.
    dead port 2/2 on $mux $procmux$10058.
    dead port 2/2 on $mux $procmux$10064.
    dead port 2/2 on $mux $procmux$9018.
    dead port 2/2 on $mux $procmux$9020.
    dead port 2/2 on $mux $procmux$9023.
    dead port 2/2 on $mux $procmux$10067.
    dead port 2/2 on $mux $procmux$4746.
    dead port 1/2 on $mux $procmux$4749.
    dead port 1/2 on $mux $procmux$4752.
    dead port 2/2 on $mux $procmux$4754.
    dead port 2/2 on $mux $procmux$4757.
    dead port 2/2 on $mux $procmux$10073.
    dead port 2/2 on $mux $procmux$10076.
    dead port 2/2 on $mux $procmux$6672.
    dead port 1/2 on $mux $procmux$6675.
    dead port 2/2 on $mux $procmux$6677.
    dead port 2/2 on $mux $procmux$6680.
    dead port 2/2 on $mux $procmux$10082.
    dead port 2/2 on $mux $procmux$10085.
    dead port 2/2 on $mux $procmux$10091.
    dead port 2/2 on $mux $procmux$10094.
    dead port 2/2 on $mux $procmux$10100.
    dead port 2/2 on $mux $procmux$10103.
    dead port 2/2 on $mux $procmux$10109.
    dead port 2/2 on $mux $procmux$10112.
    dead port 2/2 on $mux $procmux$10118.
    dead port 2/2 on $mux $procmux$10121.
    dead port 2/2 on $mux $procmux$10127.
    dead port 2/2 on $mux $procmux$9060.
    dead port 2/2 on $mux $procmux$9062.
    dead port 2/2 on $mux $procmux$9065.
    dead port 2/2 on $mux $procmux$10130.
    dead port 2/2 on $mux $procmux$10136.
    dead port 2/2 on $mux $procmux$10139.
    dead port 2/2 on $mux $procmux$3738.
    dead port 1/2 on $mux $procmux$3741.
    dead port 1/2 on $mux $procmux$3744.
    dead port 2/2 on $mux $procmux$3746.
    dead port 2/2 on $mux $procmux$3749.
    dead port 2/2 on $mux $procmux$10145.
    dead port 2/2 on $mux $procmux$4794.
    dead port 1/2 on $mux $procmux$4797.
    dead port 1/2 on $mux $procmux$4800.
    dead port 2/2 on $mux $procmux$6717.
    dead port 1/2 on $mux $procmux$6720.
    dead port 2/2 on $mux $procmux$6722.
    dead port 2/2 on $mux $procmux$6725.
    dead port 2/2 on $mux $procmux$4802.
    dead port 2/2 on $mux $procmux$4805.
    dead port 2/2 on $mux $procmux$10148.
    dead port 2/2 on $mux $procmux$10154.
    dead port 2/2 on $mux $procmux$10157.
    dead port 2/2 on $mux $procmux$10163.
    dead port 2/2 on $mux $procmux$10166.
    dead port 2/2 on $mux $procmux$10172.
    dead port 2/2 on $mux $procmux$9102.
    dead port 2/2 on $mux $procmux$9104.
    dead port 2/2 on $mux $procmux$9107.
    dead port 2/2 on $mux $procmux$10175.
    dead port 2/2 on $mux $procmux$10412.
    dead port 2/2 on $mux $procmux$10418.
    dead port 2/2 on $mux $procmux$10424.
    dead port 2/2 on $mux $procmux$10430.
    dead port 2/2 on $mux $procmux$10436.
    dead port 2/2 on $mux $procmux$10442.
    dead port 2/2 on $mux $procmux$10448.
    dead port 2/2 on $mux $procmux$10454.
    dead port 2/2 on $mux $procmux$10460.
    dead port 2/2 on $mux $procmux$6762.
    dead port 1/2 on $mux $procmux$6765.
    dead port 2/2 on $mux $procmux$6767.
    dead port 2/2 on $mux $procmux$6770.
    dead port 2/2 on $mux $procmux$10466.
    dead port 2/2 on $mux $procmux$3786.
    dead port 2/2 on $mux $procmux$4842.
    dead port 1/2 on $mux $procmux$4845.
    dead port 1/2 on $mux $procmux$4848.
    dead port 2/2 on $mux $procmux$4850.
    dead port 2/2 on $mux $procmux$9144.
    dead port 2/2 on $mux $procmux$9146.
    dead port 2/2 on $mux $procmux$9149.
    dead port 2/2 on $mux $procmux$4853.
    dead port 1/2 on $mux $procmux$3789.
    dead port 1/2 on $mux $procmux$3792.
    dead port 2/2 on $mux $procmux$3794.
    dead port 2/2 on $mux $procmux$3797.
    dead port 2/2 on $mux $procmux$10472.
    dead port 2/2 on $mux $procmux$10478.
    dead port 2/2 on $mux $procmux$10484.
    dead port 2/2 on $mux $procmux$10490.
    dead port 2/2 on $mux $procmux$10496.
    dead port 2/2 on $mux $procmux$10502.
    dead port 2/2 on $mux $procmux$10508.
    dead port 2/2 on $mux $procmux$10514.
    dead port 2/2 on $mux $procmux$10520.
    dead port 2/2 on $mux $procmux$6807.
    dead port 1/2 on $mux $procmux$6810.
    dead port 2/2 on $mux $procmux$6812.
    dead port 2/2 on $mux $procmux$6815.
    dead port 2/2 on $mux $procmux$10526.
    dead port 2/2 on $mux $procmux$9186.
    dead port 2/2 on $mux $procmux$9188.
    dead port 2/2 on $mux $procmux$9191.
    dead port 2/2 on $mux $procmux$10532.
    dead port 2/2 on $mux $procmux$10538.
    dead port 2/2 on $mux $procmux$10544.
    dead port 2/2 on $mux $procmux$10550.
    dead port 2/2 on $mux $procmux$4890.
    dead port 1/2 on $mux $procmux$4893.
    dead port 1/2 on $mux $procmux$4896.
    dead port 2/2 on $mux $procmux$4898.
    dead port 2/2 on $mux $procmux$4901.
    dead port 2/2 on $mux $procmux$10556.
    dead port 2/2 on $mux $procmux$10562.
    dead port 2/2 on $mux $procmux$3834.
    dead port 1/2 on $mux $procmux$3837.
    dead port 1/2 on $mux $procmux$3840.
    dead port 2/2 on $mux $procmux$3842.
    dead port 2/2 on $mux $procmux$3845.
    dead port 2/2 on $mux $procmux$10568.
    dead port 2/2 on $mux $procmux$10574.
    dead port 2/2 on $mux $procmux$10580.
    dead port 2/2 on $mux $procmux$6852.
    dead port 1/2 on $mux $procmux$6855.
    dead port 2/2 on $mux $procmux$9228.
    dead port 2/2 on $mux $procmux$9230.
    dead port 2/2 on $mux $procmux$9233.
    dead port 2/2 on $mux $procmux$6857.
    dead port 2/2 on $mux $procmux$6860.
    dead port 2/2 on $mux $procmux$10586.
    dead port 2/2 on $mux $procmux$10592.
    dead port 2/2 on $mux $procmux$10598.
    dead port 2/2 on $mux $procmux$10604.
    dead port 2/2 on $mux $procmux$10610.
    dead port 2/2 on $mux $procmux$10616.
    dead port 2/2 on $mux $procmux$10622.
    dead port 2/2 on $mux $procmux$10628.
    dead port 2/2 on $mux $procmux$4938.
    dead port 1/2 on $mux $procmux$4941.
    dead port 1/2 on $mux $procmux$4944.
    dead port 2/2 on $mux $procmux$4946.
    dead port 2/2 on $mux $procmux$4949.
    dead port 2/2 on $mux $procmux$10634.
    dead port 2/2 on $mux $procmux$10640.
    dead port 2/2 on $mux $procmux$10646.
    dead port 2/2 on $mux $procmux$10652.
    dead port 2/2 on $mux $procmux$9270.
    dead port 2/2 on $mux $procmux$9272.
    dead port 2/2 on $mux $procmux$9275.
    dead port 2/2 on $mux $procmux$10658.
    dead port 2/2 on $mux $procmux$6897.
    dead port 1/2 on $mux $procmux$6900.
    dead port 2/2 on $mux $procmux$6902.
    dead port 2/2 on $mux $procmux$6905.
    dead port 2/2 on $mux $procmux$3882.
    dead port 1/2 on $mux $procmux$3885.
    dead port 1/2 on $mux $procmux$3888.
    dead port 2/2 on $mux $procmux$3890.
    dead port 2/2 on $mux $procmux$3893.
    dead port 2/2 on $mux $procmux$10664.
    dead port 2/2 on $mux $procmux$10670.
    dead port 2/2 on $mux $procmux$10676.
    dead port 2/2 on $mux $procmux$10682.
    dead port 2/2 on $mux $procmux$10688.
    dead port 2/2 on $mux $procmux$10694.
    dead port 2/2 on $mux $procmux$10700.
    dead port 2/2 on $mux $procmux$10706.
    dead port 2/2 on $mux $procmux$4986.
    dead port 1/2 on $mux $procmux$4989.
    dead port 1/2 on $mux $procmux$4992.
    dead port 2/2 on $mux $procmux$9312.
    dead port 2/2 on $mux $procmux$9314.
    dead port 2/2 on $mux $procmux$9317.
    dead port 2/2 on $mux $procmux$4994.
    dead port 2/2 on $mux $procmux$4997.
    dead port 2/2 on $mux $procmux$6942.
    dead port 1/2 on $mux $procmux$6945.
    dead port 2/2 on $mux $procmux$6947.
    dead port 2/2 on $mux $procmux$6950.
    dead port 2/2 on $mux $procmux$9354.
    dead port 2/2 on $mux $procmux$9356.
    dead port 2/2 on $mux $procmux$9359.
    dead port 2/2 on $mux $procmux$6987.
    dead port 1/2 on $mux $procmux$6990.
    dead port 2/2 on $mux $procmux$6992.
    dead port 2/2 on $mux $procmux$6995.
    dead port 1/2 on $mux $procmux$5052.
    dead port 1/2 on $mux $procmux$5055.
    dead port 2/2 on $mux $procmux$5057.
    dead port 2/2 on $mux $procmux$5060.
    dead port 1/2 on $mux $procmux$5067.
    dead port 1/2 on $mux $procmux$5070.
    dead port 2/2 on $mux $procmux$5072.
    dead port 2/2 on $mux $procmux$5075.
    dead port 1/2 on $mux $procmux$5082.
    dead port 1/2 on $mux $procmux$5085.
    dead port 2/2 on $mux $procmux$5087.
    dead port 2/2 on $mux $procmux$9407.
    dead port 2/2 on $mux $procmux$9410.
    dead port 2/2 on $mux $procmux$9416.
    dead port 2/2 on $mux $procmux$9419.
    dead port 2/2 on $mux $procmux$9425.
    dead port 2/2 on $mux $procmux$9428.
    dead port 2/2 on $mux $procmux$9434.
    dead port 2/2 on $mux $procmux$9437.
    dead port 2/2 on $mux $procmux$9443.
    dead port 2/2 on $mux $procmux$9446.
    dead port 2/2 on $mux $procmux$9452.
    dead port 2/2 on $mux $procmux$9455.
    dead port 2/2 on $mux $procmux$9461.
    dead port 2/2 on $mux $procmux$9464.
    dead port 2/2 on $mux $procmux$9470.
    dead port 2/2 on $mux $procmux$9473.
    dead port 2/2 on $mux $procmux$9479.
    dead port 2/2 on $mux $procmux$9482.
    dead port 2/2 on $mux $procmux$9488.
    dead port 2/2 on $mux $procmux$9491.
    dead port 2/2 on $mux $procmux$9497.
    dead port 2/2 on $mux $procmux$9500.
    dead port 2/2 on $mux $procmux$9506.
    dead port 2/2 on $mux $procmux$9509.
    dead port 2/2 on $mux $procmux$9515.
    dead port 2/2 on $mux $procmux$9518.
    dead port 2/2 on $mux $procmux$9524.
    dead port 2/2 on $mux $procmux$9527.
    dead port 2/2 on $mux $procmux$9533.
    dead port 2/2 on $mux $procmux$9536.
    dead port 2/2 on $mux $procmux$9542.
    dead port 2/2 on $mux $procmux$9545.
    dead port 2/2 on $mux $procmux$9551.
    dead port 2/2 on $mux $procmux$9554.
    dead port 2/2 on $mux $procmux$9560.
    dead port 2/2 on $mux $procmux$9563.
    dead port 2/2 on $mux $procmux$9569.
    dead port 2/2 on $mux $procmux$9572.
    dead port 2/2 on $mux $procmux$9578.
    dead port 2/2 on $mux $procmux$9581.
    dead port 2/2 on $mux $procmux$9587.
    dead port 2/2 on $mux $procmux$9590.
    dead port 2/2 on $mux $procmux$9596.
    dead port 2/2 on $mux $procmux$9599.
    dead port 2/2 on $mux $procmux$9605.
    dead port 2/2 on $mux $procmux$9608.
    dead port 2/2 on $mux $procmux$9614.
    dead port 2/2 on $mux $procmux$9617.
    dead port 2/2 on $mux $procmux$9623.
    dead port 2/2 on $mux $procmux$9626.
    dead port 2/2 on $mux $procmux$9632.
    dead port 2/2 on $mux $procmux$9635.
    dead port 2/2 on $mux $procmux$9641.
    dead port 2/2 on $mux $procmux$9644.
    dead port 2/2 on $mux $procmux$9650.
    dead port 2/2 on $mux $procmux$9653.
    dead port 2/2 on $mux $procmux$9659.
    dead port 2/2 on $mux $procmux$9662.
    dead port 2/2 on $mux $procmux$9668.
    dead port 2/2 on $mux $procmux$9671.
    dead port 2/2 on $mux $procmux$9677.
    dead port 2/2 on $mux $procmux$9680.
    dead port 2/2 on $mux $procmux$9686.
    dead port 2/2 on $mux $procmux$9689.
    dead port 2/2 on $mux $procmux$9695.
    dead port 2/2 on $mux $procmux$9698.
    dead port 2/2 on $mux $procmux$9704.
    dead port 2/2 on $mux $procmux$9707.
    dead port 2/2 on $mux $procmux$9713.
    dead port 2/2 on $mux $procmux$9716.
    dead port 2/2 on $mux $procmux$9758.
    dead port 2/2 on $mux $procmux$9761.
    dead port 2/2 on $mux $procmux$9893.
    dead port 2/2 on $mux $procmux$9896.
    dead port 2/2 on $mux $procmux$9902.
    dead port 2/2 on $mux $procmux$9905.
    dead port 2/2 on $mux $procmux$9911.
    dead port 2/2 on $mux $procmux$9914.
    dead port 2/2 on $mux $procmux$9920.
    dead port 2/2 on $mux $procmux$9923.
    dead port 2/2 on $mux $procmux$9929.
    dead port 2/2 on $mux $procmux$9932.
    dead port 2/2 on $mux $procmux$9938.
    dead port 2/2 on $mux $procmux$9941.
    dead port 2/2 on $mux $procmux$9947.
    dead port 2/2 on $mux $procmux$9950.
    dead port 2/2 on $mux $procmux$9956.
    dead port 2/2 on $mux $procmux$9959.
    dead port 2/2 on $mux $procmux$9965.
    dead port 2/2 on $mux $procmux$9968.
    dead port 2/2 on $mux $procmux$9974.
    dead port 2/2 on $mux $procmux$9977.
    dead port 2/2 on $mux $procmux$9983.
    dead port 2/2 on $mux $procmux$9986.
    dead port 2/2 on $mux $procmux$9992.
    dead port 2/2 on $mux $procmux$9995.
    dead port 2/2 on $mux $procmux$5090.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2176.
    dead port 2/2 on $mux $procmux$2159.
    dead port 2/2 on $mux $procmux$2185.
    dead port 2/2 on $mux $procmux$2167.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1002.
    dead port 2/2 on $mux $procmux$1018.
    dead port 2/2 on $mux $procmux$1020.
    dead port 2/2 on $mux $procmux$1038.
    dead port 2/2 on $mux $procmux$1054.
    dead port 2/2 on $mux $procmux$1056.
    dead port 2/2 on $mux $procmux$1104.
    dead port 2/2 on $mux $procmux$1125.
    dead port 2/2 on $mux $procmux$1146.
    dead port 2/2 on $mux $procmux$1197.
    dead port 2/2 on $mux $procmux$1203.
    dead port 2/2 on $mux $procmux$1209.
    dead port 2/2 on $mux $procmux$910.
    dead port 2/2 on $mux $procmux$912.
    dead port 2/2 on $mux $procmux$918.
    dead port 2/2 on $mux $procmux$946.
    dead port 2/2 on $mux $procmux$948.
    dead port 2/2 on $mux $procmux$966.
    dead port 2/2 on $mux $procmux$982.
    dead port 2/2 on $mux $procmux$984.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/9 on $pmux $procmux$1346.
    dead port 2/9 on $pmux $procmux$1346.
    dead port 3/9 on $pmux $procmux$1346.
    dead port 4/9 on $pmux $procmux$1346.
    dead port 2/2 on $mux $procmux$1373.
    dead port 2/2 on $mux $procmux$1379.
    dead port 2/2 on $mux $procmux$1387.
    dead port 2/2 on $mux $procmux$1389.
    dead port 2/2 on $mux $procmux$1397.
    dead port 2/2 on $mux $procmux$1399.
    dead port 2/2 on $mux $procmux$1407.
    dead port 2/2 on $mux $procmux$1409.
    dead port 2/2 on $mux $procmux$1417.
    dead port 2/2 on $mux $procmux$1419.
    dead port 2/2 on $mux $procmux$1426.
    dead port 2/2 on $mux $procmux$1433.
    dead port 2/2 on $mux $procmux$1440.
    dead port 2/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$1456.
    dead port 2/2 on $mux $procmux$1458.
    dead port 2/2 on $mux $procmux$1467.
    dead port 2/2 on $mux $procmux$1469.
    dead port 2/2 on $mux $procmux$1478.
    dead port 2/2 on $mux $procmux$1480.
    dead port 2/2 on $mux $procmux$1489.
    dead port 2/2 on $mux $procmux$1491.
    dead port 2/2 on $mux $procmux$1499.
    dead port 2/2 on $mux $procmux$1507.
    dead port 2/2 on $mux $procmux$1515.
Removed 1229 multiplexer ports.
<suppressed ~203 debug messages>

11.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$1801: $auto$opt_reduce.cc:134:opt_mux$11964
    New ctrl vector for $pmux cell $procmux$2062: { $procmux$1855_CMP $auto$opt_reduce.cc:134:opt_mux$11966 $eq$load_unit.v:251$579_Y }
    New ctrl vector for $pmux cell $procmux$1609: { $eq$load_unit.v:251$579_Y $auto$opt_reduce.cc:134:opt_mux$11968 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11963: { $procmux$1612_CMP [0] $procmux$1610_CMP $eq$load_unit.v:251$579_Y $eq$load_unit.v:181$561_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11967: { $procmux$1612_CMP [0] $procmux$1610_CMP $eq$load_unit.v:181$561_Y }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
    New ctrl vector for $mux cell $procmux$2573: { }
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$6009: { $procmux$3471_CMP $auto$opt_reduce.cc:134:opt_mux$11970 }
    New ctrl vector for $pmux cell $procmux$8775: { $procmux$7996_CMP $auto$opt_reduce.cc:134:opt_mux$11972 }
    New ctrl vector for $pmux cell $procmux$6459: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$11974 }
    New ctrl vector for $pmux cell $procmux$4569: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$11976 }
    New ctrl vector for $pmux cell $procmux$8817: { $procmux$7997_CMP $auto$opt_reduce.cc:134:opt_mux$11978 }
    New ctrl vector for $pmux cell $procmux$3561: { $procmux$3467_CMP $auto$opt_reduce.cc:134:opt_mux$11980 }
    New ctrl vector for $pmux cell $procmux$4185: { $procmux$3480_CMP $auto$opt_reduce.cc:134:opt_mux$11982 }
    New ctrl vector for $pmux cell $procmux$6504: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$11984 }
    New ctrl vector for $pmux cell $procmux$8859: { $procmux$7998_CMP $auto$opt_reduce.cc:134:opt_mux$11986 }
    New ctrl vector for $pmux cell $procmux$8019: { $auto$opt_reduce.cc:134:opt_mux$11988 $procmux$7978_CMP }
    New ctrl vector for $pmux cell $procmux$7044: { $procmux$3494_CMP $auto$opt_reduce.cc:134:opt_mux$11990 }
    New ctrl vector for $pmux cell $procmux$4617: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$11992 }
    New ctrl vector for $pmux cell $procmux$8355: { $procmux$7986_CMP $auto$opt_reduce.cc:134:opt_mux$11994 }
    New ctrl vector for $pmux cell $procmux$5739: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$11996 }
    New ctrl vector for $pmux cell $procmux$3609: { $procmux$3468_CMP $auto$opt_reduce.cc:134:opt_mux$11998 }
    New ctrl vector for $pmux cell $procmux$6549: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12000 }
    New ctrl vector for $pmux cell $procmux$6054: { $procmux$3472_CMP $auto$opt_reduce.cc:134:opt_mux$12002 }
    New ctrl vector for $pmux cell $procmux$8901: { $procmux$7999_CMP $auto$opt_reduce.cc:134:opt_mux$12004 }
    New ctrl vector for $pmux cell $procmux$4665: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12006 }
    New ctrl vector for $pmux cell $procmux$8943: { $procmux$8000_CMP $auto$opt_reduce.cc:134:opt_mux$12008 }
    New ctrl vector for $pmux cell $procmux$6594: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12010 }
    New ctrl vector for $pmux cell $procmux$7089: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12012 }
    New ctrl vector for $pmux cell $procmux$3657: { $procmux$3469_CMP $auto$opt_reduce.cc:134:opt_mux$12014 }
    New ctrl vector for $pmux cell $procmux$3945: { $procmux$3475_CMP $auto$opt_reduce.cc:134:opt_mux$12016 }
    New ctrl vector for $pmux cell $procmux$4713: { $procmux$3491_CMP $auto$opt_reduce.cc:134:opt_mux$12018 }
    New ctrl vector for $pmux cell $procmux$7134: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12020 }
    New ctrl vector for $pmux cell $procmux$8061: { $procmux$7979_CMP $auto$opt_reduce.cc:134:opt_mux$12022 }
    New ctrl vector for $pmux cell $procmux$8985: { $procmux$8001_CMP $auto$opt_reduce.cc:134:opt_mux$12024 }
    New ctrl vector for $pmux cell $procmux$8397: { $procmux$7987_CMP $auto$opt_reduce.cc:134:opt_mux$12026 }
    New ctrl vector for $pmux cell $procmux$4233: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$12028 }
    New ctrl vector for $pmux cell $procmux$6639: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12030 }
    New ctrl vector for $pmux cell $procmux$5784: { $auto$opt_reduce.cc:134:opt_mux$12032 $procmux$3466_CMP }
    New ctrl vector for $pmux cell $procmux$6099: { $procmux$3473_CMP $auto$opt_reduce.cc:134:opt_mux$12034 }
    New ctrl vector for $pmux cell $procmux$3705: { $procmux$3470_CMP $auto$opt_reduce.cc:134:opt_mux$12036 }
    New ctrl vector for $pmux cell $procmux$9027: { $procmux$8002_CMP $auto$opt_reduce.cc:134:opt_mux$12038 }
    New ctrl vector for $pmux cell $procmux$4761: { $procmux$3492_CMP $auto$opt_reduce.cc:134:opt_mux$12040 }
    New ctrl vector for $pmux cell $procmux$8439: { $procmux$7988_CMP $auto$opt_reduce.cc:134:opt_mux$12042 }
    New ctrl vector for $pmux cell $procmux$6684: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12044 }
    New ctrl vector for $pmux cell $procmux$8103: { $procmux$7980_CMP $auto$opt_reduce.cc:134:opt_mux$12046 }
    New ctrl vector for $pmux cell $procmux$3993: { $procmux$3476_CMP $auto$opt_reduce.cc:134:opt_mux$12048 }
    New ctrl vector for $pmux cell $procmux$9069: { $procmux$8003_CMP $auto$opt_reduce.cc:134:opt_mux$12050 }
    New ctrl vector for $pmux cell $procmux$6144: { $procmux$3474_CMP $auto$opt_reduce.cc:134:opt_mux$12052 }
    New ctrl vector for $pmux cell $procmux$4281: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$12054 }
    New ctrl vector for $pmux cell $procmux$3753: { $procmux$3471_CMP $auto$opt_reduce.cc:134:opt_mux$12056 }
    New ctrl vector for $pmux cell $procmux$5829: { $procmux$3467_CMP $auto$opt_reduce.cc:134:opt_mux$12058 }
    New ctrl vector for $pmux cell $procmux$6729: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12060 }
    New ctrl vector for $pmux cell $procmux$4809: { $procmux$3493_CMP $auto$opt_reduce.cc:134:opt_mux$12062 }
    New ctrl vector for $pmux cell $procmux$8481: { $procmux$7989_CMP $auto$opt_reduce.cc:134:opt_mux$12064 }
    New ctrl vector for $pmux cell $procmux$9111: { $procmux$8004_CMP $auto$opt_reduce.cc:134:opt_mux$12066 }
    New ctrl vector for $pmux cell $procmux$8145: { $procmux$7981_CMP $auto$opt_reduce.cc:134:opt_mux$12068 }
    New ctrl vector for $pmux cell $procmux$6774: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$12070 }
    New ctrl vector for $pmux cell $procmux$6189: { $procmux$3475_CMP $auto$opt_reduce.cc:134:opt_mux$12072 }
    New ctrl vector for $pmux cell $procmux$9153: { $procmux$8005_CMP $auto$opt_reduce.cc:134:opt_mux$12074 }
    New ctrl vector for $pmux cell $procmux$4857: { $procmux$3494_CMP $auto$opt_reduce.cc:134:opt_mux$12076 }
    New ctrl vector for $pmux cell $procmux$4329: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12078 }
    New ctrl vector for $pmux cell $procmux$3801: { $procmux$3472_CMP $auto$opt_reduce.cc:134:opt_mux$12080 }
    New ctrl vector for $pmux cell $procmux$8523: { $procmux$7990_CMP $auto$opt_reduce.cc:134:opt_mux$12082 }
    New ctrl vector for $pmux cell $procmux$5874: { $procmux$3468_CMP $auto$opt_reduce.cc:134:opt_mux$12084 }
    New ctrl vector for $pmux cell $procmux$4041: { $procmux$3477_CMP $auto$opt_reduce.cc:134:opt_mux$12086 }
    New ctrl vector for $pmux cell $procmux$6819: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$12088 }
    New ctrl vector for $pmux cell $procmux$9195: { $procmux$8006_CMP $auto$opt_reduce.cc:134:opt_mux$12090 }
    New ctrl vector for $pmux cell $procmux$8187: { $procmux$7982_CMP $auto$opt_reduce.cc:134:opt_mux$12092 }
    New ctrl vector for $pmux cell $procmux$4905: { $procmux$3495_CMP $auto$opt_reduce.cc:134:opt_mux$12094 }
    New ctrl vector for $pmux cell $procmux$6234: { $procmux$3476_CMP $auto$opt_reduce.cc:134:opt_mux$12096 }
    New ctrl vector for $pmux cell $procmux$3849: { $procmux$3473_CMP $auto$opt_reduce.cc:134:opt_mux$12098 }
    New ctrl vector for $pmux cell $procmux$8565: { $procmux$7991_CMP $auto$opt_reduce.cc:134:opt_mux$12100 }
    New ctrl vector for $pmux cell $procmux$9237: { $procmux$8007_CMP $auto$opt_reduce.cc:134:opt_mux$12102 }
    New ctrl vector for $pmux cell $procmux$6864: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12104 }
    New ctrl vector for $pmux cell $procmux$4377: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12106 }
    New ctrl vector for $pmux cell $procmux$4953: { $procmux$3496_CMP $auto$opt_reduce.cc:134:opt_mux$12108 }
    New ctrl vector for $pmux cell $procmux$5919: { $procmux$3469_CMP $auto$opt_reduce.cc:134:opt_mux$12110 }
    New ctrl vector for $pmux cell $procmux$9279: { $procmux$8008_CMP $auto$opt_reduce.cc:134:opt_mux$12112 }
    New ctrl vector for $pmux cell $procmux$6909: { $procmux$3491_CMP $auto$opt_reduce.cc:134:opt_mux$12114 }
    New ctrl vector for $pmux cell $procmux$8229: { $procmux$7983_CMP $auto$opt_reduce.cc:134:opt_mux$12116 }
    New ctrl vector for $pmux cell $procmux$4089: { $procmux$3478_CMP $auto$opt_reduce.cc:134:opt_mux$12118 }
    New ctrl vector for $pmux cell $procmux$3897: { $procmux$3474_CMP $auto$opt_reduce.cc:134:opt_mux$12120 }
    New ctrl vector for $pmux cell $procmux$8607: { $procmux$7992_CMP $auto$opt_reduce.cc:134:opt_mux$12122 }
    New ctrl vector for $pmux cell $procmux$6279: { $procmux$3477_CMP $auto$opt_reduce.cc:134:opt_mux$12124 }
    New ctrl vector for $pmux cell $procmux$6954: { $procmux$3492_CMP $auto$opt_reduce.cc:134:opt_mux$12126 }
    New ctrl vector for $pmux cell $procmux$4425: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12128 }
    New ctrl vector for $pmux cell $procmux$6999: { $procmux$3493_CMP $auto$opt_reduce.cc:134:opt_mux$12130 }
    New ctrl vector for $pmux cell $procmux$8649: { $procmux$7993_CMP $auto$opt_reduce.cc:134:opt_mux$12132 }
    New ctrl vector for $pmux cell $procmux$5964: { $procmux$3470_CMP $auto$opt_reduce.cc:134:opt_mux$12134 }
    New ctrl vector for $pmux cell $procmux$6324: { $procmux$3478_CMP $auto$opt_reduce.cc:134:opt_mux$12136 }
    New ctrl vector for $pmux cell $procmux$8271: { $procmux$7984_CMP $auto$opt_reduce.cc:134:opt_mux$12138 }
    New ctrl vector for $pmux cell $procmux$3465: { $procmux$3497_CMP $auto$opt_reduce.cc:134:opt_mux$12140 }
    New ctrl vector for $pmux cell $procmux$4473: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12142 }
    New ctrl vector for $pmux cell $procmux$4137: { $procmux$3479_CMP $auto$opt_reduce.cc:134:opt_mux$12144 }
    New ctrl vector for $pmux cell $procmux$8691: { $procmux$7994_CMP $auto$opt_reduce.cc:134:opt_mux$12146 }
    New ctrl vector for $pmux cell $procmux$7977: { $procmux$8009_CMP $auto$opt_reduce.cc:134:opt_mux$12148 }
    New ctrl vector for $pmux cell $procmux$6369: { $procmux$3479_CMP $auto$opt_reduce.cc:134:opt_mux$12150 }
    New ctrl vector for $pmux cell $procmux$8733: { $procmux$7995_CMP $auto$opt_reduce.cc:134:opt_mux$12152 }
    New ctrl vector for $pmux cell $procmux$4521: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12154 }
    New ctrl vector for $pmux cell $procmux$3513: { $auto$opt_reduce.cc:134:opt_mux$12156 $procmux$3466_CMP }
    New ctrl vector for $pmux cell $procmux$8313: { $procmux$7985_CMP $auto$opt_reduce.cc:134:opt_mux$12158 }
    New ctrl vector for $pmux cell $procmux$6414: { $procmux$3480_CMP $auto$opt_reduce.cc:134:opt_mux$12160 }
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
    New ctrl vector for $pmux cell $procmux$2172: $auto$opt_reduce.cc:134:opt_mux$12162
    New ctrl vector for $pmux cell $procmux$2154: $auto$opt_reduce.cc:134:opt_mux$12164
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
    New ctrl vector for $pmux cell $procmux$1522: { $procmux$1459_CMP $procmux$1390_CMP $auto$opt_reduce.cc:134:opt_mux$12166 }
    New ctrl vector for $pmux cell $procmux$1527: { $procmux$1459_CMP $procmux$1390_CMP $auto$opt_reduce.cc:134:opt_mux$12168 }
    New ctrl vector for $pmux cell $procmux$1532: { $procmux$1390_CMP $auto$opt_reduce.cc:134:opt_mux$12170 }
    New ctrl vector for $pmux cell $procmux$1537: { $procmux$1390_CMP $auto$opt_reduce.cc:134:opt_mux$12172 }
    New ctrl vector for $pmux cell $procmux$1542: { $procmux$1390_CMP $auto$opt_reduce.cc:134:opt_mux$12174 }
  Optimizing cells in module \store_unit.
Performed a total of 109 changes.

11.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~39 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~42 debug messages>
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
<suppressed ~24 debug messages>
Removed a total of 70 cells.

11.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 4566 unused wires.
<suppressed ~8 debug messages>

11.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.8. Rerunning OPT passes. (Maybe there is more to do..)

11.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~202 debug messages>

11.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$2050: { $procmux$1761_CMP $auto$opt_reduce.cc:134:opt_mux$12176 }
    New ctrl vector for $pmux cell $procmux$2056: { $procmux$1761_CMP $auto$opt_reduce.cc:134:opt_mux$12178 }
    New ctrl vector for $pmux cell $procmux$2062: { $auto$opt_reduce.cc:134:opt_mux$11966 $auto$opt_reduce.cc:134:opt_mux$12180 }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 3 changes.

11.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 2 cells.

11.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

11.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.14. Rerunning OPT passes. (Maybe there is more to do..)

11.7.15. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~202 debug messages>

11.7.16. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 0 changes.

11.7.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

11.7.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..

11.7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.20. Finished OPT passes. (There is nothing left to do.)

11.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:181$561 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ne$load_unit.v:248$576 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:251$579 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:261$584 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$588 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$589 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$590 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$592 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$593 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$594 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$604 ($add).
Removed top 29 bits (of 32) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$604 ($add).
Removed top 30 bits (of 32) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ternary$load_unit.v:286$606 ($mux).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1549_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1549_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1549_CMP2 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1550_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1550_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1550_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1610_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1612_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1653 ($mux).
Removed top 3 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1761_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1911 ($mux).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2046_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2081_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2081_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2081_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2081_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2081_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2082_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2082_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2082_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2082_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2082_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2083_CMP15 ($eq).
Removed top 1 bits (of 3) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$604 ($add).
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$11\state_d[3:0].
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$15\state_d[3:0].
Removed top 30 bits (of 32) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$604_Y.
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$22 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$54 ($le).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$60 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$63 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$64 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$66 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$67 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$69 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:166$74 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:173$84 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:174$86 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:174$87 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:181$89 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:190$92 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:191$94 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:191$95 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:198$97 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11357_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11407_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:347$401 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:356$403 ($eq).
Removed top 2 bits (of 111) from mux cell cva6_lsu_shim.$procmux$2582 ($mux).
Removed top 2 bits (of 111) from wire cva6_lsu_shim.$3\tb_io_fu_data_i[110:0].
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$248 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$285 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$312 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$327 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$330 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$342 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$343 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$344 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$345 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$347 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$348 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$349 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$359 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$359 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$360 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$361 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$362 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$368 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$368 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$371 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$371 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$378 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$378 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3482_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3483_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3484_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3485_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3486_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3487_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3488_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3489_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3490_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3491_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3492_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3493_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3494_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3495_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3496_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5018_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5019_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5020_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5021_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5022_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5023_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5024_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5025_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5026_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5027_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5028_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5029_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5030_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5031_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5032_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7196_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7197_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7198_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7199_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7200_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7201_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7202_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7203_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7204_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7205_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7206_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7207_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7208_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7209_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7210_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7994_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7995_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7996_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7997_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7998_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7999_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8000_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8001_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8002_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8003_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8004_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8005_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8006_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8007_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8008_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$359_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$327_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$344_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$349_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$347_Y.
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2157_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2177_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2198_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2198_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2198_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2198_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2198_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2199_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2199_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2199_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2199_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2199_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2200_CMP15 ($eq).
Removed top 2 bits (of 4) from port B of cell load_store_unit.$procmux$2369_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell load_store_unit.$procmux$2370_CMP0 ($eq).
Removed top 2 bits (of 34) from FF cell load_store_unit.$procdff$11741 ($adff).
Removed top 2 bits (of 22) from wire load_store_unit.dtlb_ppn.
Removed top 2 bits (of 34) from wire load_store_unit.mmu_paddr.
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:47$491 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:47$491 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$492 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$492 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$492 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$493 ($shl).
Removed top 85 bits (of 170) from port Y of cell lsu_bypass.$and$lsu_bypass.v:0$494 ($and).
Removed top 85 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$497 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$497 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:48$501 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:48$501 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:49$502 ($add).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:49$502 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:52$505 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:52$505 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:52$506 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:52$506 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:52$506 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$507 ($shl).
Removed top 169 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$510 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$510 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:53$514 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:53$514 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:54$515 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:54$515 ($sub).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:58$527 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:58$527 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:59$528 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:59$528 ($sub).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$532 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$532 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$532 ($add).
Removed top 22 bits (of 32) from port B of cell lsu_bypass.$shiftx$lsu_bypass.v:0$533 ($shiftx).
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$492_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$532_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:48$501_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:52$506_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:53$514_Y.
Removed top 85 bits (of 170) from wire lsu_bypass.$and$lsu_bypass.v:0$494_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:47$491_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:52$505_Y.
Removed top 30 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:88$696 ($lt).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:94$708 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:94$708 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:94$709 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:94$709 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:94$709 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$710 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$710 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$710 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$711 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$711 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$711 ($sub).
Removed top 258 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$713 ($and).
Removed top 258 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$718 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:95$723 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:95$723 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:95$723 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$724 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$724 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$724 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$725 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$725 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$725 ($sub).
Removed top 260 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$727 ($and).
Removed top 260 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$732 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:96$737 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:96$737 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:96$737 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$738 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$739 ($sub).
Removed top 288 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$741 ($and).
Removed top 288 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$746 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:97$751 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:97$751 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:97$751 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$752 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$753 ($sub).
Removed top 290 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$755 ($and).
Removed top 290 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$760 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:98$765 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:98$765 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:98$765 ($add).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$766 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$769 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$769 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:100$774 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:100$774 ($add).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:100$774 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:103$777 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:103$777 ($mul).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$782 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:105$787 ($sub).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:105$787 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:128$791 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:128$791 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:128$792 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:128$792 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:128$792 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$793 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$793 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$793 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$794 ($sub).
Removed top 28 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$794 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$794 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$795 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:131$798 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:131$798 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:131$798 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$799 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$799 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$799 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$800 ($sub).
Removed top 27 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$800 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$800 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$801 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:134$804 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:134$804 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:134$804 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$805 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$805 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$805 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$806 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$806 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$806 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$807 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:137$810 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:137$810 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:137$810 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$811 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$811 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$811 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$812 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$812 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$812 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$813 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:140$816 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:140$816 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:140$816 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$817 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$817 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$817 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$818 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$818 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$818 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$819 ($shiftx).
Removed top 29 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:145$826 ($lt).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:151$829 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:151$829 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:151$829 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$830 ($shiftx).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$837 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$840 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$840 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:156$845 ($sub).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:156$845 ($sub).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:156$845 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:160$848 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:160$848 ($mul).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$849 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$849 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$849 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$850 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$850 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$850 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$851 ($shl).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$853 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$853 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$853 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$854 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$854 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$854 ($add).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$855 ($shiftx).
Removed top 219 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$856 ($and).
Removed top 219 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$860 ($shl).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$860 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:162$865 ($add).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:162$865 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1179 ($mux).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1263 ($mux).
Removed top 1 bits (of 5) from mux cell store_buffer.$procmux$1278 ($mux).
Removed top 1 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:105$787 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$sub$store_buffer.v:105$787 ($sub).
Removed top 1 bits (of 4) from port A of cell store_buffer.$sub$store_buffer.v:105$787 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$add$store_buffer.v:162$865 ($add).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:162$865 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1230 ($mux).
Removed top 1 bits (of 4) from mux cell store_buffer.$procmux$1278 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$add$store_buffer.v:100$774 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1195 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$sub$store_buffer.v:156$845 ($sub).
Removed top 2 bits (of 5) from wire store_buffer.$1\core_if.speculative_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$1\store_if.commit_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$2\store_if.commit_status_cnt[4:0].
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$710_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$724_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$738_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$752_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$793_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$799_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$805_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$811_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$817_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$850_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$854_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:100$774_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:103$778_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:140$816_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:151$829_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:160$849_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:162$865_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:94$709_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:95$723_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:96$737_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:97$751_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:98$765_Y.
Removed top 258 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$713_Y.
Removed top 260 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$727_Y.
Removed top 288 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$741_Y.
Removed top 290 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$755_Y.
Removed top 219 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$856_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:160$848_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:94$708_Y.
Removed top 29 bits (of 32) from wire store_buffer.$sub$store_buffer.v:156$845_Y.
Removed top 2 bits (of 5) from wire store_buffer.core_if.speculative_status_cnt.
Removed top 2 bits (of 8) from port A of cell store_unit.$le$store_unit.v:81$651 ($le).
Removed top 1 bits (of 8) from port A of cell store_unit.$ge$store_unit.v:81$652 ($ge).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1321_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1321_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1322_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1322_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1323_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1323_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1324_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1324_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1325_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1325_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1326_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1326_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1330_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1330_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1331_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1331_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1334_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1335_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1336_CMP4 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1353_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1390_CMP0 ($eq).

11.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 54 unused wires.
<suppressed ~6 debug messages>

11.10. Executing MEMORY_COLLECT pass (generating $mem cells).

11.11. Executing OPT pass (performing simple optimizations).

11.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~3 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 1 cells.

11.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

11.11.4. Finished fast OPT passes.

11.12. Printing statistics.

=== $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit ===

   Number of wires:                117
   Number of wire bits:            844
   Number of public wires:          47
   Number of public wire bits:     711
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $add                            1
     $adff                           5
     $and                            1
     $eq                            46
     $logic_and                      5
     $logic_not                      3
     $mux                           34
     $ne                             1
     $or                             1
     $pmux                           7
     $reduce_or                     13
     $shiftx                         1
     $shr                            1

=== amo_buffer ===

   Number of wires:                 17
   Number of wire bits:            425
   Number of public wires:          16
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $and                            2

=== cva6_lsu_formal ===

   Number of wires:                145
   Number of wire bits:           5233
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                136
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         7
     $dff                           21
     $eq                            22
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      6
     $logic_or                       3
     $lt                             2
     $mux                           45
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_shim ===

   Number of wires:                 90
   Number of wire bits:           2490
   Number of public wires:          60
   Number of public wire bits:    2009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $dff                            7
     $eq                             5
     $mux                           28
     load_store_unit                 1

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_shim                   1

=== load_store_unit ===

   Number of wires:                108
   Number of wire bits:           2482
   Number of public wires:          84
   Number of public wire bits:    2423
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $add                            1
     $adff                           1
     $eq                            33
     $logic_not                      3
     $mux                            5
     $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
     $pmux                           6
     $reduce_or                      5
     lsu_bypass                      1
     shift_reg                       2
     store_unit                      1

=== lsu_bypass ===

   Number of wires:                 57
   Number of wire bits:           3651
   Number of public wires:          21
   Number of public wire bits:     530
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            7
     $adff                           4
     $and                            4
     $logic_and                      1
     $logic_not                      1
     $mul                            2
     $mux                           15
     $not                            2
     $or                             3
     $shiftx                         1
     $shl                            4
     $sub                            2

=== shift_reg ===

   Number of wires:                  4
   Number of wire bits:            204
   Number of public wires:           4
   Number of public wire bits:     204
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $adff                           1

=== store_buffer ===

   Number of wires:                215
   Number of wire bits:          15200
   Number of public wires:          48
   Number of public wire bits:    1494
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                202
     $add                           30
     $adff                           8
     $and                           14
     $eq                             9
     $logic_and                      9
     $logic_not                      4
     $logic_or                       5
     $lt                             9
     $mul                            4
     $mux                           59
     $ne                             2
     $not                            8
     $or                             8
     $shiftx                         7
     $shl                           15
     $sub                           11

=== store_unit ===

   Number of wires:                123
   Number of wire bits:           1061
   Number of public wires:          57
   Number of public wire bits:     922
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           6
     $and                            2
     $eq                            43
     $ge                             1
     $le                             1
     $logic_and                      4
     $logic_not                      4
     $mux                           20
     $pmux                           8
     $reduce_bool                    2
     $reduce_or                     16
     amo_buffer                      1
     store_buffer                    1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_shim                 1
         load_store_unit             1
           $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
           lsu_bypass                1
           shift_reg                 2
           store_unit                1
             amo_buffer              1
             store_buffer            1

   Number of wires:               3197
   Number of wire bits:          93027
   Number of public wires:         910
   Number of public wire bits:   30918
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2826
     $add                           89
     $adff                          52
     $and                           48
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         7
     $dff                          191
     $eq                           570
     $ge                             2
     $gt                             1
     $le                             3
     $logic_and                     58
     $logic_not                     56
     $logic_or                      13
     $lt                            24
     $mul                           12
     $mux                         1097
     $ne                             6
     $not                           20
     $or                            26
     $pmux                         240
     $reduce_bool                    8
     $reduce_or                    196
     $shiftx                        18
     $shl                           40
     $shr                            6
     $sub                           32
     $xor                            2

11.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

12. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

13. Executing ASYNC2SYNC pass.
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11730 ($adff): ARST=\rst_ni, D=\idx_d, Q=\idx_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11731 ($adff): ARST=\rst_ni, D=\signed_d, Q=\signed_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11732 ($adff): ARST=\rst_ni, D=\fp_sign_d, Q=\fp_sign_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11733 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11734 ($adff): ARST=\rst_ni, D=\load_data_d, Q=\load_data_q
Replacing load_store_unit.$procdff$11741 ($adff): ARST=\rst_ni, D=\mmu_vaddr, Q=\mmu_paddr
Replacing lsu_bypass.$procdff$11736 ($adff): ARST=\rst_ni, D=\mem_n, Q=\mem_q
Replacing lsu_bypass.$procdff$11737 ($adff): ARST=\rst_ni, D=\read_pointer, Q=\read_pointer_q
Replacing lsu_bypass.$procdff$11738 ($adff): ARST=\rst_ni, D=\write_pointer, Q=\write_pointer_q
Replacing lsu_bypass.$procdff$11739 ($adff): ARST=\rst_ni, D=\status_cnt, Q=\status_cnt_q
Replacing shift_reg.$procdff$11735 ($adff): ARST=\rst_ni, D=\d_i, Q=\d_o
Replacing store_buffer.$procdff$11716 ($adff): ARST=\rst_ni, D=\commit_queue_n, Q=\commit_queue_q
Replacing store_buffer.$procdff$11717 ($adff): ARST=\rst_ni, D=\commit_status_cnt_n, Q=\commit_status_cnt_q
Replacing store_buffer.$procdff$11718 ($adff): ARST=\rst_ni, D=\commit_read_pointer_n, Q=\commit_read_pointer_q
Replacing store_buffer.$procdff$11719 ($adff): ARST=\rst_ni, D=\commit_write_pointer_n, Q=\commit_write_pointer_q
Replacing store_buffer.$procdff$11720 ($adff): ARST=\rst_ni, D=\speculative_queue_n, Q=\speculative_queue_q
Replacing store_buffer.$procdff$11721 ($adff): ARST=\rst_ni, D=\speculative_status_cnt_n, Q=\speculative_status_cnt_q
Replacing store_buffer.$procdff$11722 ($adff): ARST=\rst_ni, D=\speculative_read_pointer_n, Q=\speculative_read_pointer_q
Replacing store_buffer.$procdff$11723 ($adff): ARST=\rst_ni, D=\speculative_write_pointer_n, Q=\speculative_write_pointer_q
Replacing store_unit.$procdff$11724 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing store_unit.$procdff$11725 ($adff): ARST=\rst_ni, D=\st_data_n, Q=\st_data_q
Replacing store_unit.$procdff$11726 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [18:15], Q=\st_be_q
Replacing store_unit.$procdff$11727 ($adff): ARST=\rst_ni, D=\st_data_size_n, Q=\st_data_size_q
Replacing store_unit.$procdff$11728 ($adff): ARST=\rst_ni, D=\amo_op_d, Q=\amo_op_q
Replacing store_unit.$procdff$11729 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [2:0], Q=\trans_id_q

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

15. Executing SETUNDEF pass (replace undef values with defined constants).

16. Executing OPT pass (performing simple optimizations).

16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

16.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$11733 ($sdff) from module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit (D = $1\state_d[3:0] [3], Q = $auto$async2sync.cc:140:execute$12240 [3], rval = 1'0).
Adding SRST signal on $procdff$11960 ($dff) from module cva6_lsu_formal (D = $procmux$11588_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12605 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$11959 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$11938 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12608 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$11937 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12610 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$11936 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12612 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:198$97_Y, Q = \pc_2).
Adding SRST signal on $procdff$11935 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12616 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:181$89_Y, Q = \pc_1).
Adding SRST signal on $procdff$11934 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12620 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$11933 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12622 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:171$5_DATA[31:0]$82, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$11932 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12624 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$11931 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12626 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:188$6_DATA[31:0]$90, Q = \tb_io_instr_i_2).
Adding SRST signal on $procdff$11750 ($dff) from module cva6_lsu_shim (D = \load_mem_resp_i, Q = \x_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11749 ($dff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12629 ($sdff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state).
Adding SRST signal on $procdff$11748 ($dff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12637 ($sdff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state).
Adding SRST signal on $procdff$11746 ($dff) from module cva6_lsu_shim (D = { $2\tb_io_dcache_req_ports_i[104:104] \load_mem_resp_i \x_load_mem_resp_i \dummy_data }, Q = { \tb_io_dcache_req_ports_i [104] \tb_io_dcache_req_ports_i [69:36] }, rval = 35'00000000000000000000000000000000000).
Adding EN signal on $procdff$11746 ($dff) from module cva6_lsu_shim (D = 69'000000000000000000000000000000000000000000000000000000000000000000000, Q = { \tb_io_dcache_req_ports_i [103:70] \tb_io_dcache_req_ports_i [34:0] }).
Adding SRST signal on $procdff$11745 ($dff) from module cva6_lsu_shim (D = $2\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$12647 ($sdff) from module cva6_lsu_shim (D = $3\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i).
Adding SRST signal on $procdff$11743 ($dff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12655 ($sdff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i).
Adding SRST signal on $procdff$11742 ($dff) from module cva6_lsu_shim (D = $2\tb_io_fu_data_i[110:0], Q = \tb_io_fu_data_i, rval = 111'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$12659 ($sdff) from module cva6_lsu_shim (D = { 2'00 $3\tb_io_fu_data_i[110:0] }, Q = \tb_io_fu_data_i).
Adding EN signal on $procdff$11914 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$11913 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$11912 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$11911 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$11910 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$11909 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$11908 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$11907 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$11906 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$11905 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$11904 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$11903 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$11902 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$11901 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$11900 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$11899 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$11898 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$11897 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$11896 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$11895 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$11894 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$11893 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$11892 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$11891 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$11890 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$11889 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$11888 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$11887 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$11886 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$11885 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$11884 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$11883 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$11882 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$11881 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$11880 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$11879 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$11878 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$11877 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$11876 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$11875 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$11874 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$11873 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$11872 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$11871 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$11870 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$11869 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$11868 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$11867 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$11866 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$11865 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$11864 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$11863 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$11862 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$11861 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$11860 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$11859 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$11858 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$11857 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$11856 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$11855 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$11854 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$11853 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$11852 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$11851 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$11831 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13173 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$11830 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$11830 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13196 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$378_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$13191 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$11829 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$11828 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$11826 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$11825 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13204 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$11824 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13210 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$11823 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13216 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$11822 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11821 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13235 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$11820 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13243 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$11819 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13253 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$11818 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13261 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$11817 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$13269 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).
Adding SRST signal on $procdff$11739 ($sdff) from module lsu_bypass (D = $3\status_cnt[1:0], Q = $auto$async2sync.cc:140:execute$12252, rval = 2'00).
Adding SRST signal on $procdff$11738 ($sdff) from module lsu_bypass (D = $1\write_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12250, rval = 1'0).
Adding SRST signal on $procdff$11737 ($sdff) from module lsu_bypass (D = $2\read_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12248, rval = 1'0).
Adding SRST signal on $procdff$11736 ($sdff) from module lsu_bypass (D = $3\mem_n[169:0], Q = $auto$async2sync.cc:140:execute$12246, rval = 170'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$11721 ($sdff) from module store_buffer (D = \core_if.speculative_status_cnt, Q = $auto$async2sync.cc:140:execute$12266, rval = 3'000).
Adding SRST signal on $procdff$11720 ($sdff) from module store_buffer (D = { $2\speculative_queue_n[291:0] [219] $2\speculative_queue_n[291:0] [146] $2\speculative_queue_n[291:0] [73] $2\speculative_queue_n[291:0] [0] }, Q = { $auto$async2sync.cc:140:execute$12264 [219] $auto$async2sync.cc:140:execute$12264 [146] $auto$async2sync.cc:140:execute$12264 [73] $auto$async2sync.cc:140:execute$12264 [0] }, rval = 4'0000).
Adding SRST signal on $procdff$11724 ($sdff) from module store_unit (D = $1\state_d[1:0], Q = $auto$async2sync.cc:140:execute$12272, rval = 2'00).

16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 283 unused cells and 295 unused wires.
<suppressed ~315 debug messages>

16.5. Rerunning OPT passes. (Removed registers in this run.)

16.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
<suppressed ~4 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
<suppressed ~15 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 80 cells.

16.8. Executing OPT_DFF pass (perform DFF optimizations).

16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 80 unused wires.
<suppressed ~3 debug messages>

16.10. Finished fast OPT passes.

17. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

18. Executing HIERARCHY pass (managing design hierarchy).

18.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass

18.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

19. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 114 unique messages, 334 total
End of script. Logfile hash: 71dd64d0c1, CPU: user 14.60s system 0.17s, MEM: 101.34 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 30% 3x check (4 sec), 22% 9x opt_clean (3 sec), ...
