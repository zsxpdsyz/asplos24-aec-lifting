
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cva6_lsu_model.v
Parsing formal SystemVerilog input from `cva6_lsu_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_model'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

4.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

4.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_model'.
Generating RTLIL representation for module `\cva6_lsu_model'.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_lsu_model.v:98
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_lsu_model.v:94
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_lsu_model.v:90

4.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

4.2.6. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removing unused module `$abstract\cva6_lsu_model'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 3 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
Cleaned up 1 empty switch.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$574 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$574 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$569 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$569 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$564 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$564 in module cva6_lsu_model.
Removed 9 dead cases from process $proc$cva6_lsu_model.v:85$397 in module cva6_lsu_model.
Marked 27 switch rules as full_case in process $proc$cva6_lsu_model.v:85$397 in module cva6_lsu_model.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$130 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$130 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$28 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$28 in module cva6_lsu_formal.
Removed a total of 22 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 247 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
  Set init value: $formal$cva6_lsu_formal.v:203$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
  Set init value: $formal$cva6_lsu_formal.v:168$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
  Set init value: $formal$cva6_lsu_formal.v:166$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$106'.
  Set init value: $formal$cva6_lsu_formal.v:161$6_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
  Set init value: $formal$cva6_lsu_formal.v:160$5_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$102'.
  Set init value: $formal$cva6_lsu_formal.v:159$4_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$100'.
  Set init value: $formal$cva6_lsu_formal.v:156$3_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$574'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$374_DATA[7:0]$576
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$569'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$390_DATA[1:0]$573
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$564'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$389_DATA[31:0]$568
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
     1/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_DATA[1:0]$562
     2/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_ADDR[1:0]$561
     3/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_DATA[1:0]$559
     4/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_DATA[1:0]$558
     5/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_ADDR[1:0]$557
     6/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_DATA[1:0]$556
     7/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_ADDR[1:0]$555
     8/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_DATA[1:0]$553
     9/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_ADDR[1:0]$552
    10/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_DATA[1:0]$550
    11/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_DATA[1:0]$549
    12/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_ADDR[1:0]$548
    13/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_DATA[1:0]$547
    14/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_ADDR[1:0]$546
    15/153: $5$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_DATA[7:0]$539
    16/153: $5$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_DATA[1:0]$538
    17/153: $5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA[31:0]$537
    18/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_DATA[7:0]$536
    19/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_ADDR[1:0]$535
    20/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_DATA[1:0]$534
    21/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_ADDR[1:0]$533
    22/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA[31:0]$532
    23/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_ADDR[1:0]$531
    24/153: $4$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$373[1:0]$530
    25/153: $4$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$372[31:0]$529
    26/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_DATA[7:0]$526
    27/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_ADDR[1:0]$525
    28/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_DATA[1:0]$524
    29/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_ADDR[1:0]$523
    30/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA[31:0]$522
    31/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_ADDR[1:0]$521
    32/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$373[1:0]$520
    33/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$372[31:0]$519
    34/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_DATA[7:0]$512
    35/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_DATA[1:0]$511
    36/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_DATA[31:0]$510
    37/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_DATA[7:0]$509
    38/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_ADDR[1:0]$508
    39/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_DATA[1:0]$507
    40/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_ADDR[1:0]$506
    41/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_DATA[31:0]$505
    42/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_ADDR[1:0]$504
    43/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$371[1:0]$503
    44/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$370[31:0]$502
    45/153: $5\instr_i_pc[7:0]
    46/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_DATA[7:0]$494
    47/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_ADDR[1:0]$493
    48/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_DATA[1:0]$492
    49/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_ADDR[1:0]$491
    50/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_DATA[31:0]$490
    51/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_ADDR[1:0]$489
    52/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$371[1:0]$486
    53/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$370[31:0]$485
    54/153: $4\instr_i_pc[7:0]
    55/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_DATA[7:0]$500
    56/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_ADDR[1:0]$499
    57/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_DATA[1:0]$498
    58/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_ADDR[1:0]$497
    59/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA[31:0]$496
    60/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_ADDR[1:0]$495
    61/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$373[1:0]$488
    62/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$372[31:0]$487
    63/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_DATA[1:0]$481
    64/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_ADDR[1:0]$480
    65/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_DATA[7:0]$479
    66/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_ADDR[1:0]$478
    67/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_DATA[31:0]$477
    68/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_ADDR[1:0]$476
    69/153: $3\instr_i_pc[7:0]
    70/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_DATA[1:0]$474
    71/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_DATA[1:0]$473
    72/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_ADDR[1:0]$472
    73/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_DATA[7:0]$471
    74/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_ADDR[1:0]$470
    75/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_DATA[31:0]$469
    76/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_ADDR[1:0]$468
    77/153: $2\instr_i_pc[7:0]
    78/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_DATA[1:0]$467
    79/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_ADDR[1:0]$466
    80/153: $0\inner_load_mem_resp_i[0:0]
    81/153: $0\x_inner_store_mem_resp_i[0:0]
    82/153: $0\inner_store_mem_resp_i[0:0]
    83/153: $0\x_inner_instr_i[31:0]
    84/153: $0\inner_instr_i[31:0]
    85/153: $0\x_inner_instr_valid_i[0:0]
    86/153: $0\inner_instr_valid_i[0:0]
    87/153: $0\x_inner_is_load_i[0:0]
    88/153: $0\inner_is_load_i[0:0]
    89/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_DATA[1:0]$462
    90/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_ADDR[1:0]$461
    91/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_DATA[1:0]$460
    92/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_ADDR[1:0]$459
    93/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_DATA[1:0]$458
    94/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_ADDR[1:0]$457
    95/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_DATA[1:0]$456
    96/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_ADDR[1:0]$455
    97/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_DATA[7:0]$454
    98/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_ADDR[1:0]$453
    99/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_DATA[1:0]$452
   100/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_ADDR[1:0]$451
   101/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA[31:0]$450
   102/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_ADDR[1:0]$449
   103/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_DATA[7:0]$448
   104/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_ADDR[1:0]$447
   105/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_DATA[1:0]$446
   106/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_ADDR[1:0]$445
   107/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_DATA[31:0]$444
   108/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_ADDR[1:0]$443
   109/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$373[1:0]$434
   110/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$372[31:0]$433
   111/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$371[1:0]$432
   112/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$370[31:0]$431
   113/153: $1\instr_i_pc[7:0]
   114/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_DATA[1:0]$442
   115/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_ADDR[1:0]$441
   116/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_DATA[7:0]$440
   117/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_ADDR[1:0]$439
   118/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_DATA[31:0]$438
   119/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_ADDR[1:0]$437
   120/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_DATA[1:0]$436
   121/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_ADDR[1:0]$435
   122/153: $0\CLK_CYCLE[31:0]
   123/153: $0\store_instr_queue_state[3][1:0]
   124/153: $0\store_instr_queue_state[2][1:0]
   125/153: $0\store_instr_queue_state[1][1:0]
   126/153: $0\store_instr_queue_state[0][1:0]
   127/153: $0\store_instr_i_queue_pc[3][7:0]
   128/153: $0\store_instr_i_queue_pc[2][7:0]
   129/153: $0\store_instr_i_queue_pc[1][7:0]
   130/153: $0\store_instr_i_queue_pc[0][7:0]
   131/153: $0\store_instr_i_queue[3][31:0]
   132/153: $0\store_instr_i_queue[2][31:0]
   133/153: $0\store_instr_i_queue[1][31:0]
   134/153: $0\store_instr_i_queue[0][31:0]
   135/153: $0\ready_flag[0:0]
   136/153: $0\store_instr_queue_state_flatten_3[1:0]
   137/153: $0\store_instr_queue_state_flatten_2[1:0]
   138/153: $0\store_instr_queue_state_flatten_1[1:0]
   139/153: $0\store_instr_queue_state_flatten_0[1:0]
   140/153: $0\store_instr_i_queue_flatten_3_pc[7:0]
   141/153: $0\store_instr_i_queue_flatten_3[31:0]
   142/153: $0\store_instr_i_queue_flatten_2_pc[7:0]
   143/153: $0\store_instr_i_queue_flatten_2[31:0]
   144/153: $0\store_instr_i_queue_flatten_1_pc[7:0]
   145/153: $0\store_instr_i_queue_flatten_1[31:0]
   146/153: $0\store_instr_i_queue_flatten_0_pc[7:0]
   147/153: $0\store_instr_i_queue_flatten_0[31:0]
   148/153: $0\load_instr_queue_state[1:0]
   149/153: $0\load_instr_i_queue_pc[7:0]
   150/153: $0\load_instr_i_queue[31:0]
   151/153: $0\queue_serve_ptr[1:0]
   152/153: $0\queue_commit_ptr[1:0]
   153/153: $0\queue_store_ptr[1:0]
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA[31:0]$315
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_ADDR[4:0]$313
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_DATA[31:0]$314
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$120.$result[31:0]$304
   126/587: $5\sra$func$cva6_processor_shim.v:100$121.$result[31:0]$308
   127/587: $5\sra$func$cva6_processor_shim.v:100$121.shamt[4:0]$310
   128/587: $5\sra$func$cva6_processor_shim.v:100$121.d[63:0]$309
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$120.alu_fun[2:0]$307
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$120.imm_data[31:0]$306
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$120.reg_data[31:0]$305
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA[31:0]$312
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_ADDR[4:0]$311
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$119.$result[31:0]$302
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$119.inst[31:0]$303
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_DATA[31:0]$300
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_DATA[31:0]$298
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_ADDR[4:0]$290
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_DATA[31:0]$291
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_DATA[31:0]$293
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_ADDR[4:0]$292
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_DATA[31:0]$289
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_ADDR[4:0]$288
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$117.$result[31:0]$275
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$117.inst[31:0]$276
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_DATA[31:0]$297
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_ADDR[4:0]$296
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA[31:0]$295
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_ADDR[4:0]$294
   218/587: $4\sra$func$cva6_processor_shim.v:100$121.shamt[4:0]$287
   219/587: $4\sra$func$cva6_processor_shim.v:100$121.d[63:0]$286
   220/587: $4\sra$func$cva6_processor_shim.v:100$121.$result[31:0]$285
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$120.alu_fun[2:0]$284
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$120.imm_data[31:0]$283
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$120.reg_data[31:0]$282
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$120.$result[31:0]$281
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$119.inst[31:0]$280
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$119.$result[31:0]$279
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$118.instr[31:0]$278
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$118.$result[0:0]$277
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_DATA[31:0]$273
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_DATA[31:0]$271
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_ADDR[4:0]$257
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_DATA[31:0]$258
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_DATA[31:0]$260
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_ADDR[4:0]$259
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_DATA[31:0]$256
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_ADDR[4:0]$255
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$115.$result[31:0]$238
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$115.inst[31:0]$239
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_DATA[31:0]$270
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_ADDR[4:0]$269
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA[31:0]$268
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_ADDR[4:0]$267
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_DATA[31:0]$266
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_ADDR[4:0]$265
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_DATA[31:0]$264
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_ADDR[4:0]$263
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_DATA[31:0]$262
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_ADDR[4:0]$261
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$121.shamt[4:0]$254
   350/587: $3\sra$func$cva6_processor_shim.v:100$121.d[63:0]$253
   351/587: $3\sra$func$cva6_processor_shim.v:100$121.$result[31:0]$252
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$120.alu_fun[2:0]$251
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$120.imm_data[31:0]$250
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$120.reg_data[31:0]$249
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$120.$result[31:0]$248
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$119.inst[31:0]$247
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$119.$result[31:0]$246
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$118.instr[31:0]$245
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$118.$result[0:0]$244
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$117.inst[31:0]$243
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$117.$result[31:0]$242
   362/587: $3\is_load$func$cva6_processor_shim.v:232$116.instr[31:0]$241
   363/587: $3\is_load$func$cva6_processor_shim.v:232$116.$result[0:0]$240
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_DATA[31:0]$236
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_ADDR[4:0]$235
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA[31:0]$234
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_ADDR[4:0]$233
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_DATA[31:0]$232
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_ADDR[4:0]$231
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_DATA[31:0]$230
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_ADDR[4:0]$229
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_DATA[31:0]$228
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_ADDR[4:0]$227
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_DATA[31:0]$226
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_ADDR[4:0]$225
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_DATA[31:0]$224
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_ADDR[4:0]$223
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_DATA[31:0]$222
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_ADDR[4:0]$221
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$121.shamt[4:0]$220
   445/587: $2\sra$func$cva6_processor_shim.v:100$121.d[63:0]$219
   446/587: $2\sra$func$cva6_processor_shim.v:100$121.$result[31:0]$218
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$120.alu_fun[2:0]$217
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$120.imm_data[31:0]$216
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$120.reg_data[31:0]$215
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$120.$result[31:0]$214
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$119.inst[31:0]$213
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$119.$result[31:0]$212
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$118.instr[31:0]$211
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$118.$result[0:0]$210
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$117.inst[31:0]$209
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$117.$result[31:0]$208
   457/587: $2\is_load$func$cva6_processor_shim.v:232$116.instr[31:0]$207
   458/587: $2\is_load$func$cva6_processor_shim.v:232$116.$result[0:0]$206
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$115.inst[31:0]$205
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$115.$result[31:0]$204
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$114.$result[0:0]$202
   466/587: $2\is_store$func$cva6_processor_shim.v:226$114.instr[31:0]$203
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_DATA[31:0]$201
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_ADDR[4:0]$200
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA[31:0]$199
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_ADDR[4:0]$198
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_DATA[31:0]$197
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_ADDR[4:0]$196
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_DATA[31:0]$195
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_ADDR[4:0]$194
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_DATA[31:0]$193
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_ADDR[4:0]$192
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_DATA[31:0]$191
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_ADDR[4:0]$190
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_DATA[31:0]$189
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_ADDR[4:0]$188
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_DATA[31:0]$187
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_ADDR[4:0]$186
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$121.shamt[4:0]$185
   570/587: $1\sra$func$cva6_processor_shim.v:100$121.d[63:0]$184
   571/587: $1\sra$func$cva6_processor_shim.v:100$121.$result[31:0]$183
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$120.alu_fun[2:0]$182
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$120.imm_data[31:0]$181
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$120.reg_data[31:0]$180
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$120.$result[31:0]$179
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$119.inst[31:0]$178
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$119.$result[31:0]$177
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$118.instr[31:0]$176
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$118.$result[0:0]$175
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$117.inst[31:0]$174
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$117.$result[31:0]$173
   582/587: $1\is_load$func$cva6_processor_shim.v:232$116.instr[31:0]$172
   583/587: $1\is_load$func$cva6_processor_shim.v:232$116.$result[0:0]$171
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$115.inst[31:0]$170
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$115.$result[31:0]$169
   586/587: $1\is_store$func$cva6_processor_shim.v:226$114.instr[31:0]$168
   587/587: $1\is_store$func$cva6_processor_shim.v:226$114.$result[0:0]$167
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$106'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$102'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$100'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$91'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
     1/48: $4\local_ready_2[0:0]
     2/48: $3\tb_io_instr_valid_i_2[0:0]
     3/48: $3\pc_2[31:0]
     4/48: $3\local_ready_2[0:0]
     5/48: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_DATA[31:0]$82
     6/48: $4\local_ready_1[0:0]
     7/48: $3\tb_io_instr_valid_i_1[0:0]
     8/48: $3\pc_1[31:0]
     9/48: $3\local_ready_1[0:0]
    10/48: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_DATA[31:0]$74
    11/48: $2\local_ready_2[0:0]
    12/48: $2\pc_2[31:0]
    13/48: $2\tb_io_instr_valid_i_2[0:0]
    14/48: $2\tb_io_instr_i_2[31:0]
    15/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_DATA[31:0]$71
    16/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_ADDR[1:0]$70
    17/48: $2\local_ready_1[0:0]
    18/48: $2\pc_1[31:0]
    19/48: $2\tb_io_instr_valid_i_1[0:0]
    20/48: $2\tb_io_instr_i_1[31:0]
    21/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_DATA[31:0]$69
    22/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_ADDR[1:0]$68
    23/48: $1\local_ready_2[0:0]
    24/48: $1\local_ready_1[0:0]
    25/48: $1\tb_io_instr_i_2[31:0]
    26/48: $1\tb_io_instr_i_1[31:0]
    27/48: $1\tb_io_instr_valid_i_2[0:0]
    28/48: $1\tb_io_instr_valid_i_1[0:0]
    29/48: $1\pc_2[31:0]
    30/48: $1\pc_1[31:0]
    31/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_DATA[31:0]$52
    32/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_ADDR[1:0]$51
    33/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_DATA[31:0]$50
    34/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_ADDR[1:0]$49
    35/48: $0$formal$cva6_lsu_formal.v:156$3_EN[0:0]$34
    36/48: $0$formal$cva6_lsu_formal.v:156$3_CHECK[0:0]$33
    37/48: $0$formal$cva6_lsu_formal.v:159$4_EN[0:0]$36
    38/48: $0$formal$cva6_lsu_formal.v:159$4_CHECK[0:0]$35
    39/48: $0$formal$cva6_lsu_formal.v:160$5_EN[0:0]$38
    40/48: $0$formal$cva6_lsu_formal.v:160$5_CHECK[0:0]$37
    41/48: $0$formal$cva6_lsu_formal.v:161$6_EN[0:0]$40
    42/48: $0$formal$cva6_lsu_formal.v:161$6_CHECK[0:0]$39
    43/48: $0$formal$cva6_lsu_formal.v:166$7_EN[0:0]$42
    44/48: $0$formal$cva6_lsu_formal.v:166$7_CHECK[0:0]$41
    45/48: $0$formal$cva6_lsu_formal.v:168$8_EN[0:0]$44
    46/48: $0$formal$cva6_lsu_formal.v:168$8_CHECK[0:0]$43
    47/48: $0$formal$cva6_lsu_formal.v:203$9_EN[0:0]$46
    48/48: $0$formal$cva6_lsu_formal.v:203$9_CHECK[0:0]$45
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$374_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$574'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:70$369' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$569'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$390_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$569'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$390_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$569'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:68$368' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$564'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$389_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$564'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$389_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$564'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$91'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$91'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$91'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$91'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cva6_lsu_model.\CLK_CYCLE' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10163' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\instr_i_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10164' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_store_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10165' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_commit_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10166' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_serve_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10167' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10168' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10169' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_queue_state' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10170' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10171' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10172' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10173' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10174' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10175' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10176' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10177' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10178' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10179' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10180' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10181' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10182' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\ready_flag' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10183' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10184' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10185' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10186' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10187' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10188' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10189' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10190' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10191' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_load_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10192' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$370' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10193' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$371' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10194' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$372' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10195' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$373' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10196' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10197' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10198' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10199' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10200' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10201' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10202' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10203' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10204' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10205' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10206' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10207' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10208' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10209' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$375_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10210' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10211' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$376_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10212' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10213' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$377_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10214' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10215' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$378_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10216' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10217' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10218' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10219' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$380_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10220' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10221' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$381_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10222' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10223' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10224' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10225' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$383_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10226' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10227' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$384_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10228' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10229' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$385_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10230' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10231' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$386_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10232' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10233' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$387_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10234' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10235' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$388_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
  created $adff cell `$procdff$10236' with positive edge clock and negative level reset.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10237' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10238' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10239' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10240' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10241' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10242' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10243' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10244' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10245' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10246' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10247' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10248' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10249' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10250' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10251' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10252' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10253' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10254' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10255' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10256' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10257' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10258' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10259' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10260' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10261' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10262' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10263' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10264' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10265' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10266' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10267' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10268' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10269' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10270' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10271' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10272' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10273' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10274' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10275' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10276' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10277' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10278' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10279' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10280' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10281' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10282' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10283' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10284' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10285' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10286' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10287' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10288' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10289' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10290' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10291' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10292' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10293' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10294' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10295' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10296' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10297' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10298' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10299' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10300' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10301' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10302' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10303' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10304' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10305' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10306' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10307' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10308' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10309' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10310' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10311' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10312' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10313' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10314' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10315' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$114.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10316' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$114.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10317' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$115.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10318' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$115.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10319' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$116.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10320' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$116.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10321' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$117.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10322' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$117.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10323' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$118.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10324' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$118.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10325' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$119.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10326' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$119.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10327' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$120.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10328' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$120.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10329' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$120.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10330' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$120.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10331' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$121.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10332' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$121.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10333' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$121.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10334' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10335' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10336' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10337' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10338' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10339' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10340' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10341' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10342' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10343' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10344' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10345' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10346' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10347' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10348' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10349' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10350' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10351' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10352' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10353' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10354' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10355' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10356' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10357' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10358' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10359' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10360' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10361' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10362' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10363' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10364' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10365' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10366' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10367' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10368' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10369' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10370' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10371' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10372' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10373' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10374' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10375' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10376' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10377' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10378' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10379' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10380' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10381' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10382' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10383' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10384' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10385' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10386' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10387' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10388' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10389' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10390' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10391' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10392' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10393' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10394' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10395' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10396' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10397' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10398' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10399' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$122_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10400' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10401' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$123_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10402' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10403' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$124_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10404' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10405' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$125_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10406' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10407' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$126_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10408' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10409' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$127_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10410' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10411' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$128_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10412' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10413' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$129_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
  created $dff cell `$procdff$10414' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10415' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10416' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10417' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10418' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10419' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10420' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10421' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10422' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10423' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10424' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10425' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10426' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10427' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10428' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10429' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10430' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10431' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10432' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10433' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10434' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10435' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:166$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10436' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10437' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:168$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10438' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:203$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10439' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:203$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
  created $dff cell `$procdff$10440' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
  created $dff cell `$procdff$10441' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
  created $dff cell `$procdff$10442' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
  created $dff cell `$procdff$10443' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
  created $dff cell `$procdff$10444' with positive edge clock.

4.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$574'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$574'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$569'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$569'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$564'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$564'.
Found and cleaned up 28 empty switches in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:85$397'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$130'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$106'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$102'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$100'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$99'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$91'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$28'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$10'.
Cleaned up 70 empty switches.

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_model.
<suppressed ~23 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~5 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 674 unused cells and 3774 unused wires.
<suppressed ~771 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~132 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Removed a total of 3149 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10005.
    dead port 1/2 on $mux $procmux$10011.
    dead port 1/2 on $mux $procmux$10029.
    dead port 1/2 on $mux $procmux$10035.
    dead port 1/2 on $mux $procmux$10041.
    dead port 1/2 on $mux $procmux$10047.
    dead port 2/2 on $mux $procmux$9894.
    dead port 2/2 on $mux $procmux$9896.
    dead port 1/2 on $mux $procmux$9899.
    dead port 2/2 on $mux $procmux$9905.
    dead port 1/2 on $mux $procmux$9908.
    dead port 2/2 on $mux $procmux$9914.
    dead port 1/2 on $mux $procmux$9917.
    dead port 2/2 on $mux $procmux$9923.
    dead port 1/2 on $mux $procmux$9926.
    dead port 2/2 on $mux $procmux$9944.
    dead port 2/2 on $mux $procmux$9946.
    dead port 1/2 on $mux $procmux$9949.
    dead port 2/2 on $mux $procmux$9955.
    dead port 1/2 on $mux $procmux$9958.
    dead port 2/2 on $mux $procmux$9964.
    dead port 1/2 on $mux $procmux$9967.
    dead port 2/2 on $mux $procmux$9973.
    dead port 1/2 on $mux $procmux$9976.
    dead port 1/2 on $mux $procmux$9993.
    dead port 1/2 on $mux $procmux$9999.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$903.
    dead port 2/2 on $mux $procmux$996.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1340: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$1318: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$2030: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$1947: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1748: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1670: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1595: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1436: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1410: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6080.
    dead port 1/2 on $mux $procmux$6087.
    dead port 2/2 on $mux $procmux$6089.
    dead port 2/2 on $mux $procmux$6092.
    dead port 1/2 on $mux $procmux$6099.
    dead port 2/2 on $mux $procmux$6101.
    dead port 2/2 on $mux $procmux$6104.
    dead port 1/2 on $mux $procmux$6111.
    dead port 2/2 on $mux $procmux$6113.
    dead port 2/2 on $mux $procmux$6116.
    dead port 1/2 on $mux $procmux$6123.
    dead port 2/2 on $mux $procmux$6125.
    dead port 2/2 on $mux $procmux$6128.
    dead port 1/2 on $mux $procmux$6135.
    dead port 2/2 on $mux $procmux$6137.
    dead port 2/2 on $mux $procmux$6140.
    dead port 1/2 on $mux $procmux$6147.
    dead port 2/2 on $mux $procmux$6149.
    dead port 2/2 on $mux $procmux$6152.
    dead port 1/2 on $mux $procmux$6159.
    dead port 2/2 on $mux $procmux$6161.
    dead port 2/2 on $mux $procmux$6164.
    dead port 1/2 on $mux $procmux$6171.
    dead port 2/2 on $mux $procmux$6173.
    dead port 2/2 on $mux $procmux$6176.
    dead port 1/2 on $mux $procmux$6183.
    dead port 2/2 on $mux $procmux$6185.
    dead port 2/2 on $mux $procmux$6188.
    dead port 1/2 on $mux $procmux$6195.
    dead port 2/2 on $mux $procmux$6197.
    dead port 2/2 on $mux $procmux$6200.
    dead port 1/2 on $mux $procmux$6207.
    dead port 2/2 on $mux $procmux$6209.
    dead port 2/2 on $mux $procmux$6212.
    dead port 1/2 on $mux $procmux$6219.
    dead port 2/2 on $mux $procmux$6221.
    dead port 2/2 on $mux $procmux$6224.
    dead port 1/2 on $mux $procmux$6231.
    dead port 2/2 on $mux $procmux$6233.
    dead port 2/2 on $mux $procmux$6236.
    dead port 1/2 on $mux $procmux$6243.
    dead port 2/2 on $mux $procmux$6245.
    dead port 2/2 on $mux $procmux$6248.
    dead port 1/2 on $mux $procmux$6255.
    dead port 2/2 on $mux $procmux$6257.
    dead port 2/2 on $mux $procmux$6260.
    dead port 1/2 on $mux $procmux$6315.
    dead port 2/2 on $mux $procmux$6317.
    dead port 2/2 on $mux $procmux$6320.
    dead port 2/2 on $mux $procmux$6585.
    dead port 2/2 on $mux $procmux$6587.
    dead port 2/2 on $mux $procmux$6590.
    dead port 1/2 on $mux $procmux$1811.
    dead port 1/2 on $mux $procmux$1814.
    dead port 2/2 on $mux $procmux$1817.
    dead port 2/2 on $mux $procmux$1824.
    dead port 1/2 on $mux $procmux$1826.
    dead port 1/2 on $mux $procmux$1829.
    dead port 2/2 on $mux $procmux$1832.
    dead port 2/2 on $mux $procmux$2505.
    dead port 1/2 on $mux $procmux$2508.
    dead port 1/2 on $mux $procmux$2511.
    dead port 2/2 on $mux $procmux$2513.
    dead port 2/2 on $mux $procmux$4662.
    dead port 1/2 on $mux $procmux$4665.
    dead port 2/2 on $mux $procmux$4667.
    dead port 2/2 on $mux $procmux$4670.
    dead port 2/2 on $mux $procmux$2516.
    dead port 2/2 on $mux $procmux$1839.
    dead port 1/2 on $mux $procmux$1841.
    dead port 1/2 on $mux $procmux$1844.
    dead port 2/2 on $mux $procmux$1847.
    dead port 2/2 on $mux $procmux$3177.
    dead port 1/2 on $mux $procmux$3180.
    dead port 1/2 on $mux $procmux$3183.
    dead port 2/2 on $mux $procmux$3185.
    dead port 2/2 on $mux $procmux$3188.
    dead port 1/2 on $mux $procmux$1853.
    dead port 2/2 on $mux $procmux$6627.
    dead port 2/2 on $mux $procmux$6629.
    dead port 2/2 on $mux $procmux$6632.
    dead port 1/2 on $mux $procmux$1856.
    dead port 2/2 on $mux $procmux$1859.
    dead port 1/2 on $mux $procmux$1865.
    dead port 1/2 on $mux $procmux$1868.
    dead port 2/2 on $mux $procmux$1871.
    dead port 1/2 on $mux $procmux$1877.
    dead port 1/2 on $mux $procmux$1880.
    dead port 2/2 on $mux $procmux$1883.
    dead port 1/2 on $mux $procmux$1901.
    dead port 1/2 on $mux $procmux$1904.
    dead port 2/2 on $mux $procmux$1907.
    dead port 1/2 on $mux $procmux$1913.
    dead port 1/2 on $mux $procmux$1916.
    dead port 2/2 on $mux $procmux$4707.
    dead port 1/2 on $mux $procmux$4710.
    dead port 2/2 on $mux $procmux$4712.
    dead port 2/2 on $mux $procmux$4715.
    dead port 2/2 on $mux $procmux$1919.
    dead port 1/2 on $mux $procmux$1925.
    dead port 1/2 on $mux $procmux$1928.
    dead port 2/2 on $mux $procmux$1931.
    dead port 1/2 on $mux $procmux$1937.
    dead port 1/2 on $mux $procmux$1940.
    dead port 2/2 on $mux $procmux$2553.
    dead port 1/2 on $mux $procmux$2556.
    dead port 2/2 on $mux $procmux$6669.
    dead port 2/2 on $mux $procmux$6671.
    dead port 2/2 on $mux $procmux$6674.
    dead port 1/2 on $mux $procmux$2559.
    dead port 2/2 on $mux $procmux$2561.
    dead port 2/2 on $mux $procmux$2564.
    dead port 2/2 on $mux $procmux$3225.
    dead port 1/2 on $mux $procmux$3228.
    dead port 1/2 on $mux $procmux$3231.
    dead port 2/2 on $mux $procmux$3233.
    dead port 2/2 on $mux $procmux$3236.
    dead port 2/2 on $mux $procmux$1943.
    dead port 1/2 on $mux $procmux$1949.
    dead port 1/2 on $mux $procmux$1952.
    dead port 2/2 on $mux $procmux$1955.
    dead port 1/2 on $mux $procmux$1961.
    dead port 2/2 on $mux $procmux$1964.
    dead port 1/2 on $mux $procmux$1970.
    dead port 2/2 on $mux $procmux$1973.
    dead port 2/2 on $mux $procmux$4752.
    dead port 1/2 on $mux $procmux$4755.
    dead port 2/2 on $mux $procmux$4757.
    dead port 2/2 on $mux $procmux$4760.
    dead port 1/2 on $mux $procmux$1988.
    dead port 2/2 on $mux $procmux$1991.
    dead port 1/2 on $mux $procmux$1997.
    dead port 2/2 on $mux $procmux$2000.
    dead port 2/2 on $mux $procmux$6711.
    dead port 2/2 on $mux $procmux$6713.
    dead port 2/2 on $mux $procmux$6716.
    dead port 1/2 on $mux $procmux$2006.
    dead port 2/2 on $mux $procmux$2009.
    dead port 1/2 on $mux $procmux$2015.
    dead port 2/2 on $mux $procmux$2018.
    dead port 1/2 on $mux $procmux$2024.
    dead port 2/2 on $mux $procmux$2027.
    dead port 1/2 on $mux $procmux$2033.
    dead port 2/2 on $mux $procmux$2036.
    dead port 2/2 on $mux $procmux$3273.
    dead port 1/2 on $mux $procmux$3276.
    dead port 1/2 on $mux $procmux$3279.
    dead port 2/2 on $mux $procmux$3281.
    dead port 2/2 on $mux $procmux$3284.
    dead port 2/2 on $mux $procmux$2601.
    dead port 1/2 on $mux $procmux$2604.
    dead port 1/2 on $mux $procmux$2607.
    dead port 2/2 on $mux $procmux$2609.
    dead port 2/2 on $mux $procmux$2612.
    dead port 2/2 on $mux $procmux$4797.
    dead port 1/2 on $mux $procmux$4800.
    dead port 2/2 on $mux $procmux$4802.
    dead port 2/2 on $mux $procmux$4805.
    dead port 2/2 on $mux $procmux$6753.
    dead port 2/2 on $mux $procmux$6755.
    dead port 2/2 on $mux $procmux$6758.
    dead port 2/2 on $mux $procmux$3321.
    dead port 1/2 on $mux $procmux$3324.
    dead port 1/2 on $mux $procmux$3327.
    dead port 2/2 on $mux $procmux$3329.
    dead port 2/2 on $mux $procmux$3332.
    dead port 2/2 on $mux $procmux$6795.
    dead port 2/2 on $mux $procmux$6797.
    dead port 2/2 on $mux $procmux$6800.
    dead port 2/2 on $mux $procmux$4842.
    dead port 1/2 on $mux $procmux$4845.
    dead port 2/2 on $mux $procmux$4847.
    dead port 2/2 on $mux $procmux$4850.
    dead port 2/2 on $mux $procmux$2073.
    dead port 1/2 on $mux $procmux$2076.
    dead port 2/2 on $mux $procmux$2649.
    dead port 1/2 on $mux $procmux$2652.
    dead port 1/2 on $mux $procmux$2655.
    dead port 2/2 on $mux $procmux$2657.
    dead port 2/2 on $mux $procmux$2660.
    dead port 1/2 on $mux $procmux$2079.
    dead port 2/2 on $mux $procmux$2081.
    dead port 2/2 on $mux $procmux$2084.
    dead port 2/2 on $mux $procmux$6837.
    dead port 2/2 on $mux $procmux$6839.
    dead port 2/2 on $mux $procmux$6842.
    dead port 2/2 on $mux $procmux$4887.
    dead port 1/2 on $mux $procmux$4890.
    dead port 2/2 on $mux $procmux$4892.
    dead port 2/2 on $mux $procmux$4895.
    dead port 2/2 on $mux $procmux$3369.
    dead port 1/2 on $mux $procmux$3372.
    dead port 1/2 on $mux $procmux$3375.
    dead port 2/2 on $mux $procmux$3377.
    dead port 2/2 on $mux $procmux$3380.
    dead port 2/2 on $mux $procmux$2697.
    dead port 1/2 on $mux $procmux$2700.
    dead port 1/2 on $mux $procmux$2703.
    dead port 2/2 on $mux $procmux$2705.
    dead port 2/2 on $mux $procmux$6879.
    dead port 2/2 on $mux $procmux$6881.
    dead port 2/2 on $mux $procmux$6884.
    dead port 2/2 on $mux $procmux$2708.
    dead port 2/2 on $mux $procmux$2121.
    dead port 1/2 on $mux $procmux$2124.
    dead port 1/2 on $mux $procmux$2127.
    dead port 2/2 on $mux $procmux$2129.
    dead port 2/2 on $mux $procmux$4932.
    dead port 1/2 on $mux $procmux$4935.
    dead port 2/2 on $mux $procmux$4937.
    dead port 2/2 on $mux $procmux$4940.
    dead port 2/2 on $mux $procmux$2132.
    dead port 2/2 on $mux $procmux$3417.
    dead port 1/2 on $mux $procmux$3420.
    dead port 1/2 on $mux $procmux$3423.
    dead port 2/2 on $mux $procmux$3425.
    dead port 2/2 on $mux $procmux$3428.
    dead port 2/2 on $mux $procmux$6921.
    dead port 2/2 on $mux $procmux$6923.
    dead port 2/2 on $mux $procmux$6926.
    dead port 2/2 on $mux $procmux$2745.
    dead port 1/2 on $mux $procmux$2748.
    dead port 2/2 on $mux $procmux$4977.
    dead port 1/2 on $mux $procmux$4980.
    dead port 2/2 on $mux $procmux$4982.
    dead port 2/2 on $mux $procmux$4985.
    dead port 1/2 on $mux $procmux$2751.
    dead port 2/2 on $mux $procmux$2753.
    dead port 2/2 on $mux $procmux$2756.
    dead port 2/2 on $mux $procmux$6963.
    dead port 2/2 on $mux $procmux$6965.
    dead port 2/2 on $mux $procmux$6968.
    dead port 2/2 on $mux $procmux$3465.
    dead port 1/2 on $mux $procmux$3468.
    dead port 1/2 on $mux $procmux$3471.
    dead port 2/2 on $mux $procmux$3473.
    dead port 2/2 on $mux $procmux$3476.
    dead port 2/2 on $mux $procmux$2169.
    dead port 1/2 on $mux $procmux$2172.
    dead port 1/2 on $mux $procmux$2175.
    dead port 2/2 on $mux $procmux$2177.
    dead port 2/2 on $mux $procmux$2180.
    dead port 2/2 on $mux $procmux$5022.
    dead port 1/2 on $mux $procmux$5025.
    dead port 2/2 on $mux $procmux$5027.
    dead port 2/2 on $mux $procmux$5030.
    dead port 2/2 on $mux $procmux$7005.
    dead port 2/2 on $mux $procmux$7007.
    dead port 2/2 on $mux $procmux$7010.
    dead port 2/2 on $mux $procmux$2793.
    dead port 1/2 on $mux $procmux$2796.
    dead port 1/2 on $mux $procmux$2799.
    dead port 2/2 on $mux $procmux$2801.
    dead port 2/2 on $mux $procmux$2804.
    dead port 2/2 on $mux $procmux$3513.
    dead port 1/2 on $mux $procmux$3516.
    dead port 1/2 on $mux $procmux$3519.
    dead port 2/2 on $mux $procmux$3521.
    dead port 2/2 on $mux $procmux$3524.
    dead port 2/2 on $mux $procmux$5067.
    dead port 1/2 on $mux $procmux$5070.
    dead port 2/2 on $mux $procmux$5072.
    dead port 2/2 on $mux $procmux$5075.
    dead port 2/2 on $mux $procmux$7047.
    dead port 2/2 on $mux $procmux$7049.
    dead port 2/2 on $mux $procmux$7052.
    dead port 2/2 on $mux $procmux$2217.
    dead port 1/2 on $mux $procmux$2220.
    dead port 1/2 on $mux $procmux$2223.
    dead port 2/2 on $mux $procmux$2225.
    dead port 2/2 on $mux $procmux$2228.
    dead port 2/2 on $mux $procmux$2841.
    dead port 1/2 on $mux $procmux$2844.
    dead port 2/2 on $mux $procmux$3561.
    dead port 1/2 on $mux $procmux$3564.
    dead port 1/2 on $mux $procmux$3567.
    dead port 2/2 on $mux $procmux$3569.
    dead port 2/2 on $mux $procmux$3572.
    dead port 2/2 on $mux $procmux$5112.
    dead port 1/2 on $mux $procmux$5115.
    dead port 2/2 on $mux $procmux$7089.
    dead port 2/2 on $mux $procmux$7091.
    dead port 2/2 on $mux $procmux$7094.
    dead port 2/2 on $mux $procmux$5117.
    dead port 2/2 on $mux $procmux$5120.
    dead port 2/2 on $mux $procmux$7131.
    dead port 2/2 on $mux $procmux$7133.
    dead port 2/2 on $mux $procmux$7136.
    dead port 2/2 on $mux $procmux$5157.
    dead port 1/2 on $mux $procmux$5160.
    dead port 2/2 on $mux $procmux$5162.
    dead port 2/2 on $mux $procmux$5165.
    dead port 1/2 on $mux $procmux$3627.
    dead port 1/2 on $mux $procmux$3630.
    dead port 2/2 on $mux $procmux$3632.
    dead port 2/2 on $mux $procmux$3635.
    dead port 1/2 on $mux $procmux$3642.
    dead port 1/2 on $mux $procmux$3645.
    dead port 2/2 on $mux $procmux$3647.
    dead port 2/2 on $mux $procmux$3650.
    dead port 1/2 on $mux $procmux$3657.
    dead port 1/2 on $mux $procmux$3660.
    dead port 2/2 on $mux $procmux$3662.
    dead port 2/2 on $mux $procmux$3665.
    dead port 1/2 on $mux $procmux$3672.
    dead port 1/2 on $mux $procmux$3675.
    dead port 2/2 on $mux $procmux$3677.
    dead port 2/2 on $mux $procmux$3680.
    dead port 2/2 on $mux $procmux$7173.
    dead port 2/2 on $mux $procmux$7175.
    dead port 2/2 on $mux $procmux$7178.
    dead port 1/2 on $mux $procmux$3687.
    dead port 1/2 on $mux $procmux$3690.
    dead port 2/2 on $mux $procmux$3692.
    dead port 2/2 on $mux $procmux$3695.
    dead port 1/2 on $mux $procmux$3702.
    dead port 1/2 on $mux $procmux$3705.
    dead port 2/2 on $mux $procmux$3707.
    dead port 2/2 on $mux $procmux$5202.
    dead port 1/2 on $mux $procmux$5205.
    dead port 2/2 on $mux $procmux$5207.
    dead port 2/2 on $mux $procmux$5210.
    dead port 2/2 on $mux $procmux$3710.
    dead port 1/2 on $mux $procmux$3717.
    dead port 1/2 on $mux $procmux$3720.
    dead port 2/2 on $mux $procmux$3722.
    dead port 2/2 on $mux $procmux$3725.
    dead port 1/2 on $mux $procmux$3732.
    dead port 1/2 on $mux $procmux$3735.
    dead port 2/2 on $mux $procmux$3737.
    dead port 2/2 on $mux $procmux$3740.
    dead port 1/2 on $mux $procmux$3747.
    dead port 1/2 on $mux $procmux$3750.
    dead port 2/2 on $mux $procmux$3752.
    dead port 2/2 on $mux $procmux$3755.
    dead port 1/2 on $mux $procmux$3762.
    dead port 1/2 on $mux $procmux$3765.
    dead port 2/2 on $mux $procmux$7215.
    dead port 2/2 on $mux $procmux$7217.
    dead port 2/2 on $mux $procmux$7220.
    dead port 2/2 on $mux $procmux$3767.
    dead port 2/2 on $mux $procmux$3770.
    dead port 1/2 on $mux $procmux$3777.
    dead port 1/2 on $mux $procmux$3780.
    dead port 2/2 on $mux $procmux$3782.
    dead port 2/2 on $mux $procmux$3785.
    dead port 1/2 on $mux $procmux$3792.
    dead port 1/2 on $mux $procmux$3795.
    dead port 2/2 on $mux $procmux$3797.
    dead port 2/2 on $mux $procmux$3800.
    dead port 2/2 on $mux $procmux$5247.
    dead port 1/2 on $mux $procmux$5250.
    dead port 2/2 on $mux $procmux$5252.
    dead port 2/2 on $mux $procmux$5255.
    dead port 1/2 on $mux $procmux$3807.
    dead port 1/2 on $mux $procmux$3810.
    dead port 2/2 on $mux $procmux$3812.
    dead port 2/2 on $mux $procmux$3815.
    dead port 1/2 on $mux $procmux$3822.
    dead port 1/2 on $mux $procmux$3825.
    dead port 2/2 on $mux $procmux$3827.
    dead port 2/2 on $mux $procmux$3830.
    dead port 1/2 on $mux $procmux$3837.
    dead port 1/2 on $mux $procmux$3840.
    dead port 2/2 on $mux $procmux$3842.
    dead port 2/2 on $mux $procmux$3845.
    dead port 2/2 on $mux $procmux$7257.
    dead port 2/2 on $mux $procmux$7259.
    dead port 2/2 on $mux $procmux$7262.
    dead port 1/2 on $mux $procmux$3852.
    dead port 1/2 on $mux $procmux$3855.
    dead port 2/2 on $mux $procmux$3857.
    dead port 2/2 on $mux $procmux$3860.
    dead port 1/2 on $mux $procmux$3867.
    dead port 1/2 on $mux $procmux$3870.
    dead port 2/2 on $mux $procmux$3872.
    dead port 2/2 on $mux $procmux$3875.
    dead port 1/2 on $mux $procmux$3882.
    dead port 1/2 on $mux $procmux$3885.
    dead port 2/2 on $mux $procmux$3887.
    dead port 2/2 on $mux $procmux$3890.
    dead port 1/2 on $mux $procmux$3897.
    dead port 1/2 on $mux $procmux$3900.
    dead port 2/2 on $mux $procmux$5292.
    dead port 1/2 on $mux $procmux$5295.
    dead port 2/2 on $mux $procmux$5297.
    dead port 2/2 on $mux $procmux$5300.
    dead port 2/2 on $mux $procmux$3902.
    dead port 2/2 on $mux $procmux$3905.
    dead port 1/2 on $mux $procmux$3912.
    dead port 1/2 on $mux $procmux$3915.
    dead port 2/2 on $mux $procmux$3917.
    dead port 2/2 on $mux $procmux$3920.
    dead port 1/2 on $mux $procmux$3927.
    dead port 2/2 on $mux $procmux$7299.
    dead port 2/2 on $mux $procmux$7301.
    dead port 2/2 on $mux $procmux$7304.
    dead port 1/2 on $mux $procmux$3930.
    dead port 2/2 on $mux $procmux$3932.
    dead port 2/2 on $mux $procmux$3935.
    dead port 1/2 on $mux $procmux$3942.
    dead port 1/2 on $mux $procmux$3945.
    dead port 2/2 on $mux $procmux$3947.
    dead port 2/2 on $mux $procmux$3950.
    dead port 1/2 on $mux $procmux$3957.
    dead port 1/2 on $mux $procmux$3960.
    dead port 2/2 on $mux $procmux$3962.
    dead port 2/2 on $mux $procmux$3965.
    dead port 1/2 on $mux $procmux$3972.
    dead port 1/2 on $mux $procmux$3975.
    dead port 2/2 on $mux $procmux$3977.
    dead port 2/2 on $mux $procmux$3980.
    dead port 1/2 on $mux $procmux$3987.
    dead port 1/2 on $mux $procmux$3990.
    dead port 2/2 on $mux $procmux$3992.
    dead port 2/2 on $mux $procmux$3995.
    dead port 2/2 on $mux $procmux$5337.
    dead port 1/2 on $mux $procmux$5340.
    dead port 2/2 on $mux $procmux$5342.
    dead port 2/2 on $mux $procmux$5345.
    dead port 1/2 on $mux $procmux$4002.
    dead port 1/2 on $mux $procmux$4005.
    dead port 2/2 on $mux $procmux$4007.
    dead port 2/2 on $mux $procmux$7341.
    dead port 2/2 on $mux $procmux$7343.
    dead port 2/2 on $mux $procmux$7346.
    dead port 2/2 on $mux $procmux$4010.
    dead port 1/2 on $mux $procmux$4017.
    dead port 1/2 on $mux $procmux$4020.
    dead port 2/2 on $mux $procmux$4022.
    dead port 2/2 on $mux $procmux$4025.
    dead port 1/2 on $mux $procmux$4032.
    dead port 1/2 on $mux $procmux$4035.
    dead port 2/2 on $mux $procmux$4037.
    dead port 2/2 on $mux $procmux$4040.
    dead port 1/2 on $mux $procmux$4047.
    dead port 1/2 on $mux $procmux$4050.
    dead port 2/2 on $mux $procmux$4052.
    dead port 2/2 on $mux $procmux$4055.
    dead port 1/2 on $mux $procmux$4062.
    dead port 1/2 on $mux $procmux$4065.
    dead port 2/2 on $mux $procmux$4067.
    dead port 2/2 on $mux $procmux$4070.
    dead port 1/2 on $mux $procmux$4077.
    dead port 1/2 on $mux $procmux$4080.
    dead port 2/2 on $mux $procmux$4082.
    dead port 2/2 on $mux $procmux$4085.
    dead port 1/2 on $mux $procmux$4092.
    dead port 2/2 on $mux $procmux$5382.
    dead port 1/2 on $mux $procmux$5385.
    dead port 2/2 on $mux $procmux$5387.
    dead port 2/2 on $mux $procmux$5390.
    dead port 2/2 on $mux $procmux$7383.
    dead port 2/2 on $mux $procmux$7385.
    dead port 2/2 on $mux $procmux$7388.
    dead port 1/2 on $mux $procmux$4095.
    dead port 2/2 on $mux $procmux$4097.
    dead port 2/2 on $mux $procmux$4100.
    dead port 1/2 on $mux $procmux$4107.
    dead port 1/2 on $mux $procmux$4110.
    dead port 2/2 on $mux $procmux$4112.
    dead port 2/2 on $mux $procmux$4115.
    dead port 1/2 on $mux $procmux$2847.
    dead port 2/2 on $mux $procmux$2849.
    dead port 2/2 on $mux $procmux$2852.
    dead port 1/2 on $mux $procmux$1291.
    dead port 2/2 on $mux $procmux$1294.
    dead port 2/2 on $mux $procmux$1300.
    dead port 2/2 on $mux $procmux$1306.
    dead port 1/2 on $mux $procmux$1312.
    dead port 2/2 on $mux $procmux$1315.
    dead port 1/2 on $mux $procmux$1321.
    dead port 2/2 on $mux $procmux$7425.
    dead port 2/2 on $mux $procmux$7427.
    dead port 2/2 on $mux $procmux$7430.
    dead port 2/2 on $mux $procmux$1324.
    dead port 2/2 on $mux $procmux$5427.
    dead port 1/2 on $mux $procmux$5430.
    dead port 2/2 on $mux $procmux$5432.
    dead port 2/2 on $mux $procmux$5435.
    dead port 1/2 on $mux $procmux$1331.
    dead port 2/2 on $mux $procmux$1333.
    dead port 2/2 on $mux $procmux$2265.
    dead port 1/2 on $mux $procmux$2268.
    dead port 1/2 on $mux $procmux$2271.
    dead port 2/2 on $mux $procmux$2273.
    dead port 2/2 on $mux $procmux$2276.
    dead port 2/2 on $mux $procmux$4347.
    dead port 1/2 on $mux $procmux$4350.
    dead port 2/2 on $mux $procmux$4352.
    dead port 2/2 on $mux $procmux$4355.
    dead port 2/2 on $mux $procmux$1336.
    dead port 1/2 on $mux $procmux$1343.
    dead port 2/2 on $mux $procmux$1345.
    dead port 2/2 on $mux $procmux$2889.
    dead port 1/2 on $mux $procmux$2892.
    dead port 1/2 on $mux $procmux$2895.
    dead port 2/2 on $mux $procmux$2897.
    dead port 2/2 on $mux $procmux$2900.
    dead port 2/2 on $mux $procmux$1348.
    dead port 2/2 on $mux $procmux$7467.
    dead port 2/2 on $mux $procmux$7469.
    dead port 2/2 on $mux $procmux$7472.
    dead port 1/2 on $mux $procmux$1355.
    dead port 2/2 on $mux $procmux$1357.
    dead port 2/2 on $mux $procmux$1360.
    dead port 2/2 on $mux $procmux$1366.
    dead port 2/2 on $mux $procmux$1369.
    dead port 2/2 on $mux $procmux$5472.
    dead port 1/2 on $mux $procmux$5475.
    dead port 2/2 on $mux $procmux$5477.
    dead port 2/2 on $mux $procmux$5480.
    dead port 2/2 on $mux $procmux$1375.
    dead port 2/2 on $mux $procmux$1378.
    dead port 2/2 on $mux $procmux$1384.
    dead port 2/2 on $mux $procmux$1387.
    dead port 2/2 on $mux $procmux$1393.
    dead port 2/2 on $mux $procmux$1399.
    dead port 2/2 on $mux $procmux$1405.
    dead port 2/2 on $mux $procmux$1412.
    dead port 2/2 on $mux $procmux$4392.
    dead port 1/2 on $mux $procmux$4395.
    dead port 2/2 on $mux $procmux$4397.
    dead port 2/2 on $mux $procmux$4400.
    dead port 1/2 on $mux $procmux$1415.
    dead port 1/2 on $mux $procmux$1418.
    dead port 2/2 on $mux $procmux$7509.
    dead port 2/2 on $mux $procmux$7511.
    dead port 2/2 on $mux $procmux$7514.
    dead port 1/2 on $mux $procmux$1421.
    dead port 1/2 on $mux $procmux$1424.
    dead port 1/2 on $mux $procmux$1426.
    dead port 1/2 on $mux $procmux$1429.
    dead port 2/2 on $mux $procmux$2313.
    dead port 1/2 on $mux $procmux$2316.
    dead port 1/2 on $mux $procmux$2319.
    dead port 2/2 on $mux $procmux$2321.
    dead port 2/2 on $mux $procmux$2937.
    dead port 1/2 on $mux $procmux$2940.
    dead port 1/2 on $mux $procmux$2943.
    dead port 2/2 on $mux $procmux$5517.
    dead port 1/2 on $mux $procmux$5520.
    dead port 2/2 on $mux $procmux$5522.
    dead port 2/2 on $mux $procmux$5525.
    dead port 2/2 on $mux $procmux$2945.
    dead port 2/2 on $mux $procmux$2948.
    dead port 2/2 on $mux $procmux$2324.
    dead port 2/2 on $mux $procmux$1432.
    dead port 1/2 on $mux $procmux$1439.
    dead port 1/2 on $mux $procmux$1442.
    dead port 1/2 on $mux $procmux$1445.
    dead port 1/2 on $mux $procmux$1448.
    dead port 1/2 on $mux $procmux$1450.
    dead port 1/2 on $mux $procmux$1453.
    dead port 2/2 on $mux $procmux$1456.
    dead port 1/2 on $mux $procmux$1463.
    dead port 2/2 on $mux $procmux$7551.
    dead port 2/2 on $mux $procmux$7553.
    dead port 2/2 on $mux $procmux$7556.
    dead port 1/2 on $mux $procmux$1466.
    dead port 1/2 on $mux $procmux$1469.
    dead port 1/2 on $mux $procmux$1472.
    dead port 2/2 on $mux $procmux$4437.
    dead port 1/2 on $mux $procmux$4440.
    dead port 2/2 on $mux $procmux$4442.
    dead port 2/2 on $mux $procmux$4445.
    dead port 1/2 on $mux $procmux$1474.
    dead port 1/2 on $mux $procmux$1477.
    dead port 2/2 on $mux $procmux$1480.
    dead port 2/2 on $mux $procmux$1487.
    dead port 1/2 on $mux $procmux$1490.
    dead port 1/2 on $mux $procmux$1493.
    dead port 1/2 on $mux $procmux$1496.
    dead port 2/2 on $mux $procmux$5562.
    dead port 1/2 on $mux $procmux$5565.
    dead port 2/2 on $mux $procmux$5567.
    dead port 2/2 on $mux $procmux$5570.
    dead port 1/2 on $mux $procmux$1498.
    dead port 1/2 on $mux $procmux$1501.
    dead port 2/2 on $mux $procmux$1504.
    dead port 2/2 on $mux $procmux$1511.
    dead port 1/2 on $mux $procmux$1514.
    dead port 1/2 on $mux $procmux$1517.
    dead port 1/2 on $mux $procmux$1520.
    dead port 2/2 on $mux $procmux$2985.
    dead port 1/2 on $mux $procmux$2988.
    dead port 1/2 on $mux $procmux$2991.
    dead port 2/2 on $mux $procmux$7593.
    dead port 2/2 on $mux $procmux$7595.
    dead port 2/2 on $mux $procmux$7598.
    dead port 2/2 on $mux $procmux$2993.
    dead port 2/2 on $mux $procmux$2996.
    dead port 1/2 on $mux $procmux$1522.
    dead port 1/2 on $mux $procmux$1525.
    dead port 2/2 on $mux $procmux$2361.
    dead port 1/2 on $mux $procmux$2364.
    dead port 1/2 on $mux $procmux$2367.
    dead port 2/2 on $mux $procmux$2369.
    dead port 2/2 on $mux $procmux$2372.
    dead port 2/2 on $mux $procmux$1528.
    dead port 2/2 on $mux $procmux$4482.
    dead port 1/2 on $mux $procmux$4485.
    dead port 2/2 on $mux $procmux$4487.
    dead port 2/2 on $mux $procmux$4490.
    dead port 1/2 on $mux $procmux$1535.
    dead port 1/2 on $mux $procmux$1538.
    dead port 1/2 on $mux $procmux$1541.
    dead port 2/2 on $mux $procmux$5607.
    dead port 1/2 on $mux $procmux$5610.
    dead port 2/2 on $mux $procmux$5612.
    dead port 2/2 on $mux $procmux$5615.
    dead port 1/2 on $mux $procmux$1543.
    dead port 1/2 on $mux $procmux$1546.
    dead port 2/2 on $mux $procmux$1549.
    dead port 1/2 on $mux $procmux$1556.
    dead port 1/2 on $mux $procmux$1559.
    dead port 2/2 on $mux $procmux$7635.
    dead port 2/2 on $mux $procmux$7637.
    dead port 2/2 on $mux $procmux$7640.
    dead port 1/2 on $mux $procmux$1562.
    dead port 1/2 on $mux $procmux$1564.
    dead port 1/2 on $mux $procmux$1567.
    dead port 2/2 on $mux $procmux$1570.
    dead port 1/2 on $mux $procmux$1577.
    dead port 1/2 on $mux $procmux$1580.
    dead port 1/2 on $mux $procmux$1583.
    dead port 1/2 on $mux $procmux$1585.
    dead port 1/2 on $mux $procmux$1588.
    dead port 2/2 on $mux $procmux$1591.
    dead port 1/2 on $mux $procmux$1598.
    dead port 2/2 on $mux $procmux$3033.
    dead port 1/2 on $mux $procmux$3036.
    dead port 1/2 on $mux $procmux$3039.
    dead port 2/2 on $mux $procmux$3041.
    dead port 2/2 on $mux $procmux$3044.
    dead port 1/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1604.
    dead port 1/2 on $mux $procmux$1606.
    dead port 1/2 on $mux $procmux$1609.
    dead port 2/2 on $mux $procmux$4527.
    dead port 1/2 on $mux $procmux$4530.
    dead port 2/2 on $mux $procmux$4532.
    dead port 2/2 on $mux $procmux$5652.
    dead port 1/2 on $mux $procmux$5655.
    dead port 2/2 on $mux $procmux$5657.
    dead port 2/2 on $mux $procmux$5660.
    dead port 2/2 on $mux $procmux$4535.
    dead port 2/2 on $mux $procmux$7677.
    dead port 2/2 on $mux $procmux$7679.
    dead port 2/2 on $mux $procmux$7682.
    dead port 2/2 on $mux $procmux$1612.
    dead port 1/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1622.
    dead port 2/2 on $mux $procmux$2409.
    dead port 1/2 on $mux $procmux$2412.
    dead port 1/2 on $mux $procmux$2415.
    dead port 2/2 on $mux $procmux$2417.
    dead port 2/2 on $mux $procmux$2420.
    dead port 1/2 on $mux $procmux$1624.
    dead port 1/2 on $mux $procmux$1627.
    dead port 2/2 on $mux $procmux$1630.
    dead port 1/2 on $mux $procmux$1637.
    dead port 1/2 on $mux $procmux$1640.
    dead port 1/2 on $mux $procmux$1642.
    dead port 1/2 on $mux $procmux$1645.
    dead port 2/2 on $mux $procmux$1648.
    dead port 1/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1658.
    dead port 1/2 on $mux $procmux$1660.
    dead port 1/2 on $mux $procmux$1663.
    dead port 2/2 on $mux $procmux$1666.
    dead port 1/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1676.
    dead port 2/2 on $mux $procmux$3081.
    dead port 1/2 on $mux $procmux$3084.
    dead port 2/2 on $mux $procmux$5697.
    dead port 2/2 on $mux $procmux$7719.
    dead port 2/2 on $mux $procmux$7721.
    dead port 2/2 on $mux $procmux$7724.
    dead port 1/2 on $mux $procmux$5700.
    dead port 2/2 on $mux $procmux$5702.
    dead port 2/2 on $mux $procmux$5705.
    dead port 1/2 on $mux $procmux$3087.
    dead port 2/2 on $mux $procmux$3089.
    dead port 2/2 on $mux $procmux$4572.
    dead port 1/2 on $mux $procmux$4575.
    dead port 2/2 on $mux $procmux$4577.
    dead port 2/2 on $mux $procmux$4580.
    dead port 2/2 on $mux $procmux$3092.
    dead port 1/2 on $mux $procmux$1678.
    dead port 1/2 on $mux $procmux$1681.
    dead port 2/2 on $mux $procmux$1684.
    dead port 1/2 on $mux $procmux$1691.
    dead port 1/2 on $mux $procmux$1693.
    dead port 1/2 on $mux $procmux$1696.
    dead port 2/2 on $mux $procmux$1699.
    dead port 1/2 on $mux $procmux$1706.
    dead port 1/2 on $mux $procmux$1708.
    dead port 1/2 on $mux $procmux$1711.
    dead port 2/2 on $mux $procmux$1714.
    dead port 2/2 on $mux $procmux$2457.
    dead port 1/2 on $mux $procmux$2460.
    dead port 1/2 on $mux $procmux$2463.
    dead port 2/2 on $mux $procmux$2465.
    dead port 2/2 on $mux $procmux$2468.
    dead port 2/2 on $mux $procmux$7761.
    dead port 2/2 on $mux $procmux$7763.
    dead port 2/2 on $mux $procmux$7766.
    dead port 1/2 on $mux $procmux$1721.
    dead port 1/2 on $mux $procmux$1723.
    dead port 1/2 on $mux $procmux$1726.
    dead port 2/2 on $mux $procmux$5742.
    dead port 1/2 on $mux $procmux$5745.
    dead port 2/2 on $mux $procmux$5747.
    dead port 2/2 on $mux $procmux$5750.
    dead port 2/2 on $mux $procmux$7803.
    dead port 2/2 on $mux $procmux$7805.
    dead port 2/2 on $mux $procmux$7808.
    dead port 2/2 on $mux $procmux$5787.
    dead port 1/2 on $mux $procmux$5790.
    dead port 2/2 on $mux $procmux$5792.
    dead port 2/2 on $mux $procmux$5795.
    dead port 2/2 on $mux $procmux$1729.
    dead port 1/2 on $mux $procmux$1736.
    dead port 1/2 on $mux $procmux$1738.
    dead port 1/2 on $mux $procmux$1741.
    dead port 2/2 on $mux $procmux$1744.
    dead port 2/2 on $mux $procmux$4617.
    dead port 1/2 on $mux $procmux$4620.
    dead port 2/2 on $mux $procmux$4622.
    dead port 2/2 on $mux $procmux$4625.
    dead port 1/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1753.
    dead port 2/2 on $mux $procmux$3129.
    dead port 1/2 on $mux $procmux$3132.
    dead port 1/2 on $mux $procmux$3135.
    dead port 2/2 on $mux $procmux$3137.
    dead port 2/2 on $mux $procmux$7845.
    dead port 2/2 on $mux $procmux$7847.
    dead port 2/2 on $mux $procmux$7850.
    dead port 2/2 on $mux $procmux$3140.
    dead port 1/2 on $mux $procmux$1756.
    dead port 2/2 on $mux $procmux$1759.
    dead port 2/2 on $mux $procmux$1780.
    dead port 1/2 on $mux $procmux$1782.
    dead port 1/2 on $mux $procmux$1785.
    dead port 2/2 on $mux $procmux$1788.
    dead port 2/2 on $mux $procmux$1795.
    dead port 1/2 on $mux $procmux$1797.
    dead port 1/2 on $mux $procmux$1800.
    dead port 2/2 on $mux $procmux$1803.
    dead port 2/2 on $mux $procmux$1809.
    dead port 1/2 on $mux $procmux$5847.
    dead port 2/2 on $mux $procmux$5849.
    dead port 2/2 on $mux $procmux$5852.
    dead port 1/2 on $mux $procmux$5859.
    dead port 2/2 on $mux $procmux$5861.
    dead port 2/2 on $mux $procmux$5864.
    dead port 1/2 on $mux $procmux$5871.
    dead port 2/2 on $mux $procmux$5873.
    dead port 2/2 on $mux $procmux$5876.
    dead port 1/2 on $mux $procmux$5883.
    dead port 2/2 on $mux $procmux$7887.
    dead port 2/2 on $mux $procmux$7889.
    dead port 2/2 on $mux $procmux$7892.
    dead port 2/2 on $mux $procmux$5885.
    dead port 2/2 on $mux $procmux$5888.
    dead port 1/2 on $mux $procmux$5895.
    dead port 2/2 on $mux $procmux$5897.
    dead port 2/2 on $mux $procmux$5900.
    dead port 1/2 on $mux $procmux$5907.
    dead port 2/2 on $mux $procmux$5909.
    dead port 2/2 on $mux $procmux$5912.
    dead port 1/2 on $mux $procmux$5919.
    dead port 2/2 on $mux $procmux$5921.
    dead port 2/2 on $mux $procmux$5924.
    dead port 1/2 on $mux $procmux$5931.
    dead port 2/2 on $mux $procmux$5933.
    dead port 2/2 on $mux $procmux$5936.
    dead port 1/2 on $mux $procmux$5943.
    dead port 2/2 on $mux $procmux$5945.
    dead port 2/2 on $mux $procmux$5948.
    dead port 1/2 on $mux $procmux$5955.
    dead port 2/2 on $mux $procmux$5957.
    dead port 2/2 on $mux $procmux$5960.
    dead port 1/2 on $mux $procmux$5967.
    dead port 2/2 on $mux $procmux$5969.
    dead port 2/2 on $mux $procmux$5972.
    dead port 1/2 on $mux $procmux$5979.
    dead port 2/2 on $mux $procmux$7929.
    dead port 2/2 on $mux $procmux$7931.
    dead port 2/2 on $mux $procmux$7934.
    dead port 2/2 on $mux $procmux$5981.
    dead port 2/2 on $mux $procmux$5984.
    dead port 1/2 on $mux $procmux$5991.
    dead port 2/2 on $mux $procmux$5993.
    dead port 2/2 on $mux $procmux$5996.
    dead port 1/2 on $mux $procmux$6003.
    dead port 2/2 on $mux $procmux$6005.
    dead port 2/2 on $mux $procmux$6008.
    dead port 1/2 on $mux $procmux$6015.
    dead port 2/2 on $mux $procmux$6017.
    dead port 2/2 on $mux $procmux$6020.
    dead port 1/2 on $mux $procmux$6027.
    dead port 2/2 on $mux $procmux$6029.
    dead port 2/2 on $mux $procmux$6032.
    dead port 1/2 on $mux $procmux$6039.
    dead port 2/2 on $mux $procmux$6041.
    dead port 2/2 on $mux $procmux$6044.
    dead port 1/2 on $mux $procmux$6051.
    dead port 2/2 on $mux $procmux$6053.
    dead port 2/2 on $mux $procmux$6056.
    dead port 1/2 on $mux $procmux$6063.
    dead port 2/2 on $mux $procmux$6065.
    dead port 2/2 on $mux $procmux$6068.
    dead port 1/2 on $mux $procmux$6075.
    dead port 2/2 on $mux $procmux$7982.
    dead port 2/2 on $mux $procmux$7985.
    dead port 2/2 on $mux $procmux$7991.
    dead port 2/2 on $mux $procmux$7994.
    dead port 2/2 on $mux $procmux$8000.
    dead port 2/2 on $mux $procmux$8003.
    dead port 2/2 on $mux $procmux$8009.
    dead port 2/2 on $mux $procmux$8012.
    dead port 2/2 on $mux $procmux$8018.
    dead port 2/2 on $mux $procmux$8021.
    dead port 2/2 on $mux $procmux$8027.
    dead port 2/2 on $mux $procmux$8030.
    dead port 2/2 on $mux $procmux$8036.
    dead port 2/2 on $mux $procmux$8039.
    dead port 2/2 on $mux $procmux$8045.
    dead port 2/2 on $mux $procmux$8048.
    dead port 2/2 on $mux $procmux$8054.
    dead port 2/2 on $mux $procmux$8057.
    dead port 2/2 on $mux $procmux$8063.
    dead port 2/2 on $mux $procmux$8066.
    dead port 2/2 on $mux $procmux$8072.
    dead port 2/2 on $mux $procmux$8075.
    dead port 2/2 on $mux $procmux$8081.
    dead port 2/2 on $mux $procmux$8084.
    dead port 2/2 on $mux $procmux$8090.
    dead port 2/2 on $mux $procmux$8093.
    dead port 2/2 on $mux $procmux$8099.
    dead port 2/2 on $mux $procmux$8102.
    dead port 2/2 on $mux $procmux$8108.
    dead port 2/2 on $mux $procmux$8111.
    dead port 2/2 on $mux $procmux$8117.
    dead port 2/2 on $mux $procmux$8120.
    dead port 2/2 on $mux $procmux$8126.
    dead port 2/2 on $mux $procmux$8129.
    dead port 2/2 on $mux $procmux$8135.
    dead port 2/2 on $mux $procmux$8138.
    dead port 2/2 on $mux $procmux$8144.
    dead port 2/2 on $mux $procmux$8147.
    dead port 2/2 on $mux $procmux$8153.
    dead port 2/2 on $mux $procmux$8156.
    dead port 2/2 on $mux $procmux$8162.
    dead port 2/2 on $mux $procmux$8165.
    dead port 2/2 on $mux $procmux$8171.
    dead port 2/2 on $mux $procmux$8174.
    dead port 2/2 on $mux $procmux$8180.
    dead port 2/2 on $mux $procmux$8183.
    dead port 2/2 on $mux $procmux$8189.
    dead port 2/2 on $mux $procmux$8192.
    dead port 2/2 on $mux $procmux$8198.
    dead port 2/2 on $mux $procmux$8201.
    dead port 2/2 on $mux $procmux$8207.
    dead port 2/2 on $mux $procmux$8210.
    dead port 2/2 on $mux $procmux$8216.
    dead port 2/2 on $mux $procmux$8219.
    dead port 2/2 on $mux $procmux$8225.
    dead port 2/2 on $mux $procmux$8228.
    dead port 2/2 on $mux $procmux$8234.
    dead port 2/2 on $mux $procmux$8237.
    dead port 2/2 on $mux $procmux$8243.
    dead port 2/2 on $mux $procmux$8246.
    dead port 2/2 on $mux $procmux$8252.
    dead port 2/2 on $mux $procmux$8255.
    dead port 2/2 on $mux $procmux$8261.
    dead port 2/2 on $mux $procmux$8264.
    dead port 2/2 on $mux $procmux$8270.
    dead port 2/2 on $mux $procmux$8273.
    dead port 2/2 on $mux $procmux$8279.
    dead port 2/2 on $mux $procmux$8282.
    dead port 2/2 on $mux $procmux$8288.
    dead port 2/2 on $mux $procmux$8291.
    dead port 2/2 on $mux $procmux$8333.
    dead port 2/2 on $mux $procmux$8336.
    dead port 2/2 on $mux $procmux$8468.
    dead port 2/2 on $mux $procmux$8471.
    dead port 2/2 on $mux $procmux$8477.
    dead port 2/2 on $mux $procmux$8480.
    dead port 2/2 on $mux $procmux$8486.
    dead port 2/2 on $mux $procmux$8489.
    dead port 2/2 on $mux $procmux$8495.
    dead port 2/2 on $mux $procmux$8498.
    dead port 2/2 on $mux $procmux$8504.
    dead port 2/2 on $mux $procmux$8507.
    dead port 2/2 on $mux $procmux$8513.
    dead port 2/2 on $mux $procmux$8516.
    dead port 2/2 on $mux $procmux$8522.
    dead port 2/2 on $mux $procmux$8525.
    dead port 2/2 on $mux $procmux$8531.
    dead port 2/2 on $mux $procmux$8534.
    dead port 2/2 on $mux $procmux$8540.
    dead port 2/2 on $mux $procmux$8543.
    dead port 2/2 on $mux $procmux$8549.
    dead port 2/2 on $mux $procmux$8552.
    dead port 2/2 on $mux $procmux$8558.
    dead port 2/2 on $mux $procmux$8561.
    dead port 2/2 on $mux $procmux$8567.
    dead port 2/2 on $mux $procmux$8570.
    dead port 2/2 on $mux $procmux$8576.
    dead port 2/2 on $mux $procmux$8579.
    dead port 2/2 on $mux $procmux$8585.
    dead port 2/2 on $mux $procmux$8588.
    dead port 2/2 on $mux $procmux$8594.
    dead port 2/2 on $mux $procmux$8597.
    dead port 2/2 on $mux $procmux$8603.
    dead port 2/2 on $mux $procmux$8606.
    dead port 2/2 on $mux $procmux$8612.
    dead port 2/2 on $mux $procmux$8615.
    dead port 2/2 on $mux $procmux$8621.
    dead port 2/2 on $mux $procmux$8624.
    dead port 2/2 on $mux $procmux$8630.
    dead port 2/2 on $mux $procmux$8633.
    dead port 2/2 on $mux $procmux$8639.
    dead port 2/2 on $mux $procmux$8642.
    dead port 2/2 on $mux $procmux$8648.
    dead port 2/2 on $mux $procmux$8651.
    dead port 2/2 on $mux $procmux$8657.
    dead port 2/2 on $mux $procmux$8660.
    dead port 2/2 on $mux $procmux$8666.
    dead port 2/2 on $mux $procmux$8669.
    dead port 2/2 on $mux $procmux$8675.
    dead port 2/2 on $mux $procmux$8678.
    dead port 2/2 on $mux $procmux$8684.
    dead port 2/2 on $mux $procmux$8687.
    dead port 2/2 on $mux $procmux$8693.
    dead port 2/2 on $mux $procmux$8696.
    dead port 2/2 on $mux $procmux$8702.
    dead port 2/2 on $mux $procmux$8705.
    dead port 2/2 on $mux $procmux$8711.
    dead port 2/2 on $mux $procmux$8714.
    dead port 2/2 on $mux $procmux$8720.
    dead port 2/2 on $mux $procmux$8723.
    dead port 2/2 on $mux $procmux$8729.
    dead port 2/2 on $mux $procmux$8732.
    dead port 2/2 on $mux $procmux$8738.
    dead port 2/2 on $mux $procmux$8741.
    dead port 2/2 on $mux $procmux$8747.
    dead port 2/2 on $mux $procmux$8750.
    dead port 2/2 on $mux $procmux$8987.
    dead port 2/2 on $mux $procmux$8993.
    dead port 2/2 on $mux $procmux$8999.
    dead port 2/2 on $mux $procmux$9005.
    dead port 2/2 on $mux $procmux$9011.
    dead port 2/2 on $mux $procmux$9017.
    dead port 2/2 on $mux $procmux$9023.
    dead port 2/2 on $mux $procmux$9029.
    dead port 2/2 on $mux $procmux$9035.
    dead port 2/2 on $mux $procmux$9041.
    dead port 2/2 on $mux $procmux$9047.
    dead port 2/2 on $mux $procmux$9053.
    dead port 2/2 on $mux $procmux$9059.
    dead port 2/2 on $mux $procmux$9065.
    dead port 2/2 on $mux $procmux$9071.
    dead port 2/2 on $mux $procmux$9077.
    dead port 2/2 on $mux $procmux$9083.
    dead port 2/2 on $mux $procmux$9089.
    dead port 2/2 on $mux $procmux$9095.
    dead port 2/2 on $mux $procmux$9101.
    dead port 2/2 on $mux $procmux$9107.
    dead port 2/2 on $mux $procmux$9113.
    dead port 2/2 on $mux $procmux$9119.
    dead port 2/2 on $mux $procmux$9125.
    dead port 2/2 on $mux $procmux$9131.
    dead port 2/2 on $mux $procmux$9137.
    dead port 2/2 on $mux $procmux$9143.
    dead port 2/2 on $mux $procmux$9149.
    dead port 2/2 on $mux $procmux$9155.
    dead port 2/2 on $mux $procmux$9161.
    dead port 2/2 on $mux $procmux$9167.
    dead port 2/2 on $mux $procmux$9173.
    dead port 2/2 on $mux $procmux$9179.
    dead port 2/2 on $mux $procmux$9185.
    dead port 2/2 on $mux $procmux$9191.
    dead port 2/2 on $mux $procmux$9197.
    dead port 2/2 on $mux $procmux$9203.
    dead port 2/2 on $mux $procmux$9209.
    dead port 2/2 on $mux $procmux$9215.
    dead port 2/2 on $mux $procmux$9221.
    dead port 2/2 on $mux $procmux$9227.
    dead port 2/2 on $mux $procmux$9233.
    dead port 2/2 on $mux $procmux$9239.
    dead port 2/2 on $mux $procmux$9245.
    dead port 2/2 on $mux $procmux$9251.
    dead port 2/2 on $mux $procmux$9257.
    dead port 2/2 on $mux $procmux$9263.
    dead port 2/2 on $mux $procmux$9269.
    dead port 2/2 on $mux $procmux$9275.
    dead port 2/2 on $mux $procmux$9281.
    dead port 2/2 on $mux $procmux$9287.
    dead port 2/2 on $mux $procmux$9293.
    dead port 2/2 on $mux $procmux$9299.
    dead port 2/2 on $mux $procmux$9305.
    dead port 2/2 on $mux $procmux$9311.
    dead port 2/2 on $mux $procmux$9317.
    dead port 2/2 on $mux $procmux$9323.
    dead port 2/2 on $mux $procmux$9329.
    dead port 2/2 on $mux $procmux$9335.
    dead port 2/2 on $mux $procmux$9341.
    dead port 2/2 on $mux $procmux$9347.
    dead port 2/2 on $mux $procmux$9353.
    dead port 2/2 on $mux $procmux$9359.
    dead port 2/2 on $mux $procmux$9365.
    dead port 2/2 on $mux $procmux$9479.
    dead port 2/2 on $mux $procmux$9485.
    dead port 2/2 on $mux $procmux$9491.
    dead port 2/2 on $mux $procmux$9509.
    dead port 2/2 on $mux $procmux$9527.
    dead port 2/2 on $mux $procmux$9533.
    dead port 2/2 on $mux $procmux$9539.
    dead port 2/2 on $mux $procmux$9545.
    dead port 2/2 on $mux $procmux$6077.
Removed 1053 multiplexer ports.
<suppressed ~150 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$7224: { $procmux$6568_CMP $auto$opt_reduce.cc:134:opt_mux$10446 }
    New ctrl vector for $pmux cell $procmux$5664: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10448 }
    New ctrl vector for $pmux cell $procmux$7686: { $procmux$6579_CMP $auto$opt_reduce.cc:134:opt_mux$10450 }
    New ctrl vector for $pmux cell $procmux$4539: { $procmux$2045_CMP $auto$opt_reduce.cc:134:opt_mux$10452 }
    New ctrl vector for $pmux cell $procmux$4764: { $procmux$2050_CMP $auto$opt_reduce.cc:134:opt_mux$10454 }
    New ctrl vector for $pmux cell $procmux$2424: { $procmux$2048_CMP $auto$opt_reduce.cc:134:opt_mux$10456 }
    New ctrl vector for $pmux cell $procmux$6888: { $procmux$6560_CMP $auto$opt_reduce.cc:134:opt_mux$10458 }
    New ctrl vector for $pmux cell $procmux$5259: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10460 }
    New ctrl vector for $pmux cell $procmux$2712: { $procmux$2054_CMP $auto$opt_reduce.cc:134:opt_mux$10462 }
    New ctrl vector for $pmux cell $procmux$3192: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10464 }
    New ctrl vector for $pmux cell $procmux$6720: { $procmux$6556_CMP $auto$opt_reduce.cc:134:opt_mux$10466 }
    New ctrl vector for $pmux cell $procmux$4944: { $procmux$2054_CMP $auto$opt_reduce.cc:134:opt_mux$10468 }
    New ctrl vector for $pmux cell $procmux$7266: { $procmux$6569_CMP $auto$opt_reduce.cc:134:opt_mux$10470 }
    New ctrl vector for $pmux cell $procmux$7728: { $procmux$6580_CMP $auto$opt_reduce.cc:134:opt_mux$10472 }
    New ctrl vector for $pmux cell $procmux$2136: { $procmux$2042_CMP $auto$opt_reduce.cc:134:opt_mux$10474 }
    New ctrl vector for $pmux cell $procmux$5709: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10476 }
    New ctrl vector for $pmux cell $procmux$6636: { $procmux$6554_CMP $auto$opt_reduce.cc:134:opt_mux$10478 }
    New ctrl vector for $pmux cell $procmux$4584: { $procmux$2046_CMP $auto$opt_reduce.cc:134:opt_mux$10480 }
    New ctrl vector for $pmux cell $procmux$3096: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10482 }
    New ctrl vector for $pmux cell $procmux$3432: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10484 }
    New ctrl vector for $pmux cell $procmux$5304: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10486 }
    New ctrl vector for $pmux cell $procmux$6930: { $procmux$6561_CMP $auto$opt_reduce.cc:134:opt_mux$10488 }
    New ctrl vector for $pmux cell $procmux$7770: { $procmux$6581_CMP $auto$opt_reduce.cc:134:opt_mux$10490 }
    New ctrl vector for $pmux cell $procmux$2472: { $procmux$2049_CMP $auto$opt_reduce.cc:134:opt_mux$10492 }
    New ctrl vector for $pmux cell $procmux$7308: { $procmux$6570_CMP $auto$opt_reduce.cc:134:opt_mux$10494 }
    New ctrl vector for $pmux cell $procmux$7812: { $procmux$6582_CMP $auto$opt_reduce.cc:134:opt_mux$10496 }
    New ctrl vector for $pmux cell $procmux$2040: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10498 }
    New ctrl vector for $pmux cell $procmux$4989: { $procmux$2055_CMP $auto$opt_reduce.cc:134:opt_mux$10500 }
    New ctrl vector for $pmux cell $procmux$4629: { $procmux$2047_CMP $auto$opt_reduce.cc:134:opt_mux$10502 }
    New ctrl vector for $pmux cell $procmux$2760: { $procmux$2055_CMP $auto$opt_reduce.cc:134:opt_mux$10504 }
    New ctrl vector for $pmux cell $procmux$7854: { $procmux$6583_CMP $auto$opt_reduce.cc:134:opt_mux$10506 }
    New ctrl vector for $pmux cell $procmux$3144: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10508 }
    New ctrl vector for $pmux cell $procmux$5349: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10510 }
    New ctrl vector for $pmux cell $procmux$3288: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10512 }
    New ctrl vector for $pmux cell $procmux$6972: { $procmux$6562_CMP $auto$opt_reduce.cc:134:opt_mux$10514 }
    New ctrl vector for $pmux cell $procmux$7350: { $procmux$6571_CMP $auto$opt_reduce.cc:134:opt_mux$10516 }
    New ctrl vector for $pmux cell $procmux$2616: { $procmux$2052_CMP $auto$opt_reduce.cc:134:opt_mux$10518 }
    New ctrl vector for $pmux cell $procmux$3480: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10520 }
    New ctrl vector for $pmux cell $procmux$4809: { $procmux$2051_CMP $auto$opt_reduce.cc:134:opt_mux$10522 }
    New ctrl vector for $pmux cell $procmux$2184: { $procmux$2043_CMP $auto$opt_reduce.cc:134:opt_mux$10524 }
    New ctrl vector for $pmux cell $procmux$4719: { $procmux$2049_CMP $auto$opt_reduce.cc:134:opt_mux$10526 }
    New ctrl vector for $pmux cell $procmux$6762: { $procmux$6557_CMP $auto$opt_reduce.cc:134:opt_mux$10528 }
    New ctrl vector for $pmux cell $procmux$5034: { $procmux$2056_CMP $auto$opt_reduce.cc:134:opt_mux$10530 }
    New ctrl vector for $pmux cell $procmux$7392: { $procmux$6572_CMP $auto$opt_reduce.cc:134:opt_mux$10532 }
    New ctrl vector for $pmux cell $procmux$5394: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10534 }
    New ctrl vector for $pmux cell $procmux$7014: { $procmux$6563_CMP $auto$opt_reduce.cc:134:opt_mux$10536 }
    New ctrl vector for $pmux cell $procmux$4314: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10538 }
    New ctrl vector for $pmux cell $procmux$2856: { $procmux$2057_CMP $auto$opt_reduce.cc:134:opt_mux$10540 }
    New ctrl vector for $pmux cell $procmux$2808: { $procmux$2056_CMP $auto$opt_reduce.cc:134:opt_mux$10542 }
    New ctrl vector for $pmux cell $procmux$7434: { $procmux$6573_CMP $auto$opt_reduce.cc:134:opt_mux$10544 }
    New ctrl vector for $pmux cell $procmux$3528: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10546 }
    New ctrl vector for $pmux cell $procmux$5439: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10548 }
    New ctrl vector for $pmux cell $procmux$2280: { $procmux$2045_CMP $auto$opt_reduce.cc:134:opt_mux$10550 }
    New ctrl vector for $pmux cell $procmux$4359: { $auto$opt_reduce.cc:134:opt_mux$10552 $procmux$2041_CMP }
    New ctrl vector for $pmux cell $procmux$5079: { $procmux$2057_CMP $auto$opt_reduce.cc:134:opt_mux$10554 }
    New ctrl vector for $pmux cell $procmux$7056: { $procmux$6564_CMP $auto$opt_reduce.cc:134:opt_mux$10556 }
    New ctrl vector for $pmux cell $procmux$2904: { $procmux$2058_CMP $auto$opt_reduce.cc:134:opt_mux$10558 }
    New ctrl vector for $pmux cell $procmux$7476: { $procmux$6574_CMP $auto$opt_reduce.cc:134:opt_mux$10560 }
    New ctrl vector for $pmux cell $procmux$2232: { $procmux$2044_CMP $auto$opt_reduce.cc:134:opt_mux$10562 }
    New ctrl vector for $pmux cell $procmux$5484: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10564 }
    New ctrl vector for $pmux cell $procmux$6594: { $auto$opt_reduce.cc:134:opt_mux$10566 $procmux$6553_CMP }
    New ctrl vector for $pmux cell $procmux$4404: { $procmux$2042_CMP $auto$opt_reduce.cc:134:opt_mux$10568 }
    New ctrl vector for $pmux cell $procmux$3336: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10570 }
    New ctrl vector for $pmux cell $procmux$7518: { $procmux$6575_CMP $auto$opt_reduce.cc:134:opt_mux$10572 }
    New ctrl vector for $pmux cell $procmux$6804: { $procmux$6558_CMP $auto$opt_reduce.cc:134:opt_mux$10574 }
    New ctrl vector for $pmux cell $procmux$7098: { $procmux$6565_CMP $auto$opt_reduce.cc:134:opt_mux$10576 }
    New ctrl vector for $pmux cell $procmux$5124: { $procmux$2058_CMP $auto$opt_reduce.cc:134:opt_mux$10578 }
    New ctrl vector for $pmux cell $procmux$5529: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10580 }
    New ctrl vector for $pmux cell $procmux$2952: { $procmux$2059_CMP $auto$opt_reduce.cc:134:opt_mux$10582 }
    New ctrl vector for $pmux cell $procmux$2328: { $procmux$2046_CMP $auto$opt_reduce.cc:134:opt_mux$10584 }
    New ctrl vector for $pmux cell $procmux$7560: { $procmux$6576_CMP $auto$opt_reduce.cc:134:opt_mux$10586 }
    New ctrl vector for $pmux cell $procmux$4449: { $procmux$2043_CMP $auto$opt_reduce.cc:134:opt_mux$10588 }
    New ctrl vector for $pmux cell $procmux$4854: { $procmux$2052_CMP $auto$opt_reduce.cc:134:opt_mux$10590 }
    New ctrl vector for $pmux cell $procmux$7140: { $procmux$6566_CMP $auto$opt_reduce.cc:134:opt_mux$10592 }
    New ctrl vector for $pmux cell $procmux$6678: { $procmux$6555_CMP $auto$opt_reduce.cc:134:opt_mux$10594 }
    New ctrl vector for $pmux cell $procmux$5574: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10596 }
    New ctrl vector for $pmux cell $procmux$5169: { $procmux$2059_CMP $auto$opt_reduce.cc:134:opt_mux$10598 }
    New ctrl vector for $pmux cell $procmux$2568: { $procmux$2051_CMP $auto$opt_reduce.cc:134:opt_mux$10600 }
    New ctrl vector for $pmux cell $procmux$2664: { $procmux$2053_CMP $auto$opt_reduce.cc:134:opt_mux$10602 }
    New ctrl vector for $pmux cell $procmux$7602: { $procmux$6577_CMP $auto$opt_reduce.cc:134:opt_mux$10604 }
    New ctrl vector for $pmux cell $procmux$3000: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10606 }
    New ctrl vector for $pmux cell $procmux$6552: { $procmux$6584_CMP $auto$opt_reduce.cc:134:opt_mux$10608 }
    New ctrl vector for $pmux cell $procmux$2088: { $auto$opt_reduce.cc:134:opt_mux$10610 $procmux$2041_CMP }
    New ctrl vector for $pmux cell $procmux$2376: { $procmux$2047_CMP $auto$opt_reduce.cc:134:opt_mux$10612 }
    New ctrl vector for $pmux cell $procmux$4494: { $procmux$2044_CMP $auto$opt_reduce.cc:134:opt_mux$10614 }
    New ctrl vector for $pmux cell $procmux$7182: { $procmux$6567_CMP $auto$opt_reduce.cc:134:opt_mux$10616 }
    New ctrl vector for $pmux cell $procmux$3240: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10618 }
    New ctrl vector for $pmux cell $procmux$5619: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10620 }
    New ctrl vector for $pmux cell $procmux$6846: { $procmux$6559_CMP $auto$opt_reduce.cc:134:opt_mux$10622 }
    New ctrl vector for $pmux cell $procmux$5214: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10624 }
    New ctrl vector for $pmux cell $procmux$7644: { $procmux$6578_CMP $auto$opt_reduce.cc:134:opt_mux$10626 }
    New ctrl vector for $pmux cell $procmux$4674: { $procmux$2048_CMP $auto$opt_reduce.cc:134:opt_mux$10628 }
    New ctrl vector for $pmux cell $procmux$2520: { $procmux$2050_CMP $auto$opt_reduce.cc:134:opt_mux$10630 }
    New ctrl vector for $pmux cell $procmux$4899: { $procmux$2053_CMP $auto$opt_reduce.cc:134:opt_mux$10632 }
    New ctrl vector for $pmux cell $procmux$3384: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10634 }
    New ctrl vector for $pmux cell $procmux$3048: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10636 }
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 96 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~36 debug messages>
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~12 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Removed a total of 51 cells.

4.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 4253 unused wires.
<suppressed ~3 debug messages>

4.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.8. Rerunning OPT passes. (Maybe there is more to do..)

4.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

4.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 0 changes.

4.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.14. Finished OPT passes. (There is nothing left to do.)

4.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$17 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$47 ($le).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$53 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$56 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$57 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$59 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$60 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$62 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:166$66 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:173$76 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:174$78 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:174$79 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:181$81 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:190$84 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:191$86 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:191$87 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:198$89 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9932_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9982_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$eq$cva6_lsu_model.v:72$396 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$482 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$482 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$483 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$483 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$518 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$518 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$ne$cva6_lsu_model.v:193$551 ($ne).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$554 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$554 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$563 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$563 ($add).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$682 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$696 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$838 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$849 ($mux).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1002_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1098_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1108_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$679 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$693 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$836 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$847 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$676 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$690 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$684 ($pmux).
Removed top 20 bits (of 32) from wire cva6_lsu_model.$4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$379_DATA[31:0]$510.
Removed top 20 bits (of 32) from wire cva6_lsu_model.$5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$382_DATA[31:0]$537.
Removed top 30 bits (of 32) from wire cva6_lsu_model.$add$cva6_lsu_model.v:148$482_Y.
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$237 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$274 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$301 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$316 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$319 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$331 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$332 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$333 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$334 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$336 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$337 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$338 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$348 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$348 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$349 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$350 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$351 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$357 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$357 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$360 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$360 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$367 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$367 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2057_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2058_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2059_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2060_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2061_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2062_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2063_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2064_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2065_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2066_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2067_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2068_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2069_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2070_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2071_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3593_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3594_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3595_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3596_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3597_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3598_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3599_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3600_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3601_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3602_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3603_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3604_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3605_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3606_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3607_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5771_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5772_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5773_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5774_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5775_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5776_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5777_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5778_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5779_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5780_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5781_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5782_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5783_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5784_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5785_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6569_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6570_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6571_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6572_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6573_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6574_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6575_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6576_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6577_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6578_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6579_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6580_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6581_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6582_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6583_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$348_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$316_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$333_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$338_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$336_Y.

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

4.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.11.4. Finished fast OPT passes.

4.12. Printing statistics.

=== cva6_lsu_formal ===

   Number of wires:                142
   Number of wire bits:           5230
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                132
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         6
     $dff                           20
     $eq                            21
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      6
     $logic_or                       3
     $lt                             2
     $mux                           44
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_model ===

   Number of wires:                186
   Number of wire bits:           1426
   Number of public wires:          40
   Number of public wire bits:     346
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $add                            5
     $adff                          28
     $eq                            12
     $ge                             2
     $logic_and                      2
     $logic_not                      5
     $logic_or                       4
     $mux                          104
     $ne                             4
     $not                            2
     $pmux                           5
     $reduce_bool                    2

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_model                  1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_model                1

   Number of wires:               2096
   Number of wire bits:          42754
   Number of public wires:         308
   Number of public wire bits:   13768
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2028
     $add                           21
     $adff                          56
     $and                            2
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         6
     $dff                          176
     $eq                           321
     $ge                             4
     $gt                             1
     $le                             1
     $logic_and                     24
     $logic_not                     36
     $logic_or                      11
     $lt                             6
     $mux                          982
     $ne                             8
     $not                            4
     $or                             2
     $pmux                         208
     $reduce_bool                    8
     $reduce_or                    128
     $shl                            2
     $shr                            4
     $sub                            6
     $xor                            2

4.13. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

5. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

6. Executing ASYNC2SYNC pass.
Replacing cva6_lsu_model.$procdff$10164 ($adff): ARST=\rst_ni, D=$0\instr_i_pc[7:0], Q=\instr_i_pc
Replacing cva6_lsu_model.$procdff$10165 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_lsu_model.$procdff$10166 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_lsu_model.$procdff$10167 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_lsu_model.$procdff$10168 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue[31:0], Q=\load_instr_i_queue
Replacing cva6_lsu_model.$procdff$10169 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue_pc[7:0], Q=\load_instr_i_queue_pc
Replacing cva6_lsu_model.$procdff$10170 ($adff): ARST=\rst_ni, D=$0\load_instr_queue_state[1:0], Q=\load_instr_queue_state
Replacing cva6_lsu_model.$procdff$10183 ($adff): ARST=\rst_ni, D=$0\ready_flag[0:0], Q=\ready_flag
Replacing cva6_lsu_model.$procdff$10184 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_lsu_model.$procdff$10185 ($adff): ARST=\rst_ni, D=\inner_instr_i, Q=\x_inner_instr_i
Replacing cva6_lsu_model.$procdff$10186 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10187 ($adff): ARST=\rst_ni, D=\inner_instr_valid_i, Q=\x_inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10188 ($adff): ARST=\rst_ni, D=\is_load_i, Q=\inner_is_load_i
Replacing cva6_lsu_model.$procdff$10189 ($adff): ARST=\rst_ni, D=\inner_is_load_i, Q=\x_inner_is_load_i
Replacing cva6_lsu_model.$procdff$10190 ($adff): ARST=\rst_ni, D=\store_mem_resp_i, Q=\inner_store_mem_resp_i
Replacing cva6_lsu_model.$procdff$10192 ($adff): ARST=\rst_ni, D=\load_mem_resp_i, Q=\inner_load_mem_resp_i
Replacing cva6_lsu_model.$procdff$10197 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_lsu_model.$procdff$10198 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_lsu_model.$procdff$10199 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_lsu_model.$procdff$10200 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_lsu_model.$procdff$10201 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[0][7:0], Q=\store_instr_i_queue_pc[0]
Replacing cva6_lsu_model.$procdff$10202 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[1][7:0], Q=\store_instr_i_queue_pc[1]
Replacing cva6_lsu_model.$procdff$10203 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[2][7:0], Q=\store_instr_i_queue_pc[2]
Replacing cva6_lsu_model.$procdff$10204 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[3][7:0], Q=\store_instr_i_queue_pc[3]
Replacing cva6_lsu_model.$procdff$10205 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_lsu_model.$procdff$10206 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_lsu_model.$procdff$10207 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_lsu_model.$procdff$10208 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

8. Executing SETUNDEF pass (replace undef values with defined constants).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

9.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$10442 ($dff) from module cva6_lsu_formal (D = $procmux$10157_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11021 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$10441 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$10422 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11024 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$10421 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11026 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$10420 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11028 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:198$89_Y, Q = \pc_2).
Adding SRST signal on $procdff$10419 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11032 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:181$81_Y, Q = \pc_1).
Adding SRST signal on $procdff$10418 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11036 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$10417 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11038 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:171$1_DATA[31:0]$74, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$10416 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11040 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$10415 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11042 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:188$2_DATA[31:0]$82, Q = \tb_io_instr_i_2).
Adding EN signal on $procdff$10398 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$10397 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$10396 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$10395 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$10394 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$10393 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$10392 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$10391 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$10390 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$10389 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$10388 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$10387 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$10386 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$10385 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$10384 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$10383 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$10382 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$10381 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$10380 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$10378 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$10377 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$10376 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$10375 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$10374 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$10373 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$10372 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$10371 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$10370 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$10369 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$10368 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$10367 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$10366 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$10365 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$10364 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$10363 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$10362 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$10361 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$10360 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$10359 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$10358 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$10357 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$10356 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$10355 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$10354 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$10353 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$10352 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$10351 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$10350 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$10349 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$10348 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$10347 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$10346 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$10345 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$10344 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$10343 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$10342 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$10341 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$10340 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$10339 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$10338 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$10337 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$10336 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$10335 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$10315 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11556 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$10314 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$10314 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11579 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$367_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$11574 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$10313 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$10312 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$10310 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$10309 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11587 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$10308 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11593 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$10307 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11599 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$10306 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$10305 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11618 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$10304 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11626 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$10303 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11636 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$10302 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11644 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$10301 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11652 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 253 unused cells and 253 unused wires.
<suppressed ~256 debug messages>

9.5. Rerunning OPT passes. (Removed registers in this run.)

9.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>

9.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

9.8. Executing OPT_DFF pass (perform DFF optimizations).

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

9.10. Finished fast OPT passes.

10. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

11.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

12. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 6 unique messages, 11 total
End of script. Logfile hash: 747e04920f, CPU: user 8.08s system 0.11s, MEM: 92.32 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 26% 3x check (2 sec), 18% 8x opt_clean (1 sec), ...
