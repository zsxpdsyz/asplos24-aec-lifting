
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cva6_lsu_model.v
Parsing formal SystemVerilog input from `cva6_lsu_model.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_model'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

4.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

4.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

4.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_model'.
Generating RTLIL representation for module `\cva6_lsu_model'.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_model.v:0: Warning: System task `$display' outside initial block is unsupported.
Warning: Replacing memory \store_instr_queue_state with list of registers. See cva6_lsu_model.v:98
Warning: Replacing memory \store_instr_i_queue_pc with list of registers. See cva6_lsu_model.v:94
Warning: Replacing memory \store_instr_i_queue with list of registers. See cva6_lsu_model.v:90

4.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

4.2.6. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removing unused module `$abstract\cva6_lsu_model'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 3 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
Cleaned up 1 empty switch.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$581 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$581 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$576 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$576 in module cva6_lsu_model.
Removed 1 dead cases from process $proc$cva6_lsu_model.v:0$571 in module cva6_lsu_model.
Marked 1 switch rules as full_case in process $proc$cva6_lsu_model.v:0$571 in module cva6_lsu_model.
Removed 9 dead cases from process $proc$cva6_lsu_model.v:85$404 in module cva6_lsu_model.
Marked 27 switch rules as full_case in process $proc$cva6_lsu_model.v:85$404 in module cva6_lsu_model.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$137 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$137 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$29 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$29 in module cva6_lsu_formal.
Removed a total of 22 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 248 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
  Set init value: $formal$cva6_lsu_formal.v:206$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
  Set init value: $formal$cva6_lsu_formal.v:171$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
  Set init value: $formal$cva6_lsu_formal.v:169$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
  Set init value: $formal$cva6_lsu_formal.v:162$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
  Set init value: $formal$cva6_lsu_formal.v:161$6_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
  Set init value: $formal$cva6_lsu_formal.v:160$5_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
  Set init value: $formal$cva6_lsu_formal.v:159$4_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$105'.
  Set init value: $formal$cva6_lsu_formal.v:156$3_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$581'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$381_DATA[7:0]$583
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$576'.
     1/1: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$397_DATA[1:0]$580
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$571'.
     1/1: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$396_DATA[31:0]$575
Creating decoders for process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
     1/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_DATA[1:0]$569
     2/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_ADDR[1:0]$568
     3/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_DATA[1:0]$566
     4/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_DATA[1:0]$565
     5/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_ADDR[1:0]$564
     6/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_DATA[1:0]$563
     7/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_ADDR[1:0]$562
     8/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_DATA[1:0]$560
     9/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_ADDR[1:0]$559
    10/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_DATA[1:0]$557
    11/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_DATA[1:0]$556
    12/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_ADDR[1:0]$555
    13/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_DATA[1:0]$554
    14/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_ADDR[1:0]$553
    15/153: $5$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_DATA[7:0]$546
    16/153: $5$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_DATA[1:0]$545
    17/153: $5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA[31:0]$544
    18/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_DATA[7:0]$543
    19/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_ADDR[1:0]$542
    20/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_DATA[1:0]$541
    21/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_ADDR[1:0]$540
    22/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA[31:0]$539
    23/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_ADDR[1:0]$538
    24/153: $4$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$380[1:0]$537
    25/153: $4$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$379[31:0]$536
    26/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_DATA[7:0]$533
    27/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_ADDR[1:0]$532
    28/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_DATA[1:0]$531
    29/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_ADDR[1:0]$530
    30/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA[31:0]$529
    31/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_ADDR[1:0]$528
    32/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$380[1:0]$527
    33/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$379[31:0]$526
    34/153: $4$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_DATA[7:0]$519
    35/153: $4$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_DATA[1:0]$518
    36/153: $4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_DATA[31:0]$517
    37/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_DATA[7:0]$516
    38/153: $3$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_ADDR[1:0]$515
    39/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_DATA[1:0]$514
    40/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_ADDR[1:0]$513
    41/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_DATA[31:0]$512
    42/153: $3$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_ADDR[1:0]$511
    43/153: $3$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$378[1:0]$510
    44/153: $3$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$377[31:0]$509
    45/153: $5\instr_i_pc[7:0]
    46/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_DATA[7:0]$501
    47/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_ADDR[1:0]$500
    48/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_DATA[1:0]$499
    49/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_ADDR[1:0]$498
    50/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_DATA[31:0]$497
    51/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_ADDR[1:0]$496
    52/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$378[1:0]$493
    53/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$377[31:0]$492
    54/153: $4\instr_i_pc[7:0]
    55/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_DATA[7:0]$507
    56/153: $2$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_ADDR[1:0]$506
    57/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_DATA[1:0]$505
    58/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_ADDR[1:0]$504
    59/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA[31:0]$503
    60/153: $2$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_ADDR[1:0]$502
    61/153: $2$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$380[1:0]$495
    62/153: $2$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$379[31:0]$494
    63/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_DATA[1:0]$488
    64/153: $3$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_ADDR[1:0]$487
    65/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_DATA[7:0]$486
    66/153: $3$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_ADDR[1:0]$485
    67/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_DATA[31:0]$484
    68/153: $3$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_ADDR[1:0]$483
    69/153: $3\instr_i_pc[7:0]
    70/153: $3$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_DATA[1:0]$481
    71/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_DATA[1:0]$480
    72/153: $2$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_ADDR[1:0]$479
    73/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_DATA[7:0]$478
    74/153: $2$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_ADDR[1:0]$477
    75/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_DATA[31:0]$476
    76/153: $2$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_ADDR[1:0]$475
    77/153: $2\instr_i_pc[7:0]
    78/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_DATA[1:0]$474
    79/153: $2$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_ADDR[1:0]$473
    80/153: $0\inner_load_mem_resp_i[0:0]
    81/153: $0\x_inner_store_mem_resp_i[0:0]
    82/153: $0\inner_store_mem_resp_i[0:0]
    83/153: $0\x_inner_instr_i[31:0]
    84/153: $0\inner_instr_i[31:0]
    85/153: $0\x_inner_instr_valid_i[0:0]
    86/153: $0\inner_instr_valid_i[0:0]
    87/153: $0\x_inner_is_load_i[0:0]
    88/153: $0\inner_is_load_i[0:0]
    89/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_DATA[1:0]$469
    90/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_ADDR[1:0]$468
    91/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_DATA[1:0]$467
    92/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_ADDR[1:0]$466
    93/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_DATA[1:0]$465
    94/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_ADDR[1:0]$464
    95/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_DATA[1:0]$463
    96/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_ADDR[1:0]$462
    97/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_DATA[7:0]$461
    98/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_ADDR[1:0]$460
    99/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_DATA[1:0]$459
   100/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_ADDR[1:0]$458
   101/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA[31:0]$457
   102/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_ADDR[1:0]$456
   103/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_DATA[7:0]$455
   104/153: $1$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_ADDR[1:0]$454
   105/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_DATA[1:0]$453
   106/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_ADDR[1:0]$452
   107/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_DATA[31:0]$451
   108/153: $1$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_ADDR[1:0]$450
   109/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$380[1:0]$441
   110/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$379[31:0]$440
   111/153: $1$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$378[1:0]$439
   112/153: $1$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$377[31:0]$438
   113/153: $1\instr_i_pc[7:0]
   114/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_DATA[1:0]$449
   115/153: $1$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_ADDR[1:0]$448
   116/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_DATA[7:0]$447
   117/153: $1$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_ADDR[1:0]$446
   118/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_DATA[31:0]$445
   119/153: $1$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_ADDR[1:0]$444
   120/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_DATA[1:0]$443
   121/153: $1$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_ADDR[1:0]$442
   122/153: $0\CLK_CYCLE[31:0]
   123/153: $0\store_instr_queue_state[3][1:0]
   124/153: $0\store_instr_queue_state[2][1:0]
   125/153: $0\store_instr_queue_state[1][1:0]
   126/153: $0\store_instr_queue_state[0][1:0]
   127/153: $0\store_instr_i_queue_pc[3][7:0]
   128/153: $0\store_instr_i_queue_pc[2][7:0]
   129/153: $0\store_instr_i_queue_pc[1][7:0]
   130/153: $0\store_instr_i_queue_pc[0][7:0]
   131/153: $0\store_instr_i_queue[3][31:0]
   132/153: $0\store_instr_i_queue[2][31:0]
   133/153: $0\store_instr_i_queue[1][31:0]
   134/153: $0\store_instr_i_queue[0][31:0]
   135/153: $0\ready_flag[0:0]
   136/153: $0\store_instr_queue_state_flatten_3[1:0]
   137/153: $0\store_instr_queue_state_flatten_2[1:0]
   138/153: $0\store_instr_queue_state_flatten_1[1:0]
   139/153: $0\store_instr_queue_state_flatten_0[1:0]
   140/153: $0\store_instr_i_queue_flatten_3_pc[7:0]
   141/153: $0\store_instr_i_queue_flatten_3[31:0]
   142/153: $0\store_instr_i_queue_flatten_2_pc[7:0]
   143/153: $0\store_instr_i_queue_flatten_2[31:0]
   144/153: $0\store_instr_i_queue_flatten_1_pc[7:0]
   145/153: $0\store_instr_i_queue_flatten_1[31:0]
   146/153: $0\store_instr_i_queue_flatten_0_pc[7:0]
   147/153: $0\store_instr_i_queue_flatten_0[31:0]
   148/153: $0\load_instr_queue_state[1:0]
   149/153: $0\load_instr_i_queue_pc[7:0]
   150/153: $0\load_instr_i_queue[31:0]
   151/153: $0\queue_serve_ptr[1:0]
   152/153: $0\queue_commit_ptr[1:0]
   153/153: $0\queue_store_ptr[1:0]
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA[31:0]$322
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_ADDR[4:0]$320
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_DATA[31:0]$321
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$127.$result[31:0]$311
   126/587: $5\sra$func$cva6_processor_shim.v:100$128.$result[31:0]$315
   127/587: $5\sra$func$cva6_processor_shim.v:100$128.shamt[4:0]$317
   128/587: $5\sra$func$cva6_processor_shim.v:100$128.d[63:0]$316
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$127.alu_fun[2:0]$314
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$127.imm_data[31:0]$313
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$127.reg_data[31:0]$312
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA[31:0]$319
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_ADDR[4:0]$318
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$126.$result[31:0]$309
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$126.inst[31:0]$310
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_DATA[31:0]$307
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_DATA[31:0]$305
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_ADDR[4:0]$297
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_DATA[31:0]$298
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_DATA[31:0]$300
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_ADDR[4:0]$299
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_DATA[31:0]$296
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_ADDR[4:0]$295
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$124.$result[31:0]$282
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$124.inst[31:0]$283
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_DATA[31:0]$304
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_ADDR[4:0]$303
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA[31:0]$302
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_ADDR[4:0]$301
   218/587: $4\sra$func$cva6_processor_shim.v:100$128.shamt[4:0]$294
   219/587: $4\sra$func$cva6_processor_shim.v:100$128.d[63:0]$293
   220/587: $4\sra$func$cva6_processor_shim.v:100$128.$result[31:0]$292
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$127.alu_fun[2:0]$291
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$127.imm_data[31:0]$290
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$127.reg_data[31:0]$289
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$127.$result[31:0]$288
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$126.inst[31:0]$287
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$126.$result[31:0]$286
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$125.instr[31:0]$285
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$125.$result[0:0]$284
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_DATA[31:0]$280
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_DATA[31:0]$278
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_ADDR[4:0]$264
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_DATA[31:0]$265
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_DATA[31:0]$267
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_ADDR[4:0]$266
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_DATA[31:0]$263
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_ADDR[4:0]$262
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$122.$result[31:0]$245
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$122.inst[31:0]$246
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_DATA[31:0]$277
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_ADDR[4:0]$276
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA[31:0]$275
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_ADDR[4:0]$274
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_DATA[31:0]$273
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_ADDR[4:0]$272
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_DATA[31:0]$271
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_ADDR[4:0]$270
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_DATA[31:0]$269
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_ADDR[4:0]$268
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$128.shamt[4:0]$261
   350/587: $3\sra$func$cva6_processor_shim.v:100$128.d[63:0]$260
   351/587: $3\sra$func$cva6_processor_shim.v:100$128.$result[31:0]$259
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$127.alu_fun[2:0]$258
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$127.imm_data[31:0]$257
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$127.reg_data[31:0]$256
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$127.$result[31:0]$255
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$126.inst[31:0]$254
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$126.$result[31:0]$253
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$125.instr[31:0]$252
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$125.$result[0:0]$251
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$124.inst[31:0]$250
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$124.$result[31:0]$249
   362/587: $3\is_load$func$cva6_processor_shim.v:232$123.instr[31:0]$248
   363/587: $3\is_load$func$cva6_processor_shim.v:232$123.$result[0:0]$247
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_DATA[31:0]$243
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_ADDR[4:0]$242
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA[31:0]$241
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_ADDR[4:0]$240
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_DATA[31:0]$239
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_ADDR[4:0]$238
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_DATA[31:0]$237
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_ADDR[4:0]$236
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_DATA[31:0]$235
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_ADDR[4:0]$234
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_DATA[31:0]$233
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_ADDR[4:0]$232
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_DATA[31:0]$231
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_ADDR[4:0]$230
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_DATA[31:0]$229
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_ADDR[4:0]$228
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$128.shamt[4:0]$227
   445/587: $2\sra$func$cva6_processor_shim.v:100$128.d[63:0]$226
   446/587: $2\sra$func$cva6_processor_shim.v:100$128.$result[31:0]$225
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$127.alu_fun[2:0]$224
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$127.imm_data[31:0]$223
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$127.reg_data[31:0]$222
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$127.$result[31:0]$221
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$126.inst[31:0]$220
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$126.$result[31:0]$219
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$125.instr[31:0]$218
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$125.$result[0:0]$217
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$124.inst[31:0]$216
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$124.$result[31:0]$215
   457/587: $2\is_load$func$cva6_processor_shim.v:232$123.instr[31:0]$214
   458/587: $2\is_load$func$cva6_processor_shim.v:232$123.$result[0:0]$213
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$122.inst[31:0]$212
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$122.$result[31:0]$211
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$121.$result[0:0]$209
   466/587: $2\is_store$func$cva6_processor_shim.v:226$121.instr[31:0]$210
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_DATA[31:0]$208
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_ADDR[4:0]$207
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA[31:0]$206
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_ADDR[4:0]$205
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_DATA[31:0]$204
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_ADDR[4:0]$203
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_DATA[31:0]$202
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_ADDR[4:0]$201
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_DATA[31:0]$200
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_ADDR[4:0]$199
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_DATA[31:0]$198
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_ADDR[4:0]$197
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_DATA[31:0]$196
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_ADDR[4:0]$195
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_DATA[31:0]$194
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_ADDR[4:0]$193
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$128.shamt[4:0]$192
   570/587: $1\sra$func$cva6_processor_shim.v:100$128.d[63:0]$191
   571/587: $1\sra$func$cva6_processor_shim.v:100$128.$result[31:0]$190
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$127.alu_fun[2:0]$189
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$127.imm_data[31:0]$188
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$127.reg_data[31:0]$187
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$127.$result[31:0]$186
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$126.inst[31:0]$185
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$126.$result[31:0]$184
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$125.instr[31:0]$183
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$125.$result[0:0]$182
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$124.inst[31:0]$181
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$124.$result[31:0]$180
   582/587: $1\is_load$func$cva6_processor_shim.v:232$123.instr[31:0]$179
   583/587: $1\is_load$func$cva6_processor_shim.v:232$123.$result[0:0]$178
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$122.inst[31:0]$177
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$122.$result[31:0]$176
   586/587: $1\is_store$func$cva6_processor_shim.v:226$121.instr[31:0]$175
   587/587: $1\is_store$func$cva6_processor_shim.v:226$121.$result[0:0]$174
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$105'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
     1/50: $4\local_ready_2[0:0]
     2/50: $3\tb_io_instr_valid_i_2[0:0]
     3/50: $3\pc_2[31:0]
     4/50: $3\local_ready_2[0:0]
     5/50: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$86
     6/50: $4\local_ready_1[0:0]
     7/50: $3\tb_io_instr_valid_i_1[0:0]
     8/50: $3\pc_1[31:0]
     9/50: $3\local_ready_1[0:0]
    10/50: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$78
    11/50: $2\local_ready_2[0:0]
    12/50: $2\pc_2[31:0]
    13/50: $2\tb_io_instr_valid_i_2[0:0]
    14/50: $2\tb_io_instr_i_2[31:0]
    15/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$75
    16/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_ADDR[1:0]$74
    17/50: $2\local_ready_1[0:0]
    18/50: $2\pc_1[31:0]
    19/50: $2\tb_io_instr_valid_i_1[0:0]
    20/50: $2\tb_io_instr_i_1[31:0]
    21/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$73
    22/50: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_ADDR[1:0]$72
    23/50: $1\local_ready_2[0:0]
    24/50: $1\local_ready_1[0:0]
    25/50: $1\tb_io_instr_i_2[31:0]
    26/50: $1\tb_io_instr_i_1[31:0]
    27/50: $1\tb_io_instr_valid_i_2[0:0]
    28/50: $1\tb_io_instr_valid_i_1[0:0]
    29/50: $1\pc_2[31:0]
    30/50: $1\pc_1[31:0]
    31/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$55
    32/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_ADDR[1:0]$54
    33/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$53
    34/50: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_ADDR[1:0]$52
    35/50: $0$formal$cva6_lsu_formal.v:156$3_EN[0:0]$35
    36/50: $0$formal$cva6_lsu_formal.v:156$3_CHECK[0:0]$34
    37/50: $0$formal$cva6_lsu_formal.v:159$4_EN[0:0]$37
    38/50: $0$formal$cva6_lsu_formal.v:159$4_CHECK[0:0]$36
    39/50: $0$formal$cva6_lsu_formal.v:160$5_EN[0:0]$39
    40/50: $0$formal$cva6_lsu_formal.v:160$5_CHECK[0:0]$38
    41/50: $0$formal$cva6_lsu_formal.v:161$6_EN[0:0]$41
    42/50: $0$formal$cva6_lsu_formal.v:161$6_CHECK[0:0]$40
    43/50: $0$formal$cva6_lsu_formal.v:162$7_EN[0:0]$43
    44/50: $0$formal$cva6_lsu_formal.v:162$7_CHECK[0:0]$42
    45/50: $0$formal$cva6_lsu_formal.v:169$8_EN[0:0]$45
    46/50: $0$formal$cva6_lsu_formal.v:169$8_CHECK[0:0]$44
    47/50: $0$formal$cva6_lsu_formal.v:171$9_EN[0:0]$47
    48/50: $0$formal$cva6_lsu_formal.v:171$9_CHECK[0:0]$46
    49/50: $0$formal$cva6_lsu_formal.v:206$10_EN[0:0]$49
    50/50: $0$formal$cva6_lsu_formal.v:206$10_CHECK[0:0]$48
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:69$381_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$581'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:70$376' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$576'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$397_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$576'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:70$397_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$576'.
No latch inferred for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:68$375' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$571'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$396_ADDR' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$571'.
No latch inferred for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:68$396_DATA' from process `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$571'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cva6_lsu_model.\CLK_CYCLE' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10176' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\instr_i_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10177' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_store_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10178' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_commit_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10179' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\queue_serve_ptr' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10180' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10181' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_i_queue_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10182' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\load_instr_queue_state' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10183' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10184' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_0_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10185' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10186' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_1_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10187' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10188' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_2_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10189' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10190' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_flatten_3_pc' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10191' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_0' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10192' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_1' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10193' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_2' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10194' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state_flatten_3' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10195' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\ready_flag' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10196' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10197' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10198' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10199' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_instr_valid_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10200' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10201' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_is_load_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10202' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10203' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\x_inner_store_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10204' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\inner_load_mem_resp_i' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10205' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:159$377' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10206' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:161$378' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10207' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_i_queue$cva6_lsu_model.v:183$379' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10208' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2bits$\store_instr_queue_state$cva6_lsu_model.v:185$380' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10209' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10210' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10211' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10212' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10213' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10214' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10215' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10216' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_i_queue_pc[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10217' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[0]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10218' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[1]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10219' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[2]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10220' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.\store_instr_queue_state[3]' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10221' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10222' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:142$382_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10223' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10224' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue$cva6_lsu_model.v:145$383_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10225' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10226' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_i_queue_pc$cva6_lsu_model.v:146$384_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10227' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10228' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:147$385_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10229' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10230' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10231' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10232' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:161$387_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10233' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10234' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:160$388_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10235' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10236' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10237' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10238' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:185$390_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10239' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10240' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_i_queue_pc$cva6_lsu_model.v:184$391_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10241' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10242' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:193$392_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10243' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10244' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:196$393_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10245' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10246' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_rd$\store_instr_queue_state$cva6_lsu_model.v:202$394_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10247' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_ADDR' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10248' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_model.$mem2reg_wr$\store_instr_queue_state$cva6_lsu_model.v:205$395_DATA' using process `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
  created $adff cell `$procdff$10249' with positive edge clock and negative level reset.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10250' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10251' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10252' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10253' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10254' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10255' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10256' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10257' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10258' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10259' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10260' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10261' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10262' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10263' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10264' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10265' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10266' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10267' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10268' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10269' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10270' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10271' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10272' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10273' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10274' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10275' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10276' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10277' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10278' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10279' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10280' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10281' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10282' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10283' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10284' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10285' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10286' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10287' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10288' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10289' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10290' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10291' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10292' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10293' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10294' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10295' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10296' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10297' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10298' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10299' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10300' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10301' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10302' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10303' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10304' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10305' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10306' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10307' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10308' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10309' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10310' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10311' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10312' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10313' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10314' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10315' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10316' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10317' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10318' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10319' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10320' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10321' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10322' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10323' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10324' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10325' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10326' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10327' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10328' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$121.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10329' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$121.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10330' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$122.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10331' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$122.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10332' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$123.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10333' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$123.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10334' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$124.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10335' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$124.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10336' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$125.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10337' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$125.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10338' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$126.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10339' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$126.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10340' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$127.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10341' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$127.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10342' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$127.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10343' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$127.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10344' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$128.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10345' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$128.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10346' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$128.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10347' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10348' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10349' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10350' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10351' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10352' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10353' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10354' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10355' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10356' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10357' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10358' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10359' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10360' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10361' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10362' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10363' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10364' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10365' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10366' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10367' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10368' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10369' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10370' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10371' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10372' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10373' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10374' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10375' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10376' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10377' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10378' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10379' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10380' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10381' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10382' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10383' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10384' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10385' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10386' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10387' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10388' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10389' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10390' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10391' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10392' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10393' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10394' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10395' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10396' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10397' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10398' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10399' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10400' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10401' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10402' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10403' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10404' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10405' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10406' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10407' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10408' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10409' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10410' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10411' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10412' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$129_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10413' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10414' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$130_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10415' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10416' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$131_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10417' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10418' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$132_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10419' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10420' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$133_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10421' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10422' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$134_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10423' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10424' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$135_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10425' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10426' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$136_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
  created $dff cell `$procdff$10427' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10428' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10429' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10430' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10431' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10432' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10433' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10434' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10435' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10436' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10437' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10438' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10439' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10440' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$3_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10441' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10442' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$4_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10443' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10444' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$5_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10445' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10446' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$6_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10447' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10448' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:162$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10449' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10450' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10451' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:171$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10452' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:171$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10453' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:206$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10454' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:206$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
  created $dff cell `$procdff$10455' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
  created $dff cell `$procdff$10456' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
  created $dff cell `$procdff$10457' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
  created $dff cell `$procdff$10458' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
  created $dff cell `$procdff$10459' with positive edge clock.

4.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$581'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$581'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$576'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$576'.
Found and cleaned up 1 empty switch in `\cva6_lsu_model.$proc$cva6_lsu_model.v:0$571'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:0$571'.
Found and cleaned up 28 empty switches in `\cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
Removing empty process `cva6_lsu_model.$proc$cva6_lsu_model.v:85$404'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$137'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$119'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$117'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$115'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$113'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$111'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$109'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$107'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$105'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$29'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$11'.
Cleaned up 70 empty switches.

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_model.
<suppressed ~23 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~4 debug messages>

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 674 unused cells and 3779 unused wires.
<suppressed ~771 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~132 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Removed a total of 3149 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10000.
    dead port 1/2 on $mux $procmux$10006.
    dead port 1/2 on $mux $procmux$10012.
    dead port 1/2 on $mux $procmux$10018.
    dead port 1/2 on $mux $procmux$10036.
    dead port 1/2 on $mux $procmux$10042.
    dead port 1/2 on $mux $procmux$10048.
    dead port 1/2 on $mux $procmux$10054.
    dead port 2/2 on $mux $procmux$9901.
    dead port 2/2 on $mux $procmux$9903.
    dead port 1/2 on $mux $procmux$9906.
    dead port 2/2 on $mux $procmux$9912.
    dead port 1/2 on $mux $procmux$9915.
    dead port 2/2 on $mux $procmux$9921.
    dead port 1/2 on $mux $procmux$9924.
    dead port 2/2 on $mux $procmux$9930.
    dead port 1/2 on $mux $procmux$9933.
    dead port 2/2 on $mux $procmux$9951.
    dead port 2/2 on $mux $procmux$9953.
    dead port 1/2 on $mux $procmux$9956.
    dead port 2/2 on $mux $procmux$9962.
    dead port 1/2 on $mux $procmux$9965.
    dead port 2/2 on $mux $procmux$9971.
    dead port 1/2 on $mux $procmux$9974.
    dead port 2/2 on $mux $procmux$9980.
    dead port 1/2 on $mux $procmux$9983.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1003.
    dead port 2/2 on $mux $procmux$910.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1347: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$1325: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$2037: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$1954: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1755: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1677: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$1602: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1443: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$1417: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6087.
    dead port 1/2 on $mux $procmux$6094.
    dead port 2/2 on $mux $procmux$6096.
    dead port 2/2 on $mux $procmux$6099.
    dead port 1/2 on $mux $procmux$6106.
    dead port 2/2 on $mux $procmux$6108.
    dead port 2/2 on $mux $procmux$6111.
    dead port 1/2 on $mux $procmux$6118.
    dead port 2/2 on $mux $procmux$6120.
    dead port 2/2 on $mux $procmux$6123.
    dead port 1/2 on $mux $procmux$6130.
    dead port 2/2 on $mux $procmux$6132.
    dead port 2/2 on $mux $procmux$6135.
    dead port 1/2 on $mux $procmux$6142.
    dead port 2/2 on $mux $procmux$6144.
    dead port 2/2 on $mux $procmux$6147.
    dead port 1/2 on $mux $procmux$6154.
    dead port 2/2 on $mux $procmux$6156.
    dead port 2/2 on $mux $procmux$6159.
    dead port 1/2 on $mux $procmux$6166.
    dead port 2/2 on $mux $procmux$6168.
    dead port 2/2 on $mux $procmux$6171.
    dead port 1/2 on $mux $procmux$6178.
    dead port 2/2 on $mux $procmux$6180.
    dead port 2/2 on $mux $procmux$6183.
    dead port 1/2 on $mux $procmux$6190.
    dead port 2/2 on $mux $procmux$6192.
    dead port 2/2 on $mux $procmux$6195.
    dead port 1/2 on $mux $procmux$6202.
    dead port 2/2 on $mux $procmux$6204.
    dead port 2/2 on $mux $procmux$6207.
    dead port 1/2 on $mux $procmux$6214.
    dead port 2/2 on $mux $procmux$6216.
    dead port 2/2 on $mux $procmux$6219.
    dead port 1/2 on $mux $procmux$6226.
    dead port 2/2 on $mux $procmux$6228.
    dead port 2/2 on $mux $procmux$6231.
    dead port 1/2 on $mux $procmux$6238.
    dead port 2/2 on $mux $procmux$6240.
    dead port 2/2 on $mux $procmux$6243.
    dead port 1/2 on $mux $procmux$6250.
    dead port 2/2 on $mux $procmux$6252.
    dead port 2/2 on $mux $procmux$6255.
    dead port 1/2 on $mux $procmux$6262.
    dead port 2/2 on $mux $procmux$6264.
    dead port 2/2 on $mux $procmux$6267.
    dead port 1/2 on $mux $procmux$6322.
    dead port 2/2 on $mux $procmux$6324.
    dead port 2/2 on $mux $procmux$6327.
    dead port 2/2 on $mux $procmux$6592.
    dead port 2/2 on $mux $procmux$6594.
    dead port 2/2 on $mux $procmux$6597.
    dead port 1/2 on $mux $procmux$1818.
    dead port 1/2 on $mux $procmux$1821.
    dead port 2/2 on $mux $procmux$1824.
    dead port 2/2 on $mux $procmux$1831.
    dead port 1/2 on $mux $procmux$1833.
    dead port 1/2 on $mux $procmux$1836.
    dead port 2/2 on $mux $procmux$1839.
    dead port 2/2 on $mux $procmux$2512.
    dead port 1/2 on $mux $procmux$2515.
    dead port 1/2 on $mux $procmux$2518.
    dead port 2/2 on $mux $procmux$2520.
    dead port 2/2 on $mux $procmux$4669.
    dead port 1/2 on $mux $procmux$4672.
    dead port 2/2 on $mux $procmux$4674.
    dead port 2/2 on $mux $procmux$4677.
    dead port 2/2 on $mux $procmux$2523.
    dead port 2/2 on $mux $procmux$1846.
    dead port 1/2 on $mux $procmux$1848.
    dead port 1/2 on $mux $procmux$1851.
    dead port 2/2 on $mux $procmux$1854.
    dead port 2/2 on $mux $procmux$3184.
    dead port 1/2 on $mux $procmux$3187.
    dead port 1/2 on $mux $procmux$3190.
    dead port 2/2 on $mux $procmux$3192.
    dead port 2/2 on $mux $procmux$3195.
    dead port 1/2 on $mux $procmux$1860.
    dead port 2/2 on $mux $procmux$6634.
    dead port 2/2 on $mux $procmux$6636.
    dead port 2/2 on $mux $procmux$6639.
    dead port 1/2 on $mux $procmux$1863.
    dead port 2/2 on $mux $procmux$1866.
    dead port 1/2 on $mux $procmux$1872.
    dead port 1/2 on $mux $procmux$1875.
    dead port 2/2 on $mux $procmux$1878.
    dead port 1/2 on $mux $procmux$1884.
    dead port 1/2 on $mux $procmux$1887.
    dead port 2/2 on $mux $procmux$1890.
    dead port 1/2 on $mux $procmux$1908.
    dead port 1/2 on $mux $procmux$1911.
    dead port 2/2 on $mux $procmux$1914.
    dead port 1/2 on $mux $procmux$1920.
    dead port 1/2 on $mux $procmux$1923.
    dead port 2/2 on $mux $procmux$4714.
    dead port 1/2 on $mux $procmux$4717.
    dead port 2/2 on $mux $procmux$4719.
    dead port 2/2 on $mux $procmux$4722.
    dead port 2/2 on $mux $procmux$1926.
    dead port 1/2 on $mux $procmux$1932.
    dead port 1/2 on $mux $procmux$1935.
    dead port 2/2 on $mux $procmux$1938.
    dead port 1/2 on $mux $procmux$1944.
    dead port 1/2 on $mux $procmux$1947.
    dead port 2/2 on $mux $procmux$2560.
    dead port 1/2 on $mux $procmux$2563.
    dead port 2/2 on $mux $procmux$6676.
    dead port 2/2 on $mux $procmux$6678.
    dead port 2/2 on $mux $procmux$6681.
    dead port 1/2 on $mux $procmux$2566.
    dead port 2/2 on $mux $procmux$2568.
    dead port 2/2 on $mux $procmux$2571.
    dead port 2/2 on $mux $procmux$3232.
    dead port 1/2 on $mux $procmux$3235.
    dead port 1/2 on $mux $procmux$3238.
    dead port 2/2 on $mux $procmux$3240.
    dead port 2/2 on $mux $procmux$3243.
    dead port 2/2 on $mux $procmux$1950.
    dead port 1/2 on $mux $procmux$1956.
    dead port 1/2 on $mux $procmux$1959.
    dead port 2/2 on $mux $procmux$1962.
    dead port 1/2 on $mux $procmux$1968.
    dead port 2/2 on $mux $procmux$1971.
    dead port 1/2 on $mux $procmux$1977.
    dead port 2/2 on $mux $procmux$1980.
    dead port 2/2 on $mux $procmux$4759.
    dead port 1/2 on $mux $procmux$4762.
    dead port 2/2 on $mux $procmux$4764.
    dead port 2/2 on $mux $procmux$4767.
    dead port 1/2 on $mux $procmux$1995.
    dead port 2/2 on $mux $procmux$1998.
    dead port 1/2 on $mux $procmux$2004.
    dead port 2/2 on $mux $procmux$2007.
    dead port 2/2 on $mux $procmux$6718.
    dead port 2/2 on $mux $procmux$6720.
    dead port 2/2 on $mux $procmux$6723.
    dead port 1/2 on $mux $procmux$2013.
    dead port 2/2 on $mux $procmux$2016.
    dead port 1/2 on $mux $procmux$2022.
    dead port 2/2 on $mux $procmux$2025.
    dead port 1/2 on $mux $procmux$2031.
    dead port 2/2 on $mux $procmux$2034.
    dead port 1/2 on $mux $procmux$2040.
    dead port 2/2 on $mux $procmux$2043.
    dead port 2/2 on $mux $procmux$3280.
    dead port 1/2 on $mux $procmux$3283.
    dead port 1/2 on $mux $procmux$3286.
    dead port 2/2 on $mux $procmux$3288.
    dead port 2/2 on $mux $procmux$3291.
    dead port 2/2 on $mux $procmux$2608.
    dead port 1/2 on $mux $procmux$2611.
    dead port 1/2 on $mux $procmux$2614.
    dead port 2/2 on $mux $procmux$2616.
    dead port 2/2 on $mux $procmux$2619.
    dead port 2/2 on $mux $procmux$4804.
    dead port 1/2 on $mux $procmux$4807.
    dead port 2/2 on $mux $procmux$4809.
    dead port 2/2 on $mux $procmux$4812.
    dead port 2/2 on $mux $procmux$6760.
    dead port 2/2 on $mux $procmux$6762.
    dead port 2/2 on $mux $procmux$6765.
    dead port 2/2 on $mux $procmux$3328.
    dead port 1/2 on $mux $procmux$3331.
    dead port 1/2 on $mux $procmux$3334.
    dead port 2/2 on $mux $procmux$3336.
    dead port 2/2 on $mux $procmux$3339.
    dead port 2/2 on $mux $procmux$6802.
    dead port 2/2 on $mux $procmux$6804.
    dead port 2/2 on $mux $procmux$6807.
    dead port 2/2 on $mux $procmux$4849.
    dead port 1/2 on $mux $procmux$4852.
    dead port 2/2 on $mux $procmux$4854.
    dead port 2/2 on $mux $procmux$4857.
    dead port 2/2 on $mux $procmux$2080.
    dead port 1/2 on $mux $procmux$2083.
    dead port 2/2 on $mux $procmux$2656.
    dead port 1/2 on $mux $procmux$2659.
    dead port 1/2 on $mux $procmux$2662.
    dead port 2/2 on $mux $procmux$2664.
    dead port 2/2 on $mux $procmux$2667.
    dead port 1/2 on $mux $procmux$2086.
    dead port 2/2 on $mux $procmux$2088.
    dead port 2/2 on $mux $procmux$2091.
    dead port 2/2 on $mux $procmux$6844.
    dead port 2/2 on $mux $procmux$6846.
    dead port 2/2 on $mux $procmux$6849.
    dead port 2/2 on $mux $procmux$4894.
    dead port 1/2 on $mux $procmux$4897.
    dead port 2/2 on $mux $procmux$4899.
    dead port 2/2 on $mux $procmux$4902.
    dead port 2/2 on $mux $procmux$3376.
    dead port 1/2 on $mux $procmux$3379.
    dead port 1/2 on $mux $procmux$3382.
    dead port 2/2 on $mux $procmux$3384.
    dead port 2/2 on $mux $procmux$3387.
    dead port 2/2 on $mux $procmux$2704.
    dead port 1/2 on $mux $procmux$2707.
    dead port 1/2 on $mux $procmux$2710.
    dead port 2/2 on $mux $procmux$2712.
    dead port 2/2 on $mux $procmux$6886.
    dead port 2/2 on $mux $procmux$6888.
    dead port 2/2 on $mux $procmux$6891.
    dead port 2/2 on $mux $procmux$2715.
    dead port 2/2 on $mux $procmux$2128.
    dead port 1/2 on $mux $procmux$2131.
    dead port 1/2 on $mux $procmux$2134.
    dead port 2/2 on $mux $procmux$2136.
    dead port 2/2 on $mux $procmux$4939.
    dead port 1/2 on $mux $procmux$4942.
    dead port 2/2 on $mux $procmux$4944.
    dead port 2/2 on $mux $procmux$4947.
    dead port 2/2 on $mux $procmux$2139.
    dead port 2/2 on $mux $procmux$3424.
    dead port 1/2 on $mux $procmux$3427.
    dead port 1/2 on $mux $procmux$3430.
    dead port 2/2 on $mux $procmux$3432.
    dead port 2/2 on $mux $procmux$3435.
    dead port 2/2 on $mux $procmux$6928.
    dead port 2/2 on $mux $procmux$6930.
    dead port 2/2 on $mux $procmux$6933.
    dead port 2/2 on $mux $procmux$2752.
    dead port 1/2 on $mux $procmux$2755.
    dead port 2/2 on $mux $procmux$4984.
    dead port 1/2 on $mux $procmux$4987.
    dead port 2/2 on $mux $procmux$4989.
    dead port 2/2 on $mux $procmux$4992.
    dead port 1/2 on $mux $procmux$2758.
    dead port 2/2 on $mux $procmux$2760.
    dead port 2/2 on $mux $procmux$2763.
    dead port 2/2 on $mux $procmux$6970.
    dead port 2/2 on $mux $procmux$6972.
    dead port 2/2 on $mux $procmux$6975.
    dead port 2/2 on $mux $procmux$3472.
    dead port 1/2 on $mux $procmux$3475.
    dead port 1/2 on $mux $procmux$3478.
    dead port 2/2 on $mux $procmux$3480.
    dead port 2/2 on $mux $procmux$3483.
    dead port 2/2 on $mux $procmux$2176.
    dead port 1/2 on $mux $procmux$2179.
    dead port 1/2 on $mux $procmux$2182.
    dead port 2/2 on $mux $procmux$2184.
    dead port 2/2 on $mux $procmux$2187.
    dead port 2/2 on $mux $procmux$5029.
    dead port 1/2 on $mux $procmux$5032.
    dead port 2/2 on $mux $procmux$5034.
    dead port 2/2 on $mux $procmux$5037.
    dead port 2/2 on $mux $procmux$7012.
    dead port 2/2 on $mux $procmux$7014.
    dead port 2/2 on $mux $procmux$7017.
    dead port 2/2 on $mux $procmux$2800.
    dead port 1/2 on $mux $procmux$2803.
    dead port 1/2 on $mux $procmux$2806.
    dead port 2/2 on $mux $procmux$2808.
    dead port 2/2 on $mux $procmux$2811.
    dead port 2/2 on $mux $procmux$3520.
    dead port 1/2 on $mux $procmux$3523.
    dead port 1/2 on $mux $procmux$3526.
    dead port 2/2 on $mux $procmux$3528.
    dead port 2/2 on $mux $procmux$3531.
    dead port 2/2 on $mux $procmux$5074.
    dead port 1/2 on $mux $procmux$5077.
    dead port 2/2 on $mux $procmux$5079.
    dead port 2/2 on $mux $procmux$5082.
    dead port 2/2 on $mux $procmux$7054.
    dead port 2/2 on $mux $procmux$7056.
    dead port 2/2 on $mux $procmux$7059.
    dead port 2/2 on $mux $procmux$2224.
    dead port 1/2 on $mux $procmux$2227.
    dead port 1/2 on $mux $procmux$2230.
    dead port 2/2 on $mux $procmux$2232.
    dead port 2/2 on $mux $procmux$2235.
    dead port 2/2 on $mux $procmux$2848.
    dead port 1/2 on $mux $procmux$2851.
    dead port 2/2 on $mux $procmux$3568.
    dead port 1/2 on $mux $procmux$3571.
    dead port 1/2 on $mux $procmux$3574.
    dead port 2/2 on $mux $procmux$3576.
    dead port 2/2 on $mux $procmux$3579.
    dead port 2/2 on $mux $procmux$5119.
    dead port 1/2 on $mux $procmux$5122.
    dead port 2/2 on $mux $procmux$7096.
    dead port 2/2 on $mux $procmux$7098.
    dead port 2/2 on $mux $procmux$7101.
    dead port 2/2 on $mux $procmux$5124.
    dead port 2/2 on $mux $procmux$5127.
    dead port 2/2 on $mux $procmux$7138.
    dead port 2/2 on $mux $procmux$7140.
    dead port 2/2 on $mux $procmux$7143.
    dead port 2/2 on $mux $procmux$5164.
    dead port 1/2 on $mux $procmux$5167.
    dead port 2/2 on $mux $procmux$5169.
    dead port 2/2 on $mux $procmux$5172.
    dead port 1/2 on $mux $procmux$3634.
    dead port 1/2 on $mux $procmux$3637.
    dead port 2/2 on $mux $procmux$3639.
    dead port 2/2 on $mux $procmux$3642.
    dead port 1/2 on $mux $procmux$3649.
    dead port 1/2 on $mux $procmux$3652.
    dead port 2/2 on $mux $procmux$3654.
    dead port 2/2 on $mux $procmux$3657.
    dead port 1/2 on $mux $procmux$3664.
    dead port 1/2 on $mux $procmux$3667.
    dead port 2/2 on $mux $procmux$3669.
    dead port 2/2 on $mux $procmux$3672.
    dead port 1/2 on $mux $procmux$3679.
    dead port 1/2 on $mux $procmux$3682.
    dead port 2/2 on $mux $procmux$3684.
    dead port 2/2 on $mux $procmux$3687.
    dead port 2/2 on $mux $procmux$7180.
    dead port 2/2 on $mux $procmux$7182.
    dead port 2/2 on $mux $procmux$7185.
    dead port 1/2 on $mux $procmux$3694.
    dead port 1/2 on $mux $procmux$3697.
    dead port 2/2 on $mux $procmux$3699.
    dead port 2/2 on $mux $procmux$3702.
    dead port 1/2 on $mux $procmux$3709.
    dead port 1/2 on $mux $procmux$3712.
    dead port 2/2 on $mux $procmux$3714.
    dead port 2/2 on $mux $procmux$5209.
    dead port 1/2 on $mux $procmux$5212.
    dead port 2/2 on $mux $procmux$5214.
    dead port 2/2 on $mux $procmux$5217.
    dead port 2/2 on $mux $procmux$3717.
    dead port 1/2 on $mux $procmux$3724.
    dead port 1/2 on $mux $procmux$3727.
    dead port 2/2 on $mux $procmux$3729.
    dead port 2/2 on $mux $procmux$3732.
    dead port 1/2 on $mux $procmux$3739.
    dead port 1/2 on $mux $procmux$3742.
    dead port 2/2 on $mux $procmux$3744.
    dead port 2/2 on $mux $procmux$3747.
    dead port 1/2 on $mux $procmux$3754.
    dead port 1/2 on $mux $procmux$3757.
    dead port 2/2 on $mux $procmux$3759.
    dead port 2/2 on $mux $procmux$3762.
    dead port 1/2 on $mux $procmux$3769.
    dead port 1/2 on $mux $procmux$3772.
    dead port 2/2 on $mux $procmux$7222.
    dead port 2/2 on $mux $procmux$7224.
    dead port 2/2 on $mux $procmux$7227.
    dead port 2/2 on $mux $procmux$3774.
    dead port 2/2 on $mux $procmux$3777.
    dead port 1/2 on $mux $procmux$3784.
    dead port 1/2 on $mux $procmux$3787.
    dead port 2/2 on $mux $procmux$3789.
    dead port 2/2 on $mux $procmux$3792.
    dead port 1/2 on $mux $procmux$3799.
    dead port 1/2 on $mux $procmux$3802.
    dead port 2/2 on $mux $procmux$3804.
    dead port 2/2 on $mux $procmux$3807.
    dead port 2/2 on $mux $procmux$5254.
    dead port 1/2 on $mux $procmux$5257.
    dead port 2/2 on $mux $procmux$5259.
    dead port 2/2 on $mux $procmux$5262.
    dead port 1/2 on $mux $procmux$3814.
    dead port 1/2 on $mux $procmux$3817.
    dead port 2/2 on $mux $procmux$3819.
    dead port 2/2 on $mux $procmux$3822.
    dead port 1/2 on $mux $procmux$3829.
    dead port 1/2 on $mux $procmux$3832.
    dead port 2/2 on $mux $procmux$3834.
    dead port 2/2 on $mux $procmux$3837.
    dead port 1/2 on $mux $procmux$3844.
    dead port 1/2 on $mux $procmux$3847.
    dead port 2/2 on $mux $procmux$3849.
    dead port 2/2 on $mux $procmux$3852.
    dead port 2/2 on $mux $procmux$7264.
    dead port 2/2 on $mux $procmux$7266.
    dead port 2/2 on $mux $procmux$7269.
    dead port 1/2 on $mux $procmux$3859.
    dead port 1/2 on $mux $procmux$3862.
    dead port 2/2 on $mux $procmux$3864.
    dead port 2/2 on $mux $procmux$3867.
    dead port 1/2 on $mux $procmux$3874.
    dead port 1/2 on $mux $procmux$3877.
    dead port 2/2 on $mux $procmux$3879.
    dead port 2/2 on $mux $procmux$3882.
    dead port 1/2 on $mux $procmux$3889.
    dead port 1/2 on $mux $procmux$3892.
    dead port 2/2 on $mux $procmux$3894.
    dead port 2/2 on $mux $procmux$3897.
    dead port 1/2 on $mux $procmux$3904.
    dead port 1/2 on $mux $procmux$3907.
    dead port 2/2 on $mux $procmux$5299.
    dead port 1/2 on $mux $procmux$5302.
    dead port 2/2 on $mux $procmux$5304.
    dead port 2/2 on $mux $procmux$5307.
    dead port 2/2 on $mux $procmux$3909.
    dead port 2/2 on $mux $procmux$3912.
    dead port 1/2 on $mux $procmux$3919.
    dead port 1/2 on $mux $procmux$3922.
    dead port 2/2 on $mux $procmux$3924.
    dead port 2/2 on $mux $procmux$3927.
    dead port 1/2 on $mux $procmux$3934.
    dead port 2/2 on $mux $procmux$7306.
    dead port 2/2 on $mux $procmux$7308.
    dead port 2/2 on $mux $procmux$7311.
    dead port 1/2 on $mux $procmux$3937.
    dead port 2/2 on $mux $procmux$3939.
    dead port 2/2 on $mux $procmux$3942.
    dead port 1/2 on $mux $procmux$3949.
    dead port 1/2 on $mux $procmux$3952.
    dead port 2/2 on $mux $procmux$3954.
    dead port 2/2 on $mux $procmux$3957.
    dead port 1/2 on $mux $procmux$3964.
    dead port 1/2 on $mux $procmux$3967.
    dead port 2/2 on $mux $procmux$3969.
    dead port 2/2 on $mux $procmux$3972.
    dead port 1/2 on $mux $procmux$3979.
    dead port 1/2 on $mux $procmux$3982.
    dead port 2/2 on $mux $procmux$3984.
    dead port 2/2 on $mux $procmux$3987.
    dead port 1/2 on $mux $procmux$3994.
    dead port 1/2 on $mux $procmux$3997.
    dead port 2/2 on $mux $procmux$3999.
    dead port 2/2 on $mux $procmux$4002.
    dead port 2/2 on $mux $procmux$5344.
    dead port 1/2 on $mux $procmux$5347.
    dead port 2/2 on $mux $procmux$5349.
    dead port 2/2 on $mux $procmux$5352.
    dead port 1/2 on $mux $procmux$4009.
    dead port 1/2 on $mux $procmux$4012.
    dead port 2/2 on $mux $procmux$4014.
    dead port 2/2 on $mux $procmux$7348.
    dead port 2/2 on $mux $procmux$7350.
    dead port 2/2 on $mux $procmux$7353.
    dead port 2/2 on $mux $procmux$4017.
    dead port 1/2 on $mux $procmux$4024.
    dead port 1/2 on $mux $procmux$4027.
    dead port 2/2 on $mux $procmux$4029.
    dead port 2/2 on $mux $procmux$4032.
    dead port 1/2 on $mux $procmux$4039.
    dead port 1/2 on $mux $procmux$4042.
    dead port 2/2 on $mux $procmux$4044.
    dead port 2/2 on $mux $procmux$4047.
    dead port 1/2 on $mux $procmux$4054.
    dead port 1/2 on $mux $procmux$4057.
    dead port 2/2 on $mux $procmux$4059.
    dead port 2/2 on $mux $procmux$4062.
    dead port 1/2 on $mux $procmux$4069.
    dead port 1/2 on $mux $procmux$4072.
    dead port 2/2 on $mux $procmux$4074.
    dead port 2/2 on $mux $procmux$4077.
    dead port 1/2 on $mux $procmux$4084.
    dead port 1/2 on $mux $procmux$4087.
    dead port 2/2 on $mux $procmux$4089.
    dead port 2/2 on $mux $procmux$4092.
    dead port 1/2 on $mux $procmux$4099.
    dead port 2/2 on $mux $procmux$5389.
    dead port 1/2 on $mux $procmux$5392.
    dead port 2/2 on $mux $procmux$5394.
    dead port 2/2 on $mux $procmux$5397.
    dead port 2/2 on $mux $procmux$7390.
    dead port 2/2 on $mux $procmux$7392.
    dead port 2/2 on $mux $procmux$7395.
    dead port 1/2 on $mux $procmux$4102.
    dead port 2/2 on $mux $procmux$4104.
    dead port 2/2 on $mux $procmux$4107.
    dead port 1/2 on $mux $procmux$4114.
    dead port 1/2 on $mux $procmux$4117.
    dead port 2/2 on $mux $procmux$4119.
    dead port 2/2 on $mux $procmux$4122.
    dead port 1/2 on $mux $procmux$2854.
    dead port 2/2 on $mux $procmux$2856.
    dead port 2/2 on $mux $procmux$2859.
    dead port 1/2 on $mux $procmux$1298.
    dead port 2/2 on $mux $procmux$1301.
    dead port 2/2 on $mux $procmux$1307.
    dead port 2/2 on $mux $procmux$1313.
    dead port 1/2 on $mux $procmux$1319.
    dead port 2/2 on $mux $procmux$1322.
    dead port 1/2 on $mux $procmux$1328.
    dead port 2/2 on $mux $procmux$7432.
    dead port 2/2 on $mux $procmux$7434.
    dead port 2/2 on $mux $procmux$7437.
    dead port 2/2 on $mux $procmux$1331.
    dead port 2/2 on $mux $procmux$5434.
    dead port 1/2 on $mux $procmux$5437.
    dead port 2/2 on $mux $procmux$5439.
    dead port 2/2 on $mux $procmux$5442.
    dead port 1/2 on $mux $procmux$1338.
    dead port 2/2 on $mux $procmux$1340.
    dead port 2/2 on $mux $procmux$2272.
    dead port 1/2 on $mux $procmux$2275.
    dead port 1/2 on $mux $procmux$2278.
    dead port 2/2 on $mux $procmux$2280.
    dead port 2/2 on $mux $procmux$2283.
    dead port 2/2 on $mux $procmux$4354.
    dead port 1/2 on $mux $procmux$4357.
    dead port 2/2 on $mux $procmux$4359.
    dead port 2/2 on $mux $procmux$4362.
    dead port 2/2 on $mux $procmux$1343.
    dead port 1/2 on $mux $procmux$1350.
    dead port 2/2 on $mux $procmux$1352.
    dead port 2/2 on $mux $procmux$2896.
    dead port 1/2 on $mux $procmux$2899.
    dead port 1/2 on $mux $procmux$2902.
    dead port 2/2 on $mux $procmux$2904.
    dead port 2/2 on $mux $procmux$2907.
    dead port 2/2 on $mux $procmux$1355.
    dead port 2/2 on $mux $procmux$7474.
    dead port 2/2 on $mux $procmux$7476.
    dead port 2/2 on $mux $procmux$7479.
    dead port 1/2 on $mux $procmux$1362.
    dead port 2/2 on $mux $procmux$1364.
    dead port 2/2 on $mux $procmux$1367.
    dead port 2/2 on $mux $procmux$1373.
    dead port 2/2 on $mux $procmux$1376.
    dead port 2/2 on $mux $procmux$5479.
    dead port 1/2 on $mux $procmux$5482.
    dead port 2/2 on $mux $procmux$5484.
    dead port 2/2 on $mux $procmux$5487.
    dead port 2/2 on $mux $procmux$1382.
    dead port 2/2 on $mux $procmux$1385.
    dead port 2/2 on $mux $procmux$1391.
    dead port 2/2 on $mux $procmux$1394.
    dead port 2/2 on $mux $procmux$1400.
    dead port 2/2 on $mux $procmux$1406.
    dead port 2/2 on $mux $procmux$1412.
    dead port 2/2 on $mux $procmux$1419.
    dead port 2/2 on $mux $procmux$4399.
    dead port 1/2 on $mux $procmux$4402.
    dead port 2/2 on $mux $procmux$4404.
    dead port 2/2 on $mux $procmux$4407.
    dead port 1/2 on $mux $procmux$1422.
    dead port 1/2 on $mux $procmux$1425.
    dead port 2/2 on $mux $procmux$7516.
    dead port 2/2 on $mux $procmux$7518.
    dead port 2/2 on $mux $procmux$7521.
    dead port 1/2 on $mux $procmux$1428.
    dead port 1/2 on $mux $procmux$1431.
    dead port 1/2 on $mux $procmux$1433.
    dead port 1/2 on $mux $procmux$1436.
    dead port 2/2 on $mux $procmux$2320.
    dead port 1/2 on $mux $procmux$2323.
    dead port 1/2 on $mux $procmux$2326.
    dead port 2/2 on $mux $procmux$2328.
    dead port 2/2 on $mux $procmux$2944.
    dead port 1/2 on $mux $procmux$2947.
    dead port 1/2 on $mux $procmux$2950.
    dead port 2/2 on $mux $procmux$5524.
    dead port 1/2 on $mux $procmux$5527.
    dead port 2/2 on $mux $procmux$5529.
    dead port 2/2 on $mux $procmux$5532.
    dead port 2/2 on $mux $procmux$2952.
    dead port 2/2 on $mux $procmux$2955.
    dead port 2/2 on $mux $procmux$2331.
    dead port 2/2 on $mux $procmux$1439.
    dead port 1/2 on $mux $procmux$1446.
    dead port 1/2 on $mux $procmux$1449.
    dead port 1/2 on $mux $procmux$1452.
    dead port 1/2 on $mux $procmux$1455.
    dead port 1/2 on $mux $procmux$1457.
    dead port 1/2 on $mux $procmux$1460.
    dead port 2/2 on $mux $procmux$1463.
    dead port 1/2 on $mux $procmux$1470.
    dead port 2/2 on $mux $procmux$7558.
    dead port 2/2 on $mux $procmux$7560.
    dead port 2/2 on $mux $procmux$7563.
    dead port 1/2 on $mux $procmux$1473.
    dead port 1/2 on $mux $procmux$1476.
    dead port 1/2 on $mux $procmux$1479.
    dead port 2/2 on $mux $procmux$4444.
    dead port 1/2 on $mux $procmux$4447.
    dead port 2/2 on $mux $procmux$4449.
    dead port 2/2 on $mux $procmux$4452.
    dead port 1/2 on $mux $procmux$1481.
    dead port 1/2 on $mux $procmux$1484.
    dead port 2/2 on $mux $procmux$1487.
    dead port 2/2 on $mux $procmux$1494.
    dead port 1/2 on $mux $procmux$1497.
    dead port 1/2 on $mux $procmux$1500.
    dead port 1/2 on $mux $procmux$1503.
    dead port 2/2 on $mux $procmux$5569.
    dead port 1/2 on $mux $procmux$5572.
    dead port 2/2 on $mux $procmux$5574.
    dead port 2/2 on $mux $procmux$5577.
    dead port 1/2 on $mux $procmux$1505.
    dead port 1/2 on $mux $procmux$1508.
    dead port 2/2 on $mux $procmux$1511.
    dead port 2/2 on $mux $procmux$1518.
    dead port 1/2 on $mux $procmux$1521.
    dead port 1/2 on $mux $procmux$1524.
    dead port 1/2 on $mux $procmux$1527.
    dead port 2/2 on $mux $procmux$2992.
    dead port 1/2 on $mux $procmux$2995.
    dead port 1/2 on $mux $procmux$2998.
    dead port 2/2 on $mux $procmux$7600.
    dead port 2/2 on $mux $procmux$7602.
    dead port 2/2 on $mux $procmux$7605.
    dead port 2/2 on $mux $procmux$3000.
    dead port 2/2 on $mux $procmux$3003.
    dead port 1/2 on $mux $procmux$1529.
    dead port 1/2 on $mux $procmux$1532.
    dead port 2/2 on $mux $procmux$2368.
    dead port 1/2 on $mux $procmux$2371.
    dead port 1/2 on $mux $procmux$2374.
    dead port 2/2 on $mux $procmux$2376.
    dead port 2/2 on $mux $procmux$2379.
    dead port 2/2 on $mux $procmux$1535.
    dead port 2/2 on $mux $procmux$4489.
    dead port 1/2 on $mux $procmux$4492.
    dead port 2/2 on $mux $procmux$4494.
    dead port 2/2 on $mux $procmux$4497.
    dead port 1/2 on $mux $procmux$1542.
    dead port 1/2 on $mux $procmux$1545.
    dead port 1/2 on $mux $procmux$1548.
    dead port 2/2 on $mux $procmux$5614.
    dead port 1/2 on $mux $procmux$5617.
    dead port 2/2 on $mux $procmux$5619.
    dead port 2/2 on $mux $procmux$5622.
    dead port 1/2 on $mux $procmux$1550.
    dead port 1/2 on $mux $procmux$1553.
    dead port 2/2 on $mux $procmux$1556.
    dead port 1/2 on $mux $procmux$1563.
    dead port 1/2 on $mux $procmux$1566.
    dead port 2/2 on $mux $procmux$7642.
    dead port 2/2 on $mux $procmux$7644.
    dead port 2/2 on $mux $procmux$7647.
    dead port 1/2 on $mux $procmux$1569.
    dead port 1/2 on $mux $procmux$1571.
    dead port 1/2 on $mux $procmux$1574.
    dead port 2/2 on $mux $procmux$1577.
    dead port 1/2 on $mux $procmux$1584.
    dead port 1/2 on $mux $procmux$1587.
    dead port 1/2 on $mux $procmux$1590.
    dead port 1/2 on $mux $procmux$1592.
    dead port 1/2 on $mux $procmux$1595.
    dead port 2/2 on $mux $procmux$1598.
    dead port 1/2 on $mux $procmux$1605.
    dead port 2/2 on $mux $procmux$3040.
    dead port 1/2 on $mux $procmux$3043.
    dead port 1/2 on $mux $procmux$3046.
    dead port 2/2 on $mux $procmux$3048.
    dead port 2/2 on $mux $procmux$3051.
    dead port 1/2 on $mux $procmux$1608.
    dead port 1/2 on $mux $procmux$1611.
    dead port 1/2 on $mux $procmux$1613.
    dead port 1/2 on $mux $procmux$1616.
    dead port 2/2 on $mux $procmux$4534.
    dead port 1/2 on $mux $procmux$4537.
    dead port 2/2 on $mux $procmux$4539.
    dead port 2/2 on $mux $procmux$5659.
    dead port 1/2 on $mux $procmux$5662.
    dead port 2/2 on $mux $procmux$5664.
    dead port 2/2 on $mux $procmux$5667.
    dead port 2/2 on $mux $procmux$4542.
    dead port 2/2 on $mux $procmux$7684.
    dead port 2/2 on $mux $procmux$7686.
    dead port 2/2 on $mux $procmux$7689.
    dead port 2/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1626.
    dead port 1/2 on $mux $procmux$1629.
    dead port 2/2 on $mux $procmux$2416.
    dead port 1/2 on $mux $procmux$2419.
    dead port 1/2 on $mux $procmux$2422.
    dead port 2/2 on $mux $procmux$2424.
    dead port 2/2 on $mux $procmux$2427.
    dead port 1/2 on $mux $procmux$1631.
    dead port 1/2 on $mux $procmux$1634.
    dead port 2/2 on $mux $procmux$1637.
    dead port 1/2 on $mux $procmux$1644.
    dead port 1/2 on $mux $procmux$1647.
    dead port 1/2 on $mux $procmux$1649.
    dead port 1/2 on $mux $procmux$1652.
    dead port 2/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1662.
    dead port 1/2 on $mux $procmux$1665.
    dead port 1/2 on $mux $procmux$1667.
    dead port 1/2 on $mux $procmux$1670.
    dead port 2/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1680.
    dead port 1/2 on $mux $procmux$1683.
    dead port 2/2 on $mux $procmux$3088.
    dead port 1/2 on $mux $procmux$3091.
    dead port 2/2 on $mux $procmux$5704.
    dead port 2/2 on $mux $procmux$7726.
    dead port 2/2 on $mux $procmux$7728.
    dead port 2/2 on $mux $procmux$7731.
    dead port 1/2 on $mux $procmux$5707.
    dead port 2/2 on $mux $procmux$5709.
    dead port 2/2 on $mux $procmux$5712.
    dead port 1/2 on $mux $procmux$3094.
    dead port 2/2 on $mux $procmux$3096.
    dead port 2/2 on $mux $procmux$4579.
    dead port 1/2 on $mux $procmux$4582.
    dead port 2/2 on $mux $procmux$4584.
    dead port 2/2 on $mux $procmux$4587.
    dead port 2/2 on $mux $procmux$3099.
    dead port 1/2 on $mux $procmux$1685.
    dead port 1/2 on $mux $procmux$1688.
    dead port 2/2 on $mux $procmux$1691.
    dead port 1/2 on $mux $procmux$1698.
    dead port 1/2 on $mux $procmux$1700.
    dead port 1/2 on $mux $procmux$1703.
    dead port 2/2 on $mux $procmux$1706.
    dead port 1/2 on $mux $procmux$1713.
    dead port 1/2 on $mux $procmux$1715.
    dead port 1/2 on $mux $procmux$1718.
    dead port 2/2 on $mux $procmux$1721.
    dead port 2/2 on $mux $procmux$2464.
    dead port 1/2 on $mux $procmux$2467.
    dead port 1/2 on $mux $procmux$2470.
    dead port 2/2 on $mux $procmux$2472.
    dead port 2/2 on $mux $procmux$2475.
    dead port 2/2 on $mux $procmux$7768.
    dead port 2/2 on $mux $procmux$7770.
    dead port 2/2 on $mux $procmux$7773.
    dead port 1/2 on $mux $procmux$1728.
    dead port 1/2 on $mux $procmux$1730.
    dead port 1/2 on $mux $procmux$1733.
    dead port 2/2 on $mux $procmux$5749.
    dead port 1/2 on $mux $procmux$5752.
    dead port 2/2 on $mux $procmux$5754.
    dead port 2/2 on $mux $procmux$5757.
    dead port 2/2 on $mux $procmux$7810.
    dead port 2/2 on $mux $procmux$7812.
    dead port 2/2 on $mux $procmux$7815.
    dead port 2/2 on $mux $procmux$5794.
    dead port 1/2 on $mux $procmux$5797.
    dead port 2/2 on $mux $procmux$5799.
    dead port 2/2 on $mux $procmux$5802.
    dead port 2/2 on $mux $procmux$1736.
    dead port 1/2 on $mux $procmux$1743.
    dead port 1/2 on $mux $procmux$1745.
    dead port 1/2 on $mux $procmux$1748.
    dead port 2/2 on $mux $procmux$1751.
    dead port 2/2 on $mux $procmux$4624.
    dead port 1/2 on $mux $procmux$4627.
    dead port 2/2 on $mux $procmux$4629.
    dead port 2/2 on $mux $procmux$4632.
    dead port 1/2 on $mux $procmux$1758.
    dead port 1/2 on $mux $procmux$1760.
    dead port 2/2 on $mux $procmux$3136.
    dead port 1/2 on $mux $procmux$3139.
    dead port 1/2 on $mux $procmux$3142.
    dead port 2/2 on $mux $procmux$3144.
    dead port 2/2 on $mux $procmux$7852.
    dead port 2/2 on $mux $procmux$7854.
    dead port 2/2 on $mux $procmux$7857.
    dead port 2/2 on $mux $procmux$3147.
    dead port 1/2 on $mux $procmux$1763.
    dead port 2/2 on $mux $procmux$1766.
    dead port 2/2 on $mux $procmux$1787.
    dead port 1/2 on $mux $procmux$1789.
    dead port 1/2 on $mux $procmux$1792.
    dead port 2/2 on $mux $procmux$1795.
    dead port 2/2 on $mux $procmux$1802.
    dead port 1/2 on $mux $procmux$1804.
    dead port 1/2 on $mux $procmux$1807.
    dead port 2/2 on $mux $procmux$1810.
    dead port 2/2 on $mux $procmux$1816.
    dead port 1/2 on $mux $procmux$5854.
    dead port 2/2 on $mux $procmux$5856.
    dead port 2/2 on $mux $procmux$5859.
    dead port 1/2 on $mux $procmux$5866.
    dead port 2/2 on $mux $procmux$5868.
    dead port 2/2 on $mux $procmux$5871.
    dead port 1/2 on $mux $procmux$5878.
    dead port 2/2 on $mux $procmux$5880.
    dead port 2/2 on $mux $procmux$5883.
    dead port 1/2 on $mux $procmux$5890.
    dead port 2/2 on $mux $procmux$7894.
    dead port 2/2 on $mux $procmux$7896.
    dead port 2/2 on $mux $procmux$7899.
    dead port 2/2 on $mux $procmux$5892.
    dead port 2/2 on $mux $procmux$5895.
    dead port 1/2 on $mux $procmux$5902.
    dead port 2/2 on $mux $procmux$5904.
    dead port 2/2 on $mux $procmux$5907.
    dead port 1/2 on $mux $procmux$5914.
    dead port 2/2 on $mux $procmux$5916.
    dead port 2/2 on $mux $procmux$5919.
    dead port 1/2 on $mux $procmux$5926.
    dead port 2/2 on $mux $procmux$5928.
    dead port 2/2 on $mux $procmux$5931.
    dead port 1/2 on $mux $procmux$5938.
    dead port 2/2 on $mux $procmux$5940.
    dead port 2/2 on $mux $procmux$5943.
    dead port 1/2 on $mux $procmux$5950.
    dead port 2/2 on $mux $procmux$5952.
    dead port 2/2 on $mux $procmux$5955.
    dead port 1/2 on $mux $procmux$5962.
    dead port 2/2 on $mux $procmux$5964.
    dead port 2/2 on $mux $procmux$5967.
    dead port 1/2 on $mux $procmux$5974.
    dead port 2/2 on $mux $procmux$5976.
    dead port 2/2 on $mux $procmux$5979.
    dead port 1/2 on $mux $procmux$5986.
    dead port 2/2 on $mux $procmux$7936.
    dead port 2/2 on $mux $procmux$7938.
    dead port 2/2 on $mux $procmux$7941.
    dead port 2/2 on $mux $procmux$5988.
    dead port 2/2 on $mux $procmux$5991.
    dead port 1/2 on $mux $procmux$5998.
    dead port 2/2 on $mux $procmux$6000.
    dead port 2/2 on $mux $procmux$6003.
    dead port 1/2 on $mux $procmux$6010.
    dead port 2/2 on $mux $procmux$6012.
    dead port 2/2 on $mux $procmux$6015.
    dead port 1/2 on $mux $procmux$6022.
    dead port 2/2 on $mux $procmux$6024.
    dead port 2/2 on $mux $procmux$6027.
    dead port 1/2 on $mux $procmux$6034.
    dead port 2/2 on $mux $procmux$6036.
    dead port 2/2 on $mux $procmux$6039.
    dead port 1/2 on $mux $procmux$6046.
    dead port 2/2 on $mux $procmux$6048.
    dead port 2/2 on $mux $procmux$6051.
    dead port 1/2 on $mux $procmux$6058.
    dead port 2/2 on $mux $procmux$6060.
    dead port 2/2 on $mux $procmux$6063.
    dead port 1/2 on $mux $procmux$6070.
    dead port 2/2 on $mux $procmux$6072.
    dead port 2/2 on $mux $procmux$6075.
    dead port 1/2 on $mux $procmux$6082.
    dead port 2/2 on $mux $procmux$7989.
    dead port 2/2 on $mux $procmux$7992.
    dead port 2/2 on $mux $procmux$7998.
    dead port 2/2 on $mux $procmux$8001.
    dead port 2/2 on $mux $procmux$8007.
    dead port 2/2 on $mux $procmux$8010.
    dead port 2/2 on $mux $procmux$8016.
    dead port 2/2 on $mux $procmux$8019.
    dead port 2/2 on $mux $procmux$8025.
    dead port 2/2 on $mux $procmux$8028.
    dead port 2/2 on $mux $procmux$8034.
    dead port 2/2 on $mux $procmux$8037.
    dead port 2/2 on $mux $procmux$8043.
    dead port 2/2 on $mux $procmux$8046.
    dead port 2/2 on $mux $procmux$8052.
    dead port 2/2 on $mux $procmux$8055.
    dead port 2/2 on $mux $procmux$8061.
    dead port 2/2 on $mux $procmux$8064.
    dead port 2/2 on $mux $procmux$8070.
    dead port 2/2 on $mux $procmux$8073.
    dead port 2/2 on $mux $procmux$8079.
    dead port 2/2 on $mux $procmux$8082.
    dead port 2/2 on $mux $procmux$8088.
    dead port 2/2 on $mux $procmux$8091.
    dead port 2/2 on $mux $procmux$8097.
    dead port 2/2 on $mux $procmux$8100.
    dead port 2/2 on $mux $procmux$8106.
    dead port 2/2 on $mux $procmux$8109.
    dead port 2/2 on $mux $procmux$8115.
    dead port 2/2 on $mux $procmux$8118.
    dead port 2/2 on $mux $procmux$8124.
    dead port 2/2 on $mux $procmux$8127.
    dead port 2/2 on $mux $procmux$8133.
    dead port 2/2 on $mux $procmux$8136.
    dead port 2/2 on $mux $procmux$8142.
    dead port 2/2 on $mux $procmux$8145.
    dead port 2/2 on $mux $procmux$8151.
    dead port 2/2 on $mux $procmux$8154.
    dead port 2/2 on $mux $procmux$8160.
    dead port 2/2 on $mux $procmux$8163.
    dead port 2/2 on $mux $procmux$8169.
    dead port 2/2 on $mux $procmux$8172.
    dead port 2/2 on $mux $procmux$8178.
    dead port 2/2 on $mux $procmux$8181.
    dead port 2/2 on $mux $procmux$8187.
    dead port 2/2 on $mux $procmux$8190.
    dead port 2/2 on $mux $procmux$8196.
    dead port 2/2 on $mux $procmux$8199.
    dead port 2/2 on $mux $procmux$8205.
    dead port 2/2 on $mux $procmux$8208.
    dead port 2/2 on $mux $procmux$8214.
    dead port 2/2 on $mux $procmux$8217.
    dead port 2/2 on $mux $procmux$8223.
    dead port 2/2 on $mux $procmux$8226.
    dead port 2/2 on $mux $procmux$8232.
    dead port 2/2 on $mux $procmux$8235.
    dead port 2/2 on $mux $procmux$8241.
    dead port 2/2 on $mux $procmux$8244.
    dead port 2/2 on $mux $procmux$8250.
    dead port 2/2 on $mux $procmux$8253.
    dead port 2/2 on $mux $procmux$8259.
    dead port 2/2 on $mux $procmux$8262.
    dead port 2/2 on $mux $procmux$8268.
    dead port 2/2 on $mux $procmux$8271.
    dead port 2/2 on $mux $procmux$8277.
    dead port 2/2 on $mux $procmux$8280.
    dead port 2/2 on $mux $procmux$8286.
    dead port 2/2 on $mux $procmux$8289.
    dead port 2/2 on $mux $procmux$8295.
    dead port 2/2 on $mux $procmux$8298.
    dead port 2/2 on $mux $procmux$8340.
    dead port 2/2 on $mux $procmux$8343.
    dead port 2/2 on $mux $procmux$8475.
    dead port 2/2 on $mux $procmux$8478.
    dead port 2/2 on $mux $procmux$8484.
    dead port 2/2 on $mux $procmux$8487.
    dead port 2/2 on $mux $procmux$8493.
    dead port 2/2 on $mux $procmux$8496.
    dead port 2/2 on $mux $procmux$8502.
    dead port 2/2 on $mux $procmux$8505.
    dead port 2/2 on $mux $procmux$8511.
    dead port 2/2 on $mux $procmux$8514.
    dead port 2/2 on $mux $procmux$8520.
    dead port 2/2 on $mux $procmux$8523.
    dead port 2/2 on $mux $procmux$8529.
    dead port 2/2 on $mux $procmux$8532.
    dead port 2/2 on $mux $procmux$8538.
    dead port 2/2 on $mux $procmux$8541.
    dead port 2/2 on $mux $procmux$8547.
    dead port 2/2 on $mux $procmux$8550.
    dead port 2/2 on $mux $procmux$8556.
    dead port 2/2 on $mux $procmux$8559.
    dead port 2/2 on $mux $procmux$8565.
    dead port 2/2 on $mux $procmux$8568.
    dead port 2/2 on $mux $procmux$8574.
    dead port 2/2 on $mux $procmux$8577.
    dead port 2/2 on $mux $procmux$8583.
    dead port 2/2 on $mux $procmux$8586.
    dead port 2/2 on $mux $procmux$8592.
    dead port 2/2 on $mux $procmux$8595.
    dead port 2/2 on $mux $procmux$8601.
    dead port 2/2 on $mux $procmux$8604.
    dead port 2/2 on $mux $procmux$8610.
    dead port 2/2 on $mux $procmux$8613.
    dead port 2/2 on $mux $procmux$8619.
    dead port 2/2 on $mux $procmux$8622.
    dead port 2/2 on $mux $procmux$8628.
    dead port 2/2 on $mux $procmux$8631.
    dead port 2/2 on $mux $procmux$8637.
    dead port 2/2 on $mux $procmux$8640.
    dead port 2/2 on $mux $procmux$8646.
    dead port 2/2 on $mux $procmux$8649.
    dead port 2/2 on $mux $procmux$8655.
    dead port 2/2 on $mux $procmux$8658.
    dead port 2/2 on $mux $procmux$8664.
    dead port 2/2 on $mux $procmux$8667.
    dead port 2/2 on $mux $procmux$8673.
    dead port 2/2 on $mux $procmux$8676.
    dead port 2/2 on $mux $procmux$8682.
    dead port 2/2 on $mux $procmux$8685.
    dead port 2/2 on $mux $procmux$8691.
    dead port 2/2 on $mux $procmux$8694.
    dead port 2/2 on $mux $procmux$8700.
    dead port 2/2 on $mux $procmux$8703.
    dead port 2/2 on $mux $procmux$8709.
    dead port 2/2 on $mux $procmux$8712.
    dead port 2/2 on $mux $procmux$8718.
    dead port 2/2 on $mux $procmux$8721.
    dead port 2/2 on $mux $procmux$8727.
    dead port 2/2 on $mux $procmux$8730.
    dead port 2/2 on $mux $procmux$8736.
    dead port 2/2 on $mux $procmux$8739.
    dead port 2/2 on $mux $procmux$8745.
    dead port 2/2 on $mux $procmux$8748.
    dead port 2/2 on $mux $procmux$8754.
    dead port 2/2 on $mux $procmux$8757.
    dead port 2/2 on $mux $procmux$8994.
    dead port 2/2 on $mux $procmux$9000.
    dead port 2/2 on $mux $procmux$9006.
    dead port 2/2 on $mux $procmux$9012.
    dead port 2/2 on $mux $procmux$9018.
    dead port 2/2 on $mux $procmux$9024.
    dead port 2/2 on $mux $procmux$9030.
    dead port 2/2 on $mux $procmux$9036.
    dead port 2/2 on $mux $procmux$9042.
    dead port 2/2 on $mux $procmux$9048.
    dead port 2/2 on $mux $procmux$9054.
    dead port 2/2 on $mux $procmux$9060.
    dead port 2/2 on $mux $procmux$9066.
    dead port 2/2 on $mux $procmux$9072.
    dead port 2/2 on $mux $procmux$9078.
    dead port 2/2 on $mux $procmux$9084.
    dead port 2/2 on $mux $procmux$9090.
    dead port 2/2 on $mux $procmux$9096.
    dead port 2/2 on $mux $procmux$9102.
    dead port 2/2 on $mux $procmux$9108.
    dead port 2/2 on $mux $procmux$9114.
    dead port 2/2 on $mux $procmux$9120.
    dead port 2/2 on $mux $procmux$9126.
    dead port 2/2 on $mux $procmux$9132.
    dead port 2/2 on $mux $procmux$9138.
    dead port 2/2 on $mux $procmux$9144.
    dead port 2/2 on $mux $procmux$9150.
    dead port 2/2 on $mux $procmux$9156.
    dead port 2/2 on $mux $procmux$9162.
    dead port 2/2 on $mux $procmux$9168.
    dead port 2/2 on $mux $procmux$9174.
    dead port 2/2 on $mux $procmux$9180.
    dead port 2/2 on $mux $procmux$9186.
    dead port 2/2 on $mux $procmux$9192.
    dead port 2/2 on $mux $procmux$9198.
    dead port 2/2 on $mux $procmux$9204.
    dead port 2/2 on $mux $procmux$9210.
    dead port 2/2 on $mux $procmux$9216.
    dead port 2/2 on $mux $procmux$9222.
    dead port 2/2 on $mux $procmux$9228.
    dead port 2/2 on $mux $procmux$9234.
    dead port 2/2 on $mux $procmux$9240.
    dead port 2/2 on $mux $procmux$9246.
    dead port 2/2 on $mux $procmux$9252.
    dead port 2/2 on $mux $procmux$9258.
    dead port 2/2 on $mux $procmux$9264.
    dead port 2/2 on $mux $procmux$9270.
    dead port 2/2 on $mux $procmux$9276.
    dead port 2/2 on $mux $procmux$9282.
    dead port 2/2 on $mux $procmux$9288.
    dead port 2/2 on $mux $procmux$9294.
    dead port 2/2 on $mux $procmux$9300.
    dead port 2/2 on $mux $procmux$9306.
    dead port 2/2 on $mux $procmux$9312.
    dead port 2/2 on $mux $procmux$9318.
    dead port 2/2 on $mux $procmux$9324.
    dead port 2/2 on $mux $procmux$9330.
    dead port 2/2 on $mux $procmux$9336.
    dead port 2/2 on $mux $procmux$9342.
    dead port 2/2 on $mux $procmux$9348.
    dead port 2/2 on $mux $procmux$9354.
    dead port 2/2 on $mux $procmux$9360.
    dead port 2/2 on $mux $procmux$9366.
    dead port 2/2 on $mux $procmux$9372.
    dead port 2/2 on $mux $procmux$9486.
    dead port 2/2 on $mux $procmux$9492.
    dead port 2/2 on $mux $procmux$9498.
    dead port 2/2 on $mux $procmux$9516.
    dead port 2/2 on $mux $procmux$9534.
    dead port 2/2 on $mux $procmux$9540.
    dead port 2/2 on $mux $procmux$9546.
    dead port 2/2 on $mux $procmux$9552.
    dead port 2/2 on $mux $procmux$6084.
Removed 1053 multiplexer ports.
<suppressed ~152 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$7231: { $procmux$6575_CMP $auto$opt_reduce.cc:134:opt_mux$10461 }
    New ctrl vector for $pmux cell $procmux$5671: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10463 }
    New ctrl vector for $pmux cell $procmux$7693: { $procmux$6586_CMP $auto$opt_reduce.cc:134:opt_mux$10465 }
    New ctrl vector for $pmux cell $procmux$4546: { $procmux$2052_CMP $auto$opt_reduce.cc:134:opt_mux$10467 }
    New ctrl vector for $pmux cell $procmux$4771: { $procmux$2057_CMP $auto$opt_reduce.cc:134:opt_mux$10469 }
    New ctrl vector for $pmux cell $procmux$2431: { $procmux$2055_CMP $auto$opt_reduce.cc:134:opt_mux$10471 }
    New ctrl vector for $pmux cell $procmux$6895: { $procmux$6567_CMP $auto$opt_reduce.cc:134:opt_mux$10473 }
    New ctrl vector for $pmux cell $procmux$5266: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10475 }
    New ctrl vector for $pmux cell $procmux$2719: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10477 }
    New ctrl vector for $pmux cell $procmux$3199: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10479 }
    New ctrl vector for $pmux cell $procmux$6727: { $procmux$6563_CMP $auto$opt_reduce.cc:134:opt_mux$10481 }
    New ctrl vector for $pmux cell $procmux$4951: { $procmux$2061_CMP $auto$opt_reduce.cc:134:opt_mux$10483 }
    New ctrl vector for $pmux cell $procmux$7273: { $procmux$6576_CMP $auto$opt_reduce.cc:134:opt_mux$10485 }
    New ctrl vector for $pmux cell $procmux$7735: { $procmux$6587_CMP $auto$opt_reduce.cc:134:opt_mux$10487 }
    New ctrl vector for $pmux cell $procmux$2143: { $procmux$2049_CMP $auto$opt_reduce.cc:134:opt_mux$10489 }
    New ctrl vector for $pmux cell $procmux$5716: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10491 }
    New ctrl vector for $pmux cell $procmux$6643: { $procmux$6561_CMP $auto$opt_reduce.cc:134:opt_mux$10493 }
    New ctrl vector for $pmux cell $procmux$4591: { $procmux$2053_CMP $auto$opt_reduce.cc:134:opt_mux$10495 }
    New ctrl vector for $pmux cell $procmux$3103: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10497 }
    New ctrl vector for $pmux cell $procmux$3439: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10499 }
    New ctrl vector for $pmux cell $procmux$5311: { $procmux$2069_CMP $auto$opt_reduce.cc:134:opt_mux$10501 }
    New ctrl vector for $pmux cell $procmux$6937: { $procmux$6568_CMP $auto$opt_reduce.cc:134:opt_mux$10503 }
    New ctrl vector for $pmux cell $procmux$7777: { $procmux$6588_CMP $auto$opt_reduce.cc:134:opt_mux$10505 }
    New ctrl vector for $pmux cell $procmux$2479: { $procmux$2056_CMP $auto$opt_reduce.cc:134:opt_mux$10507 }
    New ctrl vector for $pmux cell $procmux$7315: { $procmux$6577_CMP $auto$opt_reduce.cc:134:opt_mux$10509 }
    New ctrl vector for $pmux cell $procmux$7819: { $procmux$6589_CMP $auto$opt_reduce.cc:134:opt_mux$10511 }
    New ctrl vector for $pmux cell $procmux$2047: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10513 }
    New ctrl vector for $pmux cell $procmux$4996: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10515 }
    New ctrl vector for $pmux cell $procmux$4636: { $procmux$2054_CMP $auto$opt_reduce.cc:134:opt_mux$10517 }
    New ctrl vector for $pmux cell $procmux$2767: { $procmux$2062_CMP $auto$opt_reduce.cc:134:opt_mux$10519 }
    New ctrl vector for $pmux cell $procmux$7861: { $procmux$6590_CMP $auto$opt_reduce.cc:134:opt_mux$10521 }
    New ctrl vector for $pmux cell $procmux$3151: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10523 }
    New ctrl vector for $pmux cell $procmux$5356: { $procmux$2070_CMP $auto$opt_reduce.cc:134:opt_mux$10525 }
    New ctrl vector for $pmux cell $procmux$3295: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10527 }
    New ctrl vector for $pmux cell $procmux$6979: { $procmux$6569_CMP $auto$opt_reduce.cc:134:opt_mux$10529 }
    New ctrl vector for $pmux cell $procmux$7357: { $procmux$6578_CMP $auto$opt_reduce.cc:134:opt_mux$10531 }
    New ctrl vector for $pmux cell $procmux$2623: { $procmux$2059_CMP $auto$opt_reduce.cc:134:opt_mux$10533 }
    New ctrl vector for $pmux cell $procmux$3487: { $procmux$2077_CMP $auto$opt_reduce.cc:134:opt_mux$10535 }
    New ctrl vector for $pmux cell $procmux$4816: { $procmux$2058_CMP $auto$opt_reduce.cc:134:opt_mux$10537 }
    New ctrl vector for $pmux cell $procmux$2191: { $procmux$2050_CMP $auto$opt_reduce.cc:134:opt_mux$10539 }
    New ctrl vector for $pmux cell $procmux$4726: { $procmux$2056_CMP $auto$opt_reduce.cc:134:opt_mux$10541 }
    New ctrl vector for $pmux cell $procmux$6769: { $procmux$6564_CMP $auto$opt_reduce.cc:134:opt_mux$10543 }
    New ctrl vector for $pmux cell $procmux$5041: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10545 }
    New ctrl vector for $pmux cell $procmux$7399: { $procmux$6579_CMP $auto$opt_reduce.cc:134:opt_mux$10547 }
    New ctrl vector for $pmux cell $procmux$5401: { $procmux$2071_CMP $auto$opt_reduce.cc:134:opt_mux$10549 }
    New ctrl vector for $pmux cell $procmux$7021: { $procmux$6570_CMP $auto$opt_reduce.cc:134:opt_mux$10551 }
    New ctrl vector for $pmux cell $procmux$4321: { $procmux$2079_CMP $auto$opt_reduce.cc:134:opt_mux$10553 }
    New ctrl vector for $pmux cell $procmux$2863: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10555 }
    New ctrl vector for $pmux cell $procmux$2815: { $procmux$2063_CMP $auto$opt_reduce.cc:134:opt_mux$10557 }
    New ctrl vector for $pmux cell $procmux$7441: { $procmux$6580_CMP $auto$opt_reduce.cc:134:opt_mux$10559 }
    New ctrl vector for $pmux cell $procmux$3535: { $procmux$2078_CMP $auto$opt_reduce.cc:134:opt_mux$10561 }
    New ctrl vector for $pmux cell $procmux$5446: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10563 }
    New ctrl vector for $pmux cell $procmux$2287: { $procmux$2052_CMP $auto$opt_reduce.cc:134:opt_mux$10565 }
    New ctrl vector for $pmux cell $procmux$4366: { $auto$opt_reduce.cc:134:opt_mux$10567 $procmux$2048_CMP }
    New ctrl vector for $pmux cell $procmux$5086: { $procmux$2064_CMP $auto$opt_reduce.cc:134:opt_mux$10569 }
    New ctrl vector for $pmux cell $procmux$7063: { $procmux$6571_CMP $auto$opt_reduce.cc:134:opt_mux$10571 }
    New ctrl vector for $pmux cell $procmux$2911: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10573 }
    New ctrl vector for $pmux cell $procmux$7483: { $procmux$6581_CMP $auto$opt_reduce.cc:134:opt_mux$10575 }
    New ctrl vector for $pmux cell $procmux$2239: { $procmux$2051_CMP $auto$opt_reduce.cc:134:opt_mux$10577 }
    New ctrl vector for $pmux cell $procmux$5491: { $procmux$2073_CMP $auto$opt_reduce.cc:134:opt_mux$10579 }
    New ctrl vector for $pmux cell $procmux$6601: { $auto$opt_reduce.cc:134:opt_mux$10581 $procmux$6560_CMP }
    New ctrl vector for $pmux cell $procmux$4411: { $procmux$2049_CMP $auto$opt_reduce.cc:134:opt_mux$10583 }
    New ctrl vector for $pmux cell $procmux$3343: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10585 }
    New ctrl vector for $pmux cell $procmux$7525: { $procmux$6582_CMP $auto$opt_reduce.cc:134:opt_mux$10587 }
    New ctrl vector for $pmux cell $procmux$6811: { $procmux$6565_CMP $auto$opt_reduce.cc:134:opt_mux$10589 }
    New ctrl vector for $pmux cell $procmux$7105: { $procmux$6572_CMP $auto$opt_reduce.cc:134:opt_mux$10591 }
    New ctrl vector for $pmux cell $procmux$5131: { $procmux$2065_CMP $auto$opt_reduce.cc:134:opt_mux$10593 }
    New ctrl vector for $pmux cell $procmux$5536: { $procmux$2074_CMP $auto$opt_reduce.cc:134:opt_mux$10595 }
    New ctrl vector for $pmux cell $procmux$2959: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10597 }
    New ctrl vector for $pmux cell $procmux$2335: { $procmux$2053_CMP $auto$opt_reduce.cc:134:opt_mux$10599 }
    New ctrl vector for $pmux cell $procmux$7567: { $procmux$6583_CMP $auto$opt_reduce.cc:134:opt_mux$10601 }
    New ctrl vector for $pmux cell $procmux$4456: { $procmux$2050_CMP $auto$opt_reduce.cc:134:opt_mux$10603 }
    New ctrl vector for $pmux cell $procmux$4861: { $procmux$2059_CMP $auto$opt_reduce.cc:134:opt_mux$10605 }
    New ctrl vector for $pmux cell $procmux$7147: { $procmux$6573_CMP $auto$opt_reduce.cc:134:opt_mux$10607 }
    New ctrl vector for $pmux cell $procmux$6685: { $procmux$6562_CMP $auto$opt_reduce.cc:134:opt_mux$10609 }
    New ctrl vector for $pmux cell $procmux$5581: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10611 }
    New ctrl vector for $pmux cell $procmux$5176: { $procmux$2066_CMP $auto$opt_reduce.cc:134:opt_mux$10613 }
    New ctrl vector for $pmux cell $procmux$2575: { $procmux$2058_CMP $auto$opt_reduce.cc:134:opt_mux$10615 }
    New ctrl vector for $pmux cell $procmux$2671: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10617 }
    New ctrl vector for $pmux cell $procmux$7609: { $procmux$6584_CMP $auto$opt_reduce.cc:134:opt_mux$10619 }
    New ctrl vector for $pmux cell $procmux$3007: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10621 }
    New ctrl vector for $pmux cell $procmux$6559: { $procmux$6591_CMP $auto$opt_reduce.cc:134:opt_mux$10623 }
    New ctrl vector for $pmux cell $procmux$2095: { $auto$opt_reduce.cc:134:opt_mux$10625 $procmux$2048_CMP }
    New ctrl vector for $pmux cell $procmux$2383: { $procmux$2054_CMP $auto$opt_reduce.cc:134:opt_mux$10627 }
    New ctrl vector for $pmux cell $procmux$4501: { $procmux$2051_CMP $auto$opt_reduce.cc:134:opt_mux$10629 }
    New ctrl vector for $pmux cell $procmux$7189: { $procmux$6574_CMP $auto$opt_reduce.cc:134:opt_mux$10631 }
    New ctrl vector for $pmux cell $procmux$3247: { $procmux$2072_CMP $auto$opt_reduce.cc:134:opt_mux$10633 }
    New ctrl vector for $pmux cell $procmux$5626: { $procmux$2076_CMP $auto$opt_reduce.cc:134:opt_mux$10635 }
    New ctrl vector for $pmux cell $procmux$6853: { $procmux$6566_CMP $auto$opt_reduce.cc:134:opt_mux$10637 }
    New ctrl vector for $pmux cell $procmux$5221: { $procmux$2067_CMP $auto$opt_reduce.cc:134:opt_mux$10639 }
    New ctrl vector for $pmux cell $procmux$7651: { $procmux$6585_CMP $auto$opt_reduce.cc:134:opt_mux$10641 }
    New ctrl vector for $pmux cell $procmux$4681: { $procmux$2055_CMP $auto$opt_reduce.cc:134:opt_mux$10643 }
    New ctrl vector for $pmux cell $procmux$2527: { $procmux$2057_CMP $auto$opt_reduce.cc:134:opt_mux$10645 }
    New ctrl vector for $pmux cell $procmux$4906: { $procmux$2060_CMP $auto$opt_reduce.cc:134:opt_mux$10647 }
    New ctrl vector for $pmux cell $procmux$3391: { $procmux$2075_CMP $auto$opt_reduce.cc:134:opt_mux$10649 }
    New ctrl vector for $pmux cell $procmux$3055: { $procmux$2068_CMP $auto$opt_reduce.cc:134:opt_mux$10651 }
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 96 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~42 debug messages>
Finding identical cells in module `\cva6_lsu_model'.
<suppressed ~12 debug messages>
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Removed a total of 53 cells.

4.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 4255 unused wires.
<suppressed ~3 debug messages>

4.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.8. Rerunning OPT passes. (Maybe there is more to do..)

4.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~149 debug messages>

4.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_model.
  Optimizing cells in module \cva6_processor_shim.
Performed a total of 0 changes.

4.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.7.14. Finished OPT passes. (There is nothing left to do.)

4.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$18 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$50 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$56 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$57 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$59 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$60 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$62 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$63 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$65 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:169$70 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:176$80 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:177$82 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:177$83 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:184$85 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:193$88 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:194$90 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:194$91 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:201$93 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9939_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$9989_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$eq$cva6_lsu_model.v:72$403 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$489 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:148$489 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$490 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:149$490 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$525 ($add).
Removed top 24 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:169$525 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$ne$cva6_lsu_model.v:193$558 ($ne).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$561 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:197$561 ($add).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$570 ($add).
Removed top 30 bits (of 32) from port Y of cell cva6_lsu_model.$add$cva6_lsu_model.v:206$570 ($add).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$689 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$703 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$845 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$856 ($mux).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1009_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1105_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_model.$procmux$1115_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$686 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$700 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$843 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$854 ($mux).
Removed top 1 bits (of 2) from mux cell cva6_lsu_model.$procmux$683 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$697 ($mux).
Removed top 20 bits (of 32) from mux cell cva6_lsu_model.$procmux$691 ($pmux).
Removed top 20 bits (of 32) from wire cva6_lsu_model.$4$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:159$386_DATA[31:0]$517.
Removed top 20 bits (of 32) from wire cva6_lsu_model.$5$mem2reg_rd$\store_instr_i_queue$cva6_lsu_model.v:183$389_DATA[31:0]$544.
Removed top 30 bits (of 32) from wire cva6_lsu_model.$add$cva6_lsu_model.v:148$489_Y.
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$244 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$281 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$308 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$323 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$326 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$338 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$339 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$340 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$341 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$343 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$344 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$345 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$355 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$355 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$356 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$357 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$358 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$364 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$364 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$367 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$367 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$374 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$374 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2064_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2065_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2066_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2067_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2068_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2069_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2070_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2071_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2072_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2073_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2074_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2075_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2076_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2077_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$2078_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3600_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3601_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3602_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3603_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3604_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3605_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3606_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3607_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3608_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3609_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3610_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3611_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3612_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3613_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3614_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5778_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5779_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5780_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5781_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5782_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5783_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5784_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5785_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5786_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5787_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5788_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5789_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5790_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5791_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5792_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6576_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6577_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6578_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6579_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6580_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6581_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6582_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6583_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6584_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6585_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6586_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6587_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6588_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6589_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$6590_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$355_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$323_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$340_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$345_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$343_Y.

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

4.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

4.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..

4.11.4. Finished fast OPT passes.

4.12. Printing statistics.

=== cva6_lsu_formal ===

   Number of wires:                145
   Number of wire bits:           5233
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                136
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         7
     $dff                           21
     $eq                            23
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $lt                             2
     $mux                           45
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_model ===

   Number of wires:                186
   Number of wire bits:           1426
   Number of public wires:          40
   Number of public wire bits:     346
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $add                            5
     $adff                          28
     $eq                            12
     $ge                             2
     $logic_and                      2
     $logic_not                      5
     $logic_or                       4
     $mux                          104
     $ne                             4
     $not                            2
     $pmux                           5
     $reduce_bool                    2

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_model                  1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_model                1

   Number of wires:               2099
   Number of wire bits:          42757
   Number of public wires:         308
   Number of public wire bits:   13768
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2032
     $add                           21
     $adff                          56
     $and                            2
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         7
     $dff                          177
     $eq                           323
     $ge                             4
     $gt                             1
     $le                             1
     $logic_and                     24
     $logic_not                     35
     $logic_or                      11
     $lt                             6
     $mux                          983
     $ne                             8
     $not                            4
     $or                             2
     $pmux                         208
     $reduce_bool                    8
     $reduce_or                    128
     $shl                            2
     $shr                            4
     $sub                            6
     $xor                            2

4.13. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

5. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

6. Executing ASYNC2SYNC pass.
Replacing cva6_lsu_model.$procdff$10177 ($adff): ARST=\rst_ni, D=$0\instr_i_pc[7:0], Q=\instr_i_pc
Replacing cva6_lsu_model.$procdff$10178 ($adff): ARST=\rst_ni, D=$0\queue_store_ptr[1:0], Q=\queue_store_ptr
Replacing cva6_lsu_model.$procdff$10179 ($adff): ARST=\rst_ni, D=$0\queue_commit_ptr[1:0], Q=\queue_commit_ptr
Replacing cva6_lsu_model.$procdff$10180 ($adff): ARST=\rst_ni, D=$0\queue_serve_ptr[1:0], Q=\queue_serve_ptr
Replacing cva6_lsu_model.$procdff$10181 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue[31:0], Q=\load_instr_i_queue
Replacing cva6_lsu_model.$procdff$10182 ($adff): ARST=\rst_ni, D=$0\load_instr_i_queue_pc[7:0], Q=\load_instr_i_queue_pc
Replacing cva6_lsu_model.$procdff$10183 ($adff): ARST=\rst_ni, D=$0\load_instr_queue_state[1:0], Q=\load_instr_queue_state
Replacing cva6_lsu_model.$procdff$10196 ($adff): ARST=\rst_ni, D=$0\ready_flag[0:0], Q=\ready_flag
Replacing cva6_lsu_model.$procdff$10197 ($adff): ARST=\rst_ni, D=\instr_i, Q=\inner_instr_i
Replacing cva6_lsu_model.$procdff$10198 ($adff): ARST=\rst_ni, D=\inner_instr_i, Q=\x_inner_instr_i
Replacing cva6_lsu_model.$procdff$10199 ($adff): ARST=\rst_ni, D=\instr_valid_i, Q=\inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10200 ($adff): ARST=\rst_ni, D=\inner_instr_valid_i, Q=\x_inner_instr_valid_i
Replacing cva6_lsu_model.$procdff$10201 ($adff): ARST=\rst_ni, D=\is_load_i, Q=\inner_is_load_i
Replacing cva6_lsu_model.$procdff$10202 ($adff): ARST=\rst_ni, D=\inner_is_load_i, Q=\x_inner_is_load_i
Replacing cva6_lsu_model.$procdff$10203 ($adff): ARST=\rst_ni, D=\store_mem_resp_i, Q=\inner_store_mem_resp_i
Replacing cva6_lsu_model.$procdff$10205 ($adff): ARST=\rst_ni, D=\load_mem_resp_i, Q=\inner_load_mem_resp_i
Replacing cva6_lsu_model.$procdff$10210 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[0][31:0], Q=\store_instr_i_queue[0]
Replacing cva6_lsu_model.$procdff$10211 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[1][31:0], Q=\store_instr_i_queue[1]
Replacing cva6_lsu_model.$procdff$10212 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[2][31:0], Q=\store_instr_i_queue[2]
Replacing cva6_lsu_model.$procdff$10213 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue[3][31:0], Q=\store_instr_i_queue[3]
Replacing cva6_lsu_model.$procdff$10214 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[0][7:0], Q=\store_instr_i_queue_pc[0]
Replacing cva6_lsu_model.$procdff$10215 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[1][7:0], Q=\store_instr_i_queue_pc[1]
Replacing cva6_lsu_model.$procdff$10216 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[2][7:0], Q=\store_instr_i_queue_pc[2]
Replacing cva6_lsu_model.$procdff$10217 ($adff): ARST=\rst_ni, D=$0\store_instr_i_queue_pc[3][7:0], Q=\store_instr_i_queue_pc[3]
Replacing cva6_lsu_model.$procdff$10218 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[0][1:0], Q=\store_instr_queue_state[0]
Replacing cva6_lsu_model.$procdff$10219 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[1][1:0], Q=\store_instr_queue_state[1]
Replacing cva6_lsu_model.$procdff$10220 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[2][1:0], Q=\store_instr_queue_state[2]
Replacing cva6_lsu_model.$procdff$10221 ($adff): ARST=\rst_ni, D=$0\store_instr_queue_state[3][1:0], Q=\store_instr_queue_state[3]

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

8. Executing SETUNDEF pass (replace undef values with defined constants).

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
Removed a total of 0 cells.

9.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$10457 ($dff) from module cva6_lsu_formal (D = $procmux$10170_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11038 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$10456 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$10435 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11041 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$10434 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11043 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$10433 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11045 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:201$93_Y, Q = \pc_2).
Adding SRST signal on $procdff$10432 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11049 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:184$85_Y, Q = \pc_1).
Adding SRST signal on $procdff$10431 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11053 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$10430 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11055 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:174$1_DATA[31:0]$78, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$10429 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11057 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$10428 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11059 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:191$2_DATA[31:0]$86, Q = \tb_io_instr_i_2).
Adding EN signal on $procdff$10411 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$10410 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$10409 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$10408 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$10407 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$10406 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$10405 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$10404 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$10403 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$10402 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$10401 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$10400 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$10399 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$10398 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$10397 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$10396 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$10395 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$10394 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$10393 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$10392 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$10391 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$10390 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$10389 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$10388 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$10387 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$10386 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$10385 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$10384 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$10383 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$10382 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$10381 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$10380 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$10379 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$10378 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$10377 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$10376 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$10375 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$10374 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$10373 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$10372 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$10371 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$10370 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$10369 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$10368 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$10367 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$10366 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$10365 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$10364 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$10363 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$10362 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$10361 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$10360 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$10359 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$10358 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$10357 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$10356 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$10355 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$10354 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$10353 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$10352 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$10351 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$10350 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$10349 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$10348 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$10328 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11573 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$10327 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$10327 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11596 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$374_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$11591 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$10326 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$10325 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$10323 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$10322 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11604 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$10321 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11610 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$10320 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11616 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$10319 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$10318 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11635 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$10317 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11643 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$10316 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$11653 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$10315 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$11661 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$10314 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$11669 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).

9.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 253 unused cells and 253 unused wires.
<suppressed ~256 debug messages>

9.5. Rerunning OPT passes. (Removed registers in this run.)

9.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_model.
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>

9.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_model'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

9.8. Executing OPT_DFF pass (perform DFF optimizations).

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_model..
Finding unused cells or wires in module \cva6_processor_shim..
Removed 0 unused cells and 73 unused wires.
<suppressed ~1 debug messages>

9.10. Finished fast OPT passes.

10. Executing CHECK pass (checking for obvious problems).
Checking module cva6_lsu_formal...
Checking module cva6_lsu_model...
Checking module cva6_processor_shim...
Found and reported 0 problems.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model

11.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_model
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

12. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 6 unique messages, 11 total
End of script. Logfile hash: 71099c5f98, CPU: user 6.31s system 0.08s, MEM: 92.88 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 29% 3x check (1 sec), 19% 8x opt_clean (1 sec), ...
