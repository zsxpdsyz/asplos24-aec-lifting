
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cva6_lsu_formal.v
Parsing formal SystemVerilog input from `cva6_lsu_formal.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_formal'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: load_store_unit.v
Parsing formal SystemVerilog input from `load_store_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_store_unit'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: shift_reg.v
Parsing formal SystemVerilog input from `shift_reg.v' to AST representation.
Storing AST representation for module `$abstract\shift_reg'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: store_unit.v
Parsing formal SystemVerilog input from `store_unit.v' to AST representation.
Storing AST representation for module `$abstract\store_unit'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: store_buffer.v
Parsing formal SystemVerilog input from `store_buffer.v' to AST representation.
Storing AST representation for module `$abstract\store_buffer'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: amo_buffer.v
Parsing formal SystemVerilog input from `amo_buffer.v' to AST representation.
Storing AST representation for module `$abstract\amo_buffer'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: load_unit.v
Parsing formal SystemVerilog input from `load_unit.v' to AST representation.
Storing AST representation for module `$abstract\load_unit'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: lsu_bypass.v
Parsing formal SystemVerilog input from `lsu_bypass.v' to AST representation.
Storing AST representation for module `$abstract\lsu_bypass'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: cva6_processor_shim.v
Parsing formal SystemVerilog input from `cva6_processor_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_processor_shim'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: cva6_lsu_shim.v
Parsing formal SystemVerilog input from `cva6_lsu_shim.v' to AST representation.
Storing AST representation for module `$abstract\cva6_lsu_shim'.
Successfully finished Verilog frontend.

11. Executing PREP pass.

11.1. Executing HIERARCHY pass (managing design hierarchy).

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_formal'.
Generating RTLIL representation for module `\cva6_lsu_formal'.

11.2.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal

11.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_processor_shim'.
Generating RTLIL representation for module `\cva6_processor_shim'.
Warning: Replacing memory \regfile with list of registers. See cva6_processor_shim.v:239, cva6_processor_shim.v:234
Warning: Replacing memory \mem with list of registers. See cva6_processor_shim.v:234, cva6_processor_shim.v:228

11.2.3. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim

11.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\cva6_lsu_shim'.
Generating RTLIL representation for module `\cva6_lsu_shim'.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.
cva6_lsu_shim.v:0: Warning: System task `$display' outside initial block is unsupported.

11.2.5. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim

11.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\load_store_unit'.
Generating RTLIL representation for module `\load_store_unit'.
Note: Assuming pure combinatorial block at load_store_unit.v:320.2-339.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
load_store_unit.v:205: Warning: Range [33:0] select out of bounds on signal `\icache_areq_i': Setting 1 MSB bits to undef.
load_store_unit.v:218: Warning: Range [33:12] select out of bounds on signal `\mmu_vaddr': Setting 2 MSB bits to undef.

11.2.7. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit

11.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\lsu_bypass'.
Generating RTLIL representation for module `\lsu_bypass'.

11.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\shift_reg'.
Generating RTLIL representation for module `\shift_reg'.
Parameter \ArianeCfg

11.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\load_unit'.
Parameter \ArianeCfg
Generating RTLIL representation for module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.

11.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\store_unit'.
Generating RTLIL representation for module `\store_unit'.

11.2.12. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit

11.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\amo_buffer'.
Generating RTLIL representation for module `\amo_buffer'.

11.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\store_buffer'.
Generating RTLIL representation for module `\store_buffer'.

11.2.15. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer

11.2.16. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 \lsu_bypass
Used module:                 \shift_reg
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Removing unused module `$abstract\cva6_lsu_shim'.
Removing unused module `$abstract\cva6_processor_shim'.
Removing unused module `$abstract\lsu_bypass'.
Removing unused module `$abstract\load_unit'.
Removing unused module `$abstract\amo_buffer'.
Removing unused module `$abstract\store_buffer'.
Removing unused module `$abstract\store_unit'.
Removing unused module `$abstract\shift_reg'.
Removing unused module `$abstract\load_store_unit'.
Removing unused module `$abstract\cva6_lsu_formal'.
Removed 10 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

11.3. Executing PROC pass (convert processes to netlists).

11.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
Cleaned up 1 empty switch.

11.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$store_buffer.v:234$896 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_buffer.v:220$894 in module store_buffer.
Marked 23 switch rules as full_case in process $proc$store_buffer.v:166$859 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:142$814 in module store_buffer.
Marked 3 switch rules as full_case in process $proc$store_buffer.v:85$676 in module store_buffer.
Marked 1 switch rules as full_case in process $proc$store_unit.v:0$640 in module store_unit.
Marked 1 switch rules as full_case in process $proc$store_unit.v:271$638 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:196$622 in module store_unit.
Marked 3 switch rules as full_case in process $proc$store_unit.v:196$622 in module store_unit.
Removed 1 dead cases from process $proc$store_unit.v:99$611 in module store_unit.
Marked 12 switch rules as full_case in process $proc$store_unit.v:99$611 in module store_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:301$605 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:294$604 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$load_unit.v:264$578 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 5 switch rules as full_case in process $proc$load_unit.v:244$568 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 23 switch rules as full_case in process $proc$load_unit.v:145$544 in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Marked 1 switch rules as full_case in process $proc$shift_reg.v:19$529 in module shift_reg.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:79$527 in module lsu_bypass.
Marked 1 switch rules as full_case in process $proc$lsu_bypass.v:73$523 in module lsu_bypass.
Marked 5 switch rules as full_case in process $proc$lsu_bypass.v:41$475 in module lsu_bypass.
Removed 1 dead cases from process $proc$load_store_unit.v:0$453 in module load_store_unit.
Marked 4 switch rules as full_case in process $proc$load_store_unit.v:0$453 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$448 in module load_store_unit.
Removed 2 dead cases from process $proc$load_store_unit.v:0$431 in module load_store_unit.
Marked 5 switch rules as full_case in process $proc$load_store_unit.v:0$431 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:0$426 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:221$424 in module load_store_unit.
Marked 11 switch rules as full_case in process $proc$load_store_unit.v:519$415 in module load_store_unit.
Marked 1 switch rules as full_case in process $proc$load_store_unit.v:320$414 in module load_store_unit.
Marked 10 switch rules as full_case in process $proc$cva6_lsu_shim.v:290$382 in module cva6_lsu_shim.
Removed 8 dead cases from process $proc$cva6_processor_shim.v:192$134 in module cva6_processor_shim.
Marked 28 switch rules as full_case in process $proc$cva6_processor_shim.v:192$134 in module cva6_processor_shim.
Removed 2 dead cases from process $proc$cva6_lsu_formal.v:145$32 in module cva6_lsu_formal.
Marked 8 switch rules as full_case in process $proc$cva6_lsu_formal.v:145$32 in module cva6_lsu_formal.
Removed a total of 15 dead cases.

11.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 26 redundant assignments.
Promoted 345 assignments to connections.

11.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
  Set init value: $formal$cva6_lsu_formal.v:206$13_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
  Set init value: $formal$cva6_lsu_formal.v:171$12_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
  Set init value: $formal$cva6_lsu_formal.v:169$11_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
  Set init value: $formal$cva6_lsu_formal.v:161$10_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
  Set init value: $formal$cva6_lsu_formal.v:160$9_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$106'.
  Set init value: $formal$cva6_lsu_formal.v:159$8_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
  Set init value: $formal$cva6_lsu_formal.v:156$7_EN = 1'0
Found init rule in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
  Set init value: \init = 1'1
  Set init value: \reset = 1'1
  Set init value: \counter = 3'000
  Set init value: \CLK_CYCLE = 5'00000

11.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:234$896'.
Found async reset \rst_ni in `\store_buffer.$proc$store_buffer.v:220$894'.
Found async reset \rst_ni in `\store_unit.$proc$store_unit.v:271$638'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$605'.
Found async reset \rst_ni in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$578'.
Found async reset \rst_ni in `\shift_reg.$proc$shift_reg.v:19$529'.
Found async reset \rst_ni in `\lsu_bypass.$proc$lsu_bypass.v:79$527'.
Found async reset \rst_ni in `\load_store_unit.$proc$load_store_unit.v:221$424'.

11.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_buffer.$proc$store_buffer.v:234$896'.
     1/4: $0\commit_status_cnt_q[2:0]
     2/4: $0\commit_write_pointer_q[1:0]
     3/4: $0\commit_read_pointer_q[1:0]
     4/4: $0\commit_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:220$894'.
     1/4: $0\speculative_status_cnt_q[2:0]
     2/4: $0\speculative_write_pointer_q[1:0]
     3/4: $0\speculative_read_pointer_q[1:0]
     4/4: $0\speculative_queue_q[291:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:166$859'.
     1/50: $19\page_offset_matches_o[0:0]
     2/50: $18\page_offset_matches_o[0:0]
     3/50: $19\sv2v_autoblock_2._sv2v_jump[1:0]
     4/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
     5/50: $18\sv2v_autoblock_2._sv2v_jump[1:0]
     6/50: $17\page_offset_matches_o[0:0]
     7/50: $5\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
     8/50: $17\sv2v_autoblock_2._sv2v_jump[1:0]
     9/50: $16\page_offset_matches_o[0:0]
    10/50: $16\sv2v_autoblock_2._sv2v_jump[1:0]
    11/50: $15\page_offset_matches_o[0:0]
    12/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    13/50: $15\sv2v_autoblock_2._sv2v_jump[1:0]
    14/50: $14\page_offset_matches_o[0:0]
    15/50: $14\sv2v_autoblock_2._sv2v_jump[1:0]
    16/50: $13\page_offset_matches_o[0:0]
    17/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    18/50: $13\sv2v_autoblock_2._sv2v_jump[1:0]
    19/50: $12\page_offset_matches_o[0:0]
    20/50: $12\sv2v_autoblock_2._sv2v_jump[1:0]
    21/50: $11\page_offset_matches_o[0:0]
    22/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    23/50: $11\sv2v_autoblock_2._sv2v_jump[1:0]
    24/50: $10\page_offset_matches_o[0:0]
    25/50: $9\page_offset_matches_o[0:0]
    26/50: $10\sv2v_autoblock_2._sv2v_jump[1:0]
    27/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i[31:0]
    28/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break[31:0]
    29/50: $9\sv2v_autoblock_2._sv2v_jump[1:0]
    30/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i[31:0]
    31/50: $8\sv2v_autoblock_2._sv2v_jump[1:0]
    32/50: $8\page_offset_matches_o[0:0]
    33/50: $4\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    34/50: $7\sv2v_autoblock_2._sv2v_jump[1:0]
    35/50: $7\page_offset_matches_o[0:0]
    36/50: $6\sv2v_autoblock_2._sv2v_jump[1:0]
    37/50: $6\page_offset_matches_o[0:0]
    38/50: $3\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    39/50: $5\sv2v_autoblock_2._sv2v_jump[1:0]
    40/50: $5\page_offset_matches_o[0:0]
    41/50: $4\sv2v_autoblock_2._sv2v_jump[1:0]
    42/50: $4\page_offset_matches_o[0:0]
    43/50: $2\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    44/50: $3\sv2v_autoblock_2._sv2v_jump[1:0]
    45/50: $3\page_offset_matches_o[0:0]
    46/50: $2\sv2v_autoblock_2._sv2v_jump[1:0]
    47/50: $2\page_offset_matches_o[0:0]
    48/50: $1\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break[31:0]
    49/50: $1\sv2v_autoblock_2._sv2v_jump[1:0]
    50/50: $1\page_offset_matches_o[0:0]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:142$814'.
     1/16: $3\store_if.commit_status_cnt[4:0]
     2/16: $1\commit_write_pointer_n[1:0]
     3/16: $3\commit_queue_n[291:0]
     4/16: $1$bitselwrite$data$store_buffer.v:160$667[291:0]$840
     5/16: $1$bitselwrite$mask$store_buffer.v:160$666[291:0]$839
     6/16: $2\store_if.commit_status_cnt[4:0]
     7/16: $2\commit_read_pointer_n[1:0]
     8/16: $2\commit_queue_n[291:0]
     9/16: $2$bitselwrite$data$store_buffer.v:154$665[291:0]$827
    10/16: $2$bitselwrite$mask$store_buffer.v:154$664[291:0]$826
    11/16: $1$bitselwrite$data$store_buffer.v:154$665[291:0]$825
    12/16: $1$bitselwrite$mask$store_buffer.v:154$664[291:0]$824
    13/16: $1\store_if.commit_status_cnt[4:0]
    14/16: $1\commit_read_pointer_n[1:0]
    15/16: $1\commit_queue_n[291:0]
    16/16: $1\req_port_o[9:9]
Creating decoders for process `\store_buffer.$proc$store_buffer.v:141$813'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:138$807'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:135$801'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:132$795'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:129$789'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:126$783'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:123$782'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:120$781'.
Creating decoders for process `\store_buffer.$proc$store_buffer.v:85$676'.
     1/25: $1\speculative_status_cnt_n[2:0]
     2/25: $2\speculative_write_pointer_n[1:0]
     3/25: $1\core_if.sv2v_autoblock_1.i[31:0]
     4/25: $6\speculative_queue_n[219:219]
     5/25: $5\speculative_queue_n[146:146]
     6/25: $4\speculative_queue_n[73:73]
     7/25: $3\speculative_queue_n[0:0]
     8/25: $2\core_if.speculative_status_cnt[4:0]
     9/25: $1\speculative_read_pointer_n[1:0]
    10/25: $2\speculative_queue_n[291:0]
    11/25: $1$bitselwrite$data$store_buffer.v:103$663[291:0]$769
    12/25: $1$bitselwrite$mask$store_buffer.v:103$662[291:0]$768
    13/25: $1\core_if.speculative_status_cnt[4:0]
    14/25: $1\speculative_write_pointer_n[1:0]
    15/25: $1\speculative_queue_n[291:0]
    16/25: $1$bitselwrite$data$store_buffer.v:98$661[291:0]$700
    17/25: $1$bitselwrite$mask$store_buffer.v:98$660[291:0]$699
    18/25: $1$bitselwrite$data$store_buffer.v:97$659[291:0]$698
    19/25: $1$bitselwrite$mask$store_buffer.v:97$658[291:0]$697
    20/25: $1$bitselwrite$data$store_buffer.v:96$657[291:0]$696
    21/25: $1$bitselwrite$mask$store_buffer.v:96$656[291:0]$695
    22/25: $1$bitselwrite$data$store_buffer.v:95$655[291:0]$694
    23/25: $1$bitselwrite$mask$store_buffer.v:95$654[291:0]$693
    24/25: $1$bitselwrite$data$store_buffer.v:94$653[291:0]$692
    25/25: $1$bitselwrite$mask$store_buffer.v:94$652[291:0]$691
Creating decoders for process `\store_unit.$proc$store_unit.v:0$640'.
     1/1: $1\ariane_pkg_is_amo$func$store_unit.v:86$610.$result[0:0]$647
Creating decoders for process `\store_unit.$proc$store_unit.v:271$638'.
     1/6: $0\amo_op_q[3:0]
     2/6: $0\st_data_size_q[1:0]
     3/6: $0\trans_id_q[2:0]
     4/6: $0\st_data_q[31:0]
     5/6: $0\st_be_q[3:0]
     6/6: $0\state_q[1:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:196$622'.
     1/4: $1\amo_op_d[3:0]
     2/4: $1\ariane_pkg_extract_transfer_size$func$store_unit.v:199$609.$result[1:0]$633
     3/4: $1\ariane_pkg_data_align$func$store_unit.v:198$608.data_tmp[63:0]$631 [63:32]
     4/4: $1\ariane_pkg_data_align$func$store_unit.v:198$608.data_tmp[63:0]$631 [31:0]
Creating decoders for process `\store_unit.$proc$store_unit.v:99$611'.
     1/28: $11\state_d[1:0]
     2/28: $2\valid_o[0:0]
     3/28: $10\state_d[1:0]
     4/28: $3\st_valid[0:0]
     5/28: $8\pop_st_o[0:0]
     6/28: $9\state_d[1:0]
     7/28: $8\state_d[1:0]
     8/28: $7\pop_st_o[0:0]
     9/28: $7\state_d[1:0]
    10/28: $6\pop_st_o[0:0]
    11/28: $6\state_d[1:0]
    12/28: $5\state_d[1:0]
    13/28: $5\pop_st_o[0:0]
    14/28: $3\translation_req_o[0:0]
    15/28: $2\st_valid[0:0]
    16/28: $4\pop_st_o[0:0]
    17/28: $4\state_d[1:0]
    18/28: $3\pop_st_o[0:0]
    19/28: $3\state_d[1:0]
    20/28: $2\state_d[1:0]
    21/28: $2\pop_st_o[0:0]
    22/28: $2\translation_req_o[0:0]
    23/28: $1\state_d[1:0]
    24/28: $1\translation_req_o[0:0]
    25/28: $1\pop_st_o[0:0]
    26/28: $1\st_valid_without_flush[0:0]
    27/28: $1\valid_o[0:0]
    28/28: $1\st_valid[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$605'.
     1/3: $0\fp_sign_q[0:0]
     2/3: $0\signed_q[0:0]
     3/3: $0\idx_q[1:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$604'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$578'.
     1/2: $0\load_data_q[12:0]
     2/2: $0\state_q[3:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$568'.
     1/9: $5\valid_o[0:0]
     2/9: $1\trans_id_o[2:0]
     3/9: $3\ex_o[0:0]
     4/9: $4\valid_o[0:0]
     5/9: $2\ex_o[0:0]
     6/9: $3\valid_o[0:0]
     7/9: $2\valid_o[0:0]
     8/9: $1\ex_o[0:0]
     9/9: $1\valid_o[0:0]
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
     1/45: $19\state_d[3:0]
     2/45: $1\load_data_d[12:0]
     3/45: $13\pop_ld_o[0:0]
     4/45: $12\pop_ld_o[0:0]
     5/45: $18\state_d[3:0]
     6/45: $2\req_port_o[1:0] [1]
     7/45: $17\state_d[3:0]
     8/45: $11\pop_ld_o[0:0]
     9/45: $16\state_d[3:0]
    10/45: $15\state_d[3:0]
    11/45: $10\pop_ld_o[0:0]
    12/45: $14\state_d[3:0]
    13/45: $9\pop_ld_o[0:0]
    14/45: $7\req_port_o[9:9]
    15/45: $13\state_d[3:0]
    16/45: $8\pop_ld_o[0:0]
    17/45: $6\req_port_o[9:9]
    18/45: $3\translation_req_o[0:0]
    19/45: $12\state_d[3:0]
    20/45: $7\pop_ld_o[0:0]
    21/45: $11\state_d[3:0]
    22/45: $10\state_d[3:0]
    23/45: $6\pop_ld_o[0:0]
    24/45: $2\req_port_o[1:0] [0]
    25/45: $8\req_port_o[1:1]
    26/45: $9\state_d[3:0]
    27/45: $8\state_d[3:0]
    28/45: $6\state_d[3:0]
    29/45: $5\pop_ld_o[0:0]
    30/45: $5\state_d[3:0]
    31/45: $4\state_d[3:0]
    32/45: $4\pop_ld_o[0:0]
    33/45: $3\state_d[3:0]
    34/45: $3\pop_ld_o[0:0]
    35/45: $5\req_port_o[9:9]
    36/45: $2\state_d[3:0]
    37/45: $2\pop_ld_o[0:0]
    38/45: $4\req_port_o[9:9]
    39/45: $2\translation_req_o[0:0]
    40/45: $1\state_d[3:0]
    41/45: $1\pop_ld_o[0:0]
    42/45: $3\req_port_o[9:9]
    43/45: $1\translation_req_o[0:0]
    44/45: $7\state_d[3:0]
    45/45: $1\ariane_pkg_extract_transfer_size$func$load_unit.v:153$531.$result[1:0]$547
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$537'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$536'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$535'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$534'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$533'.
Creating decoders for process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$532'.
Creating decoders for process `\shift_reg.$proc$shift_reg.v:19$529'.
     1/1: $0\d_o[100:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:79$527'.
     1/4: $0\read_pointer_q[0:0]
     2/4: $0\write_pointer_q[0:0]
     3/4: $0\status_cnt_q[1:0]
     4/4: $0\mem_q[169:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:73$523'.
     1/1: $1\lsu_ctrl_o[84:0]
Creating decoders for process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
     1/20: $5\mem_n[169:0]
     2/20: $3\read_pointer[0:0]
     3/20: $2\write_pointer[0:0]
     4/20: $4\status_cnt[1:0]
     5/20: $4\mem_n[169:0]
     6/20: $3\status_cnt[1:0]
     7/20: $2\read_pointer[0:0]
     8/20: $3\mem_n[169:0]
     9/20: $1$bitselwrite$data$lsu_bypass.v:57$473[169:0]$510
    10/20: $1$bitselwrite$mask$lsu_bypass.v:57$472[169:0]$509
    11/20: $2\status_cnt[1:0]
    12/20: $1\read_pointer[0:0]
    13/20: $2\mem_n[169:0]
    14/20: $1$bitselwrite$data$lsu_bypass.v:52$471[169:0]$497
    15/20: $1$bitselwrite$mask$lsu_bypass.v:52$470[169:0]$496
    16/20: $1\status_cnt[1:0]
    17/20: $1\write_pointer[0:0]
    18/20: $1\mem_n[169:0]
    19/20: $1$bitselwrite$data$lsu_bypass.v:47$469[169:0]$483
    20/20: $1$bitselwrite$mask$lsu_bypass.v:47$468[169:0]$482
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$453'.
     1/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406._sv2v_jump[1:0]$467
     2/8: $4\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.$result[3:0]$466
     3/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406._sv2v_jump[1:0]$464
     4/8: $3\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.$result[3:0]$463
     5/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406._sv2v_jump[1:0]$462
     6/8: $2\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.$result[3:0]$461
     7/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406._sv2v_jump[1:0]$460
     8/8: $1\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.$result[3:0]$459
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$448'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$405.$result[1:0]$452
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$431'.
     1/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$404._sv2v_jump[1:0]$447
     2/10: $5\ariane_pkg_be_gen$func$load_store_unit.v:514$404.$result[7:0]$446
     3/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$404._sv2v_jump[1:0]$444
     4/10: $4\ariane_pkg_be_gen$func$load_store_unit.v:514$404.$result[7:0]$443
     5/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$404._sv2v_jump[1:0]$442
     6/10: $3\ariane_pkg_be_gen$func$load_store_unit.v:514$404.$result[7:0]$441
     7/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$404._sv2v_jump[1:0]$440
     8/10: $2\ariane_pkg_be_gen$func$load_store_unit.v:514$404.$result[7:0]$439
     9/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$404._sv2v_jump[1:0]$438
    10/10: $1\ariane_pkg_be_gen$func$load_store_unit.v:514$404.$result[7:0]$437
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:0$426'.
     1/1: $1\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$403.$result[1:0]$430
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:221$424'.
     1/2: $0\translation_valid[0:0]
     2/2: $0\mmu_paddr[33:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:519$415'.
     1/11: $6\misaligned_exception[64:0]
     2/11: $5\misaligned_exception[64:0]
     3/11: $4\misaligned_exception[64:0]
     4/11: $3\misaligned_exception[64:0]
     5/11: $2\misaligned_exception[64:0]
     6/11: $1\misaligned_exception[64:0]
     7/11: $5\data_misaligned[0:0]
     8/11: $4\data_misaligned[0:0]
     9/11: $3\data_misaligned[0:0]
    10/11: $2\data_misaligned[0:0]
    11/11: $1\data_misaligned[0:0]
Creating decoders for process `\load_store_unit.$proc$load_store_unit.v:320$414'.
     1/4: $1\mmu_vaddr[31:0]
     2/4: $1\translation_req[0:0]
     3/4: $1\ld_valid_i[0:0]
     4/4: $1\st_valid_i[0:0]
Creating decoders for process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
     1/45: $6\store_req_state[1:0]
     2/45: $5\tb_io_commit_i[0:0]
     3/45: $5\store_req_state[1:0]
     4/45: $4\tb_io_commit_i[0:0]
     5/45: $4\store_req_state[1:0]
     6/45: $6\tb_io_lsu_valid_i[0:0]
     7/45: $3\tb_io_commit_i[0:0]
     8/45: $6\load_req_state[1:0]
     9/45: $4\tb_io_commit_tran_id_i[2:0]
    10/45: $5\load_req_state[1:0]
    11/45: $3\tb_io_commit_tran_id_i[2:0]
    12/45: $5\tb_io_lsu_valid_i[0:0]
    13/45: $4\load_req_state[1:0]
    14/45: $4\tb_io_lsu_valid_i[0:0]
    15/45: $4\tb_io_fu_data_i[110:0]
    16/45: $4\raise_load_request$func$cva6_lsu_shim.v:0$375.addr[31:0]$393
    17/45: $3\store_req_state[1:0]
    18/45: $3\tb_io_lsu_valid_i[0:0]
    19/45: $3\tb_io_fu_data_i[110:0]
    20/45: $3\raise_store_request$func$cva6_lsu_shim.v:0$374.addr[31:0]$391
    21/45: $3\raise_load_request$func$cva6_lsu_shim.v:0$375.addr[31:0]$392
    22/45: $3\load_req_state[1:0]
    23/45: $2\raise_load_request$func$cva6_lsu_shim.v:0$375.addr[31:0]$389
    24/45: $2\raise_store_request$func$cva6_lsu_shim.v:0$374.addr[31:0]$388
    25/45: $2\store_req_state[1:0]
    26/45: $2\load_req_state[1:0]
    27/45: $2\tb_io_lsu_valid_i[0:0]
    28/45: $2\tb_io_fu_data_i[110:0]
    29/45: $2\tb_io_commit_tran_id_i[2:0]
    30/45: $2\tb_io_commit_i[0:0]
    31/45: $2\tb_io_dcache_req_ports_i[104:104]
    32/45: $1\tb_io_dcache_req_ports_i[104:0] [104]
    33/45: $1\tb_io_dcache_req_ports_i[104:0] [103:70]
    34/45: $1\tb_io_dcache_req_ports_i[104:0] [69:35]
    35/45: $1\tb_io_dcache_req_ports_i[104:0] [34:0]
    36/45: $1\load_req_state[1:0]
    37/45: $1\load_memreq_state[2:0]
    38/45: $1\x_load_mem_resp_i[0:0]
    39/45: $1\tb_io_lsu_valid_i[0:0]
    40/45: $1\tb_io_fu_data_i[110:0]
    41/45: $1\tb_io_commit_tran_id_i[2:0]
    42/45: $1\tb_io_commit_i[0:0]
    43/45: $1\store_req_state[1:0]
    44/45: $1\raise_load_request$func$cva6_lsu_shim.v:0$375.addr[31:0]$387
    45/45: $1\raise_store_request$func$cva6_lsu_shim.v:0$374.addr[31:0]$386
Creating decoders for process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
     1/587: $3\load_cooldown[2:0]
     2/587: $2\load_cooldown[2:0]
     3/587: $2\tb_io_load_mem_resp_i[0:0]
     4/587: $5\tb_io_store_mem_resp_i[0:0]
     5/587: $5\store_cooldown[0:0]
     6/587: $8\store_count[2:0]
     7/587: $4\store_cooldown[0:0]
     8/587: $4\tb_io_store_mem_resp_i[0:0]
     9/587: $3\tb_io_store_mem_resp_i[0:0]
    10/587: $3\store_cooldown[0:0]
    11/587: $7\store_count[2:0]
    12/587: $6\store_count[2:0]
    13/587: $2\store_cooldown[0:0]
    14/587: $2\tb_io_store_mem_resp_i[0:0]
    15/587: $12\ready_o[0:0]
    16/587: $11\ready_o[0:0]
    17/587: $9\tb_io_store_commit_i[0:0]
    18/587: $9\store_uncommitted[0:0]
    19/587: $8\tb_io_store_commit_i[0:0]
    20/587: $9\loadstore_fsm[2:0]
    21/587: $8\store_uncommitted[0:0]
    22/587: $7\tb_io_store_commit_i[0:0]
    23/587: $10\ready_o[0:0]
    24/587: $8\loadstore_fsm[2:0]
    25/587: $7\store_uncommitted[0:0]
    26/587: $6\tb_io_store_commit_i[0:0]
    27/587: $9\ready_o[0:0]
    28/587: $7\loadstore_fsm[2:0]
    29/587: $6\tb_io_instr_valid_i[0:0]
    30/587: $6\store_uncommitted[0:0]
    31/587: $5\tb_io_store_commit_i[0:0]
    32/587: $8\ready_o[0:0]
    33/587: $5\load_count[0:0]
    34/587: $5\tb_io_instr_valid_i[0:0]
    35/587: $5\tb_io_is_load_i[0:0]
    36/587: $5\tb_io_instr_i[31:0]
    37/587: $5\store_uncommitted[0:0]
    38/587: $5\store_count[2:0]
    39/587: $6\loadstore_fsm[2:0]
    40/587: $4\store_uncommitted[0:0]
    41/587: $4\store_count[2:0]
    42/587: $4\load_count[0:0]
    43/587: $4\tb_io_instr_valid_i[0:0]
    44/587: $4\tb_io_is_load_i[0:0]
    45/587: $4\tb_io_instr_i[31:0]
    46/587: $4\tb_io_store_commit_i[0:0]
    47/587: $7\ready_o[0:0]
    48/587: $3\store_uncommitted[0:0]
    49/587: $3\store_count[2:0]
    50/587: $3\load_count[0:0]
    51/587: $5\loadstore_fsm[2:0]
    52/587: $3\tb_io_store_commit_i[0:0]
    53/587: $3\tb_io_instr_valid_i[0:0]
    54/587: $3\tb_io_is_load_i[0:0]
    55/587: $3\tb_io_instr_i[31:0]
    56/587: $6\ready_o[0:0]
    57/587: $7\regfile[0][31:0]
    58/587: $7\regfile[31][31:0]
    59/587: $7\regfile[30][31:0]
    60/587: $7\regfile[29][31:0]
    61/587: $7\regfile[28][31:0]
    62/587: $7\regfile[27][31:0]
    63/587: $7\regfile[26][31:0]
    64/587: $7\regfile[25][31:0]
    65/587: $7\regfile[24][31:0]
    66/587: $7\regfile[23][31:0]
    67/587: $7\regfile[22][31:0]
    68/587: $7\regfile[21][31:0]
    69/587: $7\regfile[20][31:0]
    70/587: $7\regfile[19][31:0]
    71/587: $7\regfile[18][31:0]
    72/587: $7\regfile[17][31:0]
    73/587: $7\regfile[16][31:0]
    74/587: $7\regfile[15][31:0]
    75/587: $7\regfile[14][31:0]
    76/587: $7\regfile[13][31:0]
    77/587: $7\regfile[12][31:0]
    78/587: $7\regfile[11][31:0]
    79/587: $7\regfile[10][31:0]
    80/587: $7\regfile[9][31:0]
    81/587: $7\regfile[8][31:0]
    82/587: $7\regfile[7][31:0]
    83/587: $7\regfile[6][31:0]
    84/587: $7\regfile[5][31:0]
    85/587: $7\regfile[4][31:0]
    86/587: $7\regfile[3][31:0]
    87/587: $7\regfile[2][31:0]
    88/587: $7\regfile[1][31:0]
    89/587: $6$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA[31:0]$319
    90/587: $5\ready_o[0:0]
    91/587: $6\regfile[31][31:0]
    92/587: $6\regfile[30][31:0]
    93/587: $6\regfile[29][31:0]
    94/587: $6\regfile[28][31:0]
    95/587: $6\regfile[27][31:0]
    96/587: $6\regfile[26][31:0]
    97/587: $6\regfile[25][31:0]
    98/587: $6\regfile[24][31:0]
    99/587: $6\regfile[23][31:0]
   100/587: $6\regfile[22][31:0]
   101/587: $6\regfile[21][31:0]
   102/587: $6\regfile[20][31:0]
   103/587: $6\regfile[19][31:0]
   104/587: $6\regfile[18][31:0]
   105/587: $6\regfile[17][31:0]
   106/587: $6\regfile[16][31:0]
   107/587: $6\regfile[15][31:0]
   108/587: $6\regfile[14][31:0]
   109/587: $6\regfile[13][31:0]
   110/587: $6\regfile[12][31:0]
   111/587: $6\regfile[11][31:0]
   112/587: $6\regfile[10][31:0]
   113/587: $6\regfile[9][31:0]
   114/587: $6\regfile[8][31:0]
   115/587: $6\regfile[7][31:0]
   116/587: $6\regfile[6][31:0]
   117/587: $6\regfile[5][31:0]
   118/587: $6\regfile[4][31:0]
   119/587: $6\regfile[3][31:0]
   120/587: $6\regfile[2][31:0]
   121/587: $6\regfile[1][31:0]
   122/587: $6\regfile[0][31:0]
   123/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_ADDR[4:0]$317
   124/587: $5$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_DATA[31:0]$318
   125/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$124.$result[31:0]$308
   126/587: $5\sra$func$cva6_processor_shim.v:100$125.$result[31:0]$312
   127/587: $5\sra$func$cva6_processor_shim.v:100$125.shamt[4:0]$314
   128/587: $5\sra$func$cva6_processor_shim.v:100$125.d[63:0]$313
   129/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$124.alu_fun[2:0]$311
   130/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$124.imm_data[31:0]$310
   131/587: $5\alu_compute_i$func$cva6_processor_shim.v:239$124.reg_data[31:0]$309
   132/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA[31:0]$316
   133/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_ADDR[4:0]$315
   134/587: $5\get_i_imm$func$cva6_processor_shim.v:239$123.$result[31:0]$306
   135/587: $5\get_i_imm$func$cva6_processor_shim.v:239$123.inst[31:0]$307
   136/587: $5\regfile[0][31:0]
   137/587: $5\regfile[31][31:0]
   138/587: $5\regfile[30][31:0]
   139/587: $5\regfile[29][31:0]
   140/587: $5\regfile[28][31:0]
   141/587: $5\regfile[27][31:0]
   142/587: $5\regfile[26][31:0]
   143/587: $5\regfile[25][31:0]
   144/587: $5\regfile[24][31:0]
   145/587: $5\regfile[23][31:0]
   146/587: $5\regfile[22][31:0]
   147/587: $5\regfile[21][31:0]
   148/587: $5\regfile[20][31:0]
   149/587: $5\regfile[19][31:0]
   150/587: $5\regfile[18][31:0]
   151/587: $5\regfile[17][31:0]
   152/587: $5\regfile[16][31:0]
   153/587: $5\regfile[15][31:0]
   154/587: $5\regfile[14][31:0]
   155/587: $5\regfile[13][31:0]
   156/587: $5\regfile[12][31:0]
   157/587: $5\regfile[11][31:0]
   158/587: $5\regfile[10][31:0]
   159/587: $5\regfile[9][31:0]
   160/587: $5\regfile[8][31:0]
   161/587: $5\regfile[7][31:0]
   162/587: $5\regfile[6][31:0]
   163/587: $5\regfile[5][31:0]
   164/587: $5\regfile[4][31:0]
   165/587: $5\regfile[3][31:0]
   166/587: $5\regfile[2][31:0]
   167/587: $5\regfile[1][31:0]
   168/587: $5$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_DATA[31:0]$304
   169/587: $5$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_DATA[31:0]$302
   170/587: $4\ready_o[0:0]
   171/587: $4\loadstore_fsm[2:0]
   172/587: $4\loadstore_state[0:0]
   173/587: $4\regfile[31][31:0]
   174/587: $4\regfile[30][31:0]
   175/587: $4\regfile[29][31:0]
   176/587: $4\regfile[28][31:0]
   177/587: $4\regfile[27][31:0]
   178/587: $4\regfile[26][31:0]
   179/587: $4\regfile[25][31:0]
   180/587: $4\regfile[24][31:0]
   181/587: $4\regfile[23][31:0]
   182/587: $4\regfile[22][31:0]
   183/587: $4\regfile[21][31:0]
   184/587: $4\regfile[20][31:0]
   185/587: $4\regfile[19][31:0]
   186/587: $4\regfile[18][31:0]
   187/587: $4\regfile[17][31:0]
   188/587: $4\regfile[16][31:0]
   189/587: $4\regfile[15][31:0]
   190/587: $4\regfile[14][31:0]
   191/587: $4\regfile[13][31:0]
   192/587: $4\regfile[12][31:0]
   193/587: $4\regfile[11][31:0]
   194/587: $4\regfile[10][31:0]
   195/587: $4\regfile[9][31:0]
   196/587: $4\regfile[8][31:0]
   197/587: $4\regfile[7][31:0]
   198/587: $4\regfile[6][31:0]
   199/587: $4\regfile[5][31:0]
   200/587: $4\regfile[4][31:0]
   201/587: $4\regfile[3][31:0]
   202/587: $4\regfile[2][31:0]
   203/587: $4\regfile[1][31:0]
   204/587: $4\regfile[0][31:0]
   205/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_ADDR[4:0]$294
   206/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_DATA[31:0]$295
   207/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_DATA[31:0]$297
   208/587: $4$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_ADDR[4:0]$296
   209/587: $4\loadstore_addr[31:0]
   210/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_DATA[31:0]$293
   211/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_ADDR[4:0]$292
   212/587: $4\get_i_imm$func$cva6_processor_shim.v:233$121.$result[31:0]$279
   213/587: $4\get_i_imm$func$cva6_processor_shim.v:233$121.inst[31:0]$280
   214/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_DATA[31:0]$301
   215/587: $4$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_ADDR[4:0]$300
   216/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA[31:0]$299
   217/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_ADDR[4:0]$298
   218/587: $4\sra$func$cva6_processor_shim.v:100$125.shamt[4:0]$291
   219/587: $4\sra$func$cva6_processor_shim.v:100$125.d[63:0]$290
   220/587: $4\sra$func$cva6_processor_shim.v:100$125.$result[31:0]$289
   221/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$124.alu_fun[2:0]$288
   222/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$124.imm_data[31:0]$287
   223/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$124.reg_data[31:0]$286
   224/587: $4\alu_compute_i$func$cva6_processor_shim.v:239$124.$result[31:0]$285
   225/587: $4\get_i_imm$func$cva6_processor_shim.v:239$123.inst[31:0]$284
   226/587: $4\get_i_imm$func$cva6_processor_shim.v:239$123.$result[31:0]$283
   227/587: $4\is_alui$func$cva6_processor_shim.v:238$122.instr[31:0]$282
   228/587: $4\is_alui$func$cva6_processor_shim.v:238$122.$result[0:0]$281
   229/587: $4\mem[0][31:0]
   230/587: $4\mem[31][31:0]
   231/587: $4\mem[30][31:0]
   232/587: $4\mem[29][31:0]
   233/587: $4\mem[28][31:0]
   234/587: $4\mem[27][31:0]
   235/587: $4\mem[26][31:0]
   236/587: $4\mem[25][31:0]
   237/587: $4\mem[24][31:0]
   238/587: $4\mem[23][31:0]
   239/587: $4\mem[22][31:0]
   240/587: $4\mem[21][31:0]
   241/587: $4\mem[20][31:0]
   242/587: $4\mem[19][31:0]
   243/587: $4\mem[18][31:0]
   244/587: $4\mem[17][31:0]
   245/587: $4\mem[16][31:0]
   246/587: $4\mem[15][31:0]
   247/587: $4\mem[14][31:0]
   248/587: $4\mem[13][31:0]
   249/587: $4\mem[12][31:0]
   250/587: $4\mem[11][31:0]
   251/587: $4\mem[10][31:0]
   252/587: $4\mem[9][31:0]
   253/587: $4\mem[8][31:0]
   254/587: $4\mem[7][31:0]
   255/587: $4\mem[6][31:0]
   256/587: $4\mem[5][31:0]
   257/587: $4\mem[4][31:0]
   258/587: $4\mem[3][31:0]
   259/587: $4\mem[2][31:0]
   260/587: $4\mem[1][31:0]
   261/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_DATA[31:0]$277
   262/587: $4$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_DATA[31:0]$275
   263/587: $3\ready_o[0:0]
   264/587: $3\loadstore_fsm[2:0]
   265/587: $3\loadstore_state[0:0]
   266/587: $3\mem[31][31:0]
   267/587: $3\mem[30][31:0]
   268/587: $3\mem[29][31:0]
   269/587: $3\mem[28][31:0]
   270/587: $3\mem[27][31:0]
   271/587: $3\mem[26][31:0]
   272/587: $3\mem[25][31:0]
   273/587: $3\mem[24][31:0]
   274/587: $3\mem[23][31:0]
   275/587: $3\mem[22][31:0]
   276/587: $3\mem[21][31:0]
   277/587: $3\mem[20][31:0]
   278/587: $3\mem[19][31:0]
   279/587: $3\mem[18][31:0]
   280/587: $3\mem[17][31:0]
   281/587: $3\mem[16][31:0]
   282/587: $3\mem[15][31:0]
   283/587: $3\mem[14][31:0]
   284/587: $3\mem[13][31:0]
   285/587: $3\mem[12][31:0]
   286/587: $3\mem[11][31:0]
   287/587: $3\mem[10][31:0]
   288/587: $3\mem[9][31:0]
   289/587: $3\mem[8][31:0]
   290/587: $3\mem[7][31:0]
   291/587: $3\mem[6][31:0]
   292/587: $3\mem[5][31:0]
   293/587: $3\mem[4][31:0]
   294/587: $3\mem[3][31:0]
   295/587: $3\mem[2][31:0]
   296/587: $3\mem[1][31:0]
   297/587: $3\mem[0][31:0]
   298/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_ADDR[4:0]$261
   299/587: $3$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_DATA[31:0]$262
   300/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_DATA[31:0]$264
   301/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_ADDR[4:0]$263
   302/587: $3\loadstore_addr[31:0]
   303/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_DATA[31:0]$260
   304/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_ADDR[4:0]$259
   305/587: $3\get_s_imm$func$cva6_processor_shim.v:227$119.$result[31:0]$242
   306/587: $3\get_s_imm$func$cva6_processor_shim.v:227$119.inst[31:0]$243
   307/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_DATA[31:0]$274
   308/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_ADDR[4:0]$273
   309/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA[31:0]$272
   310/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_ADDR[4:0]$271
   311/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_DATA[31:0]$270
   312/587: $3$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_ADDR[4:0]$269
   313/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_DATA[31:0]$268
   314/587: $3$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_ADDR[4:0]$267
   315/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_DATA[31:0]$266
   316/587: $3$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_ADDR[4:0]$265
   317/587: $3\regfile[31][31:0]
   318/587: $3\regfile[30][31:0]
   319/587: $3\regfile[29][31:0]
   320/587: $3\regfile[28][31:0]
   321/587: $3\regfile[27][31:0]
   322/587: $3\regfile[26][31:0]
   323/587: $3\regfile[25][31:0]
   324/587: $3\regfile[24][31:0]
   325/587: $3\regfile[23][31:0]
   326/587: $3\regfile[22][31:0]
   327/587: $3\regfile[21][31:0]
   328/587: $3\regfile[20][31:0]
   329/587: $3\regfile[19][31:0]
   330/587: $3\regfile[18][31:0]
   331/587: $3\regfile[17][31:0]
   332/587: $3\regfile[16][31:0]
   333/587: $3\regfile[15][31:0]
   334/587: $3\regfile[14][31:0]
   335/587: $3\regfile[13][31:0]
   336/587: $3\regfile[12][31:0]
   337/587: $3\regfile[11][31:0]
   338/587: $3\regfile[10][31:0]
   339/587: $3\regfile[9][31:0]
   340/587: $3\regfile[8][31:0]
   341/587: $3\regfile[7][31:0]
   342/587: $3\regfile[6][31:0]
   343/587: $3\regfile[5][31:0]
   344/587: $3\regfile[4][31:0]
   345/587: $3\regfile[3][31:0]
   346/587: $3\regfile[2][31:0]
   347/587: $3\regfile[1][31:0]
   348/587: $3\regfile[0][31:0]
   349/587: $3\sra$func$cva6_processor_shim.v:100$125.shamt[4:0]$258
   350/587: $3\sra$func$cva6_processor_shim.v:100$125.d[63:0]$257
   351/587: $3\sra$func$cva6_processor_shim.v:100$125.$result[31:0]$256
   352/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$124.alu_fun[2:0]$255
   353/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$124.imm_data[31:0]$254
   354/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$124.reg_data[31:0]$253
   355/587: $3\alu_compute_i$func$cva6_processor_shim.v:239$124.$result[31:0]$252
   356/587: $3\get_i_imm$func$cva6_processor_shim.v:239$123.inst[31:0]$251
   357/587: $3\get_i_imm$func$cva6_processor_shim.v:239$123.$result[31:0]$250
   358/587: $3\is_alui$func$cva6_processor_shim.v:238$122.instr[31:0]$249
   359/587: $3\is_alui$func$cva6_processor_shim.v:238$122.$result[0:0]$248
   360/587: $3\get_i_imm$func$cva6_processor_shim.v:233$121.inst[31:0]$247
   361/587: $3\get_i_imm$func$cva6_processor_shim.v:233$121.$result[31:0]$246
   362/587: $3\is_load$func$cva6_processor_shim.v:232$120.instr[31:0]$245
   363/587: $3\is_load$func$cva6_processor_shim.v:232$120.$result[0:0]$244
   364/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_DATA[31:0]$240
   365/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_ADDR[4:0]$239
   366/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA[31:0]$238
   367/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_ADDR[4:0]$237
   368/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_DATA[31:0]$236
   369/587: $2$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_ADDR[4:0]$235
   370/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_DATA[31:0]$234
   371/587: $2$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_ADDR[4:0]$233
   372/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_DATA[31:0]$232
   373/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_ADDR[4:0]$231
   374/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_DATA[31:0]$230
   375/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_ADDR[4:0]$229
   376/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_DATA[31:0]$228
   377/587: $2$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_ADDR[4:0]$227
   378/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_DATA[31:0]$226
   379/587: $2$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_ADDR[4:0]$225
   380/587: $2\regfile[31][31:0]
   381/587: $2\regfile[30][31:0]
   382/587: $2\regfile[29][31:0]
   383/587: $2\regfile[28][31:0]
   384/587: $2\regfile[27][31:0]
   385/587: $2\regfile[26][31:0]
   386/587: $2\regfile[25][31:0]
   387/587: $2\regfile[24][31:0]
   388/587: $2\regfile[23][31:0]
   389/587: $2\regfile[22][31:0]
   390/587: $2\regfile[21][31:0]
   391/587: $2\regfile[20][31:0]
   392/587: $2\regfile[19][31:0]
   393/587: $2\regfile[18][31:0]
   394/587: $2\regfile[17][31:0]
   395/587: $2\regfile[16][31:0]
   396/587: $2\regfile[15][31:0]
   397/587: $2\regfile[14][31:0]
   398/587: $2\regfile[13][31:0]
   399/587: $2\regfile[12][31:0]
   400/587: $2\regfile[11][31:0]
   401/587: $2\regfile[10][31:0]
   402/587: $2\regfile[9][31:0]
   403/587: $2\regfile[8][31:0]
   404/587: $2\regfile[7][31:0]
   405/587: $2\regfile[6][31:0]
   406/587: $2\regfile[5][31:0]
   407/587: $2\regfile[4][31:0]
   408/587: $2\regfile[3][31:0]
   409/587: $2\regfile[2][31:0]
   410/587: $2\regfile[1][31:0]
   411/587: $2\regfile[0][31:0]
   412/587: $2\mem[31][31:0]
   413/587: $2\mem[30][31:0]
   414/587: $2\mem[29][31:0]
   415/587: $2\mem[28][31:0]
   416/587: $2\mem[27][31:0]
   417/587: $2\mem[26][31:0]
   418/587: $2\mem[25][31:0]
   419/587: $2\mem[24][31:0]
   420/587: $2\mem[23][31:0]
   421/587: $2\mem[22][31:0]
   422/587: $2\mem[21][31:0]
   423/587: $2\mem[20][31:0]
   424/587: $2\mem[19][31:0]
   425/587: $2\mem[18][31:0]
   426/587: $2\mem[17][31:0]
   427/587: $2\mem[16][31:0]
   428/587: $2\mem[15][31:0]
   429/587: $2\mem[14][31:0]
   430/587: $2\mem[13][31:0]
   431/587: $2\mem[12][31:0]
   432/587: $2\mem[11][31:0]
   433/587: $2\mem[10][31:0]
   434/587: $2\mem[9][31:0]
   435/587: $2\mem[8][31:0]
   436/587: $2\mem[7][31:0]
   437/587: $2\mem[6][31:0]
   438/587: $2\mem[5][31:0]
   439/587: $2\mem[4][31:0]
   440/587: $2\mem[3][31:0]
   441/587: $2\mem[2][31:0]
   442/587: $2\mem[1][31:0]
   443/587: $2\mem[0][31:0]
   444/587: $2\sra$func$cva6_processor_shim.v:100$125.shamt[4:0]$224
   445/587: $2\sra$func$cva6_processor_shim.v:100$125.d[63:0]$223
   446/587: $2\sra$func$cva6_processor_shim.v:100$125.$result[31:0]$222
   447/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$124.alu_fun[2:0]$221
   448/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$124.imm_data[31:0]$220
   449/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$124.reg_data[31:0]$219
   450/587: $2\alu_compute_i$func$cva6_processor_shim.v:239$124.$result[31:0]$218
   451/587: $2\get_i_imm$func$cva6_processor_shim.v:239$123.inst[31:0]$217
   452/587: $2\get_i_imm$func$cva6_processor_shim.v:239$123.$result[31:0]$216
   453/587: $2\is_alui$func$cva6_processor_shim.v:238$122.instr[31:0]$215
   454/587: $2\is_alui$func$cva6_processor_shim.v:238$122.$result[0:0]$214
   455/587: $2\get_i_imm$func$cva6_processor_shim.v:233$121.inst[31:0]$213
   456/587: $2\get_i_imm$func$cva6_processor_shim.v:233$121.$result[31:0]$212
   457/587: $2\is_load$func$cva6_processor_shim.v:232$120.instr[31:0]$211
   458/587: $2\is_load$func$cva6_processor_shim.v:232$120.$result[0:0]$210
   459/587: $2\get_s_imm$func$cva6_processor_shim.v:227$119.inst[31:0]$209
   460/587: $2\get_s_imm$func$cva6_processor_shim.v:227$119.$result[31:0]$208
   461/587: $2\loadstore_fsm[2:0]
   462/587: $2\loadstore_addr[31:0]
   463/587: $2\loadstore_state[0:0]
   464/587: $2\ready_o[0:0]
   465/587: $2\is_store$func$cva6_processor_shim.v:226$118.$result[0:0]$206
   466/587: $2\is_store$func$cva6_processor_shim.v:226$118.instr[31:0]$207
   467/587: $2\store_uncommitted[0:0]
   468/587: $2\store_count[2:0]
   469/587: $2\load_count[0:0]
   470/587: $2\tb_io_store_commit_i[0:0]
   471/587: $2\tb_io_instr_valid_i[0:0]
   472/587: $2\tb_io_is_load_i[0:0]
   473/587: $2\tb_io_instr_i[31:0]
   474/587: $1\store_uncommitted[0:0]
   475/587: $1\tb_io_store_commit_i[0:0]
   476/587: $1\tb_io_load_mem_resp_i[0:0]
   477/587: $1\tb_io_store_mem_resp_i[0:0]
   478/587: $1\tb_io_instr_valid_i[0:0]
   479/587: $1\tb_io_is_load_i[0:0]
   480/587: $1\tb_io_instr_i[31:0]
   481/587: $1\store_cooldown[0:0]
   482/587: $1\store_count[2:0]
   483/587: $1\load_cooldown[2:0]
   484/587: $1\load_count[0:0]
   485/587: $1\loadstore_fsm[2:0]
   486/587: $1\loadstore_addr[31:0]
   487/587: $1\loadstore_state[0:0]
   488/587: $1\ready_o[0:0]
   489/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_DATA[31:0]$205
   490/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_ADDR[4:0]$204
   491/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA[31:0]$203
   492/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_ADDR[4:0]$202
   493/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_DATA[31:0]$201
   494/587: $1$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_ADDR[4:0]$200
   495/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_DATA[31:0]$199
   496/587: $1$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_ADDR[4:0]$198
   497/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_DATA[31:0]$197
   498/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_ADDR[4:0]$196
   499/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_DATA[31:0]$195
   500/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_ADDR[4:0]$194
   501/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_DATA[31:0]$193
   502/587: $1$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_ADDR[4:0]$192
   503/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_DATA[31:0]$191
   504/587: $1$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_ADDR[4:0]$190
   505/587: $1\regfile[31][31:0]
   506/587: $1\regfile[30][31:0]
   507/587: $1\regfile[29][31:0]
   508/587: $1\regfile[28][31:0]
   509/587: $1\regfile[27][31:0]
   510/587: $1\regfile[26][31:0]
   511/587: $1\regfile[25][31:0]
   512/587: $1\regfile[24][31:0]
   513/587: $1\regfile[23][31:0]
   514/587: $1\regfile[22][31:0]
   515/587: $1\regfile[21][31:0]
   516/587: $1\regfile[20][31:0]
   517/587: $1\regfile[19][31:0]
   518/587: $1\regfile[18][31:0]
   519/587: $1\regfile[17][31:0]
   520/587: $1\regfile[16][31:0]
   521/587: $1\regfile[15][31:0]
   522/587: $1\regfile[14][31:0]
   523/587: $1\regfile[13][31:0]
   524/587: $1\regfile[12][31:0]
   525/587: $1\regfile[11][31:0]
   526/587: $1\regfile[10][31:0]
   527/587: $1\regfile[9][31:0]
   528/587: $1\regfile[8][31:0]
   529/587: $1\regfile[7][31:0]
   530/587: $1\regfile[6][31:0]
   531/587: $1\regfile[5][31:0]
   532/587: $1\regfile[4][31:0]
   533/587: $1\regfile[3][31:0]
   534/587: $1\regfile[2][31:0]
   535/587: $1\regfile[1][31:0]
   536/587: $1\regfile[0][31:0]
   537/587: $1\mem[31][31:0]
   538/587: $1\mem[30][31:0]
   539/587: $1\mem[29][31:0]
   540/587: $1\mem[28][31:0]
   541/587: $1\mem[27][31:0]
   542/587: $1\mem[26][31:0]
   543/587: $1\mem[25][31:0]
   544/587: $1\mem[24][31:0]
   545/587: $1\mem[23][31:0]
   546/587: $1\mem[22][31:0]
   547/587: $1\mem[21][31:0]
   548/587: $1\mem[20][31:0]
   549/587: $1\mem[19][31:0]
   550/587: $1\mem[18][31:0]
   551/587: $1\mem[17][31:0]
   552/587: $1\mem[16][31:0]
   553/587: $1\mem[15][31:0]
   554/587: $1\mem[14][31:0]
   555/587: $1\mem[13][31:0]
   556/587: $1\mem[12][31:0]
   557/587: $1\mem[11][31:0]
   558/587: $1\mem[10][31:0]
   559/587: $1\mem[9][31:0]
   560/587: $1\mem[8][31:0]
   561/587: $1\mem[7][31:0]
   562/587: $1\mem[6][31:0]
   563/587: $1\mem[5][31:0]
   564/587: $1\mem[4][31:0]
   565/587: $1\mem[3][31:0]
   566/587: $1\mem[2][31:0]
   567/587: $1\mem[1][31:0]
   568/587: $1\mem[0][31:0]
   569/587: $1\sra$func$cva6_processor_shim.v:100$125.shamt[4:0]$189
   570/587: $1\sra$func$cva6_processor_shim.v:100$125.d[63:0]$188
   571/587: $1\sra$func$cva6_processor_shim.v:100$125.$result[31:0]$187
   572/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$124.alu_fun[2:0]$186
   573/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$124.imm_data[31:0]$185
   574/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$124.reg_data[31:0]$184
   575/587: $1\alu_compute_i$func$cva6_processor_shim.v:239$124.$result[31:0]$183
   576/587: $1\get_i_imm$func$cva6_processor_shim.v:239$123.inst[31:0]$182
   577/587: $1\get_i_imm$func$cva6_processor_shim.v:239$123.$result[31:0]$181
   578/587: $1\is_alui$func$cva6_processor_shim.v:238$122.instr[31:0]$180
   579/587: $1\is_alui$func$cva6_processor_shim.v:238$122.$result[0:0]$179
   580/587: $1\get_i_imm$func$cva6_processor_shim.v:233$121.inst[31:0]$178
   581/587: $1\get_i_imm$func$cva6_processor_shim.v:233$121.$result[31:0]$177
   582/587: $1\is_load$func$cva6_processor_shim.v:232$120.instr[31:0]$176
   583/587: $1\is_load$func$cva6_processor_shim.v:232$120.$result[0:0]$175
   584/587: $1\get_s_imm$func$cva6_processor_shim.v:227$119.inst[31:0]$174
   585/587: $1\get_s_imm$func$cva6_processor_shim.v:227$119.$result[31:0]$173
   586/587: $1\is_store$func$cva6_processor_shim.v:226$118.instr[31:0]$172
   587/587: $1\is_store$func$cva6_processor_shim.v:226$118.$result[0:0]$171
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$106'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
     1/48: $4\local_ready_2[0:0]
     2/48: $3\tb_io_instr_valid_i_2[0:0]
     3/48: $3\pc_2[31:0]
     4/48: $3\local_ready_2[0:0]
     5/48: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_DATA[31:0]$86
     6/48: $4\local_ready_1[0:0]
     7/48: $3\tb_io_instr_valid_i_1[0:0]
     8/48: $3\pc_1[31:0]
     9/48: $3\local_ready_1[0:0]
    10/48: $3$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_DATA[31:0]$78
    11/48: $2\local_ready_2[0:0]
    12/48: $2\pc_2[31:0]
    13/48: $2\tb_io_instr_valid_i_2[0:0]
    14/48: $2\tb_io_instr_i_2[31:0]
    15/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_DATA[31:0]$75
    16/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_ADDR[1:0]$74
    17/48: $2\local_ready_1[0:0]
    18/48: $2\pc_1[31:0]
    19/48: $2\tb_io_instr_valid_i_1[0:0]
    20/48: $2\tb_io_instr_i_1[31:0]
    21/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_DATA[31:0]$73
    22/48: $2$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_ADDR[1:0]$72
    23/48: $1\local_ready_2[0:0]
    24/48: $1\local_ready_1[0:0]
    25/48: $1\tb_io_instr_i_2[31:0]
    26/48: $1\tb_io_instr_i_1[31:0]
    27/48: $1\tb_io_instr_valid_i_2[0:0]
    28/48: $1\tb_io_instr_valid_i_1[0:0]
    29/48: $1\pc_2[31:0]
    30/48: $1\pc_1[31:0]
    31/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_DATA[31:0]$56
    32/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_ADDR[1:0]$55
    33/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_DATA[31:0]$54
    34/48: $1$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_ADDR[1:0]$53
    35/48: $0$formal$cva6_lsu_formal.v:156$7_EN[0:0]$38
    36/48: $0$formal$cva6_lsu_formal.v:156$7_CHECK[0:0]$37
    37/48: $0$formal$cva6_lsu_formal.v:159$8_EN[0:0]$40
    38/48: $0$formal$cva6_lsu_formal.v:159$8_CHECK[0:0]$39
    39/48: $0$formal$cva6_lsu_formal.v:160$9_EN[0:0]$42
    40/48: $0$formal$cva6_lsu_formal.v:160$9_CHECK[0:0]$41
    41/48: $0$formal$cva6_lsu_formal.v:161$10_EN[0:0]$44
    42/48: $0$formal$cva6_lsu_formal.v:161$10_CHECK[0:0]$43
    43/48: $0$formal$cva6_lsu_formal.v:169$11_EN[0:0]$46
    44/48: $0$formal$cva6_lsu_formal.v:169$11_CHECK[0:0]$45
    45/48: $0$formal$cva6_lsu_formal.v:171$12_EN[0:0]$48
    46/48: $0$formal$cva6_lsu_formal.v:171$12_CHECK[0:0]$47
    47/48: $0$formal$cva6_lsu_formal.v:206$13_EN[0:0]$50
    48/48: $0$formal$cva6_lsu_formal.v:206$13_CHECK[0:0]$49
Creating decoders for process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
     1/2: $0\reset[0:0]
     2/2: $0\init[0:0]

11.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_buffer.\page_offset_matches_o' from process `\store_buffer.$proc$store_buffer.v:166$859'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2._sv2v_jump' from process `\store_buffer.$proc$store_buffer.v:166$859'.
No latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.i' from process `\store_buffer.$proc$store_buffer.v:166$859'.
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_3.sv2v_autoblock_4._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$859': $auto$proc_dlatch.cc:427:proc_dlatch$11581
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.i' from process `\store_buffer.$proc$store_buffer.v:166$859': $auto$proc_dlatch.cc:427:proc_dlatch$11616
Latch inferred for signal `\store_buffer.\sv2v_autoblock_2.address_checker.sv2v_autoblock_5.sv2v_autoblock_6._sv2v_value_on_break' from process `\store_buffer.$proc$store_buffer.v:166$859': $auto$proc_dlatch.cc:427:proc_dlatch$11627
No latch inferred for signal `\store_buffer.\no_st_pending_o' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\commit_ready_o' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\req_port_o [9]' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\commit_queue_n' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\commit_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\commit_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\commit_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\store_if.commit_status_cnt' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:154$664' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:154$665' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:160$666' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:160$667' from process `\store_buffer.$proc$store_buffer.v:142$814'.
No latch inferred for signal `\store_buffer.\req_port_o [3:2]' from process `\store_buffer.$proc$store_buffer.v:141$813'.
No latch inferred for signal `\store_buffer.\req_port_o [7:4]' from process `\store_buffer.$proc$store_buffer.v:138$807'.
No latch inferred for signal `\store_buffer.\req_port_o [42:11]' from process `\store_buffer.$proc$store_buffer.v:135$801'.
No latch inferred for signal `\store_buffer.\req_port_o [64:43]' from process `\store_buffer.$proc$store_buffer.v:132$795'.
No latch inferred for signal `\store_buffer.\req_port_o [76:65]' from process `\store_buffer.$proc$store_buffer.v:129$789'.
No latch inferred for signal `\store_buffer.\req_port_o [0]' from process `\store_buffer.$proc$store_buffer.v:126$783'.
No latch inferred for signal `\store_buffer.\req_port_o [8]' from process `\store_buffer.$proc$store_buffer.v:123$782'.
No latch inferred for signal `\store_buffer.\req_port_o [1]' from process `\store_buffer.$proc$store_buffer.v:120$781'.
No latch inferred for signal `\store_buffer.\ready_o' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.\speculative_queue_n' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.\speculative_status_cnt_n' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.\speculative_read_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.\speculative_write_pointer_n' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.\core_if.speculative_status_cnt' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:94$652' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:94$653' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:95$654' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:95$655' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:96$656' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:96$657' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:97$658' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:97$659' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:98$660' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:98$661' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$mask$store_buffer.v:103$662' from process `\store_buffer.$proc$store_buffer.v:85$676'.
No latch inferred for signal `\store_buffer.$bitselwrite$data$store_buffer.v:103$663' from process `\store_buffer.$proc$store_buffer.v:85$676'.
Latch inferred for signal `\store_buffer.\core_if.sv2v_autoblock_1.i' from process `\store_buffer.$proc$store_buffer.v:85$676': $auto$proc_dlatch.cc:427:proc_dlatch$11692
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$607.$result' from process `\store_unit.$proc$store_unit.v:0$640'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$610.$result' from process `\store_unit.$proc$store_unit.v:0$640'.
No latch inferred for signal `\store_unit.\ariane_pkg_is_amo$func$store_unit.v:86$610.op' from process `\store_unit.$proc$store_unit.v:0$640'.
No latch inferred for signal `\store_unit.\st_data_n' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\st_be_n' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\st_data_size_n' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\amo_op_d' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$608.$result' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$608.addr' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$608.data' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$608.addr_tmp' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_data_align$func$store_unit.v:198$608.data_tmp' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$609.$result' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\ariane_pkg_extract_transfer_size$func$store_unit.v:199$609.op' from process `\store_unit.$proc$store_unit.v:196$622'.
No latch inferred for signal `\store_unit.\st_valid' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\pop_st_o' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\valid_o' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\ex_o' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\translation_req_o' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\state_d' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\st_valid_without_flush' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `\store_unit.\trans_id_n' from process `\store_unit.$proc$store_unit.v:99$611'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\result_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$604'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\valid_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$568'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\trans_id_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$568'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$568'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\translation_req_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [7:0]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [9]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\pop_ld_o' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_d' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$531.$result' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ariane_pkg_extract_transfer_size$func$load_unit.v:153$531.op' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [32:1]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$537'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\ex_o [64:33]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$536'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [64:43]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$535'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [76:65]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$534'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [42:11]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$533'.
No latch inferred for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [8]' from process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$532'.
No latch inferred for signal `\lsu_bypass.\lsu_ctrl_o' from process `\lsu_bypass.$proc$lsu_bypass.v:73$523'.
No latch inferred for signal `\lsu_bypass.\mem_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.\read_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.\write_pointer_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.\status_cnt_n' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.\status_cnt' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.\write_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.\read_pointer' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:47$468' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:47$469' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:52$470' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:52$471' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$mask$lsu_bypass.v:57$472' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\lsu_bypass.$bitselwrite$data$lsu_bypass.v:57$473' from process `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$402.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$453'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$453'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$453'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406.size' from process `\load_store_unit.$proc$load_store_unit.v:0$453'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen_32$func$load_store_unit.v:514$406._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$453'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$401.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$448'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$405.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$448'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$405.op' from process `\load_store_unit.$proc$load_store_unit.v:0$448'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$400.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$431'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$404.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$431'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$404.addr' from process `\load_store_unit.$proc$load_store_unit.v:0$431'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$404.size' from process `\load_store_unit.$proc$load_store_unit.v:0$431'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_be_gen$func$load_store_unit.v:514$404._sv2v_jump' from process `\load_store_unit.$proc$load_store_unit.v:0$431'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$399.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$426'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$403.$result' from process `\load_store_unit.$proc$load_store_unit.v:0$426'.
No latch inferred for signal `\load_store_unit.\ariane_pkg_extract_transfer_size$func$load_store_unit.v:514$403.op' from process `\load_store_unit.$proc$load_store_unit.v:0$426'.
No latch inferred for signal `\load_store_unit.\data_misaligned' from process `\load_store_unit.$proc$load_store_unit.v:519$415'.
No latch inferred for signal `\load_store_unit.\misaligned_exception' from process `\load_store_unit.$proc$load_store_unit.v:519$415'.
No latch inferred for signal `\load_store_unit.\st_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$414'.
No latch inferred for signal `\load_store_unit.\ld_valid_i' from process `\load_store_unit.$proc$load_store_unit.v:320$414'.
No latch inferred for signal `\load_store_unit.\translation_req' from process `\load_store_unit.$proc$load_store_unit.v:320$414'.
No latch inferred for signal `\load_store_unit.\mmu_vaddr' from process `\load_store_unit.$proc$load_store_unit.v:320$414'.
No latch inferred for signal `\cva6_lsu_formal.\prog[0]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
No latch inferred for signal `\cva6_lsu_formal.\prog[1]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
No latch inferred for signal `\cva6_lsu_formal.\prog[2]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
No latch inferred for signal `\cva6_lsu_formal.\prog[3]' from process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.

11.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\store_buffer.\commit_queue_q' using process `\store_buffer.$proc$store_buffer.v:234$896'.
  created $adff cell `$procdff$11703' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:234$896'.
  created $adff cell `$procdff$11704' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$896'.
  created $adff cell `$procdff$11705' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\commit_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:234$896'.
  created $adff cell `$procdff$11706' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_queue_q' using process `\store_buffer.$proc$store_buffer.v:220$894'.
  created $adff cell `$procdff$11707' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_status_cnt_q' using process `\store_buffer.$proc$store_buffer.v:220$894'.
  created $adff cell `$procdff$11708' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_read_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$894'.
  created $adff cell `$procdff$11709' with positive edge clock and negative level reset.
Creating register for signal `\store_buffer.\speculative_write_pointer_q' using process `\store_buffer.$proc$store_buffer.v:220$894'.
  created $adff cell `$procdff$11710' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\state_q' using process `\store_unit.$proc$store_unit.v:271$638'.
  created $adff cell `$procdff$11711' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_q' using process `\store_unit.$proc$store_unit.v:271$638'.
  created $adff cell `$procdff$11712' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_be_q' using process `\store_unit.$proc$store_unit.v:271$638'.
  created $adff cell `$procdff$11713' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\st_data_size_q' using process `\store_unit.$proc$store_unit.v:271$638'.
  created $adff cell `$procdff$11714' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\amo_op_q' using process `\store_unit.$proc$store_unit.v:271$638'.
  created $adff cell `$procdff$11715' with positive edge clock and negative level reset.
Creating register for signal `\store_unit.\trans_id_q' using process `\store_unit.$proc$store_unit.v:271$638'.
  created $adff cell `$procdff$11716' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\idx_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$605'.
  created $adff cell `$procdff$11717' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\signed_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$605'.
  created $adff cell `$procdff$11718' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\fp_sign_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$605'.
  created $adff cell `$procdff$11719' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\state_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$578'.
  created $adff cell `$procdff$11720' with positive edge clock and negative level reset.
Creating register for signal `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\load_data_q' using process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$578'.
  created $adff cell `$procdff$11721' with positive edge clock and negative level reset.
Creating register for signal `\shift_reg.\d_o' using process `\shift_reg.$proc$shift_reg.v:19$529'.
  created $adff cell `$procdff$11722' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\mem_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$527'.
  created $adff cell `$procdff$11723' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\read_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$527'.
  created $adff cell `$procdff$11724' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\write_pointer_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$527'.
  created $adff cell `$procdff$11725' with positive edge clock and negative level reset.
Creating register for signal `\lsu_bypass.\status_cnt_q' using process `\lsu_bypass.$proc$lsu_bypass.v:79$527'.
  created $adff cell `$procdff$11726' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\translation_valid' using process `\load_store_unit.$proc$load_store_unit.v:221$424'.
  created $adff cell `$procdff$11727' with positive edge clock and negative level reset.
Creating register for signal `\load_store_unit.\mmu_paddr' using process `\load_store_unit.$proc$load_store_unit.v:221$424'.
  created $adff cell `$procdff$11728' with positive edge clock and negative level reset.
Creating register for signal `\cva6_lsu_shim.\tb_io_fu_data_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11729' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_lsu_valid_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11730' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11731' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_commit_tran_id_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11732' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\tb_io_dcache_req_ports_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11733' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_memreq_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11734' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\load_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11735' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\store_req_state' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11736' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\x_load_mem_resp_i' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11737' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_store_request$func$cva6_lsu_shim.v:0$374.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11738' with positive edge clock.
Creating register for signal `\cva6_lsu_shim.\raise_load_request$func$cva6_lsu_shim.v:0$375.addr' using process `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
  created $dff cell `$procdff$11739' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11740' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11741' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11742' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11743' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11744' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11745' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11746' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11747' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11748' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11749' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11750' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11751' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11752' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11753' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11754' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11755' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11756' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11757' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11758' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11759' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11760' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11761' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11762' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11763' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11764' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11765' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11766' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11767' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11768' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11769' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11770' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\reg_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11771' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_0' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11772' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_1' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11773' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_2' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11774' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_3' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11775' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_4' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11776' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_5' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11777' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_6' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11778' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_7' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11779' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_8' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11780' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_9' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11781' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_10' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11782' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_11' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11783' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_12' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11784' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_13' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11785' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_14' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11786' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_15' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11787' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_16' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11788' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_17' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11789' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_18' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11790' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_19' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11791' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_20' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11792' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_21' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11793' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_22' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11794' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_23' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11795' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_24' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11796' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_25' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11797' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_26' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11798' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_27' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11799' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_28' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11800' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_29' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11801' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_30' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11802' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem_31' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11803' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\ready_o' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11804' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11805' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_is_load_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11806' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_instr_valid_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11807' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11808' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_load_mem_resp_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11809' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\tb_io_store_commit_i' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11810' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_state' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11811' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_addr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11812' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\loadstore_fsm' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11813' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11814' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11815' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_count' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11816' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\load_cooldown' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11817' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\store_uncommitted' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11818' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$118.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11819' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_store$func$cva6_processor_shim.v:226$118.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11820' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$119.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11821' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_s_imm$func$cva6_processor_shim.v:227$119.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11822' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$120.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11823' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_load$func$cva6_processor_shim.v:232$120.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11824' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$121.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11825' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:233$121.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11826' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$122.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11827' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\is_alui$func$cva6_processor_shim.v:238$122.instr' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11828' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$123.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11829' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\get_i_imm$func$cva6_processor_shim.v:239$123.inst' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11830' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$124.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11831' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$124.reg_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11832' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$124.imm_data' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11833' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\alu_compute_i$func$cva6_processor_shim.v:239$124.alu_fun' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11834' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$125.$result' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11835' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$125.d' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11836' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\sra$func$cva6_processor_shim.v:100$125.shamt' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11837' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11838' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11839' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11840' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11841' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11842' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11843' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11844' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11845' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11846' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11847' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11848' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11849' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11850' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11851' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11852' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11853' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11854' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11855' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11856' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11857' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11858' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11859' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11860' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11861' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11862' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11863' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11864' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11865' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11866' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11867' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11868' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\mem[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11869' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[0]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11870' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[1]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11871' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[2]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11872' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[3]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11873' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[4]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11874' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[5]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11875' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[6]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11876' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[7]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11877' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[8]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11878' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[9]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11879' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[10]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11880' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[11]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11881' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[12]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11882' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[13]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11883' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[14]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11884' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[15]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11885' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[16]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11886' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[17]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11887' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[18]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11888' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[19]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11889' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[20]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11890' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[21]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11891' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[22]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11892' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[23]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11893' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[24]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11894' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[25]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11895' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[26]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11896' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[27]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11897' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[28]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11898' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[29]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11899' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[30]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11900' with positive edge clock.
Creating register for signal `\cva6_processor_shim.\regfile[31]' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11901' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11902' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:227$126_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11903' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11904' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\mem$cva6_processor_shim.v:228$127_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11905' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11906' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:228$128_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11907' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11908' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:233$129_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11909' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11910' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:234$130_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11911' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11912' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\mem$cva6_processor_shim.v:234$131_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11913' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11914' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_rd$\regfile$cva6_processor_shim.v:239$132_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11915' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_ADDR' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11916' with positive edge clock.
Creating register for signal `\cva6_processor_shim.$mem2reg_wr$\regfile$cva6_processor_shim.v:239$133_DATA' using process `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
  created $dff cell `$procdff$11917' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11918' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11919' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11920' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\tb_io_instr_valid_i_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11921' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11922' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\pc_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11923' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_1' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11924' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\local_ready_2' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11925' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11926' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11927' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_ADDR' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11928' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_DATA' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11929' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11930' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:156$7_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11931' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11932' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:159$8_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11933' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11934' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:160$9_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11935' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11936' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:161$10_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11937' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$11_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11938' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:169$11_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11939' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:171$12_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11940' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:171$12_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11941' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:206$13_CHECK' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11942' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.$formal$cva6_lsu_formal.v:206$13_EN' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
  created $dff cell `$procdff$11943' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\init' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
  created $dff cell `$procdff$11944' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\reset' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
  created $dff cell `$procdff$11945' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\counter' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
  created $dff cell `$procdff$11946' with positive edge clock.
Creating register for signal `\cva6_lsu_formal.\CLK_CYCLE' using process `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
  created $dff cell `$procdff$11947' with positive edge clock.

11.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

11.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `store_buffer.$proc$store_buffer.v:234$896'.
Removing empty process `store_buffer.$proc$store_buffer.v:220$894'.
Found and cleaned up 23 empty switches in `\store_buffer.$proc$store_buffer.v:166$859'.
Removing empty process `store_buffer.$proc$store_buffer.v:166$859'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:142$814'.
Removing empty process `store_buffer.$proc$store_buffer.v:142$814'.
Removing empty process `store_buffer.$proc$store_buffer.v:141$813'.
Removing empty process `store_buffer.$proc$store_buffer.v:138$807'.
Removing empty process `store_buffer.$proc$store_buffer.v:135$801'.
Removing empty process `store_buffer.$proc$store_buffer.v:132$795'.
Removing empty process `store_buffer.$proc$store_buffer.v:129$789'.
Removing empty process `store_buffer.$proc$store_buffer.v:126$783'.
Removing empty process `store_buffer.$proc$store_buffer.v:123$782'.
Removing empty process `store_buffer.$proc$store_buffer.v:120$781'.
Found and cleaned up 3 empty switches in `\store_buffer.$proc$store_buffer.v:85$676'.
Removing empty process `store_buffer.$proc$store_buffer.v:85$676'.
Found and cleaned up 1 empty switch in `\store_unit.$proc$store_unit.v:0$640'.
Removing empty process `store_unit.$proc$store_unit.v:0$640'.
Removing empty process `store_unit.$proc$store_unit.v:271$638'.
Found and cleaned up 3 empty switches in `\store_unit.$proc$store_unit.v:196$622'.
Removing empty process `store_unit.$proc$store_unit.v:196$622'.
Found and cleaned up 12 empty switches in `\store_unit.$proc$store_unit.v:99$611'.
Removing empty process `store_unit.$proc$store_unit.v:99$611'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:301$605'.
Found and cleaned up 1 empty switch in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$604'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:294$604'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:264$578'.
Found and cleaned up 5 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$568'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:244$568'.
Found and cleaned up 23 empty switches in `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:145$544'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:96$537'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:93$536'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:90$535'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:87$534'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:83$533'.
Removing empty process `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$proc$load_unit.v:80$532'.
Removing empty process `shift_reg.$proc$shift_reg.v:19$529'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:79$527'.
Found and cleaned up 1 empty switch in `\lsu_bypass.$proc$lsu_bypass.v:73$523'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:73$523'.
Found and cleaned up 5 empty switches in `\lsu_bypass.$proc$lsu_bypass.v:41$475'.
Removing empty process `lsu_bypass.$proc$lsu_bypass.v:41$475'.
Found and cleaned up 4 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$453'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$453'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$448'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$448'.
Found and cleaned up 5 empty switches in `\load_store_unit.$proc$load_store_unit.v:0$431'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$431'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:0$426'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:0$426'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:221$424'.
Found and cleaned up 11 empty switches in `\load_store_unit.$proc$load_store_unit.v:519$415'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:519$415'.
Found and cleaned up 1 empty switch in `\load_store_unit.$proc$load_store_unit.v:320$414'.
Removing empty process `load_store_unit.$proc$load_store_unit.v:320$414'.
Found and cleaned up 10 empty switches in `\cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
Removing empty process `cva6_lsu_shim.$proc$cva6_lsu_shim.v:290$382'.
Found and cleaned up 28 empty switches in `\cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
Removing empty process `cva6_processor_shim.$proc$cva6_processor_shim.v:192$134'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$116'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$114'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$112'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$110'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$108'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$106'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$104'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$103'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:0$95'.
Found and cleaned up 8 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:145$32'.
Found and cleaned up 3 empty switches in `\cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
Removing empty process `cva6_lsu_formal.$proc$cva6_lsu_formal.v:27$14'.
Cleaned up 152 empty switches.

11.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_buffer.
<suppressed ~81 debug messages>
Optimizing module amo_buffer.
Optimizing module store_unit.
<suppressed ~28 debug messages>
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
<suppressed ~60 debug messages>
Optimizing module shift_reg.
Optimizing module lsu_bypass.
<suppressed ~1 debug messages>
Optimizing module load_store_unit.
<suppressed ~29 debug messages>
Optimizing module cva6_lsu_shim.
<suppressed ~55 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~739 debug messages>
Optimizing module cva6_lsu_formal.
<suppressed ~4 debug messages>

11.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \store_unit..
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \cva6_lsu_formal..
Removed 855 unused cells and 4535 unused wires.
<suppressed ~981 debug messages>

11.6. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

11.7. Executing OPT pass (performing simple optimizations).

11.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.
<suppressed ~4 debug messages>

11.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~177 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~9315 debug messages>
Finding identical cells in module `\load_store_unit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\lsu_bypass'.
<suppressed ~36 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~114 debug messages>
Finding identical cells in module `\store_unit'.
<suppressed ~144 debug messages>
Removed a total of 3280 cells.

11.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1614.
    dead port 2/2 on $mux $procmux$1617.
    dead port 1/2 on $mux $procmux$1619.
    dead port 2/2 on $mux $procmux$1621.
    dead port 2/2 on $mux $procmux$1623.
    dead port 2/2 on $mux $procmux$1633.
    dead port 1/2 on $mux $procmux$1635.
    dead port 2/2 on $mux $procmux$1637.
    dead port 2/2 on $mux $procmux$1639.
    dead port 2/2 on $mux $procmux$1649.
    dead port 1/2 on $mux $procmux$1651.
    dead port 2/2 on $mux $procmux$1653.
    dead port 2/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1664.
    dead port 2/2 on $mux $procmux$1666.
    dead port 2/2 on $mux $procmux$1668.
    dead port 1/2 on $mux $procmux$1677.
    dead port 2/2 on $mux $procmux$1679.
    dead port 2/2 on $mux $procmux$1681.
    dead port 2/2 on $mux $procmux$1689.
    dead port 2/2 on $mux $procmux$1691.
    dead port 2/2 on $mux $procmux$1699.
    dead port 2/2 on $mux $procmux$1701.
    dead port 2/2 on $mux $procmux$1709.
    dead port 2/2 on $mux $procmux$1711.
    dead port 2/2 on $mux $procmux$1718.
    dead port 2/2 on $mux $procmux$1725.
    dead port 2/2 on $mux $procmux$1732.
    dead port 2/2 on $mux $procmux$1739.
    dead port 1/2 on $mux $procmux$1749.
    dead port 2/2 on $mux $procmux$1751.
    dead port 2/2 on $mux $procmux$1753.
    dead port 2/2 on $mux $procmux$1762.
    dead port 2/2 on $mux $procmux$1764.
    dead port 2/2 on $mux $procmux$1773.
    dead port 2/2 on $mux $procmux$1775.
    dead port 2/2 on $mux $procmux$1783.
    dead port 2/2 on $mux $procmux$1791.
    dead port 2/2 on $mux $procmux$1803.
    dead port 2/2 on $mux $procmux$1812.
    dead port 2/2 on $mux $procmux$1822.
    dead port 1/2 on $mux $procmux$1838.
    dead port 2/2 on $mux $procmux$1841.
    dead port 1/2 on $mux $procmux$1843.
    dead port 2/2 on $mux $procmux$1845.
    dead port 2/2 on $mux $procmux$1847.
    dead port 2/2 on $mux $procmux$1863.
    dead port 1/2 on $mux $procmux$1865.
    dead port 2/2 on $mux $procmux$1867.
    dead port 2/2 on $mux $procmux$1869.
    dead port 2/2 on $mux $procmux$1885.
    dead port 1/2 on $mux $procmux$1887.
    dead port 2/2 on $mux $procmux$1889.
    dead port 2/2 on $mux $procmux$1891.
    dead port 1/2 on $mux $procmux$1906.
    dead port 2/2 on $mux $procmux$1908.
    dead port 2/2 on $mux $procmux$1910.
    dead port 1/2 on $mux $procmux$1925.
    dead port 2/2 on $mux $procmux$1927.
    dead port 2/2 on $mux $procmux$1929.
    dead port 2/2 on $mux $procmux$1943.
    dead port 2/2 on $mux $procmux$1945.
    dead port 2/2 on $mux $procmux$1959.
    dead port 2/2 on $mux $procmux$1961.
    dead port 2/2 on $mux $procmux$1975.
    dead port 2/2 on $mux $procmux$1977.
    dead port 2/2 on $mux $procmux$1990.
    dead port 2/2 on $mux $procmux$2003.
    dead port 2/2 on $mux $procmux$2016.
    dead port 2/2 on $mux $procmux$2029.
    dead port 1/2 on $mux $procmux$1548.
    dead port 2/2 on $mux $procmux$1563.
    dead port 2/2 on $mux $procmux$1569.
    dead port 2/2 on $mux $procmux$1575.
    dead port 2/2 on $mux $procmux$1593.
    dead port 2/2 on $mux $procmux$2070.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$11312.
    dead port 2/2 on $mux $procmux$11314.
    dead port 1/2 on $mux $procmux$11317.
    dead port 2/2 on $mux $procmux$11323.
    dead port 1/2 on $mux $procmux$11326.
    dead port 2/2 on $mux $procmux$11332.
    dead port 1/2 on $mux $procmux$11335.
    dead port 2/2 on $mux $procmux$11341.
    dead port 1/2 on $mux $procmux$11344.
    dead port 2/2 on $mux $procmux$11362.
    dead port 2/2 on $mux $procmux$11364.
    dead port 1/2 on $mux $procmux$11367.
    dead port 2/2 on $mux $procmux$11373.
    dead port 1/2 on $mux $procmux$11376.
    dead port 2/2 on $mux $procmux$11382.
    dead port 1/2 on $mux $procmux$11385.
    dead port 2/2 on $mux $procmux$11391.
    dead port 1/2 on $mux $procmux$11394.
    dead port 1/2 on $mux $procmux$11411.
    dead port 1/2 on $mux $procmux$11417.
    dead port 1/2 on $mux $procmux$11423.
    dead port 1/2 on $mux $procmux$11429.
    dead port 1/2 on $mux $procmux$11447.
    dead port 1/2 on $mux $procmux$11453.
    dead port 1/2 on $mux $procmux$11459.
    dead port 1/2 on $mux $procmux$11465.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2379.
    dead port 1/2 on $mux $procmux$2382.
    dead port 1/2 on $mux $procmux$2385.
    dead port 2/2 on $mux $procmux$2388.
    dead port 1/2 on $mux $procmux$2409.
    dead port 1/2 on $mux $procmux$2412.
    dead port 2/2 on $mux $procmux$2415.
    dead port 1/2 on $mux $procmux$2433.
    dead port 2/2 on $mux $procmux$2436.
    dead port 1/2 on $mux $procmux$2442.
    dead port 2/2 on $mux $procmux$2445.
    dead port 1/2 on $mux $procmux$2460.
    dead port 1/2 on $mux $procmux$2463.
    dead port 2/2 on $mux $procmux$2466.
    dead port 1/2 on $mux $procmux$2472.
    dead port 1/2 on $mux $procmux$2475.
    dead port 2/2 on $mux $procmux$2478.
    dead port 1/2 on $mux $procmux$2484.
    dead port 2/2 on $mux $procmux$2487.
    dead port 1/2 on $mux $procmux$2493.
    dead port 2/2 on $mux $procmux$2496.
    dead port 1/2 on $mux $procmux$2502.
    dead port 2/2 on $mux $procmux$2505.
    dead port 2/2 on $mux $procmux$2509.
    dead port 2/2 on $mux $procmux$2512.
    dead port 2/2 on $mux $procmux$2514.
    dead port 2/2 on $mux $procmux$2517.
    dead port 2/2 on $mux $procmux$2521.
    dead port 2/2 on $mux $procmux$2524.
    dead port 2/2 on $mux $procmux$2526.
    dead port 2/2 on $mux $procmux$2529.
    dead port 2/2 on $mux $procmux$2533.
    dead port 2/2 on $mux $procmux$2536.
    dead port 2/2 on $mux $procmux$2538.
    dead port 2/2 on $mux $procmux$2541.
    dead port 2/2 on $mux $procmux$2559.
    dead port 2/2 on $mux $procmux$2562.
    dead port 2/2 on $mux $procmux$2568.
    dead port 2/2 on $mux $procmux$2571.
    dead port 2/2 on $mux $procmux$2577.
    dead port 2/2 on $mux $procmux$2580.
    dead port 2/2 on $mux $procmux$2604.
    dead port 2/2 on $mux $procmux$2607.
    dead port 2/2 on $mux $procmux$2625.
    dead port 2/2 on $mux $procmux$2631.
    dead port 2/2 on $mux $procmux$2637.
    dead port 2/2 on $mux $procmux$2643.
    dead port 2/2 on $mux $procmux$2649.
    dead port 2/2 on $mux $procmux$2661.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$2758: \store_cooldown -> 1'0
      Replacing known input bits on port A of cell $procmux$2736: \store_cooldown -> 1'0
      Replacing known input bits on port B of cell $procmux$3448: \ready_o -> 1'1
      Replacing known input bits on port B of cell $procmux$3365: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3166: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3088: \ready_o -> 1'0
      Replacing known input bits on port B of cell $procmux$3013: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2854: \ready_o -> 1'0
      Replacing known input bits on port A of cell $procmux$2828: \ready_o -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$5098.
    dead port 1/2 on $mux $procmux$5105.
    dead port 1/2 on $mux $procmux$5108.
    dead port 2/2 on $mux $procmux$5110.
    dead port 2/2 on $mux $procmux$5113.
    dead port 1/2 on $mux $procmux$5120.
    dead port 1/2 on $mux $procmux$5123.
    dead port 2/2 on $mux $procmux$5125.
    dead port 2/2 on $mux $procmux$5128.
    dead port 1/2 on $mux $procmux$5135.
    dead port 1/2 on $mux $procmux$5138.
    dead port 2/2 on $mux $procmux$5140.
    dead port 2/2 on $mux $procmux$7025.
    dead port 1/2 on $mux $procmux$7028.
    dead port 2/2 on $mux $procmux$7030.
    dead port 2/2 on $mux $procmux$7033.
    dead port 2/2 on $mux $procmux$5143.
    dead port 1/2 on $mux $procmux$5150.
    dead port 1/2 on $mux $procmux$5153.
    dead port 2/2 on $mux $procmux$5155.
    dead port 2/2 on $mux $procmux$5158.
    dead port 1/2 on $mux $procmux$5165.
    dead port 1/2 on $mux $procmux$5168.
    dead port 2/2 on $mux $procmux$5170.
    dead port 2/2 on $mux $procmux$5173.
    dead port 1/2 on $mux $procmux$5180.
    dead port 1/2 on $mux $procmux$5183.
    dead port 2/2 on $mux $procmux$5185.
    dead port 2/2 on $mux $procmux$5188.
    dead port 1/2 on $mux $procmux$5195.
    dead port 1/2 on $mux $procmux$5198.
    dead port 2/2 on $mux $procmux$5200.
    dead port 2/2 on $mux $procmux$5203.
    dead port 1/2 on $mux $procmux$5210.
    dead port 1/2 on $mux $procmux$5213.
    dead port 2/2 on $mux $procmux$5215.
    dead port 2/2 on $mux $procmux$5218.
    dead port 1/2 on $mux $procmux$5225.
    dead port 1/2 on $mux $procmux$5228.
    dead port 2/2 on $mux $procmux$5230.
    dead port 2/2 on $mux $procmux$5233.
    dead port 2/2 on $mux $procmux$7070.
    dead port 1/2 on $mux $procmux$7073.
    dead port 2/2 on $mux $procmux$7075.
    dead port 2/2 on $mux $procmux$7078.
    dead port 1/2 on $mux $procmux$5240.
    dead port 1/2 on $mux $procmux$5243.
    dead port 2/2 on $mux $procmux$5245.
    dead port 2/2 on $mux $procmux$5248.
    dead port 1/2 on $mux $procmux$5255.
    dead port 1/2 on $mux $procmux$5258.
    dead port 2/2 on $mux $procmux$5260.
    dead port 2/2 on $mux $procmux$5263.
    dead port 1/2 on $mux $procmux$5270.
    dead port 1/2 on $mux $procmux$5273.
    dead port 2/2 on $mux $procmux$5275.
    dead port 2/2 on $mux $procmux$5278.
    dead port 1/2 on $mux $procmux$5285.
    dead port 1/2 on $mux $procmux$5288.
    dead port 2/2 on $mux $procmux$5290.
    dead port 2/2 on $mux $procmux$5293.
    dead port 1/2 on $mux $procmux$5300.
    dead port 1/2 on $mux $procmux$5303.
    dead port 2/2 on $mux $procmux$5305.
    dead port 2/2 on $mux $procmux$5308.
    dead port 1/2 on $mux $procmux$5315.
    dead port 1/2 on $mux $procmux$5318.
    dead port 2/2 on $mux $procmux$5320.
    dead port 2/2 on $mux $procmux$5323.
    dead port 1/2 on $mux $procmux$5330.
    dead port 1/2 on $mux $procmux$5333.
    dead port 2/2 on $mux $procmux$7115.
    dead port 1/2 on $mux $procmux$7118.
    dead port 2/2 on $mux $procmux$7120.
    dead port 2/2 on $mux $procmux$7123.
    dead port 2/2 on $mux $procmux$5335.
    dead port 2/2 on $mux $procmux$5338.
    dead port 1/2 on $mux $procmux$5345.
    dead port 1/2 on $mux $procmux$5348.
    dead port 2/2 on $mux $procmux$5350.
    dead port 2/2 on $mux $procmux$5353.
    dead port 1/2 on $mux $procmux$5360.
    dead port 1/2 on $mux $procmux$5363.
    dead port 2/2 on $mux $procmux$5365.
    dead port 2/2 on $mux $procmux$5368.
    dead port 1/2 on $mux $procmux$5375.
    dead port 1/2 on $mux $procmux$5378.
    dead port 2/2 on $mux $procmux$5380.
    dead port 2/2 on $mux $procmux$5383.
    dead port 1/2 on $mux $procmux$5390.
    dead port 1/2 on $mux $procmux$5393.
    dead port 2/2 on $mux $procmux$5395.
    dead port 2/2 on $mux $procmux$5398.
    dead port 1/2 on $mux $procmux$5405.
    dead port 1/2 on $mux $procmux$5408.
    dead port 2/2 on $mux $procmux$5410.
    dead port 2/2 on $mux $procmux$5413.
    dead port 1/2 on $mux $procmux$5420.
    dead port 1/2 on $mux $procmux$5423.
    dead port 2/2 on $mux $procmux$5425.
    dead port 2/2 on $mux $procmux$5428.
    dead port 2/2 on $mux $procmux$7160.
    dead port 1/2 on $mux $procmux$7163.
    dead port 2/2 on $mux $procmux$7165.
    dead port 2/2 on $mux $procmux$7168.
    dead port 2/2 on $mux $procmux$7205.
    dead port 1/2 on $mux $procmux$7208.
    dead port 2/2 on $mux $procmux$7210.
    dead port 2/2 on $mux $procmux$7213.
    dead port 1/2 on $mux $procmux$5435.
    dead port 1/2 on $mux $procmux$5438.
    dead port 2/2 on $mux $procmux$5440.
    dead port 2/2 on $mux $procmux$5443.
    dead port 1/2 on $mux $procmux$5450.
    dead port 1/2 on $mux $procmux$5453.
    dead port 2/2 on $mux $procmux$5455.
    dead port 2/2 on $mux $procmux$5458.
    dead port 1/2 on $mux $procmux$5465.
    dead port 1/2 on $mux $procmux$5468.
    dead port 2/2 on $mux $procmux$5470.
    dead port 2/2 on $mux $procmux$5473.
    dead port 1/2 on $mux $procmux$5480.
    dead port 1/2 on $mux $procmux$5483.
    dead port 2/2 on $mux $procmux$5485.
    dead port 2/2 on $mux $procmux$5488.
    dead port 1/2 on $mux $procmux$5495.
    dead port 1/2 on $mux $procmux$5498.
    dead port 2/2 on $mux $procmux$5500.
    dead port 2/2 on $mux $procmux$5503.
    dead port 1/2 on $mux $procmux$5510.
    dead port 1/2 on $mux $procmux$5513.
    dead port 2/2 on $mux $procmux$5515.
    dead port 2/2 on $mux $procmux$5518.
    dead port 1/2 on $mux $procmux$5525.
    dead port 1/2 on $mux $procmux$7265.
    dead port 2/2 on $mux $procmux$7267.
    dead port 2/2 on $mux $procmux$7270.
    dead port 1/2 on $mux $procmux$7277.
    dead port 2/2 on $mux $procmux$7279.
    dead port 2/2 on $mux $procmux$7282.
    dead port 1/2 on $mux $procmux$7289.
    dead port 2/2 on $mux $procmux$7291.
    dead port 2/2 on $mux $procmux$7294.
    dead port 1/2 on $mux $procmux$7301.
    dead port 2/2 on $mux $procmux$7303.
    dead port 2/2 on $mux $procmux$7306.
    dead port 1/2 on $mux $procmux$7313.
    dead port 2/2 on $mux $procmux$7315.
    dead port 2/2 on $mux $procmux$7318.
    dead port 1/2 on $mux $procmux$7325.
    dead port 2/2 on $mux $procmux$7327.
    dead port 2/2 on $mux $procmux$7330.
    dead port 1/2 on $mux $procmux$7337.
    dead port 2/2 on $mux $procmux$7339.
    dead port 2/2 on $mux $procmux$7342.
    dead port 1/2 on $mux $procmux$7349.
    dead port 2/2 on $mux $procmux$7351.
    dead port 2/2 on $mux $procmux$7354.
    dead port 1/2 on $mux $procmux$7361.
    dead port 2/2 on $mux $procmux$7363.
    dead port 2/2 on $mux $procmux$7366.
    dead port 1/2 on $mux $procmux$7373.
    dead port 2/2 on $mux $procmux$7375.
    dead port 2/2 on $mux $procmux$7378.
    dead port 1/2 on $mux $procmux$7385.
    dead port 2/2 on $mux $procmux$7387.
    dead port 2/2 on $mux $procmux$7390.
    dead port 1/2 on $mux $procmux$7397.
    dead port 2/2 on $mux $procmux$7399.
    dead port 2/2 on $mux $procmux$7402.
    dead port 1/2 on $mux $procmux$7409.
    dead port 2/2 on $mux $procmux$7411.
    dead port 2/2 on $mux $procmux$7414.
    dead port 1/2 on $mux $procmux$7421.
    dead port 2/2 on $mux $procmux$7423.
    dead port 2/2 on $mux $procmux$7426.
    dead port 1/2 on $mux $procmux$7433.
    dead port 2/2 on $mux $procmux$7435.
    dead port 2/2 on $mux $procmux$7438.
    dead port 1/2 on $mux $procmux$7445.
    dead port 2/2 on $mux $procmux$7447.
    dead port 2/2 on $mux $procmux$7450.
    dead port 1/2 on $mux $procmux$7457.
    dead port 2/2 on $mux $procmux$7459.
    dead port 2/2 on $mux $procmux$7462.
    dead port 1/2 on $mux $procmux$7469.
    dead port 2/2 on $mux $procmux$7471.
    dead port 2/2 on $mux $procmux$7474.
    dead port 1/2 on $mux $procmux$7481.
    dead port 2/2 on $mux $procmux$7483.
    dead port 2/2 on $mux $procmux$7486.
    dead port 1/2 on $mux $procmux$7493.
    dead port 2/2 on $mux $procmux$7495.
    dead port 2/2 on $mux $procmux$7498.
    dead port 1/2 on $mux $procmux$7505.
    dead port 2/2 on $mux $procmux$7507.
    dead port 2/2 on $mux $procmux$7510.
    dead port 1/2 on $mux $procmux$7517.
    dead port 2/2 on $mux $procmux$7519.
    dead port 2/2 on $mux $procmux$7522.
    dead port 1/2 on $mux $procmux$7529.
    dead port 2/2 on $mux $procmux$7531.
    dead port 2/2 on $mux $procmux$7534.
    dead port 1/2 on $mux $procmux$7541.
    dead port 2/2 on $mux $procmux$7543.
    dead port 2/2 on $mux $procmux$7546.
    dead port 1/2 on $mux $procmux$7553.
    dead port 2/2 on $mux $procmux$7555.
    dead port 2/2 on $mux $procmux$7558.
    dead port 1/2 on $mux $procmux$7565.
    dead port 2/2 on $mux $procmux$7567.
    dead port 2/2 on $mux $procmux$7570.
    dead port 1/2 on $mux $procmux$7577.
    dead port 2/2 on $mux $procmux$7579.
    dead port 2/2 on $mux $procmux$7582.
    dead port 1/2 on $mux $procmux$7589.
    dead port 2/2 on $mux $procmux$7591.
    dead port 2/2 on $mux $procmux$7594.
    dead port 1/2 on $mux $procmux$7601.
    dead port 2/2 on $mux $procmux$7603.
    dead port 2/2 on $mux $procmux$7606.
    dead port 1/2 on $mux $procmux$7613.
    dead port 2/2 on $mux $procmux$7615.
    dead port 2/2 on $mux $procmux$7618.
    dead port 1/2 on $mux $procmux$7625.
    dead port 2/2 on $mux $procmux$7627.
    dead port 2/2 on $mux $procmux$7630.
    dead port 1/2 on $mux $procmux$7637.
    dead port 2/2 on $mux $procmux$7639.
    dead port 2/2 on $mux $procmux$7642.
    dead port 1/2 on $mux $procmux$7649.
    dead port 2/2 on $mux $procmux$7651.
    dead port 2/2 on $mux $procmux$7654.
    dead port 1/2 on $mux $procmux$7661.
    dead port 2/2 on $mux $procmux$7663.
    dead port 2/2 on $mux $procmux$7666.
    dead port 1/2 on $mux $procmux$7673.
    dead port 2/2 on $mux $procmux$7675.
    dead port 2/2 on $mux $procmux$7678.
    dead port 1/2 on $mux $procmux$7733.
    dead port 2/2 on $mux $procmux$7735.
    dead port 2/2 on $mux $procmux$7738.
    dead port 2/2 on $mux $procmux$8003.
    dead port 2/2 on $mux $procmux$8005.
    dead port 2/2 on $mux $procmux$8008.
    dead port 1/2 on $mux $procmux$5528.
    dead port 2/2 on $mux $procmux$5530.
    dead port 2/2 on $mux $procmux$5533.
    dead port 2/2 on $mux $procmux$10717.
    dead port 2/2 on $mux $procmux$10723.
    dead port 2/2 on $mux $procmux$10729.
    dead port 2/2 on $mux $procmux$10735.
    dead port 2/2 on $mux $procmux$10741.
    dead port 2/2 on $mux $procmux$10747.
    dead port 2/2 on $mux $procmux$10753.
    dead port 2/2 on $mux $procmux$3923.
    dead port 1/2 on $mux $procmux$3926.
    dead port 1/2 on $mux $procmux$3929.
    dead port 2/2 on $mux $procmux$3931.
    dead port 2/2 on $mux $procmux$3934.
    dead port 2/2 on $mux $procmux$10759.
    dead port 2/2 on $mux $procmux$10765.
    dead port 2/2 on $mux $procmux$10771.
    dead port 2/2 on $mux $procmux$10777.
    dead port 2/2 on $mux $procmux$8045.
    dead port 2/2 on $mux $procmux$8047.
    dead port 2/2 on $mux $procmux$8050.
    dead port 2/2 on $mux $procmux$10783.
    dead port 2/2 on $mux $procmux$5765.
    dead port 1/2 on $mux $procmux$5768.
    dead port 2/2 on $mux $procmux$5770.
    dead port 2/2 on $mux $procmux$5773.
    dead port 2/2 on $mux $procmux$10897.
    dead port 2/2 on $mux $procmux$10903.
    dead port 2/2 on $mux $procmux$10909.
    dead port 2/2 on $mux $procmux$10927.
    dead port 2/2 on $mux $procmux$10945.
    dead port 2/2 on $mux $procmux$10951.
    dead port 2/2 on $mux $procmux$10957.
    dead port 2/2 on $mux $procmux$10963.
    dead port 2/2 on $mux $procmux$3971.
    dead port 1/2 on $mux $procmux$3974.
    dead port 2/2 on $mux $procmux$8087.
    dead port 2/2 on $mux $procmux$8089.
    dead port 2/2 on $mux $procmux$8092.
    dead port 1/2 on $mux $procmux$3977.
    dead port 2/2 on $mux $procmux$3979.
    dead port 2/2 on $mux $procmux$3982.
    dead port 2/2 on $mux $procmux$5810.
    dead port 1/2 on $mux $procmux$5813.
    dead port 2/2 on $mux $procmux$5815.
    dead port 2/2 on $mux $procmux$5818.
    dead port 2/2 on $mux $procmux$8129.
    dead port 2/2 on $mux $procmux$8131.
    dead port 2/2 on $mux $procmux$8134.
    dead port 2/2 on $mux $procmux$4019.
    dead port 1/2 on $mux $procmux$4022.
    dead port 1/2 on $mux $procmux$4025.
    dead port 2/2 on $mux $procmux$4027.
    dead port 2/2 on $mux $procmux$4030.
    dead port 2/2 on $mux $procmux$5855.
    dead port 1/2 on $mux $procmux$5858.
    dead port 2/2 on $mux $procmux$5860.
    dead port 2/2 on $mux $procmux$5863.
    dead port 2/2 on $mux $procmux$8171.
    dead port 2/2 on $mux $procmux$8173.
    dead port 2/2 on $mux $procmux$8176.
    dead port 2/2 on $mux $procmux$5900.
    dead port 1/2 on $mux $procmux$5903.
    dead port 2/2 on $mux $procmux$5905.
    dead port 2/2 on $mux $procmux$5908.
    dead port 2/2 on $mux $procmux$4067.
    dead port 1/2 on $mux $procmux$4070.
    dead port 1/2 on $mux $procmux$4073.
    dead port 2/2 on $mux $procmux$4075.
    dead port 2/2 on $mux $procmux$4078.
    dead port 2/2 on $mux $procmux$8213.
    dead port 2/2 on $mux $procmux$8215.
    dead port 2/2 on $mux $procmux$8218.
    dead port 1/2 on $mux $procmux$2709.
    dead port 2/2 on $mux $procmux$2712.
    dead port 2/2 on $mux $procmux$2718.
    dead port 2/2 on $mux $procmux$2724.
    dead port 1/2 on $mux $procmux$2730.
    dead port 2/2 on $mux $procmux$2733.
    dead port 1/2 on $mux $procmux$2739.
    dead port 2/2 on $mux $procmux$2742.
    dead port 2/2 on $mux $procmux$5945.
    dead port 1/2 on $mux $procmux$5948.
    dead port 2/2 on $mux $procmux$5950.
    dead port 2/2 on $mux $procmux$5953.
    dead port 1/2 on $mux $procmux$2749.
    dead port 2/2 on $mux $procmux$2751.
    dead port 2/2 on $mux $procmux$2754.
    dead port 2/2 on $mux $procmux$8255.
    dead port 2/2 on $mux $procmux$8257.
    dead port 2/2 on $mux $procmux$8260.
    dead port 1/2 on $mux $procmux$2761.
    dead port 2/2 on $mux $procmux$2763.
    dead port 2/2 on $mux $procmux$2766.
    dead port 2/2 on $mux $procmux$4115.
    dead port 1/2 on $mux $procmux$4118.
    dead port 1/2 on $mux $procmux$4121.
    dead port 2/2 on $mux $procmux$4123.
    dead port 2/2 on $mux $procmux$4126.
    dead port 1/2 on $mux $procmux$2773.
    dead port 2/2 on $mux $procmux$2775.
    dead port 2/2 on $mux $procmux$2778.
    dead port 2/2 on $mux $procmux$2784.
    dead port 2/2 on $mux $procmux$2787.
    dead port 2/2 on $mux $procmux$2793.
    dead port 2/2 on $mux $procmux$2796.
    dead port 2/2 on $mux $procmux$2802.
    dead port 2/2 on $mux $procmux$2805.
    dead port 2/2 on $mux $procmux$2811.
    dead port 2/2 on $mux $procmux$2817.
    dead port 2/2 on $mux $procmux$2823.
    dead port 2/2 on $mux $procmux$5990.
    dead port 1/2 on $mux $procmux$5993.
    dead port 2/2 on $mux $procmux$5995.
    dead port 2/2 on $mux $procmux$8297.
    dead port 2/2 on $mux $procmux$8299.
    dead port 2/2 on $mux $procmux$8302.
    dead port 2/2 on $mux $procmux$5998.
    dead port 2/2 on $mux $procmux$2830.
    dead port 1/2 on $mux $procmux$2833.
    dead port 1/2 on $mux $procmux$2836.
    dead port 1/2 on $mux $procmux$2839.
    dead port 1/2 on $mux $procmux$2842.
    dead port 1/2 on $mux $procmux$2844.
    dead port 1/2 on $mux $procmux$2847.
    dead port 2/2 on $mux $procmux$2850.
    dead port 1/2 on $mux $procmux$2857.
    dead port 1/2 on $mux $procmux$2860.
    dead port 1/2 on $mux $procmux$2863.
    dead port 2/2 on $mux $procmux$4163.
    dead port 1/2 on $mux $procmux$4166.
    dead port 1/2 on $mux $procmux$4169.
    dead port 2/2 on $mux $procmux$4171.
    dead port 2/2 on $mux $procmux$4174.
    dead port 1/2 on $mux $procmux$2866.
    dead port 1/2 on $mux $procmux$2868.
    dead port 1/2 on $mux $procmux$2871.
    dead port 2/2 on $mux $procmux$2874.
    dead port 1/2 on $mux $procmux$2881.
    dead port 1/2 on $mux $procmux$2884.
    dead port 1/2 on $mux $procmux$2887.
    dead port 1/2 on $mux $procmux$2890.
    dead port 1/2 on $mux $procmux$2892.
    dead port 1/2 on $mux $procmux$2895.
    dead port 2/2 on $mux $procmux$8339.
    dead port 2/2 on $mux $procmux$8341.
    dead port 2/2 on $mux $procmux$8344.
    dead port 2/2 on $mux $procmux$2898.
    dead port 2/2 on $mux $procmux$6035.
    dead port 1/2 on $mux $procmux$6038.
    dead port 2/2 on $mux $procmux$6040.
    dead port 2/2 on $mux $procmux$6043.
    dead port 2/2 on $mux $procmux$2905.
    dead port 1/2 on $mux $procmux$2908.
    dead port 1/2 on $mux $procmux$2911.
    dead port 1/2 on $mux $procmux$2914.
    dead port 1/2 on $mux $procmux$2916.
    dead port 1/2 on $mux $procmux$2919.
    dead port 2/2 on $mux $procmux$2922.
    dead port 2/2 on $mux $procmux$2929.
    dead port 1/2 on $mux $procmux$2932.
    dead port 1/2 on $mux $procmux$2935.
    dead port 1/2 on $mux $procmux$2938.
    dead port 1/2 on $mux $procmux$2940.
    dead port 1/2 on $mux $procmux$2943.
    dead port 2/2 on $mux $procmux$2946.
    dead port 1/2 on $mux $procmux$2953.
    dead port 1/2 on $mux $procmux$2956.
    dead port 1/2 on $mux $procmux$2959.
    dead port 2/2 on $mux $procmux$4211.
    dead port 1/2 on $mux $procmux$4214.
    dead port 1/2 on $mux $procmux$4217.
    dead port 2/2 on $mux $procmux$4219.
    dead port 2/2 on $mux $procmux$4222.
    dead port 2/2 on $mux $procmux$8381.
    dead port 2/2 on $mux $procmux$8383.
    dead port 2/2 on $mux $procmux$8386.
    dead port 1/2 on $mux $procmux$2961.
    dead port 1/2 on $mux $procmux$2964.
    dead port 2/2 on $mux $procmux$2967.
    dead port 1/2 on $mux $procmux$2974.
    dead port 1/2 on $mux $procmux$2977.
    dead port 1/2 on $mux $procmux$2980.
    dead port 2/2 on $mux $procmux$6080.
    dead port 1/2 on $mux $procmux$6083.
    dead port 2/2 on $mux $procmux$6085.
    dead port 2/2 on $mux $procmux$6088.
    dead port 1/2 on $mux $procmux$2982.
    dead port 1/2 on $mux $procmux$2985.
    dead port 2/2 on $mux $procmux$2988.
    dead port 1/2 on $mux $procmux$2995.
    dead port 1/2 on $mux $procmux$2998.
    dead port 1/2 on $mux $procmux$3001.
    dead port 1/2 on $mux $procmux$3003.
    dead port 1/2 on $mux $procmux$3006.
    dead port 2/2 on $mux $procmux$3009.
    dead port 1/2 on $mux $procmux$3016.
    dead port 1/2 on $mux $procmux$3019.
    dead port 1/2 on $mux $procmux$3022.
    dead port 1/2 on $mux $procmux$3024.
    dead port 1/2 on $mux $procmux$3027.
    dead port 2/2 on $mux $procmux$3030.
    dead port 1/2 on $mux $procmux$3037.
    dead port 1/2 on $mux $procmux$3040.
    dead port 2/2 on $mux $procmux$8423.
    dead port 2/2 on $mux $procmux$8425.
    dead port 2/2 on $mux $procmux$8428.
    dead port 1/2 on $mux $procmux$3042.
    dead port 1/2 on $mux $procmux$3045.
    dead port 2/2 on $mux $procmux$3048.
    dead port 1/2 on $mux $procmux$3055.
    dead port 2/2 on $mux $procmux$4259.
    dead port 1/2 on $mux $procmux$4262.
    dead port 1/2 on $mux $procmux$4265.
    dead port 2/2 on $mux $procmux$4267.
    dead port 2/2 on $mux $procmux$4270.
    dead port 1/2 on $mux $procmux$3058.
    dead port 2/2 on $mux $procmux$6125.
    dead port 1/2 on $mux $procmux$6128.
    dead port 2/2 on $mux $procmux$6130.
    dead port 2/2 on $mux $procmux$6133.
    dead port 1/2 on $mux $procmux$3060.
    dead port 1/2 on $mux $procmux$3063.
    dead port 2/2 on $mux $procmux$3066.
    dead port 1/2 on $mux $procmux$3073.
    dead port 1/2 on $mux $procmux$3076.
    dead port 1/2 on $mux $procmux$3078.
    dead port 1/2 on $mux $procmux$3081.
    dead port 2/2 on $mux $procmux$3084.
    dead port 1/2 on $mux $procmux$3091.
    dead port 1/2 on $mux $procmux$3094.
    dead port 1/2 on $mux $procmux$3096.
    dead port 1/2 on $mux $procmux$3099.
    dead port 2/2 on $mux $procmux$3102.
    dead port 2/2 on $mux $procmux$8465.
    dead port 2/2 on $mux $procmux$8467.
    dead port 2/2 on $mux $procmux$8470.
    dead port 1/2 on $mux $procmux$3109.
    dead port 1/2 on $mux $procmux$3111.
    dead port 1/2 on $mux $procmux$3114.
    dead port 2/2 on $mux $procmux$3117.
    dead port 1/2 on $mux $procmux$3124.
    dead port 1/2 on $mux $procmux$3126.
    dead port 1/2 on $mux $procmux$3129.
    dead port 2/2 on $mux $procmux$3132.
    dead port 1/2 on $mux $procmux$3139.
    dead port 1/2 on $mux $procmux$3141.
    dead port 1/2 on $mux $procmux$3144.
    dead port 2/2 on $mux $procmux$3147.
    dead port 2/2 on $mux $procmux$4307.
    dead port 2/2 on $mux $procmux$6170.
    dead port 1/2 on $mux $procmux$6173.
    dead port 2/2 on $mux $procmux$6175.
    dead port 2/2 on $mux $procmux$6178.
    dead port 1/2 on $mux $procmux$4310.
    dead port 1/2 on $mux $procmux$4313.
    dead port 2/2 on $mux $procmux$4315.
    dead port 2/2 on $mux $procmux$4318.
    dead port 1/2 on $mux $procmux$3154.
    dead port 1/2 on $mux $procmux$3156.
    dead port 1/2 on $mux $procmux$3159.
    dead port 2/2 on $mux $procmux$3162.
    dead port 2/2 on $mux $procmux$8507.
    dead port 2/2 on $mux $procmux$8509.
    dead port 2/2 on $mux $procmux$8512.
    dead port 1/2 on $mux $procmux$3169.
    dead port 1/2 on $mux $procmux$3171.
    dead port 1/2 on $mux $procmux$3174.
    dead port 2/2 on $mux $procmux$3177.
    dead port 2/2 on $mux $procmux$3198.
    dead port 1/2 on $mux $procmux$3200.
    dead port 1/2 on $mux $procmux$3203.
    dead port 2/2 on $mux $procmux$3206.
    dead port 2/2 on $mux $procmux$3213.
    dead port 1/2 on $mux $procmux$3215.
    dead port 1/2 on $mux $procmux$3218.
    dead port 2/2 on $mux $procmux$3221.
    dead port 2/2 on $mux $procmux$3227.
    dead port 1/2 on $mux $procmux$3229.
    dead port 1/2 on $mux $procmux$3232.
    dead port 2/2 on $mux $procmux$3235.
    dead port 2/2 on $mux $procmux$3242.
    dead port 1/2 on $mux $procmux$3244.
    dead port 1/2 on $mux $procmux$3247.
    dead port 2/2 on $mux $procmux$3250.
    dead port 2/2 on $mux $procmux$6215.
    dead port 1/2 on $mux $procmux$6218.
    dead port 2/2 on $mux $procmux$6220.
    dead port 2/2 on $mux $procmux$6223.
    dead port 2/2 on $mux $procmux$3257.
    dead port 1/2 on $mux $procmux$3259.
    dead port 1/2 on $mux $procmux$3262.
    dead port 2/2 on $mux $procmux$3265.
    dead port 2/2 on $mux $procmux$8549.
    dead port 2/2 on $mux $procmux$8551.
    dead port 2/2 on $mux $procmux$8554.
    dead port 2/2 on $mux $procmux$4355.
    dead port 1/2 on $mux $procmux$4358.
    dead port 1/2 on $mux $procmux$4361.
    dead port 2/2 on $mux $procmux$4363.
    dead port 2/2 on $mux $procmux$4366.
    dead port 1/2 on $mux $procmux$3271.
    dead port 1/2 on $mux $procmux$3274.
    dead port 2/2 on $mux $procmux$3277.
    dead port 1/2 on $mux $procmux$3283.
    dead port 1/2 on $mux $procmux$3286.
    dead port 2/2 on $mux $procmux$3289.
    dead port 1/2 on $mux $procmux$3295.
    dead port 1/2 on $mux $procmux$3298.
    dead port 2/2 on $mux $procmux$3301.
    dead port 1/2 on $mux $procmux$3319.
    dead port 1/2 on $mux $procmux$3322.
    dead port 2/2 on $mux $procmux$3325.
    dead port 1/2 on $mux $procmux$3331.
    dead port 1/2 on $mux $procmux$3334.
    dead port 2/2 on $mux $procmux$3337.
    dead port 2/2 on $mux $procmux$6260.
    dead port 1/2 on $mux $procmux$6263.
    dead port 2/2 on $mux $procmux$6265.
    dead port 2/2 on $mux $procmux$6268.
    dead port 2/2 on $mux $procmux$8591.
    dead port 2/2 on $mux $procmux$8593.
    dead port 2/2 on $mux $procmux$8596.
    dead port 1/2 on $mux $procmux$3343.
    dead port 1/2 on $mux $procmux$3346.
    dead port 2/2 on $mux $procmux$3349.
    dead port 1/2 on $mux $procmux$3355.
    dead port 1/2 on $mux $procmux$3358.
    dead port 2/2 on $mux $procmux$3361.
    dead port 1/2 on $mux $procmux$3367.
    dead port 1/2 on $mux $procmux$3370.
    dead port 2/2 on $mux $procmux$3373.
    dead port 2/2 on $mux $procmux$4403.
    dead port 1/2 on $mux $procmux$4406.
    dead port 1/2 on $mux $procmux$4409.
    dead port 2/2 on $mux $procmux$4411.
    dead port 2/2 on $mux $procmux$4414.
    dead port 1/2 on $mux $procmux$3379.
    dead port 2/2 on $mux $procmux$3382.
    dead port 1/2 on $mux $procmux$3388.
    dead port 2/2 on $mux $procmux$3391.
    dead port 1/2 on $mux $procmux$3406.
    dead port 2/2 on $mux $procmux$3409.
    dead port 1/2 on $mux $procmux$3415.
    dead port 2/2 on $mux $procmux$3418.
    dead port 1/2 on $mux $procmux$3424.
    dead port 2/2 on $mux $procmux$3427.
    dead port 2/2 on $mux $procmux$8633.
    dead port 2/2 on $mux $procmux$8635.
    dead port 2/2 on $mux $procmux$8638.
    dead port 2/2 on $mux $procmux$6305.
    dead port 1/2 on $mux $procmux$6308.
    dead port 2/2 on $mux $procmux$6310.
    dead port 2/2 on $mux $procmux$6313.
    dead port 1/2 on $mux $procmux$3433.
    dead port 2/2 on $mux $procmux$3436.
    dead port 1/2 on $mux $procmux$3442.
    dead port 2/2 on $mux $procmux$3445.
    dead port 1/2 on $mux $procmux$3451.
    dead port 2/2 on $mux $procmux$3454.
    dead port 2/2 on $mux $procmux$4451.
    dead port 1/2 on $mux $procmux$4454.
    dead port 1/2 on $mux $procmux$4457.
    dead port 2/2 on $mux $procmux$4459.
    dead port 2/2 on $mux $procmux$4462.
    dead port 2/2 on $mux $procmux$8675.
    dead port 2/2 on $mux $procmux$8677.
    dead port 2/2 on $mux $procmux$8680.
    dead port 2/2 on $mux $procmux$6350.
    dead port 1/2 on $mux $procmux$6353.
    dead port 2/2 on $mux $procmux$6355.
    dead port 2/2 on $mux $procmux$6358.
    dead port 2/2 on $mux $procmux$3491.
    dead port 1/2 on $mux $procmux$3494.
    dead port 1/2 on $mux $procmux$3497.
    dead port 2/2 on $mux $procmux$3499.
    dead port 2/2 on $mux $procmux$3502.
    dead port 2/2 on $mux $procmux$8717.
    dead port 2/2 on $mux $procmux$8719.
    dead port 2/2 on $mux $procmux$8722.
    dead port 2/2 on $mux $procmux$4499.
    dead port 1/2 on $mux $procmux$4502.
    dead port 1/2 on $mux $procmux$4505.
    dead port 2/2 on $mux $procmux$4507.
    dead port 2/2 on $mux $procmux$4510.
    dead port 2/2 on $mux $procmux$6395.
    dead port 1/2 on $mux $procmux$6398.
    dead port 2/2 on $mux $procmux$6400.
    dead port 2/2 on $mux $procmux$6403.
    dead port 2/2 on $mux $procmux$8759.
    dead port 2/2 on $mux $procmux$8761.
    dead port 2/2 on $mux $procmux$8764.
    dead port 2/2 on $mux $procmux$3539.
    dead port 2/2 on $mux $procmux$4547.
    dead port 1/2 on $mux $procmux$4550.
    dead port 1/2 on $mux $procmux$4553.
    dead port 2/2 on $mux $procmux$6440.
    dead port 1/2 on $mux $procmux$6443.
    dead port 2/2 on $mux $procmux$6445.
    dead port 2/2 on $mux $procmux$6448.
    dead port 2/2 on $mux $procmux$4555.
    dead port 2/2 on $mux $procmux$4558.
    dead port 1/2 on $mux $procmux$3542.
    dead port 1/2 on $mux $procmux$3545.
    dead port 2/2 on $mux $procmux$3547.
    dead port 2/2 on $mux $procmux$3550.
    dead port 2/2 on $mux $procmux$8801.
    dead port 2/2 on $mux $procmux$8803.
    dead port 2/2 on $mux $procmux$8806.
    dead port 2/2 on $mux $procmux$6485.
    dead port 1/2 on $mux $procmux$6488.
    dead port 2/2 on $mux $procmux$6490.
    dead port 2/2 on $mux $procmux$6493.
    dead port 2/2 on $mux $procmux$4595.
    dead port 1/2 on $mux $procmux$4598.
    dead port 1/2 on $mux $procmux$4601.
    dead port 2/2 on $mux $procmux$4603.
    dead port 2/2 on $mux $procmux$8843.
    dead port 2/2 on $mux $procmux$8845.
    dead port 2/2 on $mux $procmux$8848.
    dead port 2/2 on $mux $procmux$4606.
    dead port 2/2 on $mux $procmux$3587.
    dead port 1/2 on $mux $procmux$3590.
    dead port 1/2 on $mux $procmux$3593.
    dead port 2/2 on $mux $procmux$3595.
    dead port 2/2 on $mux $procmux$3598.
    dead port 2/2 on $mux $procmux$6530.
    dead port 1/2 on $mux $procmux$6533.
    dead port 2/2 on $mux $procmux$6535.
    dead port 2/2 on $mux $procmux$6538.
    dead port 2/2 on $mux $procmux$8885.
    dead port 2/2 on $mux $procmux$8887.
    dead port 2/2 on $mux $procmux$8890.
    dead port 2/2 on $mux $procmux$4643.
    dead port 1/2 on $mux $procmux$4646.
    dead port 1/2 on $mux $procmux$4649.
    dead port 2/2 on $mux $procmux$4651.
    dead port 2/2 on $mux $procmux$4654.
    dead port 2/2 on $mux $procmux$3635.
    dead port 1/2 on $mux $procmux$3638.
    dead port 1/2 on $mux $procmux$3641.
    dead port 2/2 on $mux $procmux$3643.
    dead port 2/2 on $mux $procmux$3646.
    dead port 2/2 on $mux $procmux$6575.
    dead port 1/2 on $mux $procmux$6578.
    dead port 2/2 on $mux $procmux$8927.
    dead port 2/2 on $mux $procmux$8929.
    dead port 2/2 on $mux $procmux$8932.
    dead port 2/2 on $mux $procmux$6580.
    dead port 2/2 on $mux $procmux$6583.
    dead port 2/2 on $mux $procmux$4691.
    dead port 1/2 on $mux $procmux$4694.
    dead port 1/2 on $mux $procmux$4697.
    dead port 2/2 on $mux $procmux$4699.
    dead port 2/2 on $mux $procmux$4702.
    dead port 2/2 on $mux $procmux$10003.
    dead port 2/2 on $mux $procmux$10006.
    dead port 2/2 on $mux $procmux$10012.
    dead port 2/2 on $mux $procmux$10015.
    dead port 2/2 on $mux $procmux$8969.
    dead port 2/2 on $mux $procmux$8971.
    dead port 2/2 on $mux $procmux$8974.
    dead port 2/2 on $mux $procmux$10021.
    dead port 2/2 on $mux $procmux$10024.
    dead port 2/2 on $mux $procmux$6620.
    dead port 1/2 on $mux $procmux$6623.
    dead port 2/2 on $mux $procmux$6625.
    dead port 2/2 on $mux $procmux$6628.
    dead port 2/2 on $mux $procmux$10030.
    dead port 2/2 on $mux $procmux$10033.
    dead port 2/2 on $mux $procmux$10039.
    dead port 2/2 on $mux $procmux$10042.
    dead port 2/2 on $mux $procmux$3683.
    dead port 1/2 on $mux $procmux$3686.
    dead port 1/2 on $mux $procmux$3689.
    dead port 2/2 on $mux $procmux$3691.
    dead port 2/2 on $mux $procmux$3694.
    dead port 2/2 on $mux $procmux$10048.
    dead port 2/2 on $mux $procmux$10051.
    dead port 2/2 on $mux $procmux$10057.
    dead port 2/2 on $mux $procmux$10060.
    dead port 2/2 on $mux $procmux$10066.
    dead port 2/2 on $mux $procmux$10069.
    dead port 2/2 on $mux $procmux$4739.
    dead port 1/2 on $mux $procmux$4742.
    dead port 1/2 on $mux $procmux$4745.
    dead port 2/2 on $mux $procmux$9011.
    dead port 2/2 on $mux $procmux$9013.
    dead port 2/2 on $mux $procmux$9016.
    dead port 2/2 on $mux $procmux$4747.
    dead port 2/2 on $mux $procmux$4750.
    dead port 2/2 on $mux $procmux$10075.
    dead port 2/2 on $mux $procmux$10078.
    dead port 2/2 on $mux $procmux$10084.
    dead port 2/2 on $mux $procmux$10087.
    dead port 2/2 on $mux $procmux$6665.
    dead port 1/2 on $mux $procmux$6668.
    dead port 2/2 on $mux $procmux$6670.
    dead port 2/2 on $mux $procmux$6673.
    dead port 2/2 on $mux $procmux$10093.
    dead port 2/2 on $mux $procmux$10096.
    dead port 2/2 on $mux $procmux$10102.
    dead port 2/2 on $mux $procmux$10105.
    dead port 2/2 on $mux $procmux$10111.
    dead port 2/2 on $mux $procmux$10114.
    dead port 2/2 on $mux $procmux$10120.
    dead port 2/2 on $mux $procmux$10123.
    dead port 2/2 on $mux $procmux$10129.
    dead port 2/2 on $mux $procmux$10132.
    dead port 2/2 on $mux $procmux$10138.
    dead port 2/2 on $mux $procmux$10141.
    dead port 2/2 on $mux $procmux$3731.
    dead port 2/2 on $mux $procmux$9053.
    dead port 2/2 on $mux $procmux$9055.
    dead port 2/2 on $mux $procmux$9058.
    dead port 1/2 on $mux $procmux$3734.
    dead port 1/2 on $mux $procmux$3737.
    dead port 2/2 on $mux $procmux$3739.
    dead port 2/2 on $mux $procmux$3742.
    dead port 2/2 on $mux $procmux$10147.
    dead port 2/2 on $mux $procmux$10150.
    dead port 2/2 on $mux $procmux$4787.
    dead port 1/2 on $mux $procmux$4790.
    dead port 1/2 on $mux $procmux$4793.
    dead port 2/2 on $mux $procmux$4795.
    dead port 2/2 on $mux $procmux$4798.
    dead port 2/2 on $mux $procmux$6710.
    dead port 1/2 on $mux $procmux$6713.
    dead port 2/2 on $mux $procmux$6715.
    dead port 2/2 on $mux $procmux$6718.
    dead port 2/2 on $mux $procmux$10156.
    dead port 2/2 on $mux $procmux$10159.
    dead port 2/2 on $mux $procmux$10165.
    dead port 2/2 on $mux $procmux$10168.
    dead port 2/2 on $mux $procmux$10405.
    dead port 2/2 on $mux $procmux$10411.
    dead port 2/2 on $mux $procmux$10417.
    dead port 2/2 on $mux $procmux$9095.
    dead port 2/2 on $mux $procmux$9097.
    dead port 2/2 on $mux $procmux$9100.
    dead port 2/2 on $mux $procmux$10423.
    dead port 2/2 on $mux $procmux$10429.
    dead port 2/2 on $mux $procmux$10435.
    dead port 2/2 on $mux $procmux$10441.
    dead port 2/2 on $mux $procmux$10447.
    dead port 2/2 on $mux $procmux$10453.
    dead port 2/2 on $mux $procmux$10459.
    dead port 2/2 on $mux $procmux$10465.
    dead port 2/2 on $mux $procmux$3779.
    dead port 1/2 on $mux $procmux$3782.
    dead port 2/2 on $mux $procmux$6755.
    dead port 1/2 on $mux $procmux$6758.
    dead port 2/2 on $mux $procmux$6760.
    dead port 2/2 on $mux $procmux$6763.
    dead port 1/2 on $mux $procmux$3785.
    dead port 2/2 on $mux $procmux$4835.
    dead port 1/2 on $mux $procmux$4838.
    dead port 1/2 on $mux $procmux$4841.
    dead port 2/2 on $mux $procmux$4843.
    dead port 2/2 on $mux $procmux$4846.
    dead port 2/2 on $mux $procmux$3787.
    dead port 2/2 on $mux $procmux$3790.
    dead port 2/2 on $mux $procmux$9137.
    dead port 2/2 on $mux $procmux$9139.
    dead port 2/2 on $mux $procmux$9142.
    dead port 2/2 on $mux $procmux$10471.
    dead port 2/2 on $mux $procmux$10477.
    dead port 2/2 on $mux $procmux$10483.
    dead port 2/2 on $mux $procmux$10489.
    dead port 2/2 on $mux $procmux$10495.
    dead port 2/2 on $mux $procmux$10501.
    dead port 2/2 on $mux $procmux$10507.
    dead port 2/2 on $mux $procmux$10513.
    dead port 2/2 on $mux $procmux$10519.
    dead port 2/2 on $mux $procmux$10525.
    dead port 2/2 on $mux $procmux$10531.
    dead port 2/2 on $mux $procmux$6800.
    dead port 1/2 on $mux $procmux$6803.
    dead port 2/2 on $mux $procmux$6805.
    dead port 2/2 on $mux $procmux$6808.
    dead port 2/2 on $mux $procmux$10537.
    dead port 2/2 on $mux $procmux$10543.
    dead port 2/2 on $mux $procmux$9179.
    dead port 2/2 on $mux $procmux$9181.
    dead port 2/2 on $mux $procmux$9184.
    dead port 2/2 on $mux $procmux$10549.
    dead port 2/2 on $mux $procmux$10555.
    dead port 2/2 on $mux $procmux$4883.
    dead port 1/2 on $mux $procmux$4886.
    dead port 1/2 on $mux $procmux$4889.
    dead port 2/2 on $mux $procmux$4891.
    dead port 2/2 on $mux $procmux$4894.
    dead port 2/2 on $mux $procmux$10561.
    dead port 2/2 on $mux $procmux$3827.
    dead port 1/2 on $mux $procmux$3830.
    dead port 1/2 on $mux $procmux$3833.
    dead port 2/2 on $mux $procmux$3835.
    dead port 2/2 on $mux $procmux$3838.
    dead port 2/2 on $mux $procmux$10567.
    dead port 2/2 on $mux $procmux$10573.
    dead port 2/2 on $mux $procmux$10579.
    dead port 2/2 on $mux $procmux$10585.
    dead port 2/2 on $mux $procmux$10591.
    dead port 2/2 on $mux $procmux$6845.
    dead port 1/2 on $mux $procmux$6848.
    dead port 2/2 on $mux $procmux$6850.
    dead port 2/2 on $mux $procmux$6853.
    dead port 2/2 on $mux $procmux$9221.
    dead port 2/2 on $mux $procmux$9223.
    dead port 2/2 on $mux $procmux$9226.
    dead port 2/2 on $mux $procmux$10597.
    dead port 2/2 on $mux $procmux$10603.
    dead port 2/2 on $mux $procmux$10609.
    dead port 2/2 on $mux $procmux$10615.
    dead port 2/2 on $mux $procmux$10621.
    dead port 2/2 on $mux $procmux$10627.
    dead port 2/2 on $mux $procmux$10633.
    dead port 2/2 on $mux $procmux$4931.
    dead port 1/2 on $mux $procmux$4934.
    dead port 1/2 on $mux $procmux$4937.
    dead port 2/2 on $mux $procmux$4939.
    dead port 2/2 on $mux $procmux$4942.
    dead port 2/2 on $mux $procmux$10639.
    dead port 2/2 on $mux $procmux$10645.
    dead port 2/2 on $mux $procmux$10651.
    dead port 2/2 on $mux $procmux$10657.
    dead port 2/2 on $mux $procmux$3875.
    dead port 1/2 on $mux $procmux$3878.
    dead port 1/2 on $mux $procmux$3881.
    dead port 2/2 on $mux $procmux$9263.
    dead port 2/2 on $mux $procmux$9265.
    dead port 2/2 on $mux $procmux$9268.
    dead port 2/2 on $mux $procmux$3883.
    dead port 2/2 on $mux $procmux$6890.
    dead port 1/2 on $mux $procmux$6893.
    dead port 2/2 on $mux $procmux$6895.
    dead port 2/2 on $mux $procmux$6898.
    dead port 2/2 on $mux $procmux$3886.
    dead port 2/2 on $mux $procmux$10663.
    dead port 2/2 on $mux $procmux$10669.
    dead port 2/2 on $mux $procmux$10675.
    dead port 2/2 on $mux $procmux$10681.
    dead port 2/2 on $mux $procmux$10687.
    dead port 2/2 on $mux $procmux$10693.
    dead port 2/2 on $mux $procmux$10699.
    dead port 2/2 on $mux $procmux$10705.
    dead port 2/2 on $mux $procmux$10711.
    dead port 2/2 on $mux $procmux$4979.
    dead port 1/2 on $mux $procmux$4982.
    dead port 1/2 on $mux $procmux$4985.
    dead port 2/2 on $mux $procmux$4987.
    dead port 2/2 on $mux $procmux$4990.
    dead port 2/2 on $mux $procmux$9305.
    dead port 2/2 on $mux $procmux$9307.
    dead port 2/2 on $mux $procmux$9310.
    dead port 2/2 on $mux $procmux$6935.
    dead port 1/2 on $mux $procmux$6938.
    dead port 2/2 on $mux $procmux$6940.
    dead port 2/2 on $mux $procmux$6943.
    dead port 2/2 on $mux $procmux$9347.
    dead port 2/2 on $mux $procmux$9349.
    dead port 2/2 on $mux $procmux$9352.
    dead port 1/2 on $mux $procmux$5045.
    dead port 2/2 on $mux $procmux$6980.
    dead port 1/2 on $mux $procmux$6983.
    dead port 2/2 on $mux $procmux$6985.
    dead port 2/2 on $mux $procmux$6988.
    dead port 1/2 on $mux $procmux$5048.
    dead port 2/2 on $mux $procmux$5050.
    dead port 2/2 on $mux $procmux$5053.
    dead port 1/2 on $mux $procmux$5060.
    dead port 1/2 on $mux $procmux$5063.
    dead port 2/2 on $mux $procmux$5065.
    dead port 2/2 on $mux $procmux$5068.
    dead port 1/2 on $mux $procmux$5075.
    dead port 1/2 on $mux $procmux$5078.
    dead port 2/2 on $mux $procmux$5080.
    dead port 2/2 on $mux $procmux$5083.
    dead port 1/2 on $mux $procmux$5090.
    dead port 1/2 on $mux $procmux$5093.
    dead port 2/2 on $mux $procmux$9400.
    dead port 2/2 on $mux $procmux$9403.
    dead port 2/2 on $mux $procmux$9409.
    dead port 2/2 on $mux $procmux$9412.
    dead port 2/2 on $mux $procmux$9418.
    dead port 2/2 on $mux $procmux$9421.
    dead port 2/2 on $mux $procmux$9427.
    dead port 2/2 on $mux $procmux$9430.
    dead port 2/2 on $mux $procmux$9436.
    dead port 2/2 on $mux $procmux$9439.
    dead port 2/2 on $mux $procmux$9445.
    dead port 2/2 on $mux $procmux$9448.
    dead port 2/2 on $mux $procmux$9454.
    dead port 2/2 on $mux $procmux$9457.
    dead port 2/2 on $mux $procmux$9463.
    dead port 2/2 on $mux $procmux$9466.
    dead port 2/2 on $mux $procmux$9472.
    dead port 2/2 on $mux $procmux$9475.
    dead port 2/2 on $mux $procmux$9481.
    dead port 2/2 on $mux $procmux$9484.
    dead port 2/2 on $mux $procmux$9490.
    dead port 2/2 on $mux $procmux$9493.
    dead port 2/2 on $mux $procmux$9499.
    dead port 2/2 on $mux $procmux$9502.
    dead port 2/2 on $mux $procmux$9508.
    dead port 2/2 on $mux $procmux$9511.
    dead port 2/2 on $mux $procmux$9517.
    dead port 2/2 on $mux $procmux$9520.
    dead port 2/2 on $mux $procmux$9526.
    dead port 2/2 on $mux $procmux$9529.
    dead port 2/2 on $mux $procmux$9535.
    dead port 2/2 on $mux $procmux$9538.
    dead port 2/2 on $mux $procmux$9544.
    dead port 2/2 on $mux $procmux$9547.
    dead port 2/2 on $mux $procmux$9553.
    dead port 2/2 on $mux $procmux$9556.
    dead port 2/2 on $mux $procmux$9562.
    dead port 2/2 on $mux $procmux$9565.
    dead port 2/2 on $mux $procmux$9571.
    dead port 2/2 on $mux $procmux$9574.
    dead port 2/2 on $mux $procmux$9580.
    dead port 2/2 on $mux $procmux$9583.
    dead port 2/2 on $mux $procmux$9589.
    dead port 2/2 on $mux $procmux$9592.
    dead port 2/2 on $mux $procmux$9598.
    dead port 2/2 on $mux $procmux$9601.
    dead port 2/2 on $mux $procmux$9607.
    dead port 2/2 on $mux $procmux$9610.
    dead port 2/2 on $mux $procmux$9616.
    dead port 2/2 on $mux $procmux$9619.
    dead port 2/2 on $mux $procmux$9625.
    dead port 2/2 on $mux $procmux$9628.
    dead port 2/2 on $mux $procmux$9634.
    dead port 2/2 on $mux $procmux$9637.
    dead port 2/2 on $mux $procmux$9643.
    dead port 2/2 on $mux $procmux$9646.
    dead port 2/2 on $mux $procmux$9652.
    dead port 2/2 on $mux $procmux$9655.
    dead port 2/2 on $mux $procmux$9661.
    dead port 2/2 on $mux $procmux$9664.
    dead port 2/2 on $mux $procmux$9670.
    dead port 2/2 on $mux $procmux$9673.
    dead port 2/2 on $mux $procmux$9679.
    dead port 2/2 on $mux $procmux$9682.
    dead port 2/2 on $mux $procmux$9688.
    dead port 2/2 on $mux $procmux$9691.
    dead port 2/2 on $mux $procmux$9697.
    dead port 2/2 on $mux $procmux$9700.
    dead port 2/2 on $mux $procmux$9706.
    dead port 2/2 on $mux $procmux$9709.
    dead port 2/2 on $mux $procmux$9751.
    dead port 2/2 on $mux $procmux$9754.
    dead port 2/2 on $mux $procmux$9886.
    dead port 2/2 on $mux $procmux$9889.
    dead port 2/2 on $mux $procmux$9895.
    dead port 2/2 on $mux $procmux$9898.
    dead port 2/2 on $mux $procmux$9904.
    dead port 2/2 on $mux $procmux$9907.
    dead port 2/2 on $mux $procmux$9913.
    dead port 2/2 on $mux $procmux$9916.
    dead port 2/2 on $mux $procmux$9922.
    dead port 2/2 on $mux $procmux$9925.
    dead port 2/2 on $mux $procmux$9931.
    dead port 2/2 on $mux $procmux$9934.
    dead port 2/2 on $mux $procmux$9940.
    dead port 2/2 on $mux $procmux$9943.
    dead port 2/2 on $mux $procmux$9949.
    dead port 2/2 on $mux $procmux$9952.
    dead port 2/2 on $mux $procmux$9958.
    dead port 2/2 on $mux $procmux$9961.
    dead port 2/2 on $mux $procmux$9967.
    dead port 2/2 on $mux $procmux$9970.
    dead port 2/2 on $mux $procmux$9976.
    dead port 2/2 on $mux $procmux$9979.
    dead port 2/2 on $mux $procmux$9985.
    dead port 2/2 on $mux $procmux$9988.
    dead port 2/2 on $mux $procmux$9994.
    dead port 2/2 on $mux $procmux$9997.
    dead port 2/2 on $mux $procmux$5095.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2169.
    dead port 2/2 on $mux $procmux$2152.
    dead port 2/2 on $mux $procmux$2178.
    dead port 2/2 on $mux $procmux$2160.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1011.
    dead port 2/2 on $mux $procmux$1013.
    dead port 2/2 on $mux $procmux$1031.
    dead port 2/2 on $mux $procmux$1047.
    dead port 2/2 on $mux $procmux$1049.
    dead port 2/2 on $mux $procmux$1097.
    dead port 2/2 on $mux $procmux$1118.
    dead port 2/2 on $mux $procmux$1139.
    dead port 2/2 on $mux $procmux$1190.
    dead port 2/2 on $mux $procmux$1196.
    dead port 2/2 on $mux $procmux$1202.
    dead port 2/2 on $mux $procmux$903.
    dead port 2/2 on $mux $procmux$905.
    dead port 2/2 on $mux $procmux$911.
    dead port 2/2 on $mux $procmux$939.
    dead port 2/2 on $mux $procmux$941.
    dead port 2/2 on $mux $procmux$959.
    dead port 2/2 on $mux $procmux$975.
    dead port 2/2 on $mux $procmux$977.
    dead port 2/2 on $mux $procmux$995.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/9 on $pmux $procmux$1339.
    dead port 2/9 on $pmux $procmux$1339.
    dead port 3/9 on $pmux $procmux$1339.
    dead port 4/9 on $pmux $procmux$1339.
    dead port 2/2 on $mux $procmux$1366.
    dead port 2/2 on $mux $procmux$1372.
    dead port 2/2 on $mux $procmux$1380.
    dead port 2/2 on $mux $procmux$1382.
    dead port 2/2 on $mux $procmux$1390.
    dead port 2/2 on $mux $procmux$1392.
    dead port 2/2 on $mux $procmux$1400.
    dead port 2/2 on $mux $procmux$1402.
    dead port 2/2 on $mux $procmux$1410.
    dead port 2/2 on $mux $procmux$1412.
    dead port 2/2 on $mux $procmux$1419.
    dead port 2/2 on $mux $procmux$1426.
    dead port 2/2 on $mux $procmux$1433.
    dead port 2/2 on $mux $procmux$1440.
    dead port 2/2 on $mux $procmux$1449.
    dead port 2/2 on $mux $procmux$1451.
    dead port 2/2 on $mux $procmux$1460.
    dead port 2/2 on $mux $procmux$1462.
    dead port 2/2 on $mux $procmux$1471.
    dead port 2/2 on $mux $procmux$1473.
    dead port 2/2 on $mux $procmux$1482.
    dead port 2/2 on $mux $procmux$1484.
    dead port 2/2 on $mux $procmux$1492.
    dead port 2/2 on $mux $procmux$1500.
    dead port 2/2 on $mux $procmux$1508.
Removed 1229 multiplexer ports.
<suppressed ~201 debug messages>

11.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$1794: $auto$opt_reduce.cc:134:opt_mux$11949
    New ctrl vector for $pmux cell $procmux$2055: { $procmux$1848_CMP $auto$opt_reduce.cc:134:opt_mux$11951 $eq$load_unit.v:251$572_Y }
    New ctrl vector for $pmux cell $procmux$1602: { $eq$load_unit.v:251$572_Y $auto$opt_reduce.cc:134:opt_mux$11953 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11948: { $procmux$1605_CMP [0] $procmux$1603_CMP $eq$load_unit.v:251$572_Y $eq$load_unit.v:181$554_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11952: { $procmux$1605_CMP [0] $procmux$1603_CMP $eq$load_unit.v:181$554_Y }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
    New ctrl vector for $mux cell $procmux$2566: { }
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
    New ctrl vector for $pmux cell $procmux$8306: { $procmux$7978_CMP $auto$opt_reduce.cc:134:opt_mux$11955 }
    New ctrl vector for $pmux cell $procmux$8768: { $procmux$7989_CMP $auto$opt_reduce.cc:134:opt_mux$11957 }
    New ctrl vector for $pmux cell $procmux$6002: { $procmux$3464_CMP $auto$opt_reduce.cc:134:opt_mux$11959 }
    New ctrl vector for $pmux cell $procmux$6452: { $procmux$3474_CMP $auto$opt_reduce.cc:134:opt_mux$11961 }
    New ctrl vector for $pmux cell $procmux$4562: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$11963 }
    New ctrl vector for $pmux cell $procmux$3554: { $procmux$3460_CMP $auto$opt_reduce.cc:134:opt_mux$11965 }
    New ctrl vector for $pmux cell $procmux$8810: { $procmux$7990_CMP $auto$opt_reduce.cc:134:opt_mux$11967 }
    New ctrl vector for $pmux cell $procmux$4178: { $procmux$3473_CMP $auto$opt_reduce.cc:134:opt_mux$11969 }
    New ctrl vector for $pmux cell $procmux$6497: { $procmux$3475_CMP $auto$opt_reduce.cc:134:opt_mux$11971 }
    New ctrl vector for $pmux cell $procmux$8012: { $auto$opt_reduce.cc:134:opt_mux$11973 $procmux$7971_CMP }
    New ctrl vector for $pmux cell $procmux$8852: { $procmux$7991_CMP $auto$opt_reduce.cc:134:opt_mux$11975 }
    New ctrl vector for $pmux cell $procmux$4610: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$11977 }
    New ctrl vector for $pmux cell $procmux$5732: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$11979 }
    New ctrl vector for $pmux cell $procmux$3602: { $procmux$3461_CMP $auto$opt_reduce.cc:134:opt_mux$11981 }
    New ctrl vector for $pmux cell $procmux$8348: { $procmux$7979_CMP $auto$opt_reduce.cc:134:opt_mux$11983 }
    New ctrl vector for $pmux cell $procmux$6542: { $procmux$3476_CMP $auto$opt_reduce.cc:134:opt_mux$11985 }
    New ctrl vector for $pmux cell $procmux$8894: { $procmux$7992_CMP $auto$opt_reduce.cc:134:opt_mux$11987 }
    New ctrl vector for $pmux cell $procmux$6047: { $procmux$3465_CMP $auto$opt_reduce.cc:134:opt_mux$11989 }
    New ctrl vector for $pmux cell $procmux$7082: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$11991 }
    New ctrl vector for $pmux cell $procmux$4658: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$11993 }
    New ctrl vector for $pmux cell $procmux$3650: { $procmux$3462_CMP $auto$opt_reduce.cc:134:opt_mux$11995 }
    New ctrl vector for $pmux cell $procmux$3938: { $procmux$3468_CMP $auto$opt_reduce.cc:134:opt_mux$11997 }
    New ctrl vector for $pmux cell $procmux$8936: { $procmux$7993_CMP $auto$opt_reduce.cc:134:opt_mux$11999 }
    New ctrl vector for $pmux cell $procmux$6587: { $procmux$3477_CMP $auto$opt_reduce.cc:134:opt_mux$12001 }
    New ctrl vector for $pmux cell $procmux$4706: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12003 }
    New ctrl vector for $pmux cell $procmux$7127: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$12005 }
    New ctrl vector for $pmux cell $procmux$7037: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12007 }
    New ctrl vector for $pmux cell $procmux$4226: { $procmux$3474_CMP $auto$opt_reduce.cc:134:opt_mux$12009 }
    New ctrl vector for $pmux cell $procmux$8054: { $procmux$7972_CMP $auto$opt_reduce.cc:134:opt_mux$12011 }
    New ctrl vector for $pmux cell $procmux$8978: { $procmux$7994_CMP $auto$opt_reduce.cc:134:opt_mux$12013 }
    New ctrl vector for $pmux cell $procmux$8390: { $procmux$7980_CMP $auto$opt_reduce.cc:134:opt_mux$12015 }
    New ctrl vector for $pmux cell $procmux$6632: { $procmux$3478_CMP $auto$opt_reduce.cc:134:opt_mux$12017 }
    New ctrl vector for $pmux cell $procmux$5777: { $auto$opt_reduce.cc:134:opt_mux$12019 $procmux$3459_CMP }
    New ctrl vector for $pmux cell $procmux$6092: { $procmux$3466_CMP $auto$opt_reduce.cc:134:opt_mux$12021 }
    New ctrl vector for $pmux cell $procmux$3698: { $procmux$3463_CMP $auto$opt_reduce.cc:134:opt_mux$12023 }
    New ctrl vector for $pmux cell $procmux$9020: { $procmux$7995_CMP $auto$opt_reduce.cc:134:opt_mux$12025 }
    New ctrl vector for $pmux cell $procmux$4754: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12027 }
    New ctrl vector for $pmux cell $procmux$8432: { $procmux$7981_CMP $auto$opt_reduce.cc:134:opt_mux$12029 }
    New ctrl vector for $pmux cell $procmux$6677: { $procmux$3479_CMP $auto$opt_reduce.cc:134:opt_mux$12031 }
    New ctrl vector for $pmux cell $procmux$8096: { $procmux$7973_CMP $auto$opt_reduce.cc:134:opt_mux$12033 }
    New ctrl vector for $pmux cell $procmux$3986: { $procmux$3469_CMP $auto$opt_reduce.cc:134:opt_mux$12035 }
    New ctrl vector for $pmux cell $procmux$4274: { $procmux$3475_CMP $auto$opt_reduce.cc:134:opt_mux$12037 }
    New ctrl vector for $pmux cell $procmux$9062: { $procmux$7996_CMP $auto$opt_reduce.cc:134:opt_mux$12039 }
    New ctrl vector for $pmux cell $procmux$6137: { $procmux$3467_CMP $auto$opt_reduce.cc:134:opt_mux$12041 }
    New ctrl vector for $pmux cell $procmux$3746: { $procmux$3464_CMP $auto$opt_reduce.cc:134:opt_mux$12043 }
    New ctrl vector for $pmux cell $procmux$5822: { $procmux$3460_CMP $auto$opt_reduce.cc:134:opt_mux$12045 }
    New ctrl vector for $pmux cell $procmux$6722: { $procmux$3480_CMP $auto$opt_reduce.cc:134:opt_mux$12047 }
    New ctrl vector for $pmux cell $procmux$4802: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12049 }
    New ctrl vector for $pmux cell $procmux$8474: { $procmux$7982_CMP $auto$opt_reduce.cc:134:opt_mux$12051 }
    New ctrl vector for $pmux cell $procmux$9104: { $procmux$7997_CMP $auto$opt_reduce.cc:134:opt_mux$12053 }
    New ctrl vector for $pmux cell $procmux$8138: { $procmux$7974_CMP $auto$opt_reduce.cc:134:opt_mux$12055 }
    New ctrl vector for $pmux cell $procmux$6767: { $procmux$3481_CMP $auto$opt_reduce.cc:134:opt_mux$12057 }
    New ctrl vector for $pmux cell $procmux$6182: { $procmux$3468_CMP $auto$opt_reduce.cc:134:opt_mux$12059 }
    New ctrl vector for $pmux cell $procmux$4850: { $procmux$3487_CMP $auto$opt_reduce.cc:134:opt_mux$12061 }
    New ctrl vector for $pmux cell $procmux$4322: { $procmux$3476_CMP $auto$opt_reduce.cc:134:opt_mux$12063 }
    New ctrl vector for $pmux cell $procmux$9146: { $procmux$7998_CMP $auto$opt_reduce.cc:134:opt_mux$12065 }
    New ctrl vector for $pmux cell $procmux$3794: { $procmux$3465_CMP $auto$opt_reduce.cc:134:opt_mux$12067 }
    New ctrl vector for $pmux cell $procmux$8516: { $procmux$7983_CMP $auto$opt_reduce.cc:134:opt_mux$12069 }
    New ctrl vector for $pmux cell $procmux$5867: { $procmux$3461_CMP $auto$opt_reduce.cc:134:opt_mux$12071 }
    New ctrl vector for $pmux cell $procmux$4034: { $procmux$3470_CMP $auto$opt_reduce.cc:134:opt_mux$12073 }
    New ctrl vector for $pmux cell $procmux$6812: { $procmux$3482_CMP $auto$opt_reduce.cc:134:opt_mux$12075 }
    New ctrl vector for $pmux cell $procmux$9188: { $procmux$7999_CMP $auto$opt_reduce.cc:134:opt_mux$12077 }
    New ctrl vector for $pmux cell $procmux$8180: { $procmux$7975_CMP $auto$opt_reduce.cc:134:opt_mux$12079 }
    New ctrl vector for $pmux cell $procmux$4898: { $procmux$3488_CMP $auto$opt_reduce.cc:134:opt_mux$12081 }
    New ctrl vector for $pmux cell $procmux$6227: { $procmux$3469_CMP $auto$opt_reduce.cc:134:opt_mux$12083 }
    New ctrl vector for $pmux cell $procmux$3842: { $procmux$3466_CMP $auto$opt_reduce.cc:134:opt_mux$12085 }
    New ctrl vector for $pmux cell $procmux$8558: { $procmux$7984_CMP $auto$opt_reduce.cc:134:opt_mux$12087 }
    New ctrl vector for $pmux cell $procmux$9230: { $procmux$8000_CMP $auto$opt_reduce.cc:134:opt_mux$12089 }
    New ctrl vector for $pmux cell $procmux$6857: { $procmux$3483_CMP $auto$opt_reduce.cc:134:opt_mux$12091 }
    New ctrl vector for $pmux cell $procmux$4370: { $procmux$3477_CMP $auto$opt_reduce.cc:134:opt_mux$12093 }
    New ctrl vector for $pmux cell $procmux$5912: { $procmux$3462_CMP $auto$opt_reduce.cc:134:opt_mux$12095 }
    New ctrl vector for $pmux cell $procmux$4946: { $procmux$3489_CMP $auto$opt_reduce.cc:134:opt_mux$12097 }
    New ctrl vector for $pmux cell $procmux$4082: { $procmux$3471_CMP $auto$opt_reduce.cc:134:opt_mux$12099 }
    New ctrl vector for $pmux cell $procmux$9272: { $procmux$8001_CMP $auto$opt_reduce.cc:134:opt_mux$12101 }
    New ctrl vector for $pmux cell $procmux$8222: { $procmux$7976_CMP $auto$opt_reduce.cc:134:opt_mux$12103 }
    New ctrl vector for $pmux cell $procmux$6902: { $procmux$3484_CMP $auto$opt_reduce.cc:134:opt_mux$12105 }
    New ctrl vector for $pmux cell $procmux$3890: { $procmux$3467_CMP $auto$opt_reduce.cc:134:opt_mux$12107 }
    New ctrl vector for $pmux cell $procmux$6272: { $procmux$3470_CMP $auto$opt_reduce.cc:134:opt_mux$12109 }
    New ctrl vector for $pmux cell $procmux$8600: { $procmux$7985_CMP $auto$opt_reduce.cc:134:opt_mux$12111 }
    New ctrl vector for $pmux cell $procmux$6947: { $procmux$3485_CMP $auto$opt_reduce.cc:134:opt_mux$12113 }
    New ctrl vector for $pmux cell $procmux$4418: { $procmux$3478_CMP $auto$opt_reduce.cc:134:opt_mux$12115 }
    New ctrl vector for $pmux cell $procmux$6992: { $procmux$3486_CMP $auto$opt_reduce.cc:134:opt_mux$12117 }
    New ctrl vector for $pmux cell $procmux$5957: { $procmux$3463_CMP $auto$opt_reduce.cc:134:opt_mux$12119 }
    New ctrl vector for $pmux cell $procmux$8642: { $procmux$7986_CMP $auto$opt_reduce.cc:134:opt_mux$12121 }
    New ctrl vector for $pmux cell $procmux$6317: { $procmux$3471_CMP $auto$opt_reduce.cc:134:opt_mux$12123 }
    New ctrl vector for $pmux cell $procmux$8264: { $procmux$7977_CMP $auto$opt_reduce.cc:134:opt_mux$12125 }
    New ctrl vector for $pmux cell $procmux$3458: { $procmux$3490_CMP $auto$opt_reduce.cc:134:opt_mux$12127 }
    New ctrl vector for $pmux cell $procmux$4130: { $procmux$3472_CMP $auto$opt_reduce.cc:134:opt_mux$12129 }
    New ctrl vector for $pmux cell $procmux$4466: { $procmux$3479_CMP $auto$opt_reduce.cc:134:opt_mux$12131 }
    New ctrl vector for $pmux cell $procmux$8684: { $procmux$7987_CMP $auto$opt_reduce.cc:134:opt_mux$12133 }
    New ctrl vector for $pmux cell $procmux$7970: { $procmux$8002_CMP $auto$opt_reduce.cc:134:opt_mux$12135 }
    New ctrl vector for $pmux cell $procmux$6362: { $procmux$3472_CMP $auto$opt_reduce.cc:134:opt_mux$12137 }
    New ctrl vector for $pmux cell $procmux$3506: { $auto$opt_reduce.cc:134:opt_mux$12139 $procmux$3459_CMP }
    New ctrl vector for $pmux cell $procmux$8726: { $procmux$7988_CMP $auto$opt_reduce.cc:134:opt_mux$12141 }
    New ctrl vector for $pmux cell $procmux$4514: { $procmux$3480_CMP $auto$opt_reduce.cc:134:opt_mux$12143 }
    New ctrl vector for $pmux cell $procmux$6407: { $procmux$3473_CMP $auto$opt_reduce.cc:134:opt_mux$12145 }
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
    New ctrl vector for $pmux cell $procmux$2165: $auto$opt_reduce.cc:134:opt_mux$12147
    New ctrl vector for $pmux cell $procmux$2147: $auto$opt_reduce.cc:134:opt_mux$12149
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
    New ctrl vector for $pmux cell $procmux$1515: { $procmux$1452_CMP $procmux$1383_CMP $auto$opt_reduce.cc:134:opt_mux$12151 }
    New ctrl vector for $pmux cell $procmux$1520: { $procmux$1452_CMP $procmux$1383_CMP $auto$opt_reduce.cc:134:opt_mux$12153 }
    New ctrl vector for $pmux cell $procmux$1525: { $procmux$1383_CMP $auto$opt_reduce.cc:134:opt_mux$12155 }
    New ctrl vector for $pmux cell $procmux$1530: { $procmux$1383_CMP $auto$opt_reduce.cc:134:opt_mux$12157 }
    New ctrl vector for $pmux cell $procmux$1535: { $procmux$1383_CMP $auto$opt_reduce.cc:134:opt_mux$12159 }
  Optimizing cells in module \store_unit.
Performed a total of 109 changes.

11.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~39 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
<suppressed ~36 debug messages>
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~105 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
<suppressed ~24 debug messages>
Removed a total of 68 cells.

11.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 4564 unused wires.
<suppressed ~8 debug messages>

11.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.8. Rerunning OPT passes. (Maybe there is more to do..)

11.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~201 debug messages>

11.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
    New ctrl vector for $pmux cell $procmux$2043: { $procmux$1754_CMP $auto$opt_reduce.cc:134:opt_mux$12161 }
    New ctrl vector for $pmux cell $procmux$2049: { $procmux$1754_CMP $auto$opt_reduce.cc:134:opt_mux$12163 }
    New ctrl vector for $pmux cell $procmux$2055: { $auto$opt_reduce.cc:134:opt_mux$11951 $auto$opt_reduce.cc:134:opt_mux$12165 }
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 3 changes.

11.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 2 cells.

11.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

11.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.14. Rerunning OPT passes. (Maybe there is more to do..)

11.7.15. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \amo_buffer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cva6_lsu_formal..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_lsu_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \cva6_processor_shim..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lsu_bypass..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_buffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~201 debug messages>

11.7.16. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
  Optimizing cells in module \amo_buffer.
  Optimizing cells in module \cva6_lsu_formal.
  Optimizing cells in module \cva6_lsu_shim.
  Optimizing cells in module \cva6_processor_shim.
  Optimizing cells in module \load_store_unit.
  Optimizing cells in module \lsu_bypass.
  Optimizing cells in module \shift_reg.
  Optimizing cells in module \store_buffer.
  Optimizing cells in module \store_unit.
Performed a total of 0 changes.

11.7.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

11.7.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..

11.7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.7.20. Finished OPT passes. (There is nothing left to do.)

11.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:181$554 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ne$load_unit.v:248$569 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:251$572 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:261$577 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$581 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$582 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:283$583 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$585 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$586 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$eq$load_unit.v:284$587 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$597 ($add).
Removed top 29 bits (of 32) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$597 ($add).
Removed top 30 bits (of 32) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$ternary$load_unit.v:286$599 ($mux).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1542_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1542_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1542_CMP2 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1543_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1543_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1543_CMP2 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1603_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1605_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1646 ($mux).
Removed top 3 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1754_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$1904 ($mux).
Removed top 2 bits (of 4) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2039_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2074_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2074_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2074_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2074_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2074_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2075_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2075_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2075_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2075_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2075_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procmux$2076_CMP15 ($eq).
Removed top 1 bits (of 3) from port Y of cell $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$597 ($add).
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$11\state_d[3:0].
Removed top 1 bits (of 4) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$15\state_d[3:0].
Removed top 30 bits (of 32) from wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$add$load_unit.v:286$597_Y.
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:36$21 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$le$cva6_lsu_formal.v:148$51 ($le).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$57 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:159$58 ($eq).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$60 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:160$61 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$63 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:161$64 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:162$66 ($eq).
Removed top 30 bits (of 32) from port B of cell cva6_lsu_formal.$gt$cva6_lsu_formal.v:169$70 ($gt).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:176$80 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:177$82 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:177$83 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:184$85 ($add).
Removed top 29 bits (of 32) from port B of cell cva6_lsu_formal.$lt$cva6_lsu_formal.v:193$88 ($lt).
Removed top 1 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:194$90 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_lsu_formal.$eq$cva6_lsu_formal.v:194$91 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_lsu_formal.$add$cva6_lsu_formal.v:201$93 ($add).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11350_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_formal.$procmux$11400_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:347$394 ($eq).
Removed top 1 bits (of 2) from port B of cell cva6_lsu_shim.$eq$cva6_lsu_shim.v:356$396 ($eq).
Removed top 2 bits (of 111) from mux cell cva6_lsu_shim.$procmux$2575 ($mux).
Removed top 2 bits (of 111) from wire cva6_lsu_shim.$3\tb_io_fu_data_i[110:0].
Removed top 1 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:66$241 ($eq).
Removed top 5 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:70$278 ($eq).
Removed top 2 bits (of 7) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:74$305 ($eq).
Removed top 32 bits (of 64) from port Y of cell cva6_processor_shim.$shr$cva6_processor_shim.v:90$320 ($shr).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:97$323 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:105$335 ($eq).
Removed top 20 bits (of 32) from port B of cell cva6_processor_shim.$lt$cva6_processor_shim.v:105$336 ($lt).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$337 ($mux).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:106$338 ($eq).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$340 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:106$341 ($mux).
Removed top 31 bits (of 32) from mux cell cva6_processor_shim.$ternary$cva6_processor_shim.v:105$342 ($mux).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$352 ($add).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$add$cva6_processor_shim.v:254$352 ($add).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:257$353 ($eq).
Removed top 1 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:261$354 ($eq).
Removed top 2 bits (of 3) from port B of cell cva6_processor_shim.$eq$cva6_processor_shim.v:263$355 ($eq).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$361 ($sub).
Removed top 31 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:286$361 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$364 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:296$364 ($sub).
Removed top 31 bits (of 32) from port B of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$371 ($sub).
Removed top 29 bits (of 32) from port Y of cell cva6_processor_shim.$sub$cva6_processor_shim.v:316$371 ($sub).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3475_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3476_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3477_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3478_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3479_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3480_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3481_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3482_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3483_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3484_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3485_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3486_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3487_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3488_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$3489_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5011_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5012_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5013_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5014_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5015_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5016_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5017_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5018_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5019_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5020_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5021_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5022_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5023_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5024_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$5025_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7189_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7190_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7191_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7192_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7193_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7194_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7195_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7196_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7197_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7198_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7199_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7200_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7201_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7202_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7203_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7987_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7988_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7989_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7990_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7991_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7992_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7993_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7994_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7995_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7996_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7997_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7998_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$7999_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8000_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell cva6_processor_shim.$procmux$8001_CMP0 ($eq).
Removed top 29 bits (of 32) from wire cva6_processor_shim.$add$cva6_processor_shim.v:254$352_Y.
Removed top 32 bits (of 64) from wire cva6_processor_shim.$shr$cva6_processor_shim.v:90$320_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$337_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:105$342_Y.
Removed top 31 bits (of 32) from wire cva6_processor_shim.$ternary$cva6_processor_shim.v:106$340_Y.
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2150_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell load_store_unit.$procmux$2170_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2191_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2191_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2191_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2191_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2191_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2192_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2192_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2192_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2192_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2192_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP5 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP6 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP7 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP8 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP9 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP10 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP11 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP12 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP13 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP14 ($eq).
Removed top 2 bits (of 8) from port B of cell load_store_unit.$procmux$2193_CMP15 ($eq).
Removed top 2 bits (of 4) from port B of cell load_store_unit.$procmux$2362_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell load_store_unit.$procmux$2363_CMP0 ($eq).
Removed top 2 bits (of 34) from FF cell load_store_unit.$procdff$11728 ($adff).
Removed top 2 bits (of 22) from wire load_store_unit.dtlb_ppn.
Removed top 2 bits (of 34) from wire load_store_unit.mmu_paddr.
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:47$484 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:47$484 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$485 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$485 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$485 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$486 ($shl).
Removed top 85 bits (of 170) from port Y of cell lsu_bypass.$and$lsu_bypass.v:0$487 ($and).
Removed top 85 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$490 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$490 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:48$494 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:48$494 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:49$495 ($add).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:49$495 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$mul$lsu_bypass.v:52$498 ($mul).
Removed top 24 bits (of 32) from port Y of cell lsu_bypass.$mul$lsu_bypass.v:52$498 ($mul).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:52$499 ($add).
Removed top 25 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:52$499 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:52$499 ($add).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$500 ($shl).
Removed top 169 bits (of 170) from port A of cell lsu_bypass.$shl$lsu_bypass.v:0$503 ($shl).
Removed top 23 bits (of 32) from port B of cell lsu_bypass.$shl$lsu_bypass.v:0$503 ($shl).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:53$507 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:53$507 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:54$508 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:54$508 ($sub).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:58$520 ($add).
Removed top 31 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:58$520 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$sub$lsu_bypass.v:59$521 ($sub).
Removed top 30 bits (of 32) from port Y of cell lsu_bypass.$sub$lsu_bypass.v:59$521 ($sub).
Removed top 24 bits (of 32) from port A of cell lsu_bypass.$add$lsu_bypass.v:0$525 ($add).
Removed top 31 bits (of 32) from port B of cell lsu_bypass.$add$lsu_bypass.v:0$525 ($add).
Removed top 23 bits (of 32) from port Y of cell lsu_bypass.$add$lsu_bypass.v:0$525 ($add).
Removed top 22 bits (of 32) from port B of cell lsu_bypass.$shiftx$lsu_bypass.v:0$526 ($shiftx).
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$485_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:0$525_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:48$494_Y.
Removed top 23 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:52$499_Y.
Removed top 31 bits (of 32) from wire lsu_bypass.$add$lsu_bypass.v:53$507_Y.
Removed top 85 bits (of 170) from wire lsu_bypass.$and$lsu_bypass.v:0$487_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:47$484_Y.
Removed top 24 bits (of 32) from wire lsu_bypass.$mul$lsu_bypass.v:52$498_Y.
Removed top 30 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:88$689 ($lt).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:94$701 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:94$701 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:94$702 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:94$702 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:94$702 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$703 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$703 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$703 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$704 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$704 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$704 ($sub).
Removed top 258 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$706 ($and).
Removed top 258 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$711 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:95$716 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:95$716 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:95$716 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$717 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$717 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$717 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$718 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$718 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$718 ($sub).
Removed top 260 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$720 ($and).
Removed top 260 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$725 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:96$730 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:96$730 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:96$730 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$731 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$731 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$731 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$732 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$732 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$732 ($sub).
Removed top 288 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$734 ($and).
Removed top 288 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$739 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:97$744 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:97$744 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:97$744 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$745 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$745 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$745 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$746 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$746 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$746 ($sub).
Removed top 290 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$748 ($and).
Removed top 290 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$753 ($shl).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:98$758 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:98$758 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:98$758 ($add).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$759 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$762 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$762 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:100$767 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:100$767 ($add).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:100$767 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:103$770 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:103$770 ($mul).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$775 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:105$780 ($sub).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:105$780 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:128$784 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:128$784 ($mul).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:128$785 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:128$785 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:128$785 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$786 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$786 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$786 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$787 ($sub).
Removed top 28 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$787 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$787 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$788 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:131$791 ($add).
Removed top 25 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:131$791 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:131$791 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$792 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$792 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$792 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$793 ($sub).
Removed top 27 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$793 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$793 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$794 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:134$797 ($add).
Removed top 26 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:134$797 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:134$797 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$798 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$798 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$798 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$799 ($sub).
Removed top 26 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$799 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$799 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$800 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:137$803 ($add).
Removed top 29 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:137$803 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:137$803 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$804 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$804 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$804 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$805 ($sub).
Removed top 29 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$805 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$805 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$806 ($shiftx).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:140$809 ($add).
Removed top 30 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:140$809 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:140$809 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$810 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$810 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$810 ($add).
Removed top 21 bits (of 32) from port A of cell store_buffer.$sub$store_buffer.v:0$811 ($sub).
Removed top 30 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:0$811 ($sub).
Removed top 20 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:0$811 ($sub).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$812 ($shiftx).
Removed top 29 bits (of 32) from port B of cell store_buffer.$lt$store_buffer.v:145$819 ($lt).
Removed top 23 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:151$822 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:151$822 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:151$822 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$823 ($shiftx).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$830 ($shl).
Removed top 291 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$833 ($shl).
Removed top 22 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$833 ($shl).
Removed top 2 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:156$838 ($sub).
Removed top 31 bits (of 32) from port B of cell store_buffer.$sub$store_buffer.v:156$838 ($sub).
Removed top 28 bits (of 32) from port Y of cell store_buffer.$sub$store_buffer.v:156$838 ($sub).
Removed top 25 bits (of 32) from port B of cell store_buffer.$mul$store_buffer.v:160$841 ($mul).
Removed top 23 bits (of 32) from port Y of cell store_buffer.$mul$store_buffer.v:160$841 ($mul).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$842 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$842 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$842 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$843 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$843 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$843 ($add).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$844 ($shl).
Removed top 31 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:160$846 ($add).
Removed top 23 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:160$846 ($add).
Removed top 22 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:160$846 ($add).
Removed top 22 bits (of 32) from port A of cell store_buffer.$add$store_buffer.v:0$847 ($add).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:0$847 ($add).
Removed top 21 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:0$847 ($add).
Removed top 20 bits (of 32) from port B of cell store_buffer.$shiftx$store_buffer.v:0$848 ($shiftx).
Removed top 219 bits (of 292) from port Y of cell store_buffer.$and$store_buffer.v:0$849 ($and).
Removed top 219 bits (of 292) from port A of cell store_buffer.$shl$store_buffer.v:0$853 ($shl).
Removed top 21 bits (of 32) from port B of cell store_buffer.$shl$store_buffer.v:0$853 ($shl).
Removed top 31 bits (of 32) from port B of cell store_buffer.$add$store_buffer.v:162$858 ($add).
Removed top 27 bits (of 32) from port Y of cell store_buffer.$add$store_buffer.v:162$858 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1172 ($mux).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1256 ($mux).
Removed top 1 bits (of 5) from mux cell store_buffer.$procmux$1271 ($mux).
Removed top 1 bits (of 5) from port A of cell store_buffer.$sub$store_buffer.v:105$780 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$sub$store_buffer.v:105$780 ($sub).
Removed top 1 bits (of 4) from port A of cell store_buffer.$sub$store_buffer.v:105$780 ($sub).
Removed top 2 bits (of 5) from port Y of cell store_buffer.$add$store_buffer.v:162$858 ($add).
Removed top 2 bits (of 5) from port A of cell store_buffer.$add$store_buffer.v:162$858 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1223 ($mux).
Removed top 1 bits (of 4) from mux cell store_buffer.$procmux$1271 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$add$store_buffer.v:100$767 ($add).
Removed top 2 bits (of 5) from mux cell store_buffer.$procmux$1188 ($mux).
Removed top 1 bits (of 4) from port Y of cell store_buffer.$sub$store_buffer.v:156$838 ($sub).
Removed top 2 bits (of 5) from wire store_buffer.$1\core_if.speculative_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$1\store_if.commit_status_cnt[4:0].
Removed top 2 bits (of 5) from wire store_buffer.$2\store_if.commit_status_cnt[4:0].
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$703_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$717_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$731_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$745_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$786_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$792_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$798_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$804_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$810_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$843_Y.
Removed top 21 bits (of 32) from wire store_buffer.$add$store_buffer.v:0$847_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:100$767_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:103$771_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:140$809_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:151$822_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:160$842_Y.
Removed top 29 bits (of 32) from wire store_buffer.$add$store_buffer.v:162$858_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:94$702_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:95$716_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:96$730_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:97$744_Y.
Removed top 22 bits (of 32) from wire store_buffer.$add$store_buffer.v:98$758_Y.
Removed top 258 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$706_Y.
Removed top 260 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$720_Y.
Removed top 288 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$734_Y.
Removed top 290 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$748_Y.
Removed top 219 bits (of 292) from wire store_buffer.$and$store_buffer.v:0$849_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:160$841_Y.
Removed top 23 bits (of 32) from wire store_buffer.$mul$store_buffer.v:94$701_Y.
Removed top 29 bits (of 32) from wire store_buffer.$sub$store_buffer.v:156$838_Y.
Removed top 2 bits (of 5) from wire store_buffer.core_if.speculative_status_cnt.
Removed top 2 bits (of 8) from port A of cell store_unit.$le$store_unit.v:81$644 ($le).
Removed top 1 bits (of 8) from port A of cell store_unit.$ge$store_unit.v:81$645 ($ge).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1314_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1314_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1315_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1315_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1316_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1316_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1317_CMP0 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1317_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1318_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1318_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1319_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1319_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1320_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1320_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1321_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1321_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1322_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1322_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1323_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1323_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1324_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1324_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1327_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1328_CMP4 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP2 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP3 ($eq).
Removed top 1 bits (of 8) from port B of cell store_unit.$procmux$1329_CMP4 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1346_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell store_unit.$procmux$1383_CMP0 ($eq).

11.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 54 unused wires.
<suppressed ~6 debug messages>

11.10. Executing MEMORY_COLLECT pass (generating $mem cells).

11.11. Executing OPT pass (performing simple optimizations).

11.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

11.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~3 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 1 cells.

11.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

11.11.4. Finished fast OPT passes.

11.12. Printing statistics.

=== $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit ===

   Number of wires:                117
   Number of wire bits:            844
   Number of public wires:          47
   Number of public wire bits:     711
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $add                            1
     $adff                           5
     $and                            1
     $eq                            46
     $logic_and                      5
     $logic_not                      3
     $mux                           34
     $ne                             1
     $or                             1
     $pmux                           7
     $reduce_or                     13
     $shiftx                         1
     $shr                            1

=== amo_buffer ===

   Number of wires:                 17
   Number of wire bits:            425
   Number of public wires:          16
   Number of public wire bits:     424
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $and                            2

=== cva6_lsu_formal ===

   Number of wires:                142
   Number of wire bits:           5230
   Number of public wires:          38
   Number of public wire bits:    4566
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                132
     $add                            3
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         6
     $dff                           20
     $eq                            22
     $gt                             1
     $le                             1
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $lt                             2
     $mux                           44
     $pmux                           2
     cva6_processor_shim             2

=== cva6_lsu_shim ===

   Number of wires:                 90
   Number of wire bits:           2490
   Number of public wires:          60
   Number of public wire bits:    2009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 41
     $dff                            7
     $eq                             5
     $mux                           28
     load_store_unit                 1

=== cva6_processor_shim ===

   Number of wires:                791
   Number of wire bits:          17336
   Number of public wires:          95
   Number of public wire bits:    4255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                775
     $add                            4
     $and                            1
     $dff                           78
     $eq                           138
     $logic_and                      4
     $logic_not                     10
     $lt                             2
     $mux                          365
     $or                             1
     $pmux                          98
     $reduce_bool                    2
     $reduce_or                     64
     $shl                            1
     $shr                            2
     $sub                            3
     $xor                            1
     cva6_lsu_shim                   1

=== load_store_unit ===

   Number of wires:                108
   Number of wire bits:           2482
   Number of public wires:          84
   Number of public wire bits:    2423
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $add                            1
     $adff                           1
     $eq                            33
     $logic_not                      3
     $mux                            5
     $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
     $pmux                           6
     $reduce_or                      5
     lsu_bypass                      1
     shift_reg                       2
     store_unit                      1

=== lsu_bypass ===

   Number of wires:                 57
   Number of wire bits:           3651
   Number of public wires:          21
   Number of public wire bits:     530
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            7
     $adff                           4
     $and                            4
     $logic_and                      1
     $logic_not                      1
     $mul                            2
     $mux                           15
     $not                            2
     $or                             3
     $shiftx                         1
     $shl                            4
     $sub                            2

=== shift_reg ===

   Number of wires:                  4
   Number of wire bits:            204
   Number of public wires:           4
   Number of public wire bits:     204
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $adff                           1

=== store_buffer ===

   Number of wires:                215
   Number of wire bits:          15200
   Number of public wires:          48
   Number of public wire bits:    1494
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                202
     $add                           30
     $adff                           8
     $and                           14
     $eq                             9
     $logic_and                      9
     $logic_not                      4
     $logic_or                       5
     $lt                             9
     $mul                            4
     $mux                           59
     $ne                             2
     $not                            8
     $or                             8
     $shiftx                         7
     $shl                           15
     $sub                           11

=== store_unit ===

   Number of wires:                123
   Number of wire bits:           1061
   Number of public wires:          57
   Number of public wire bits:     922
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           6
     $and                            2
     $eq                            43
     $ge                             1
     $le                             1
     $logic_and                      4
     $logic_not                      4
     $mux                           20
     $pmux                           8
     $reduce_bool                    2
     $reduce_or                     16
     amo_buffer                      1
     store_buffer                    1

=== design hierarchy ===

   cva6_lsu_formal                   1
     cva6_processor_shim             2
       cva6_lsu_shim                 1
         load_store_unit             1
           $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit      1
           lsu_bypass                1
           shift_reg                 2
           store_unit                1
             amo_buffer              1
             store_buffer            1

   Number of wires:               3194
   Number of wire bits:          93024
   Number of public wires:         910
   Number of public wire bits:   30918
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2822
     $add                           89
     $adff                          52
     $and                           48
     $anyconst                       4
     $anyseq                         4
     $assert                         1
     $assume                         6
     $dff                          190
     $eq                           570
     $ge                             2
     $gt                             1
     $le                             3
     $logic_and                     58
     $logic_not                     55
     $logic_or                      13
     $lt                            24
     $mul                           12
     $mux                         1096
     $ne                             6
     $not                           20
     $or                            26
     $pmux                         240
     $reduce_bool                    8
     $reduce_or                    196
     $shiftx                        18
     $shl                           40
     $shr                            6
     $sub                           32
     $xor                            2

11.13. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

12. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

13. Executing ASYNC2SYNC pass.
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11717 ($adff): ARST=\rst_ni, D=\idx_d, Q=\idx_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11718 ($adff): ARST=\rst_ni, D=\signed_d, Q=\signed_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11719 ($adff): ARST=\rst_ni, D=\fp_sign_d, Q=\fp_sign_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11720 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.$procdff$11721 ($adff): ARST=\rst_ni, D=\load_data_d, Q=\load_data_q
Replacing load_store_unit.$procdff$11728 ($adff): ARST=\rst_ni, D=\mmu_vaddr, Q=\mmu_paddr
Replacing lsu_bypass.$procdff$11723 ($adff): ARST=\rst_ni, D=\mem_n, Q=\mem_q
Replacing lsu_bypass.$procdff$11724 ($adff): ARST=\rst_ni, D=\read_pointer, Q=\read_pointer_q
Replacing lsu_bypass.$procdff$11725 ($adff): ARST=\rst_ni, D=\write_pointer, Q=\write_pointer_q
Replacing lsu_bypass.$procdff$11726 ($adff): ARST=\rst_ni, D=\status_cnt, Q=\status_cnt_q
Replacing shift_reg.$procdff$11722 ($adff): ARST=\rst_ni, D=\d_i, Q=\d_o
Replacing store_buffer.$procdff$11703 ($adff): ARST=\rst_ni, D=\commit_queue_n, Q=\commit_queue_q
Replacing store_buffer.$procdff$11704 ($adff): ARST=\rst_ni, D=\commit_status_cnt_n, Q=\commit_status_cnt_q
Replacing store_buffer.$procdff$11705 ($adff): ARST=\rst_ni, D=\commit_read_pointer_n, Q=\commit_read_pointer_q
Replacing store_buffer.$procdff$11706 ($adff): ARST=\rst_ni, D=\commit_write_pointer_n, Q=\commit_write_pointer_q
Replacing store_buffer.$procdff$11707 ($adff): ARST=\rst_ni, D=\speculative_queue_n, Q=\speculative_queue_q
Replacing store_buffer.$procdff$11708 ($adff): ARST=\rst_ni, D=\speculative_status_cnt_n, Q=\speculative_status_cnt_q
Replacing store_buffer.$procdff$11709 ($adff): ARST=\rst_ni, D=\speculative_read_pointer_n, Q=\speculative_read_pointer_q
Replacing store_buffer.$procdff$11710 ($adff): ARST=\rst_ni, D=\speculative_write_pointer_n, Q=\speculative_write_pointer_q
Replacing store_unit.$procdff$11711 ($adff): ARST=\rst_ni, D=\state_d, Q=\state_q
Replacing store_unit.$procdff$11712 ($adff): ARST=\rst_ni, D=\st_data_n, Q=\st_data_q
Replacing store_unit.$procdff$11713 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [18:15], Q=\st_be_q
Replacing store_unit.$procdff$11714 ($adff): ARST=\rst_ni, D=\st_data_size_n, Q=\st_data_size_q
Replacing store_unit.$procdff$11715 ($adff): ARST=\rst_ni, D=\amo_op_d, Q=\amo_op_q
Replacing store_unit.$procdff$11716 ($adff): ARST=\rst_ni, D=\lsu_ctrl_i [2:0], Q=\trans_id_q

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

15. Executing SETUNDEF pass (replace undef values with defined constants).

16. Executing OPT pass (performing simple optimizations).

16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
Optimizing module cva6_processor_shim.
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
Finding identical cells in module `\store_unit'.
Removed a total of 0 cells.

16.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$11720 ($sdff) from module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit (D = $1\state_d[3:0] [3], Q = $auto$async2sync.cc:140:execute$12225 [3], rval = 1'0).
Adding SRST signal on $procdff$11945 ($dff) from module cva6_lsu_formal (D = $procmux$11575_Y, Q = \reset, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12588 ($sdff) from module cva6_lsu_formal (D = 1'0, Q = \reset).
Adding EN signal on $procdff$11944 ($dff) from module cva6_lsu_formal (D = 1'0, Q = \init).
Adding SRST signal on $procdff$11925 ($dff) from module cva6_lsu_formal (D = $2\local_ready_2[0:0], Q = \local_ready_2, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12591 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_2[0:0], Q = \local_ready_2).
Adding SRST signal on $procdff$11924 ($dff) from module cva6_lsu_formal (D = $2\local_ready_1[0:0], Q = \local_ready_1, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$12593 ($sdff) from module cva6_lsu_formal (D = $3\local_ready_1[0:0], Q = \local_ready_1).
Adding SRST signal on $procdff$11923 ($dff) from module cva6_lsu_formal (D = $2\pc_2[31:0], Q = \pc_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12595 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:201$93_Y, Q = \pc_2).
Adding SRST signal on $procdff$11922 ($dff) from module cva6_lsu_formal (D = $2\pc_1[31:0], Q = \pc_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12599 ($sdff) from module cva6_lsu_formal (D = $add$cva6_lsu_formal.v:184$85_Y, Q = \pc_1).
Adding SRST signal on $procdff$11921 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12603 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_1[0:0], Q = \tb_io_instr_valid_i_1).
Adding SRST signal on $procdff$11920 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_1[31:0], Q = \tb_io_instr_i_1, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12605 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:174$5_DATA[31:0]$78, Q = \tb_io_instr_i_1).
Adding SRST signal on $procdff$11919 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12607 ($sdff) from module cva6_lsu_formal (D = $3\tb_io_instr_valid_i_2[0:0], Q = \tb_io_instr_valid_i_2).
Adding SRST signal on $procdff$11918 ($dff) from module cva6_lsu_formal (D = $2\tb_io_instr_i_2[31:0], Q = \tb_io_instr_i_2, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$12609 ($sdff) from module cva6_lsu_formal (D = $3$mem2reg_rd$\prog$cva6_lsu_formal.v:191$6_DATA[31:0]$86, Q = \tb_io_instr_i_2).
Adding SRST signal on $procdff$11737 ($dff) from module cva6_lsu_shim (D = \load_mem_resp_i, Q = \x_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11736 ($dff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12612 ($sdff) from module cva6_lsu_shim (D = $2\store_req_state[1:0], Q = \store_req_state).
Adding SRST signal on $procdff$11735 ($dff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$12620 ($sdff) from module cva6_lsu_shim (D = $2\load_req_state[1:0], Q = \load_req_state).
Adding SRST signal on $procdff$11733 ($dff) from module cva6_lsu_shim (D = { $2\tb_io_dcache_req_ports_i[104:104] \load_mem_resp_i \x_load_mem_resp_i \dummy_data }, Q = { \tb_io_dcache_req_ports_i [104] \tb_io_dcache_req_ports_i [69:36] }, rval = 35'00000000000000000000000000000000000).
Adding EN signal on $procdff$11733 ($dff) from module cva6_lsu_shim (D = 69'000000000000000000000000000000000000000000000000000000000000000000000, Q = { \tb_io_dcache_req_ports_i [103:70] \tb_io_dcache_req_ports_i [34:0] }).
Adding SRST signal on $procdff$11732 ($dff) from module cva6_lsu_shim (D = $2\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$12630 ($sdff) from module cva6_lsu_shim (D = $3\tb_io_commit_tran_id_i[2:0], Q = \tb_io_commit_tran_id_i).
Adding SRST signal on $procdff$11730 ($dff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$12638 ($sdff) from module cva6_lsu_shim (D = $2\tb_io_lsu_valid_i[0:0], Q = \tb_io_lsu_valid_i).
Adding SRST signal on $procdff$11729 ($dff) from module cva6_lsu_shim (D = $2\tb_io_fu_data_i[110:0], Q = \tb_io_fu_data_i, rval = 111'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$12642 ($sdff) from module cva6_lsu_shim (D = { 2'00 $3\tb_io_fu_data_i[110:0] }, Q = \tb_io_fu_data_i).
Adding EN signal on $procdff$11901 ($dff) from module cva6_processor_shim (D = $4\regfile[31][31:0], Q = \regfile[31]).
Adding EN signal on $procdff$11900 ($dff) from module cva6_processor_shim (D = $4\regfile[30][31:0], Q = \regfile[30]).
Adding EN signal on $procdff$11899 ($dff) from module cva6_processor_shim (D = $4\regfile[29][31:0], Q = \regfile[29]).
Adding EN signal on $procdff$11898 ($dff) from module cva6_processor_shim (D = $4\regfile[28][31:0], Q = \regfile[28]).
Adding EN signal on $procdff$11897 ($dff) from module cva6_processor_shim (D = $4\regfile[27][31:0], Q = \regfile[27]).
Adding EN signal on $procdff$11896 ($dff) from module cva6_processor_shim (D = $4\regfile[26][31:0], Q = \regfile[26]).
Adding EN signal on $procdff$11895 ($dff) from module cva6_processor_shim (D = $4\regfile[25][31:0], Q = \regfile[25]).
Adding EN signal on $procdff$11894 ($dff) from module cva6_processor_shim (D = $4\regfile[24][31:0], Q = \regfile[24]).
Adding EN signal on $procdff$11893 ($dff) from module cva6_processor_shim (D = $4\regfile[23][31:0], Q = \regfile[23]).
Adding EN signal on $procdff$11892 ($dff) from module cva6_processor_shim (D = $4\regfile[22][31:0], Q = \regfile[22]).
Adding EN signal on $procdff$11891 ($dff) from module cva6_processor_shim (D = $4\regfile[21][31:0], Q = \regfile[21]).
Adding EN signal on $procdff$11890 ($dff) from module cva6_processor_shim (D = $4\regfile[20][31:0], Q = \regfile[20]).
Adding EN signal on $procdff$11889 ($dff) from module cva6_processor_shim (D = $4\regfile[19][31:0], Q = \regfile[19]).
Adding EN signal on $procdff$11888 ($dff) from module cva6_processor_shim (D = $4\regfile[18][31:0], Q = \regfile[18]).
Adding EN signal on $procdff$11887 ($dff) from module cva6_processor_shim (D = $4\regfile[17][31:0], Q = \regfile[17]).
Adding EN signal on $procdff$11886 ($dff) from module cva6_processor_shim (D = $4\regfile[16][31:0], Q = \regfile[16]).
Adding EN signal on $procdff$11885 ($dff) from module cva6_processor_shim (D = $4\regfile[15][31:0], Q = \regfile[15]).
Adding EN signal on $procdff$11884 ($dff) from module cva6_processor_shim (D = $4\regfile[14][31:0], Q = \regfile[14]).
Adding EN signal on $procdff$11883 ($dff) from module cva6_processor_shim (D = $4\regfile[13][31:0], Q = \regfile[13]).
Adding EN signal on $procdff$11882 ($dff) from module cva6_processor_shim (D = $4\regfile[12][31:0], Q = \regfile[12]).
Adding EN signal on $procdff$11881 ($dff) from module cva6_processor_shim (D = $4\regfile[11][31:0], Q = \regfile[11]).
Adding EN signal on $procdff$11880 ($dff) from module cva6_processor_shim (D = $4\regfile[10][31:0], Q = \regfile[10]).
Adding EN signal on $procdff$11879 ($dff) from module cva6_processor_shim (D = $4\regfile[9][31:0], Q = \regfile[9]).
Adding EN signal on $procdff$11878 ($dff) from module cva6_processor_shim (D = $4\regfile[8][31:0], Q = \regfile[8]).
Adding EN signal on $procdff$11877 ($dff) from module cva6_processor_shim (D = $4\regfile[7][31:0], Q = \regfile[7]).
Adding EN signal on $procdff$11876 ($dff) from module cva6_processor_shim (D = $4\regfile[6][31:0], Q = \regfile[6]).
Adding EN signal on $procdff$11875 ($dff) from module cva6_processor_shim (D = $4\regfile[5][31:0], Q = \regfile[5]).
Adding EN signal on $procdff$11874 ($dff) from module cva6_processor_shim (D = $4\regfile[4][31:0], Q = \regfile[4]).
Adding EN signal on $procdff$11873 ($dff) from module cva6_processor_shim (D = $4\regfile[3][31:0], Q = \regfile[3]).
Adding EN signal on $procdff$11872 ($dff) from module cva6_processor_shim (D = $4\regfile[2][31:0], Q = \regfile[2]).
Adding EN signal on $procdff$11871 ($dff) from module cva6_processor_shim (D = $4\regfile[1][31:0], Q = \regfile[1]).
Adding EN signal on $procdff$11870 ($dff) from module cva6_processor_shim (D = $4\regfile[0][31:0], Q = \regfile[0]).
Adding EN signal on $procdff$11869 ($dff) from module cva6_processor_shim (D = $4\mem[31][31:0], Q = \mem[31]).
Adding EN signal on $procdff$11868 ($dff) from module cva6_processor_shim (D = $4\mem[30][31:0], Q = \mem[30]).
Adding EN signal on $procdff$11867 ($dff) from module cva6_processor_shim (D = $4\mem[29][31:0], Q = \mem[29]).
Adding EN signal on $procdff$11866 ($dff) from module cva6_processor_shim (D = $4\mem[28][31:0], Q = \mem[28]).
Adding EN signal on $procdff$11865 ($dff) from module cva6_processor_shim (D = $4\mem[27][31:0], Q = \mem[27]).
Adding EN signal on $procdff$11864 ($dff) from module cva6_processor_shim (D = $4\mem[26][31:0], Q = \mem[26]).
Adding EN signal on $procdff$11863 ($dff) from module cva6_processor_shim (D = $4\mem[25][31:0], Q = \mem[25]).
Adding EN signal on $procdff$11862 ($dff) from module cva6_processor_shim (D = $4\mem[24][31:0], Q = \mem[24]).
Adding EN signal on $procdff$11861 ($dff) from module cva6_processor_shim (D = $4\mem[23][31:0], Q = \mem[23]).
Adding EN signal on $procdff$11860 ($dff) from module cva6_processor_shim (D = $4\mem[22][31:0], Q = \mem[22]).
Adding EN signal on $procdff$11859 ($dff) from module cva6_processor_shim (D = $4\mem[21][31:0], Q = \mem[21]).
Adding EN signal on $procdff$11858 ($dff) from module cva6_processor_shim (D = $4\mem[20][31:0], Q = \mem[20]).
Adding EN signal on $procdff$11857 ($dff) from module cva6_processor_shim (D = $4\mem[19][31:0], Q = \mem[19]).
Adding EN signal on $procdff$11856 ($dff) from module cva6_processor_shim (D = $4\mem[18][31:0], Q = \mem[18]).
Adding EN signal on $procdff$11855 ($dff) from module cva6_processor_shim (D = $4\mem[17][31:0], Q = \mem[17]).
Adding EN signal on $procdff$11854 ($dff) from module cva6_processor_shim (D = $4\mem[16][31:0], Q = \mem[16]).
Adding EN signal on $procdff$11853 ($dff) from module cva6_processor_shim (D = $4\mem[15][31:0], Q = \mem[15]).
Adding EN signal on $procdff$11852 ($dff) from module cva6_processor_shim (D = $4\mem[14][31:0], Q = \mem[14]).
Adding EN signal on $procdff$11851 ($dff) from module cva6_processor_shim (D = $4\mem[13][31:0], Q = \mem[13]).
Adding EN signal on $procdff$11850 ($dff) from module cva6_processor_shim (D = $4\mem[12][31:0], Q = \mem[12]).
Adding EN signal on $procdff$11849 ($dff) from module cva6_processor_shim (D = $4\mem[11][31:0], Q = \mem[11]).
Adding EN signal on $procdff$11848 ($dff) from module cva6_processor_shim (D = $4\mem[10][31:0], Q = \mem[10]).
Adding EN signal on $procdff$11847 ($dff) from module cva6_processor_shim (D = $4\mem[9][31:0], Q = \mem[9]).
Adding EN signal on $procdff$11846 ($dff) from module cva6_processor_shim (D = $4\mem[8][31:0], Q = \mem[8]).
Adding EN signal on $procdff$11845 ($dff) from module cva6_processor_shim (D = $4\mem[7][31:0], Q = \mem[7]).
Adding EN signal on $procdff$11844 ($dff) from module cva6_processor_shim (D = $4\mem[6][31:0], Q = \mem[6]).
Adding EN signal on $procdff$11843 ($dff) from module cva6_processor_shim (D = $4\mem[5][31:0], Q = \mem[5]).
Adding EN signal on $procdff$11842 ($dff) from module cva6_processor_shim (D = $4\mem[4][31:0], Q = \mem[4]).
Adding EN signal on $procdff$11841 ($dff) from module cva6_processor_shim (D = $4\mem[3][31:0], Q = \mem[3]).
Adding EN signal on $procdff$11840 ($dff) from module cva6_processor_shim (D = $4\mem[2][31:0], Q = \mem[2]).
Adding EN signal on $procdff$11839 ($dff) from module cva6_processor_shim (D = $4\mem[1][31:0], Q = \mem[1]).
Adding EN signal on $procdff$11838 ($dff) from module cva6_processor_shim (D = $4\mem[0][31:0], Q = \mem[0]).
Adding SRST signal on $procdff$11818 ($dff) from module cva6_processor_shim (D = $2\store_uncommitted[0:0], Q = \store_uncommitted, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13156 ($sdff) from module cva6_processor_shim (D = $4\store_uncommitted[0:0], Q = \store_uncommitted).
Adding SRST signal on $procdff$11817 ($dff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0], rval = 2'00).
Adding SRST signal on $procdff$11817 ($dff) from module cva6_processor_shim (D = $3\load_cooldown[2:0] [2], Q = \load_cooldown [2], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13179 ($sdff) from module cva6_processor_shim (D = $sub$cva6_processor_shim.v:316$371_Y [2], Q = \load_cooldown [2]).
Adding EN signal on $auto$opt_dff.cc:702:run$13174 ($sdff) from module cva6_processor_shim (D = $2\load_cooldown[2:0] [1:0], Q = \load_cooldown [1:0]).
Adding SRST signal on $procdff$11816 ($dff) from module cva6_processor_shim (D = $6\store_count[2:0], Q = \store_count, rval = 3'000).
Adding SRST signal on $procdff$11815 ($dff) from module cva6_processor_shim (D = $2\store_cooldown[0:0], Q = \store_cooldown, rval = 1'0).
Adding SRST signal on $procdff$11813 ($dff) from module cva6_processor_shim (D = $2\loadstore_fsm[2:0], Q = \loadstore_fsm, rval = 3'000).
Adding SRST signal on $procdff$11812 ($dff) from module cva6_processor_shim (D = $2\loadstore_addr[31:0], Q = \loadstore_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13187 ($sdff) from module cva6_processor_shim (D = $3\loadstore_addr[31:0], Q = \loadstore_addr).
Adding SRST signal on $procdff$11811 ($dff) from module cva6_processor_shim (D = $2\loadstore_state[0:0], Q = \loadstore_state, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13193 ($sdff) from module cva6_processor_shim (D = $3\loadstore_state[0:0], Q = \loadstore_state).
Adding SRST signal on $procdff$11810 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13199 ($sdff) from module cva6_processor_shim (D = $7\tb_io_store_commit_i[0:0], Q = \tb_io_store_commit_i).
Adding SRST signal on $procdff$11809 ($dff) from module cva6_processor_shim (D = $2\tb_io_load_mem_resp_i[0:0], Q = \tb_io_load_mem_resp_i, rval = 1'0).
Adding SRST signal on $procdff$11808 ($dff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13218 ($sdff) from module cva6_processor_shim (D = $2\tb_io_store_mem_resp_i[0:0], Q = \tb_io_store_mem_resp_i).
Adding SRST signal on $procdff$11807 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13226 ($sdff) from module cva6_processor_shim (D = $4\tb_io_instr_valid_i[0:0], Q = \tb_io_instr_valid_i).
Adding SRST signal on $procdff$11806 ($dff) from module cva6_processor_shim (D = $2\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$13236 ($sdff) from module cva6_processor_shim (D = $5\tb_io_is_load_i[0:0], Q = \tb_io_is_load_i).
Adding SRST signal on $procdff$11805 ($dff) from module cva6_processor_shim (D = $2\tb_io_instr_i[31:0], Q = \tb_io_instr_i, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$13244 ($sdff) from module cva6_processor_shim (D = \loadstore_addr, Q = \tb_io_instr_i).
Adding SRST signal on $procdff$11804 ($dff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$13252 ($sdff) from module cva6_processor_shim (D = $2\ready_o[0:0], Q = \ready_o).
Adding SRST signal on $procdff$11726 ($sdff) from module lsu_bypass (D = $3\status_cnt[1:0], Q = $auto$async2sync.cc:140:execute$12237, rval = 2'00).
Adding SRST signal on $procdff$11725 ($sdff) from module lsu_bypass (D = $1\write_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12235, rval = 1'0).
Adding SRST signal on $procdff$11724 ($sdff) from module lsu_bypass (D = $2\read_pointer[0:0], Q = $auto$async2sync.cc:140:execute$12233, rval = 1'0).
Adding SRST signal on $procdff$11723 ($sdff) from module lsu_bypass (D = $3\mem_n[169:0], Q = $auto$async2sync.cc:140:execute$12231, rval = 170'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$11708 ($sdff) from module store_buffer (D = \core_if.speculative_status_cnt, Q = $auto$async2sync.cc:140:execute$12251, rval = 3'000).
Adding SRST signal on $procdff$11707 ($sdff) from module store_buffer (D = { $2\speculative_queue_n[291:0] [219] $2\speculative_queue_n[291:0] [146] $2\speculative_queue_n[291:0] [73] $2\speculative_queue_n[291:0] [0] }, Q = { $auto$async2sync.cc:140:execute$12249 [219] $auto$async2sync.cc:140:execute$12249 [146] $auto$async2sync.cc:140:execute$12249 [73] $auto$async2sync.cc:140:execute$12249 [0] }, rval = 4'0000).
Adding SRST signal on $procdff$11711 ($sdff) from module store_unit (D = $1\state_d[1:0], Q = $auto$async2sync.cc:140:execute$12257, rval = 2'00).

16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 283 unused cells and 295 unused wires.
<suppressed ~315 debug messages>

16.5. Rerunning OPT passes. (Removed registers in this run.)

16.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.
Optimizing module amo_buffer.
Optimizing module cva6_lsu_formal.
Optimizing module cva6_lsu_shim.
<suppressed ~4 debug messages>
Optimizing module cva6_processor_shim.
<suppressed ~71 debug messages>
Optimizing module load_store_unit.
Optimizing module lsu_bypass.
Optimizing module shift_reg.
Optimizing module store_buffer.
Optimizing module store_unit.

16.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit'.
Finding identical cells in module `\amo_buffer'.
Finding identical cells in module `\cva6_lsu_formal'.
Finding identical cells in module `\cva6_lsu_shim'.
Finding identical cells in module `\cva6_processor_shim'.
<suppressed ~219 debug messages>
Finding identical cells in module `\load_store_unit'.
Finding identical cells in module `\lsu_bypass'.
<suppressed ~15 debug messages>
Finding identical cells in module `\shift_reg'.
Finding identical cells in module `\store_buffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\store_unit'.
Removed a total of 80 cells.

16.8. Executing OPT_DFF pass (perform DFF optimizations).

16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit..
Finding unused cells or wires in module \amo_buffer..
Finding unused cells or wires in module \cva6_lsu_formal..
Finding unused cells or wires in module \cva6_lsu_shim..
Finding unused cells or wires in module \cva6_processor_shim..
Finding unused cells or wires in module \load_store_unit..
Finding unused cells or wires in module \lsu_bypass..
Finding unused cells or wires in module \shift_reg..
Finding unused cells or wires in module \store_buffer..
Finding unused cells or wires in module \store_unit..
Removed 0 unused cells and 80 unused wires.
<suppressed ~3 debug messages>

16.10. Finished fast OPT passes.

17. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit...
Warning: Wire $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit.\req_port_o [10] is used but has no driver.
Checking module amo_buffer...
Warning: Wire amo_buffer.\ready_o is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [133] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [132] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [131] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [130] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [129] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [128] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [97] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [96] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [95] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [94] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [93] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [92] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [91] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [90] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [89] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [88] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [87] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [86] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [85] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [84] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [83] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [82] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [81] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [80] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [79] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [78] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [77] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [76] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [75] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [74] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [73] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [72] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [71] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [70] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [69] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [68] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [67] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [66] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [65] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [64] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [31] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [30] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [29] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [28] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [27] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [26] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [25] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [24] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [23] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [22] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [21] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [20] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [19] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [18] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [17] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [16] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [15] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [14] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [13] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [12] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [11] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [10] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [9] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [8] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [7] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [6] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [5] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [4] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [3] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [2] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [1] is used but has no driver.
Warning: Wire amo_buffer.\amo_req_o [0] is used but has no driver.
Warning: Wire amo_buffer.\amo_valid is used but has no driver.
Checking module cva6_lsu_formal...
Checking module cva6_lsu_shim...
Warning: Wire cva6_lsu_shim.\dummy_data [31] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [30] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [29] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [28] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [27] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [26] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [25] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [24] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [23] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [22] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [21] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [20] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [19] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [18] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [17] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [16] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [15] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [14] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [13] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [12] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [11] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [10] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [9] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [8] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [7] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [6] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [5] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [4] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [3] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [2] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [1] is used but has no driver.
Warning: Wire cva6_lsu_shim.\dummy_data [0] is used but has no driver.
Checking module cva6_processor_shim...
Checking module load_store_unit...
Warning: Wire load_store_unit.\dcache_req_ports_o [10] is used but has no driver.
Checking module lsu_bypass...
Checking module shift_reg...
Checking module store_buffer...
Warning: Wire store_buffer.\req_port_o [10] is used but has no driver.
Checking module store_unit...
Found and reported 109 problems.

18. Executing HIERARCHY pass (managing design hierarchy).

18.1. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass

18.2. Analyzing design hierarchy..
Top module:  \cva6_lsu_formal
Used module:     \cva6_processor_shim
Used module:         \cva6_lsu_shim
Used module:             \load_store_unit
Used module:                 $paramod$67c83b80e65efc3d4bd3ea7b23a3042e3ffb60e8\load_unit
Used module:                 \shift_reg
Used module:                 \store_unit
Used module:                     \amo_buffer
Used module:                     \store_buffer
Used module:                 \lsu_bypass
Removed 0 unused modules.
Module cva6_lsu_formal directly or indirectly contains formal properties -> setting "keep" attribute.

19. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 114 unique messages, 334 total
End of script. Logfile hash: 8bda088296, CPU: user 15.85s system 0.07s, MEM: 100.19 MB peak
Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 30% 3x check (4 sec), 28% 9x opt_clean (4 sec), ...
