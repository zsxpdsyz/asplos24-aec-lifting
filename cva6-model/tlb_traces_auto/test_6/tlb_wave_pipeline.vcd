$date
	Sat Nov 12 21:36:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 124 ? port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 @ update_i [62:0] $end
$var wire 32 A vaddr_to_be_flushed_i [31:0] $end
$var wire 1 B vaddr_to_be_flushed_is0 $end
$var wire 31 C tdata [30:0] $end
$var wire 31 D tags_q_3 [30:0] $end
$var wire 31 E tags_q_2 [30:0] $end
$var wire 31 F tags_q_1 [30:0] $end
$var wire 31 G tags_q_0 [30:0] $end
$var wire 32 H content_q_3 [31:0] $end
$var wire 32 I content_q_2 [31:0] $end
$var wire 32 J content_q_1 [31:0] $end
$var wire 32 K content_q_0 [31:0] $end
$var wire 32 L cdata [31:0] $end
$var reg 128 M content_n [127:0] $end
$var reg 128 N content_q [127:0] $end
$var reg 32 O lu_content_o [31:0] $end
$var reg 4 P lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 Q plru_tree_n [5:0] $end
$var reg 6 R plru_tree_q [5:0] $end
$var reg 4 S replace_en [3:0] $end
$var reg 124 T tags_n [123:0] $end
$var reg 124 U tags_q [123:0] $end
$var reg 4 V vaddr_vpn0_match [3:0] $end
$var reg 4 W vaddr_vpn1_match [3:0] $end
$var reg 10 X vpn0 [9:0] $end
$var reg 10 Y vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 Z count [31:0] $end
$var reg 32 [ countSetBits [31:0] $end
$var reg 4 \ vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ] idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 ^ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 _ idx_base [31:0] $end
$var reg 32 ` new_index [31:0] $end
$var reg 32 a shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 b lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 c i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 d en $end
$var reg 32 e idx_base [31:0] $end
$var reg 32 f new_index [31:0] $end
$var reg 32 g shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 h lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 i i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 k asid [8:0] $end
$var reg 20 l vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 m asid [8:0] $end
$var reg 20 n vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 o asid [8:0] $end
$var reg 32 p entry_data [31:0] $end
$var reg 20 q vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
xd
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
x<
b1010100010 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 S
b1 f
b1 g
b1 e
b10 h
0d
b100 c
b100 ^
b0 Q
b0 K
b0 J
b0 I
b0 H
b100 j
b0 M
b0 T
b100 i
0)
b0 +
b0 O
0*
b0 P
b0 G
b0 F
b0 E
b0 D
b1 -
b0 R
b0 >
b0 N
b0 ?
b0 U
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b100000111010000010011101000001 !
b100000111010000010011101000001 1
b1100101011000000101 9
b10100000111010000010010111000000 ;
b10110010101100000010101 &
b1 .
12
#70
00
#80
b100 -
b0 C
0B
0<
b100 i
b0 Y
b0 X
b0 W
b0 V
b100 j
b1 L
10
b11101010001001100010111011010100 !
b11101010001001100010111011010100 1
b10101100110111000000101 &
b1011001101110000001 9
b1100101011000000101000000000000 '
b1100101011000000101000000000000 8
b1100101011000000101000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b0 (
b0 7
b0 @
b1 k
b1100101011000000101 l
b11 /
b1101010001001100010110010110111 ;
b0 :
#90
00
#100
b101 -
b100 j
10
b11010011101010011010111010100111 !
b11010011101010011010111010100111 1
b10010100100111111011101 &
b101001001111110111 9
b1011001101110000001000000000000 '
b1011001101110000001000000000000 8
b1011001101110000001000000000000 A
b1011001101110000001 l
b1010011101010011010110100111010 ;
b1 :
#110
00
#120
b110 -
b100 j
10
b101011011000011010100001010 !
b101011011000011010100001010 1
b10110100010101111111101 &
b1101000101011111111 9
b101001001111110111000000000000 '
b101001001111110111000000000000 8
b101001001111110111000000000000 A
b101001001111110111 l
b10000101011011000011001100111001 ;
b10 :
#130
00
#140
b111 -
1B
1<
b1111 W
b1111 V
b100 j
b100 i
b110100010 Y
b1011111111 X
10
b1000010111101111111111110000101 !
b1000010111101111111111110000101 1
b11001100010000010101101 &
b10011000100000101011 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b1101000101011111111000000000000 %
b1101000101011111111000000000000 =
b1101000101011111111000000000000 6
b1 m
b1101000101011111111 n
b10 /
b11000010111101111111110101100100 ;
b11 :
#150
00
#160
b1000 -
0B
0<
b0 W
b0 V
b100 j
b100 i
b0 Y
b0 X
10
b1111001011110000100011111110010 !
b1111001011110000100011111110010 1
b10100101111010010010101 &
b1001011110100100101 9
b10011000100000101011000000000000 '
b10011000100000101011000000000000 8
b10011000100000101011000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b10011000100000101011 l
b11 /
b11111001011110000100010000101011 ;
b100 :
#170
00
#180
b1001 -
1B
b1111 W
b1111 V
b100 j
1<
10
b1101111010010100111100011011 !
b1101111010010100111100011011 1
b10111110011010000110001 &
b1111100110100001100 9
b0 '
b0 8
b0 A
0,
b0 k
b0 l
b1 /
b10001101111010010100110010111110 ;
b101 :
#190
00
#200
b1010 -
b100 j
b100 i
b111110011 Y
b100001100 X
10
b1110101011000010011101111101010 !
b1110101011000010011101111101010 1
b11101111011101101101001 &
b11011110111011011010 9
0"
03
1$
15
b1111100110100001100000000000000 %
b1111100110100001100000000000000 =
b1111100110100001100000000000000 6
b1111100110100001100 n
b10 /
b11110101011000010011100000001101 ;
b110 :
#210
00
#220
b1011 -
b100 j
b100 i
b0 Y
b0 X
10
b11011000010011111100000110 !
b11011000010011111100000110 1
b10001000001111001100101 &
b10000011110011001 9
1"
13
0$
05
b0 %
b0 =
b0 6
b1 /
b10000011011000010011110111001000 ;
b111 :
#230
00
#240
b1100 -
10
b100100101011001100010101001001 !
b100100101011001100010101001001 1
b11110001001011111001101 &
b11100010010111110011 9
b10100100101011001100001101011111 ;
b1000 :
#250
00
#260
b1101 -
0B
b0 W
b0 V
b100 j
0<
10
b10100010010101001000000001000100 !
b10100010010101001000000001000100 1
b10010001001010001110001 &
b100010010100011100 9
b11100010010111110011000000000000 '
b11100010010111110011000000000000 8
b11100010010111110011000000000000 A
1,
b1 k
b11100010010111110011 l
b11 /
b100010010101000111111100000010 ;
b1001 :
#270
00
#280
b1110 -
1B
1<
b1111 W
b1111 V
b100 j
b100 i
b10001001 Y
b100011100 X
10
b10000011100111001100100100000 !
b10000011100111001100100100000 1
b10100010100101010010101 &
b1000101001010100101 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b100010010100011100000000000000 %
b100010010100011100000000000000 =
b100010010100011100000000000000 6
b100010010100011100 n
b10 /
b10010000011100111001011010100001 ;
b1010 :
#290
00
#300
b1111 -
0B
0<
b0 W
b0 V
b100 j
b100 i
b0 Y
b0 X
10
b1111001101110110110100011110 !
b1111001101110110110100011110 1
b11010011001011001101001 &
b10100110010110011010 9
b1000101001010100101000000000000 '
b1000101001010100101000000000000 8
b1000101001010100101000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b1000101001010100101 l
b11 /
b10001111001101110110101011101100 ;
b1011 :
#310
00
#320
b10000 -
1B
b1111 W
b1111 V
b100 j
1<
10
b1110010011001000000100011100 !
b1110010011001000000100011100 1
b11001111101100001100001 &
b10011111011000011000 9
b0 '
b0 8
b0 A
0,
b0 k
b0 l
b1 /
b10001110010011000111111001010011 ;
b1100 :
#330
00
#340
b10001 -
0B
b0 W
b0 V
b100 j
0<
10
b100100111111111010101101001001 !
b100100111111111010101101001001 1
b10011100011010001101001 &
b111000110100011010 9
b10011111011000011000000000000000 '
b10011111011000011000000000000000 8
b10011111011000011000000000000000 A
1,
b1 k
b10011111011000011000 l
b11 /
b10100100111111111010100000000110 ;
b1101 :
#350
00
#360
b100100111111111010101101001001 K
b100 i
b10011100011010001101001 G
b100100111111111010101101001001 >
b100100111111111010101101001001 N
b10011100011010001101001 ?
b10011100011010001101001 U
b10010 -
b100100111111111010101101001001 C
1B
1<
b100100111111111010101101001001 M
b10011100011010001101001 T
b1110 W
b1110 V
b100 j
b10011100011010001101001 L
10
b11101001100001101000010011010011 !
b11101001100001101000010011010011 1
b10101101111010101110001 &
b1011011110101011100 9
b0 '
b0 8
b0 A
0,
0"
03
b100011100011010001101000000000100100100111111111010101101001001 (
b100011100011010001101000000000100100100111111111010101101001001 7
b100011100011010001101000000000100100100111111111010101101001001 @
b100100111111111010101101001001 p
b1 o
b111000110100011010 q
b0 /
b1101001100001101000001011110101 ;
b1110 :
#370
00
#380
b11101001100001101000010011010011 K
b100 i
b10101101111010101110001 G
b11101001100001101000010011010011 >
b11101001100001101000010011010011 N
b10101101111010101110001 ?
b10101101111010101110001 U
b10011 -
b1101001100001101000010011010011 C
b11101001100001101000010011010011 M
b10101101111010101110001 T
b100 j
b10101101111010101110001 L
10
b11000110111000001100101010001101 !
b11000110111000001100101010001101 1
b10000111101110110111001 &
b1111011101101110 9
b100101101111010101110000000000111101001100001101000010011010011 (
b100101101111010101110000000000111101001100001101000010011010011 7
b100101101111010101110000000000111101001100001101000010011010011 @
b11101001100001101000010011010011 p
b1011011110101011100 q
b1000110111000001100100011010000 ;
b1111 :
#390
00
#400
b10100 -
b0 C
b100 i
b111101 Y
b1101101110 X
b100 j
b1 L
10
b10101000111110100000101001010001 !
b10101000111110100000101001010001 1
b10001000110010111110001 &
b10001100101111100 9
1$
15
b1111011101101110000000000000 %
b1111011101101110000000000000 =
b1111011101101110000000000000 6
b0 (
b0 7
b0 @
b1111011101101110 n
b10 /
b101000111110100000100100000111 ;
b10000 :
#410
00
#420
b10101101111010101110000 G
b10101101111010101110000 ?
b10101101111010101110000 U
b10101 -
0B
0<
b0 W
b0 V
b10101101111010101110000 T
b100 j
b100 i
b0 Y
b0 X
10
b10000101010111110110100100001 !
b10000101010111110110100100001 1
b11101101110110101110101 &
b11011011101101011101 9
b10001100101111100000000000000 '
b10001100101111100000000000000 8
b10001100101111100000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b10001100101111100 l
b11 /
b10010000101010111110101111001010 ;
b10001 :
#430
00
#440
b10110 -
10
b10000000011011110001001011000011 ;
b10010 :
