$date
	Sat Nov 12 21:36:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 124 ? port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 @ update_i [62:0] $end
$var wire 32 A vaddr_to_be_flushed_i [31:0] $end
$var wire 1 B vaddr_to_be_flushed_is0 $end
$var wire 31 C tdata [30:0] $end
$var wire 31 D tags_q_3 [30:0] $end
$var wire 31 E tags_q_2 [30:0] $end
$var wire 31 F tags_q_1 [30:0] $end
$var wire 31 G tags_q_0 [30:0] $end
$var wire 32 H content_q_3 [31:0] $end
$var wire 32 I content_q_2 [31:0] $end
$var wire 32 J content_q_1 [31:0] $end
$var wire 32 K content_q_0 [31:0] $end
$var wire 32 L cdata [31:0] $end
$var reg 128 M content_n [127:0] $end
$var reg 128 N content_q [127:0] $end
$var reg 32 O lu_content_o [31:0] $end
$var reg 4 P lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 Q plru_tree_n [5:0] $end
$var reg 6 R plru_tree_q [5:0] $end
$var reg 4 S replace_en [3:0] $end
$var reg 124 T tags_n [123:0] $end
$var reg 124 U tags_q [123:0] $end
$var reg 4 V vaddr_vpn0_match [3:0] $end
$var reg 4 W vaddr_vpn1_match [3:0] $end
$var reg 10 X vpn0 [9:0] $end
$var reg 10 Y vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 Z count [31:0] $end
$var reg 32 [ countSetBits [31:0] $end
$var reg 4 \ vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ] idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 ^ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 _ idx_base [31:0] $end
$var reg 32 ` new_index [31:0] $end
$var reg 32 a shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 b lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 c i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 d en $end
$var reg 32 e idx_base [31:0] $end
$var reg 32 f new_index [31:0] $end
$var reg 32 g shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 h lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 i i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 k asid [8:0] $end
$var reg 20 l vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 m asid [8:0] $end
$var reg 20 n vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 o asid [8:0] $end
$var reg 32 p entry_data [31:0] $end
$var reg 20 q vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
xd
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
x<
b1001100110 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 S
b1 f
b1 g
b1 e
b10 h
0d
b100 c
b100 ^
b0 Q
b0 K
b0 J
b0 I
b0 H
b100 j
b0 M
b0 T
b100 i
0)
b0 +
b0 O
0*
b0 P
b0 G
b0 F
b0 E
b0 D
b1 -
b0 R
b0 >
b0 N
b0 ?
b0 U
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b1111100001011000111011111111000 !
b1111100001011000111011111111000 1
b1110001101000000101 9
b11111100001011000111010000100100 ;
b10111000110100000010101 &
b1 .
12
#70
00
#80
b100 -
b0 C
0B
0<
b100 i
b0 Y
b0 X
b0 W
b0 V
b100 j
b1 L
10
b10001010011001110101001000010100 !
b10001010011001110101001000010100 1
b11000010000010111101001 &
b10000100000101111010 9
b1110001101000000101000000000000 '
b1110001101000000101000000000000 8
b1110001101000000101000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b0 (
b0 7
b0 @
b1 k
b1110001101000000101 l
b11 /
b1010011001110101000111101011 ;
b0 :
#90
00
#100
b101 -
b100 j
10
b1111101101011001111111111111011 !
b1111101101011001111111111111011 1
b10111100000000100111001 &
b1111000000001001110 9
b10000100000101111010000000000000 '
b10000100000101111010000000000000 8
b10000100000101111010000000000000 A
b10000100000101111010 l
b11111101101011001111110101111110 ;
b1 :
#110
00
#120
b110 -
b100 j
10
b11010111000010011000100010101110 !
b11010111000010011000100010101110 1
b11101101111001001000101 &
b11011011110010010001 9
b1111000000001001110000000000000 '
b1111000000001001110000000000000 8
b1111000000001001110000000000000 A
b1111000000001001110 l
b1010111000010011000011111001101 ;
b10 :
#130
00
#140
b11010111000010011000100010101110 K
b100 i
b11101101111001001000101 G
b11010111000010011000100010101110 >
b11010111000010011000100010101110 N
b11101101111001001000101 ?
b11101101111001001000101 U
b111 -
b1010111000010011000100010101110 C
1B
1<
b11010111000010011000100010101110 M
b11101101111001001000101 T
b1110 W
b1110 V
b100 j
b11101101111001001000101 L
10
b11100100011011101101101011001000 !
b11100100011011101101101011001000 1
b11000010011001101111101 &
b10000100110011011111 9
b0 '
b0 8
b0 A
0,
0"
03
b101101101111001001000100000000111010111000010011000100010101110 (
b101101101111001001000100000000111010111000010011000100010101110 7
b101101101111001001000100000000111010111000010011000100010101110 @
b11010111000010011000100010101110 p
b1 o
b11011011110010010001 q
b0 /
b1100100011011101101100010001000 ;
b11 :
#150
00
#160
b11100100011011101101101011001000 K
b100 i
b11000010011001101111101 G
b11100100011011101101101011001000 >
b11100100011011101101101011001000 N
b11000010011001101111101 ?
b11000010011001101111101 U
b1000 -
b1100100011011101101101011001000 C
b11100100011011101101101011001000 M
b11000010011001101111101 T
b100 j
b11000010011001101111101 L
10
b10001101011100101100011000011010 !
b10001101011100101100011000011010 1
b10000011011001111100001 &
b110110011111000 9
b101000010011001101111100000000111100100011011101101101011001000 (
b101000010011001101111100000000111100100011011101101101011001000 7
b101000010011001101111100000000111100100011011101101101011001000 @
b11100100011011101101101011001000 p
b10000100110011011111 q
b1101011100101100010100011111 ;
b100 :
#170
00
#180
b10001101011100101100011000011010 K
b100 i
b10000011011001111100001 G
b10001101011100101100011000011010 >
b10001101011100101100011000011010 N
b10000011011001111100001 ?
b10000011011001111100001 U
b1001 -
b1101011100101100011000011010 C
b10001101011100101100011000011010 M
b10000011011001111100001 T
b100 j
b10000011011001111100001 L
10
b10000000100011010011010000000001 !
b10000000100011010011010000000001 1
b10110111010100110100101 &
b1101110101001101001 9
b100000011011001111100000000000110001101011100101100011000011010 (
b100000011011001111100000000000110001101011100101100011000011010 7
b100000011011001111100000000000110001101011100101100011000011010 @
b10001101011100101100011000011010 p
b110110011111000 q
b100011010011001111000010 ;
b101 :
#190
00
#200
b10000000100011010011010000000001 K
b100 i
b10110111010100110100101 G
b10000000100011010011010000000001 >
b10000000100011010011010000000001 N
b10110111010100110100101 ?
b10110111010100110100101 U
b1010 -
b100011010011010000000001 C
b10000000100011010011010000000001 M
b10110111010100110100101 T
b100 j
b10110111010100110100101 L
10
b100111010001000011110101001110 !
b100111010001000011110101001110 1
b11001110001000101111001 &
b10011100010001011110 9
b100110111010100110100100000000110000000100011010011010000000001 (
b100110111010100110100100000000110000000100011010011010000000001 7
b100110111010100110100100000000110000000100011010011010000000001 @
b10000000100011010011010000000001 p
b1101110101001101001 q
b10100111010001000011101001100001 ;
b110 :
#210
00
#220
b100 i
b10110111010100110100100 G
b10110111010100110100100 ?
b10110111010100110100100 U
b1011 -
b0 C
b10110111010100110100100 T
b100 j
b1 L
10
b10001001100011101110101000010011 !
b10001001100011101110101000010011 1
b11111000111111101010001 &
b11110001111111010100 9
1"
13
b0 (
b0 7
b0 @
b0 k
b0 l
b1 /
b1001100011101110100110101100 ;
b111 :
#230
00
#240
b1100 -
10
b11000111111110010011011010001111 !
b11000111111110010011011010001111 1
b11001110001010001010101 &
b10011100010100010101 9
b1000111111110010011010000010011 ;
b1000 :
#250
00
#260
b11000111111110010011011010001111 K
b100 i
b11001110001010001010101 G
b11000111111110010011011010001111 >
b11000111111110010011011010001111 N
b11001110001010001010101 ?
b11001110001010001010101 U
b1101 -
b1000111111110010011011010001111 C
b11000111111110010011011010001111 M
b11001110001010001010101 T
b100 j
b11001110001010001010101 L
10
b11101111000010000010001011011110 !
b11101111000010000010001011011110 1
b10011001010001011111001 &
b110010100010111110 9
0"
03
b101001110001010001010100000000111000111111110010011011010001111 (
b101001110001010001010100000000111000111111110010011011010001111 7
b101001110001010001010100000000111000111111110010011011010001111 @
b11000111111110010011011010001111 p
b10011100010100010101 q
b0 /
b1101111000010000010000011000110 ;
b1001 :
#270
00
#280
b100 i
b11001110001010001010100 G
b11001110001010001010100 ?
b11001110001010001010100 U
b1110 -
b0 C
0B
0<
b0 W
b0 V
b11001110001010001010100 T
b100 j
b1 L
10
b10110110010000010011110001101100 !
b10110110010000010011110001101100 1
b11001100100101110011001 &
b10011001001011100110 9
b110010100010111110000000000000 '
b110010100010111110000000000000 8
b110010100010111110000000000000 A
1,
1"
13
b0 (
b0 7
b0 @
b1 k
b110010100010111110 l
b11 /
b110110010000010011101010110101 ;
b1010 :
#290
00
#300
b1111 -
1B
b1110 W
b1110 V
b100 j
1<
10
b110100111101101110110101101001 !
b110100111101101110110101101001 1
b11010111001010111011101 &
b10101110010101110111 9
b0 '
b0 8
b0 A
0,
b0 k
b0 l
b1 /
b10110100111101101110101110010000 ;
b1011 :
#310
00
#320
b10000 -
b100 j
b100 i
b1010111001 Y
b101110111 X
10
b11011000111100010011010010110001 !
b11011000111100010011010010110001 1
b10001001010010000101101 &
b10010100100001011 9
0"
03
1$
15
b10101110010101110111000000000000 %
b10101110010101110111000000000000 =
b10101110010101110111000000000000 6
b1 m
b10101110010101110111 n
b10 /
b1011000111100010011001011000111 ;
b1100 :
#330
00
#340
b10001 -
0B
0<
b0 W
b0 V
b100 j
b100 i
b0 Y
b0 X
10
b11100001110000101110101011000011 !
b11100001110000101110101011000011 1
b10001111010110100100001 &
b11110101101001000 9
b10010100100001011000000000000 '
b10010100100001011000000000000 8
b10010100100001011000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b1 k
b10010100100001011 l
b11 /
b1100001110000101110100010001010 ;
b1101 :
#350
00
#360
b10010 -
1B
1<
b1110 W
b1110 V
b100 j
b100 i
b1111010 Y
b1101001000 X
10
b1011001100100110111111110110011 !
b1011001100100110111111110110011 1
b10111111010010000110101 &
b1111110100100001101 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b11110101101001000000000000000 %
b11110101101001000000000000000 =
b11110101101001000000000000000 6
b11110101101001000 n
b10 /
b11011001100100110111110011001001 ;
b1110 :
#370
00
#380
b10011 -
b100 i
b111111010 Y
b100001101 X
10
b1100110100001111110010111001101 !
b1100110100001111110010111001101 1
b11100101100010110101001 &
b11001011000101101010 9
b1111110100100001101000000000000 %
b1111110100100001101000000000000 =
b1111110100100001101000000000000 6
b1111110100100001101 n
b11100110100001111110001000110100 ;
b1111 :
#390
00
#400
b10100 -
0B
0<
b0 W
b0 V
b100 j
b100 i
b0 Y
b0 X
10
b1111000010111110001011111110000 !
b1111000010111110001011111110000 1
b11000010000111111111101 &
b10000100001111111111 9
b11001011000101101010000000000000 '
b11001011000101101010000000000000 8
b11001011000101101010000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b11001011000101101010 l
b11 /
b11111000010111110001010100111011 ;
b10000 :
#410
00
#420
b10101 -
1B
1<
b1110 W
b1110 V
b100 j
b100 i
b1000010000 Y
b1111111111 X
10
b100111000100110111000101001110 !
b100111000100110111000101001110 1
b11100101010001011011001 &
b11001010100010110110 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b10000100001111111111000000000000 %
b10000100001111111111000000000000 =
b10000100001111111111000000000000 6
b10000100001111111111 n
b10 /
b10100111000100110110111100001110 ;
b10001 :
#430
00
#440
b10110 -
10
b110110010000011010010000110111 ;
b10010 :
