$date
	Tue Apr 11 18:20:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module store_unit_tb $end
$var wire 65 ! de_io_amo_resp_i [64:0] $end
$var wire 1 " de_io_amo_valid_commit_i $end
$var wire 1 # de_io_commit_i $end
$var wire 1 $ de_io_dtlb_hit_i $end
$var wire 65 % de_io_ex_i [64:0] $end
$var wire 1 & de_io_flush_i $end
$var wire 12 ' de_io_page_offset_i [11:0] $end
$var wire 35 ( de_io_req_port_i [34:0] $end
$var wire 32 ) de_io_result_o [31:0] $end
$var wire 1 * de_io_valid_i $end
$var wire 1 + de_io_valid_o $end
$var wire 32 , de_io_vaddr_o [31:0] $end
$var wire 1 - de_io_translation_req_o $end
$var wire 3 . de_io_trans_id_o [2:0] $end
$var wire 1 / de_io_store_buffer_empty_o $end
$var wire 77 0 de_io_req_port_o [76:0] $end
$var wire 1 1 de_io_pop_st_o $end
$var wire 1 2 de_io_page_offset_matches_o $end
$var wire 34 3 de_io_paddr_i [33:0] $end
$var wire 1 4 de_io_no_st_pending_o $end
$var wire 85 5 de_io_lsu_ctrl_i [84:0] $end
$var wire 65 6 de_io_ex_o [64:0] $end
$var wire 1 7 de_io_commit_ready_o $end
$var wire 135 8 de_io_amo_req_o [134:0] $end
$var reg 32 9 CLK_CYCLE [31:0] $end
$var reg 1 : choice_core $end
$var reg 1 ; choice_mem $end
$var reg 1 < clk $end
$var reg 32 = data [31:0] $end
$var reg 12 > poffset [11:0] $end
$var reg 1 ? reset $end
$var reg 2 @ store_seen [1:0] $end
$var reg 1 A tb_io_commit_i $end
$var reg 85 B tb_io_lsu_ctrl_i [84:0] $end
$var reg 34 C tb_io_paddr_i [33:0] $end
$var reg 12 D tb_io_page_offset_i [11:0] $end
$var reg 35 E tb_io_req_port_i [34:0] $end
$var reg 1 F tb_io_valid_i $end
$var reg 34 G vaddr [33:0] $end
$var integer 32 H i [31:0] $end
$var integer 32 I seed [31:0] $end
$scope module su_i $end
$var wire 1 J amo_buffer_ready $end
$var wire 1 K amo_buffer_valid $end
$var wire 65 L amo_resp_i [64:0] $end
$var wire 1 " amo_valid_commit_i $end
$var wire 1 < clk_i $end
$var wire 1 # commit_i $end
$var wire 1 $ dtlb_hit_i $end
$var wire 65 M ex_i [64:0] $end
$var wire 1 & flush_i $end
$var wire 85 N lsu_ctrl_i [84:0] $end
$var wire 34 O paddr_i [33:0] $end
$var wire 12 P page_offset_i [11:0] $end
$var wire 35 Q req_port_i [34:0] $end
$var wire 32 R result_o [31:0] $end
$var wire 1 ? rst_ni $end
$var wire 1 S st_ready $end
$var wire 1 T store_buffer_valid $end
$var wire 3 U trans_id_o [2:0] $end
$var wire 1 * valid_i $end
$var wire 32 V vaddr_o [31:0] $end
$var wire 1 W store_buffer_ready $end
$var wire 1 / store_buffer_empty_o $end
$var wire 77 X req_port_o [76:0] $end
$var wire 1 2 page_offset_matches_o $end
$var wire 1 4 no_st_pending_o $end
$var wire 1 Y instr_is_amo $end
$var wire 1 7 commit_ready_o $end
$var wire 135 Z amo_req_o [134:0] $end
$var reg 4 [ amo_op_d [3:0] $end
$var reg 4 \ amo_op_q [3:0] $end
$var reg 65 ] ex_o [64:0] $end
$var reg 1 1 pop_st_o $end
$var reg 4 ^ st_be_n [3:0] $end
$var reg 4 _ st_be_q [3:0] $end
$var reg 32 ` st_data_n [31:0] $end
$var reg 32 a st_data_q [31:0] $end
$var reg 2 b st_data_size_n [1:0] $end
$var reg 2 c st_data_size_q [1:0] $end
$var reg 1 d st_valid $end
$var reg 1 e st_valid_without_flush $end
$var reg 2 f state_d [1:0] $end
$var reg 2 g state_q [1:0] $end
$var reg 3 h trans_id_n [2:0] $end
$var reg 3 i trans_id_q [2:0] $end
$var reg 1 - translation_req_o $end
$var reg 1 + valid_o $end
$scope function ariane_pkg_data_align $end
$upscope $end
$scope function ariane_pkg_extract_transfer_size $end
$upscope $end
$scope function ariane_pkg_is_amo $end
$upscope $end
$scope module i_amo_buffer $end
$var wire 72 j amo_data_out [71:0] $end
$var wire 4 k amo_op_i [3:0] $end
$var wire 65 l amo_resp_i [64:0] $end
$var wire 1 m amo_valid $end
$var wire 1 " amo_valid_commit_i $end
$var wire 1 < clk_i $end
$var wire 32 n data_i [31:0] $end
$var wire 2 o data_size_i [1:0] $end
$var wire 1 p flush_amo_buffer $end
$var wire 1 & flush_i $end
$var wire 34 q paddr_i [33:0] $end
$var wire 1 J ready_o $end
$var wire 1 ? rst_ni $end
$var wire 1 K valid_i $end
$var wire 1 4 no_st_pending_i $end
$var wire 135 r amo_req_o [134:0] $end
$var wire 72 s amo_data_in [71:0] $end
$upscope $end
$scope module store_buffer_i $end
$var wire 4 t be_i [3:0] $end
$var wire 1 < clk_i $end
$var wire 1 # commit_i $end
$var wire 32 u data_i [31:0] $end
$var wire 2 v data_size_i [1:0] $end
$var wire 1 & flush_i $end
$var wire 34 w paddr_i [33:0] $end
$var wire 12 x page_offset_i [11:0] $end
$var wire 35 y req_port_i [34:0] $end
$var wire 1 ? rst_ni $end
$var wire 1 / store_buffer_empty_o $end
$var wire 1 z sv2v_tmp_80AC7 [1:1] $end
$var wire 1 { sv2v_tmp_A682E [1:1] $end
$var wire 1 | sv2v_tmp_F170F [1:1] $end
$var wire 1 T valid_i $end
$var wire 1 e valid_without_flush_i $end
$var wire 12 } sv2v_tmp_9099D [12:1] $end
$var wire 4 ~ sv2v_tmp_8DCF7 [4:1] $end
$var wire 22 !" sv2v_tmp_71805 [22:1] $end
$var wire 32 "" sv2v_tmp_6B7F3 [32:1] $end
$var wire 2 #" sv2v_tmp_51F0D [2:1] $end
$var reg 584 $" commit_queue_n [583:0] $end
$var reg 584 %" commit_queue_q [583:0] $end
$var reg 3 &" commit_read_pointer_n [2:0] $end
$var reg 3 '" commit_read_pointer_q [2:0] $end
$var reg 1 7 commit_ready_o $end
$var reg 4 (" commit_status_cnt_n [3:0] $end
$var reg 4 )" commit_status_cnt_q [3:0] $end
$var reg 3 *" commit_write_pointer_n [2:0] $end
$var reg 3 +" commit_write_pointer_q [2:0] $end
$var reg 1 4 no_st_pending_o $end
$var reg 1 2 page_offset_matches_o $end
$var reg 1 W ready_o $end
$var reg 77 ," req_port_o [76:0] $end
$var reg 292 -" speculative_queue_n [291:0] $end
$var reg 292 ." speculative_queue_q [291:0] $end
$var reg 2 /" speculative_read_pointer_n [1:0] $end
$var reg 2 0" speculative_read_pointer_q [1:0] $end
$var reg 3 1" speculative_status_cnt_n [2:0] $end
$var reg 3 2" speculative_status_cnt_q [2:0] $end
$var reg 2 3" speculative_write_pointer_n [1:0] $end
$var reg 2 4" speculative_write_pointer_q [1:0] $end
$scope function sv2v_cast_79500 $end
$upscope $end
$scope begin core_if $end
$var reg 5 5" speculative_status_cnt [4:0] $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 6" i [31:0] $end
$upscope $end
$upscope $end
$scope begin p_commit $end
$upscope $end
$scope begin p_spec $end
$upscope $end
$scope begin store_if $end
$var reg 9 7" commit_status_cnt [8:0] $end
$upscope $end
$scope begin sv2v_autoblock_2 $end
$var reg 2 8" _sv2v_jump [0:1] $end
$scope begin address_checker $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 9" i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 :" _sv2v_value_on_break [31:0] $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 ;" i [31:0] $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 <" _sv2v_value_on_break [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin store_control $end
$upscope $end
$upscope $end
$scope task lower_commit $end
$upscope $end
$scope task lower_memory_grant $end
$upscope $end
$scope task lower_store_request $end
$upscope $end
$scope task raise_commit $end
$upscope $end
$scope task raise_memory_grant $end
$upscope $end
$scope task raise_store_request $end
$var reg 32 =" data [31:0] $end
$var reg 32 >" vaddr [31:0] $end
$upscope $end
$scope task set_page_offset $end
$var reg 12 ?" page_offset [11:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?"
bx >"
bx ="
b11 <"
b100 ;"
b111 :"
b1000 9"
b0 8"
bx 7"
bx 6"
b0xxx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx1xxxxxx00 ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
0|
0{
1z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
b0zzzzzz000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz00000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz r
bx q
0p
bx o
bx n
zm
b0 l
bx k
bz j
bx i
bx h
bx g
bx f
0e
0d
bx c
b11 b
bx a
b0 `
bx _
bx ^
b0 ]
bx \
b0 [
b0zzzzzz000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz00000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz Z
0Y
bx1xxxxxx00 X
xW
bx V
bx U
0T
xS
b0 R
bx Q
bx P
bx O
bx N
b0 M
b0 L
0K
zJ
b101111011 I
bx H
bx G
xF
bx E
bx D
bx C
bx B
xA
b0 @
1?
bx >
bx =
1<
x;
x:
b0 9
b0zzzzzz000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz00000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz 8
x7
b0 6
bx 5
x4
bx 3
02
01
bx1xxxxxx00 0
x/
bx .
0-
bx ,
0+
x*
b0 )
bx (
bx '
0&
b0 %
1$
x#
0"
b0 !
$end
#10
0<
#20
1/
b0 ("
b0 $"
b0 *"
b0 &"
14
17
b0 -"
b0 3"
b0 /"
b0 1"
1S
1W
b0 5"
b0 f
b1 9
b0 )"
b0 +"
b0 }
b0 !"
b0 ""
b0 ~
b0 #"
b0 '"
b0 %"
b0 2"
b0 4"
b0 0"
b0 ."
b0 \
b0 k
b0 .
b0 U
b0 i
b0 c
b0 o
b0 v
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000 s
b0 a
b0 n
b0 u
b0 _
b0 t
b0 g
b11 <"
b100 ;"
b111 :"
b1000 9"
b0x0100000000 0
b0x0100000000 X
b0x0100000000 ,"
b0 7"
1<
b1010110001 '
b1010110001 P
b1010110001 x
b1010110001 D
b1010110001 ?"
1;
0:
b1010110001 >
b1110110111101111111111111101101 =
b1110000001100011110111000000000011 G
b101000101110111100111001001100 I
0#
0A
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
0*
0F
b0 H
0?
#30
0<
#40
b10 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b10 b
b11010001010011000010000010100010 `
b0 ^
b1110110001010100001000111101100 ,
b1110110001010100001000111101100 V
11
1-
b1 f
b0 h
1<
b111000101111 '
b111000101111 P
b111000101111 x
b111000101111 D
b111000101111 ?"
b10 @
b11101100010101000010001111011000000000000000000000000000000000000 s
b1110110001010100001000111101100 3
b1110110001010100001000111101100 C
b1110110001010100001000111101100 O
b1110110001010100001000111101100 q
b1110110001010100001000111101100 w
b1011101100010101000010001111011000110100010100110000100000101000100000001000100111000 5
b1011101100010101000010001111011000110100010100110000100000101000100000001000100111000 B
b1011101100010101000010001111011000110100010100110000100000101000100000001000100111000 N
1*
1F
b11010001010011000010000010100010 ="
b1110110001010100001000111101100 >"
0;
1:
b111000101111 >
b11010001010011000010000010100010 =
b1110110001010100001000111101100 G
b11110001000100011110110011111001 I
b0 (
b0 Q
b0 y
b0 E
b1 H
#50
0<
#60
b10 c
b10 o
b10 v
b11101100010101000010001111011001101000101001100001000001010001010 s
b11010001010011000010000010100010 a
b11010001010011000010000010100010 n
b11010001010011000010000010100010 u
b11 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b0 f
01
0-
1<
b110101110101 '
b110101110101 P
b110101110101 x
b110101110101 D
b110101110101 ?"
b1 @
b110101110101 >
b10000101100101100100100100001 =
b1100001010111000110101111000010 G
b11100100000010100000010110010010 I
0*
0F
b10 H
1?
#70
0<
#80
0/
04
b1 )"
b1 +"
b111 2"
b1 0"
b100 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b10 ("
b10 7"
b10 *"
b110 1"
b110 5"
b10 /"
1<
b111000100110 '
b111000100110 P
b111000100110 x
b111000100110 D
b111000100110 ?"
b0 @
1#
1A
0:
b111000100110 >
b10000110010111010100000000001100 =
b1110100011111000001110000001000111 G
b10101100001110011101000111100111 I
b11 H
#90
0<
#100
b101 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b1 ("
b1 *"
b1 7"
b1 /"
b111 1"
0S
0W
b111 5"
1<
b101101010 '
b101101010 P
b101101010 x
b101101010 D
b101101010 ?"
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
1;
b101101010 >
b100111011011000010011101001110 =
b101011110111001101001101010111 G
b10011100111101100100111010001000 I
0#
0A
b100 H
#110
0<
#120
b10100000010100110011001010011 a
b10100000010100110011001010011 n
b10100000010100110011001010011 u
b11 g
b110 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b10100000010100110011001010011 `
b1110000011100110100000011 ,
b1110000011100110100000011 V
01
1-
b11 f
1<
b10010101111 '
b10010101111 P
b10010101111 x
b10010101111 D
b10010101111 ?"
b10 @
b11100000111001101000000110001010000001010011001100101001110 s
b1110000011100110100000011 3
b1110000011100110100000011 C
b1110000011100110100000011 O
b1110000011100110100000011 q
b1110000011100110100000011 w
b1000000011100000111001101000000110000010100110011001010011000101000000001000100111000 5
b1000000011100000111001101000000110000010100110011001010011000101000000001000100111000 B
b1000000011100000111001101000000110000010100110011001010011000101000000001000100111000 N
1*
1F
b1010011001100101001100010100 ="
b1110000011100110100000011 >"
1:
b10010101111 >
b1010011001100101001100010100 =
b1110000011100110100000011 G
b1010110111100010100011111000101 I
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
b101 H
#130
0<
#140
b111 9
b11 <"
b100 ;"
b111 :"
b1000 9"
1-
1<
b101011000111 '
b101011000111 P
b101011000111 x
b101011000111 D
b101011000111 ?"
b1 @
0;
0:
b101011000111 >
b11011011011100100101110010110110 =
b1110100111101000000111101001001111 G
b101010010100010101001010101110 I
b0 (
b0 Q
b0 y
b0 E
0*
0F
b110 H
#150
0<
#160
b10 )"
b10 +"
b110 2"
b10 0"
b1000 9
b0 f
1-
b11 <"
b100 ;"
b111 :"
b1000 9"
b11 ("
b11 7"
b11 *"
b101 1"
b101 5"
b11 /"
1S
1W
1<
b101010111100 '
b101010111100 P
b101010111100 x
b101010111100 D
b101010111100 ?"
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
b0 @
1#
1A
1;
1:
b101010111100 >
b110110111100111000000101101101 =
b1111010111000000000000110010101110 G
b1001011100011000000001000010011 I
b111 H
#170
0<
#180
b0 g
b1001 9
b0 f
0-
b11 <"
b100 ;"
b111 :"
b1000 9"
b10 /"
b110 1"
0S
0W
b110 5"
b10 ("
b10 *"
b10 7"
1<
b100010000000 '
b100010000000 P
b100010000000 x
b100010000000 D
b100010000000 ?"
0;
0:
b100010000000 >
b11101100111010100010011011011001 =
b11101010010111010001100111010 G
b11011101000101001110011110000100 I
0#
0A
b0 (
b0 Q
b0 y
b0 E
b1000 H
#190
0<
#200
b1010 9
b11 <"
b100 ;"
b111 :"
b1000 9"
1<
b1111000010 '
b1111000010 P
b1111000010 x
b1111000010 D
b1111000010 ?"
b1111000010 >
b10010000011100001111101000100000 =
b1110000001000000110001101000000010 G
b10101101001010111011000001010001 I
b1001 H
#210
0<
#220
b1011 9
b11 <"
b100 ;"
b111 :"
b1000 9"
1<
b110111001001 '
b110111001001 P
b110111001001 x
b110111001001 D
b110111001001 ?"
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
1;
b110111001001 >
b11010111000111011010001010101110 =
b10100010000010100111100101000 G
b1111111101001000110111010001010 I
b1010 H
#230
0<
#240
b10111010010111101010011111010011 a
b10111010010111101010011111010011 n
b10111010010111101010011111010011 u
b11 g
b1100 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b10111010010111101010011111010011 `
b1111110110100111000100111111101 ,
b1111110110100111000100111111101 V
01
1-
b11 f
1<
b110111000001 '
b110111000001 P
b110111000001 x
b110111000001 D
b110111000001 ?"
b10 @
b11111101101001110001001111111011011101001011110101001111101001110 s
b1111110110100111000100111111101 3
b1111110110100111000100111111101 C
b1111110110100111000100111111101 O
b1111110110100111000100111111101 q
b1111110110100111000100111111101 w
b1011111101101001110001001111111010110100111011101001011110101001110000001000100111000 5
b1011111101101001110001001111111010110100111011101001011110101001110000001000100111000 B
b1011111101101001110001001111111010110100111011101001011110101001110000001000100111000 N
1*
1F
b11010011101110100101111010100111 ="
b1111110110100111000100111111101 >"
0;
1:
b110111000001 >
b11010011101110100101111010100111 =
b1111110110100111000100111111101 G
b10000001010101101110111111111 I
b0 (
b0 Q
b0 y
b0 E
b1011 H
#250
0<
#260
b1101 9
b11 <"
b100 ;"
b111 :"
b1000 9"
1-
1<
b100000001000 '
b100000001000 P
b100000001000 x
b100000001000 D
b100000001000 ?"
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
b1 @
1;
0:
b100000001000 >
b1100110110100010011100011001 =
b1111101100110001011101111111011 G
b1010011100010000011010101000000 I
0*
0F
b1100 H
#270
0<
#280
b11 )"
b11 +"
b101 2"
b11 0"
b1110 9
b0 f
1-
b11 <"
b100 ;"
b111 :"
b1000 9"
b100 1"
b100 5"
b0 /"
1S
1W
b100 ("
b100 7"
b100 *"
1<
b10011001001 '
b10011001001 P
b10011001001 x
b10011001001 D
b10011001001 ?"
b0 @
1#
1A
0;
b10011001001 >
b11110111010111010001011011101110 =
b1110000100000001101110011000001000 G
b10001111011101101101001010011101 I
b0 (
b0 Q
b0 y
b0 E
b1101 H
#290
0<
#300
b101000101000101101000100010101 a
b101000101000101101000100010101 n
b101000101000101101000100010101 u
b1111 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b101000101000101101000100010101 `
b111101011101011010001101111010 ,
b111101011101011010001101111010 V
b11 f
1-
b11 ("
b11 *"
b11 7"
b11 /"
b101 1"
0S
0W
b101 5"
1<
b100001001111 '
b100001001111 P
b100001001111 x
b100001001111 D
b100001001111 ?"
b10 @
b1111010111010110100011011110100010100010100010110100010001010110 s
b111101011101011010001101111010 3
b111101011101011010001101111010 C
b111101011101011010001101111010 O
b111101011101011010001101111010 q
b111101011101011010001101111010 w
b1001111010111010110100011011110100110100010001010100101000101000100000001000100111000 5
b1001111010111010110100011011110100110100010001010100101000101000100000001000100111000 B
b1001111010111010110100011011110100110100010001010100101000101000100000001000100111000 N
1*
1F
b11010001000101010010100010100010 ="
b111101011101011010001101111010 >"
1:
b100001001111 >
b11010001000101010010100010100010 =
b111101011101011010001101111010 G
b10111011001110111101010100100110 I
0#
0A
b1110 H
#310
0<
#320
b10000 9
b11 <"
b100 ;"
b111 :"
b1000 9"
1-
1<
b101100000 '
b101100000 P
b101100000 x
b101100000 D
b101100000 ?"
b1 @
b101100000 >
b1111101111001011011011111111011 =
b1001101111000101001111110011011 G
b1000100000111000110101011 I
0*
0F
b1111 H
#330
0<
#340
b100 )"
b100 +"
b100 2"
b0 0"
b10001 9
b0 f
1-
b11 <"
b100 ;"
b111 :"
b1000 9"
b101 ("
b101 7"
b101 *"
b11 1"
b11 5"
b1 /"
1S
1W
1<
b101100110011 '
b101100110011 P
b101100110011 x
b101100110011 D
b101100110011 ?"
b0 @
1#
1A
0:
b101100110011 >
b110110100000001011100001101 =
b1110100001100110111011011001000011 G
b10101000011001111001001110111100 I
b10000 H
#350
0<
#360
b0 g
b10010 9
b0 f
0-
b11 <"
b100 ;"
b111 :"
b1000 9"
b100 ("
b100 *"
b100 7"
b0 /"
b100 1"
0S
0W
b100 5"
1<
b10101101110 '
b10101101110 P
b10101101110 x
b10101101110 D
b10101101110 ?"
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
1;
b10101101110 >
b10001111010100000110000000011110 =
b110001001011011101101101100010 G
b1010011101011000001101010101001 I
0#
0A
b10001 H
#370
0<
#380
b11110011001110101100000111100000 a
b11110011001110101100000111100000 n
b11110011001110101100000111100000 u
b11 g
b10011 9
b11 <"
b100 ;"
b111 :"
b1000 9"
b11110011001110101100000111100000 `
b1011000110101001111000110110001 ,
b1011000110101001111000110110001 V
01
1-
b11 f
1<
b111001101011 '
b111001101011 P
b111001101011 x
b111001101011 D
b111001101011 ?"
b10 @
b10110001101010011110001101100011111001100111010110000011110000010 s
b1011000110101001111000110110001 3
b1011000110101001111000110110001 C
b1011000110101001111000110110001 O
b1011000110101001111000110110001 q
b1011000110101001111000110110001 w
b1010110001101010011110001101100010111000001111001100111010110000010000001000100111000 5
b1010110001101010011110001101100010111000001111001100111010110000010000001000100111000 B
b1010110001101010011110001101100010111000001111001100111010110000010000001000100111000 N
1*
1F
b11100000111100110011101011000001 ="
b1011000110101001111000110110001 >"
1:
b111001101011 >
b11100000111100110011101011000001 =
b1011000110101001111000110110001 G
b10111100111001100001010000010 I
b10000000000000000000000000000000000 (
b10000000000000000000000000000000000 Q
b10000000000000000000000000000000000 y
b10000000000000000000000000000000000 E
b10010 H
#390
0<
#400
b10100 9
b11 <"
b100 ;"
b111 :"
b1000 9"
1-
1<
b1011010010 '
b1011010010 P
b1011010010 x
b1011010010 D
b1011010010 ?"
b1 @
0;
b1011010010 >
b10011110011101000010001000111100 =
b100000111010100101111101000001 G
b11100101001010001000100100010111 I
b0 (
b0 Q
b0 y
b0 E
0*
0F
b10011 H
#410
0<
#420
b10101 9
1<
b10100 H
#430
0<
#440
b10110 9
1<
