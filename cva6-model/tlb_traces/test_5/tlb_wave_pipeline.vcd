$date
	Sat Nov  5 20:55:32 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 124 ? port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 @ update_i [62:0] $end
$var wire 32 A vaddr_to_be_flushed_i [31:0] $end
$var wire 1 B vaddr_to_be_flushed_is0 $end
$var wire 31 C tdata [30:0] $end
$var wire 31 D tags_q_3 [30:0] $end
$var wire 31 E tags_q_2 [30:0] $end
$var wire 31 F tags_q_1 [30:0] $end
$var wire 31 G tags_q_0 [30:0] $end
$var wire 32 H content_q_3 [31:0] $end
$var wire 32 I content_q_2 [31:0] $end
$var wire 32 J content_q_1 [31:0] $end
$var wire 32 K content_q_0 [31:0] $end
$var wire 32 L cdata [31:0] $end
$var reg 128 M content_n [127:0] $end
$var reg 128 N content_q [127:0] $end
$var reg 32 O lu_content_o [31:0] $end
$var reg 4 P lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 Q plru_tree_n [5:0] $end
$var reg 6 R plru_tree_q [5:0] $end
$var reg 4 S replace_en [3:0] $end
$var reg 124 T tags_n [123:0] $end
$var reg 124 U tags_q [123:0] $end
$var reg 4 V vaddr_vpn0_match [3:0] $end
$var reg 4 W vaddr_vpn1_match [3:0] $end
$var reg 10 X vpn0 [9:0] $end
$var reg 10 Y vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 Z count [31:0] $end
$var reg 32 [ countSetBits [31:0] $end
$var reg 4 \ vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ] idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 ^ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 _ idx_base [31:0] $end
$var reg 32 ` new_index [31:0] $end
$var reg 32 a shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 b lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 c i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 d en $end
$var reg 32 e idx_base [31:0] $end
$var reg 32 f new_index [31:0] $end
$var reg 32 g shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 h lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 i i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 k asid [8:0] $end
$var reg 20 l vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 m asid [8:0] $end
$var reg 20 n vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 o asid [8:0] $end
$var reg 32 p entry_data [31:0] $end
$var reg 20 q vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
xd
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
x<
b100101001 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 S
b1 f
b1 g
b1 e
b10 h
0d
b100 c
b100 ^
b0 Q
b0 K
b0 J
b0 I
b0 H
b100 j
b0 M
b0 T
b100 i
0)
b0 +
b0 O
0*
b0 P
b0 G
b0 F
b0 E
b0 D
b1 -
b0 R
b0 >
b0 N
b0 ?
b0 U
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b1100010101000100010010111000101 !
b1100010101000100010010111000101 1
b10010000010000000010 9
b11100010101000100010001101011111 ;
b11001000001000000001001 &
b1 .
12
#70
00
#80
b100 -
b0 C
1B
1<
b100 i
b1001000001 Y
b10 X
b1111 W
b1111 V
b100 j
b1 L
10
b1100001100111010110000111000011 !
b1100001100111010110000111000011 1
b11110100001010010100101 &
b11101000010100101001 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b10010000010000000010000000000000 %
b10010000010000000010000000000000 =
b10010000010000000010000000000000 6
b0 (
b0 7
b0 @
b1 m
b10010000010000000010 n
b10 /
b11100001100111010101111100000010 ;
b0 :
#90
00
#100
b101 -
0B
0<
b0 W
b0 V
b100 j
b100 i
b0 Y
b0 X
10
b1001100101101011111100110011001 !
b1001100101101011111100110011001 1
b10000001100110001100101 &
b11001100011001 9
b11101000010100101001000000000000 '
b11101000010100101001000000000000 8
b11101000010100101001000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b1 k
b11101000010100101001 l
b11 /
b11001100101101011111011010100001 ;
b1 :
#110
00
#120
b110 -
b100 j
10
b111011100100010100110101110111 !
b111011100100010100110101110111 1
b11011110001000001100001 &
b10111100010000011000 9
b11001100011001000000000000 '
b11001100011001000000000000 8
b11001100011001000000000000 A
b11001100011001 l
b10111011100100010100101011101100 ;
b10 :
#130
00
#140
b111 -
1B
1<
b1111 W
b1111 V
b100 j
b100 i
b1011110001 Y
b11000 X
10
b11101100101100111110000011011001 !
b11101100101100111110000011011001 1
b11110110101110010011101 &
b11101101011100100111 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b10111100010000011000000000000000 %
b10111100010000011000000000000000 =
b10111100010000011000000000000000 6
b10111100010000011000 n
b10 /
b1101100101100111101111001010011 ;
b11 :
#150
00
#160
b1000 -
b100 j
b100 i
b0 Y
b0 X
10
b11001001000101000101100110010 !
b11001001000101000101100110010 1
b10001111011011010001101 &
b11110110110100011 9
1"
13
0$
05
b0 %
b0 =
b0 6
b0 k
b0 l
b1 /
b10011001001000101000100000000110 ;
b100 :
#170
00
#180
b1001 -
0B
b0 W
b0 V
b100 j
0<
10
b10001101001010101110010000011010 !
b10001101001010101110010000011010 1
b11011100111011011011001 &
b10111001110110110110 9
b11110110110100011000000000000 '
b11110110110100011000000000000 8
b11110110110100011000000000000 A
1,
b1 k
b11110110110100011 l
b11 /
b1101001010101110001011110101 ;
b101 :
#190
00
#200
b1010 -
b100 j
10
b1111101110001001010101111111011 !
b1111101110001001010101111111011 1
b10100010101110110000101 &
b1000101011101100001 9
b10111001110110110110000000000000 '
b10111001110110110110000000000000 8
b10111001110110110110000000000000 A
b10111001110110110110 l
b11111101110001001010100011010000 ;
b110 :
#210
00
#220
b1011 -
b100 j
10
b1001010001100110110101110010100 !
b1001010001100110110101110010100 1
b11111111110000010001101 &
b11111111100000100011 9
b1000101011101100001000000000000 '
b1000101011101100001000000000000 8
b1000101011101100001000000000000 A
b1000101011101100001 l
b11001010001100110110100100000111 ;
b111 :
#230
00
#240
b1100 -
1B
b1111 W
b1111 V
b100 j
1<
10
b11110011100010001100110011100111 !
b11110011100010001100110011100111 1
b11110000110111110011001 &
b11100001101111100110 9
b0 '
b0 8
b0 A
0,
b0 k
b0 l
b1 /
b1110011100010001100101111001010 ;
b1000 :
#250
00
#260
b1101 -
10
b1011101110111110101001110111011 !
b1011101110111110101001110111011 1
b11000110011110110100001 &
b10001100111101101000 9
b11011101110111110101000100001001 ;
b1001 :
#270
00
#280
b1110 -
0B
b0 W
b0 V
b100 j
0<
10
b11101010110010000011110011010101 !
b11101010110010000011110011010101 1
b10111001100001001111001 &
b1110011000010011110 9
b10001100111101101000000000000000 '
b10001100111101101000000000000000 8
b10001100111101101000000000000000 A
1,
b1 k
b10001100111101101000 l
b11 /
b1101010110010000011101101110100 ;
b1010 :
#290
00
#300
b1111 -
1B
b1111 W
b1111 V
b100 j
1<
10
b11100111000100010001100011001110 !
b11100111000100010001100011001110 1
b11010000011010000101001 &
b10100000110100001010 9
b0 '
b0 8
b0 A
0,
b0 k
b0 l
b1 /
b1100111000100010001011101111011 ;
b1011 :
#310
00
#320
b11100111000100010001100011001110 K
b1110 W
b1110 V
b100 i
b11010000011010000101001 G
b11100111000100010001100011001110 >
b11100111000100010001100011001110 N
b11010000011010000101001 ?
b11010000011010000101001 U
b10000 -
b1100111000100010001100011001110 C
b11100111000100010001100011001110 M
b11010000011010000101001 T
b100 j
b11010000011010000101001 L
10
b1110110100000100001000111101101 !
b1110110100000100001000111101101 1
b11000100001011101000101 &
b10001000010111010001 9
0"
03
b101010000011010000101000000000111100111000100010001100011001110 (
b101010000011010000101000000000111100111000100010001100011001110 7
b101010000011010000101000000000111100111000100010001100011001110 @
b11100111000100010001100011001110 p
b1 o
b10100000110100001010 q
b0 /
b11110110100000100000111001001110 ;
b1100 :
#330
00
#340
b10001 -
b0 C
b100 i
b1000100001 Y
b111010001 X
b100 j
b1 L
10
b1111010010000011111011111110100 !
b1111010010000011111011111110100 1
b11101010011111100000001 &
b11010100111111000000 9
1$
15
b10001000010111010001000000000000 %
b10001000010111010001000000000000 =
b10001000010111010001000000000000 6
b0 (
b0 7
b0 @
b10001000010111010001 n
b10 /
b11111010010000011111010011011101 ;
b1101 :
#350
00
#360
b10010 -
b100 i
b1101010011 Y
b1111000000 X
10
b101001100100111100100101010011 !
b101001100100111100100101010011 1
b10111001001011010011001 &
b1110010010110100110 9
b11010100111111000000000000000000 %
b11010100111111000000000000000000 =
b11010100111111000000000000000000 6
b11010100111111000000 n
b10101001100100111100011011011000 ;
b1110 :
#370
00
#380
b10011 -
b100 i
b111001001 Y
b110100110 X
10
b101001011111101111111101010010 !
b101001011111101111111101010010 1
b10011011110001000000101 &
b110111100010000001 9
b1110010010110100110000000000000 %
b1110010010110100110000000000000 =
b1110010010110100110000000000000 6
b1110010010110100110 n
b10101001011111101111110110101111 ;
b1111 :
#390
00
#400
b10100 -
b100 i
b11011110 Y
b10000001 X
10
b10011001101101001111010000110011 !
b10011001101101001111010000110011 1
b11110010110100000110001 &
b11100101101000001100 9
b110111100010000001000000000000 %
b110111100010000001000000000000 =
b110111100010000001000000000000 6
b110111100010000001 n
b11001101101001111001110010010 ;
b10000 :
#410
00
#420
b11010000011010000101000 G
b11010000011010000101000 ?
b11010000011010000101000 U
b10101 -
0B
0<
b0 W
b0 V
b11010000011010000101000 T
b100 j
b100 i
b0 Y
b0 X
10
b11010000101001010100010010100001 !
b11010000101001010100010010100001 1
b10001010111100111000001 &
b10101111001110000 9
b11100101101000001100000000000000 '
b11100101101000001100000000000000 8
b11100101101000001100000000000000 A
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b1 k
b11100101101000001100 l
b11 /
b1010000101001010100001001110001 ;
b10001 :
#430
00
#440
b10110 -
10
b111011001001101111000101111110 ;
b10010 :
