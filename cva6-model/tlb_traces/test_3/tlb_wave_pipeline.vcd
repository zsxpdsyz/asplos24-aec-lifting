$date
	Sat Nov  5 20:55:32 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 124 ? port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 @ update_i [62:0] $end
$var wire 32 A vaddr_to_be_flushed_i [31:0] $end
$var wire 1 B vaddr_to_be_flushed_is0 $end
$var wire 31 C tdata [30:0] $end
$var wire 31 D tags_q_3 [30:0] $end
$var wire 31 E tags_q_2 [30:0] $end
$var wire 31 F tags_q_1 [30:0] $end
$var wire 31 G tags_q_0 [30:0] $end
$var wire 32 H content_q_3 [31:0] $end
$var wire 32 I content_q_2 [31:0] $end
$var wire 32 J content_q_1 [31:0] $end
$var wire 32 K content_q_0 [31:0] $end
$var wire 32 L cdata [31:0] $end
$var reg 128 M content_n [127:0] $end
$var reg 128 N content_q [127:0] $end
$var reg 32 O lu_content_o [31:0] $end
$var reg 4 P lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 Q plru_tree_n [5:0] $end
$var reg 6 R plru_tree_q [5:0] $end
$var reg 4 S replace_en [3:0] $end
$var reg 124 T tags_n [123:0] $end
$var reg 124 U tags_q [123:0] $end
$var reg 4 V vaddr_vpn0_match [3:0] $end
$var reg 4 W vaddr_vpn1_match [3:0] $end
$var reg 10 X vpn0 [9:0] $end
$var reg 10 Y vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 Z count [31:0] $end
$var reg 32 [ countSetBits [31:0] $end
$var reg 4 \ vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ] idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 ^ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 _ idx_base [31:0] $end
$var reg 32 ` new_index [31:0] $end
$var reg 32 a shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 b lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 c i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 d en $end
$var reg 32 e idx_base [31:0] $end
$var reg 32 f new_index [31:0] $end
$var reg 32 g shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 h lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 i i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 k asid [8:0] $end
$var reg 20 l vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 m asid [8:0] $end
$var reg 20 n vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 o asid [8:0] $end
$var reg 32 p entry_data [31:0] $end
$var reg 20 q vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
xd
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
x<
b11011010 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 S
b1 f
b1 g
b1 e
b10 h
0d
b100 c
b100 ^
b0 Q
b0 K
b0 J
b0 I
b0 H
b100 j
b0 M
b0 T
b100 i
0)
b0 +
b0 O
0*
b0 P
b0 G
b0 F
b0 E
b0 D
b1 -
b0 R
b0 >
b0 N
b0 ?
b0 U
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b10100011010101011010111001000110 !
b10100011010101011010111001000110 1
b1011100001000000001 9
b100011010101011010110010111000 ;
b10101110000100000000101 &
b1 .
12
#70
00
#80
b10100011010101011010111001000110 K
b10101110000100000000101 G
b10100011010101011010111001000110 >
b10100011010101011010111001000110 N
b10101110000100000000101 ?
b10101110000100000000101 U
b100 -
b100011010101011010111001000110 C
1B
1<
b100 i
b0 Y
b0 X
b10100011010101011010111001000110 M
b10101110000100000000101 T
b1110 W
b1110 V
b100 j
b10101110000100000000101 L
10
b1000101101011101110001110001011 !
b1000101101011101110001110001011 1
b10110100010010100101101 &
b1101000100101001011 9
b0 '
b0 8
b0 A
0,
0"
03
0$
05
b0 %
b0 =
b0 6
b100101110000100000000100000000110100011010101011010111001000110 (
b100101110000100000000100000000110100011010101011010111001000110 7
b100101110000100000000100000000110100011010101011010111001000110 @
b10100011010101011010111001000110 p
b1 o
b1011100001000000001 q
b0 /
b11000101101011101110000100001111 ;
b0 :
#90
00
#100
b100 i
b10101110000100000000100 G
b10101110000100000000100 ?
b10101110000100000000100 U
b101 -
b0 C
0B
0<
b0 W
b0 V
b10101110000100000000100 T
b100 j
b1 L
10
b1000110001010010100010110001100 !
b1000110001010010100010110001100 1
b11000000001001000101101 &
b10000000010010001011 9
b1101000100101001011000000000000 '
b1101000100101001011000000000000 8
b1101000100101001011000000000000 A
1,
1"
13
b0 (
b0 7
b0 @
b1 k
b1101000100101001011 l
b11 /
b11000110001010010100001001110010 ;
b1 :
#110
00
#120
b110 -
b100 j
10
b1110001101100011000010111100011 !
b1110001101100011000010111100011 1
b11101010000000010000001 &
b11010100000000100000 9
b10000000010010001011000000000000 '
b10000000010010001011000000000000 8
b10000000010010001011000000000000 A
b10000000010010001011 l
b11110001101100011000001011010001 ;
b10 :
#130
00
#140
b111 -
b100 j
10
b10100111101100101000000001001111 !
b10100111101100101000000001001111 1
b10011010110001011011101 &
b110101100010110111 9
b11010100000000100000000000000000 '
b11010100000000100000000000000000 8
b11010100000000100000000000000000 A
b11010100000000100000 l
b100111101100100111111011011100 ;
b11 :
#150
00
#160
b1000 -
1B
1<
b1110 W
b1110 V
b100 j
b100 i
b11010110 Y
b10110111 X
10
b1110111101101001110011111101111 !
b1110111101101001110011111101111 1
b10000110010001001101101 &
b1100100010011011 9
b0 '
b0 8
b0 A
0,
0"
03
1$
15
b110101100010110111000000000000 %
b110101100010110111000000000000 =
b110101100010110111000000000000 6
b1 m
b110101100010110111 n
b10 /
b11110111101101001110010100000011 ;
b100 :
#170
00
#180
b1110111101101001110011111101111 K
b10000110010001001101101 G
b1110111101101001110011111101111 >
b1110111101101001110011111101111 N
b10000110010001001101101 ?
b10000110010001001101101 U
b1001 -
b1110111101101001110011111101111 C
b100 i
b0 Y
b0 X
b1110111101101001110011111101111 M
b10000110010001001101101 T
b100 j
b10000110010001001101101 L
10
b1000001111110100010101110000011 !
b1000001111110100010101110000011 1
b10001000111100011010101 &
b10001111000110101 9
0$
05
b0 %
b0 =
b0 6
b100000110010001001101100000000101110111101101001110011111101111 (
b100000110010001001101100000000101110111101101001110011111101111 7
b100000110010001001101100000000101110111101101001110011111101111 @
b1110111101101001110011111101111 p
b1100100010011011 q
b0 /
b11000001111110100010100001110110 ;
b101 :
#190
00
#200
b100 i
b10000110010001001101100 G
b10000110010001001101100 ?
b10000110010001001101100 U
b1010 -
b0 C
0B
0<
b0 W
b0 V
b10000110010001001101100 T
b100 j
b1 L
10
b10111101010100011011001001111010 !
b10111101010100011011001001111010 1
b10111111011100110000001 &
b1111110111001100000 9
b10001111000110101000000000000 '
b10001111000110101000000000000 8
b10001111000110101000000000000 A
1,
1"
13
b0 (
b0 7
b0 @
b10001111000110101 l
b11 /
b111101010100011011000000100101 ;
b110 :
#210
00
#220
b1011 -
1B
b1110 W
b1110 V
b100 j
1<
10
b110010010101011111001101100100 !
b110010010101011111001101100100 1
b11111010100100010001101 &
b11110101001000100011 9
b0 '
b0 8
b0 A
0,
b0 k
b0 l
b1 /
b10110010010101011111000111000000 ;
b111 :
#230
00
#240
b1100 -
0B
b0 W
b0 V
b100 j
0<
10
b1100100001001001110101111001000 !
b1100100001001001110101111001000 1
b10011010001101000111001 &
b110100011010001110 9
b11110101001000100011000000000000 '
b11110101001000100011000000000000 8
b11110101001000100011000000000000 A
1,
b1 k
b11110101001000100011 l
b11 /
b11100100001001001110100010110111 ;
b1000 :
#250
00
#260
b1100100001001001110101111001000 K
b100 i
b10011010001101000111001 G
b1100100001001001110101111001000 >
b1100100001001001110101111001000 N
b10011010001101000111001 ?
b10011010001101000111001 U
b1101 -
b1100100001001001110101111001000 C
1B
1<
b1110 W
b1110 V
b1100100001001001110101111001000 M
b10011010001101000111001 T
b100 j
b10011010001101000111001 L
10
b10110110000100000001101001101100 !
b10110110000100000001101001101100 1
b10110101011110010000001 &
b1101010111100100000 9
b0 '
b0 8
b0 A
0,
0"
03
b100011010001101000111000000000101100100001001001110101111001000 (
b100011010001101000111000000000101100100001001001110101111001000 7
b100011010001101000111000000000101100100001001001110101111001000 @
b1100100001001001110101111001000 p
b110100011010001110 q
b0 /
b110110000100000001100100111010 ;
b1001 :
#270
00
#280
b1110 -
b0 C
b100 i
b110101011 Y
b1100100000 X
b100 j
b1 L
10
b10010110001010000001000000101100 !
b10010110001010000001000000101100 1
b10101110101100011000001 &
b1011101011000110000 9
1$
15
b1101010111100100000000000000000 %
b1101010111100100000000000000000 =
b1101010111100100000000000000000 6
b0 (
b0 7
b0 @
b1101010111100100000 n
b10 /
b10110001010000000111100111001 ;
b1010 :
#290
00
#300
b10010110001010000001000000101100 K
b10101110101100011000001 G
b10010110001010000001000000101100 >
b10010110001010000001000000101100 N
b10101110101100011000001 ?
b10101110101100011000001 U
b1111 -
b10110001010000001000000101100 C
b100 i
b0 Y
b0 X
b10010110001010000001000000101100 M
b10101110101100011000001 T
b100 j
b10101110101100011000001 L
10
b101110000110100000101101011100 !
b101110000110100000101101011100 1
b10111110001001111011001 &
b1111100010011110110 9
0$
05
b0 %
b0 =
b0 6
b100101110101100011000000000000110010110001010000001000000101100 (
b100101110101100011000000000000110010110001010000001000000101100 7
b100101110101100011000000000000110010110001010000001000000101100 @
b10010110001010000001000000101100 p
b1011101011000110000 q
b0 /
b10101110000110100000100101100100 ;
b1011 :
#310
00
#320
b100 i
b10101110101100011000000 G
b10101110101100011000000 ?
b10101110101100011000000 U
b10000 -
b0 C
b10101110101100011000000 T
b100 j
b1 L
10
b11011111001100000100001010111110 !
b11011111001100000100001010111110 1
b10000101010000001100101 &
b1010100000011001 9
1"
13
b0 (
b0 7
b0 @
b0 k
b0 l
b1 /
b1011111001100000100000000101011 ;
b1100 :
#330
00
#340
b10001 -
b100 j
b100 i
b101010 Y
b11001 X
10
b1011001001100011111101110110010 !
b1011001001100011111101110110010 1
b10111001010000111111001 &
b1110010100001111110 9
0"
03
1$
15
b1010100000011001000000000000 %
b1010100000011001000000000000 =
b1010100000011001000000000000 6
b1010100000011001 n
b10 /
b11011001001100011111100010111110 ;
b1101 :
#350
00
#360
b10010 -
b100 i
b111001010 Y
b1111110 X
10
b111101000111000101011101111010 !
b111101000111000101011101111010 1
b11001011110100011010101 &
b10010111101000110101 9
b1110010100001111110000000000000 %
b1110010100001111110000000000000 =
b1110010100001111110000000000000 6
b1110010100001111110 n
b10111101000111000101010000001101 ;
b1110 :
#370
00
#380
b111101000111000101011101111010 K
b11001011110100011010101 G
b111101000111000101011101111010 >
b111101000111000101011101111010 N
b11001011110100011010101 ?
b11001011110100011010101 U
b10011 -
b111101000111000101011101111010 C
b100 i
b0 Y
b0 X
b111101000111000101011101111010 M
b11001011110100011010101 T
b100 j
b11001011110100011010101 L
10
b11101010101000111000101011010101 !
b11101010101000111000101011010101 1
b10000100000110101000101 &
b1000001101010001 9
0$
05
b0 %
b0 =
b0 6
b101001011110100011010100000000100111101000111000101011101111010 (
b101001011110100011010100000000100111101000111000101011101111010 7
b101001011110100011010100000000100111101000111000101011101111010 @
b111101000111000101011101111010 p
b10010111101000110101 q
b0 /
b1101010101000111000100111001000 ;
b1111 :
#390
00
#400
b100 i
b11001011110100011010100 G
b11001011110100011010100 ?
b11001011110100011010100 U
b10100 -
b0 C
b11001011110100011010100 T
b100 j
b1 L
10
b10011101111110100000000000111011 !
b10011101111110100000000000111011 1
b10100010100010110010001 &
b1000101000101100100 9
1"
13
b0 (
b0 7
b0 @
b1 /
b11101111110011111111101011111 ;
b10000 :
#410
00
#420
b10101 -
10
b1010100100010110110110110101001 !
b1010100100010110110110110101001 1
b11000110000000110101001 &
b10001100000001101010 9
b11010100100010110110101100000010 ;
b10001 :
#430
00
#440
b10110 -
10
b10110011000101011100101010011011 ;
b10010 :
